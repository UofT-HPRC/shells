// Copyright 1986-2016 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2016.4 (lin64) Build 1756540 Mon Jan 23 19:11:19 MST 2017
// Date        : Mon Jul  3 18:03:29 2017
// Host        : batcomputer running 64-bit Ubuntu 16.04.2 LTS
// Command     : write_verilog -force -mode funcsim -rename_top decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix -prefix
//               decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ bd_01e2_xpcs_0_sim_netlist.v
// Design      : bd_01e2_xpcs_0
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xcku115-flva1517-2-e
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "ten_gig_eth_pcs_pma_wrapper,Vivado 2016.4" *) 
(* NotValidForBitStream *)
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix
   (dclk,
    rxrecclk_out,
    refclk_p,
    refclk_n,
    sim_speedup_control,
    coreclk_out,
    qpll0outclk_out,
    qpll0outrefclk_out,
    qpll0lock_out,
    txusrclk_out,
    txusrclk2_out,
    areset_datapathclk_out,
    areset_coreclk_out,
    gttxreset_out,
    gtrxreset_out,
    txuserrdy_out,
    reset_counter_done_out,
    reset,
    xgmii_txd,
    xgmii_txc,
    xgmii_rxd,
    xgmii_rxc,
    txp,
    txn,
    rxp,
    rxn,
    configuration_vector,
    status_vector,
    core_status,
    resetdone_out,
    signal_detect,
    tx_fault,
    drp_req,
    drp_gnt,
    core_to_gt_drpen,
    core_to_gt_drpwe,
    core_to_gt_drpaddr,
    core_to_gt_drpdi,
    gt_drprdy,
    gt_drpdo,
    gt_drpen,
    gt_drpwe,
    gt_drpaddr,
    gt_drpdi,
    core_to_gt_drprdy,
    core_to_gt_drpdo,
    pma_pmd_type,
    tx_disable);
  input dclk;
  output rxrecclk_out;
  input refclk_p;
  input refclk_n;
  input sim_speedup_control;
  output coreclk_out;
  output qpll0outclk_out;
  output qpll0outrefclk_out;
  output qpll0lock_out;
  output txusrclk_out;
  output txusrclk2_out;
  output areset_datapathclk_out;
  output areset_coreclk_out;
  output gttxreset_out;
  output gtrxreset_out;
  output txuserrdy_out;
  output reset_counter_done_out;
  input reset;
  input [63:0]xgmii_txd;
  input [7:0]xgmii_txc;
  output [63:0]xgmii_rxd;
  output [7:0]xgmii_rxc;
  output txp;
  output txn;
  input rxp;
  input rxn;
  input [535:0]configuration_vector;
  output [447:0]status_vector;
  output [7:0]core_status;
  output resetdone_out;
  input signal_detect;
  input tx_fault;
  output drp_req;
  input drp_gnt;
  output core_to_gt_drpen;
  output core_to_gt_drpwe;
  output [15:0]core_to_gt_drpaddr;
  output [15:0]core_to_gt_drpdi;
  output gt_drprdy;
  output [15:0]gt_drpdo;
  input gt_drpen;
  input gt_drpwe;
  input [15:0]gt_drpaddr;
  input [15:0]gt_drpdi;
  input core_to_gt_drprdy;
  input [15:0]core_to_gt_drpdo;
  input [2:0]pma_pmd_type;
  output tx_disable;

  wire areset_coreclk_out;
  wire areset_datapathclk_out;
  wire [535:0]configuration_vector;
  wire [7:0]core_status;
  wire [15:0]core_to_gt_drpaddr;
  wire [15:0]core_to_gt_drpdi;
  wire [15:0]core_to_gt_drpdo;
  wire core_to_gt_drpen;
  wire core_to_gt_drprdy;
  wire core_to_gt_drpwe;
  wire coreclk_out;
  wire dclk;
  wire drp_gnt;
  wire drp_req;
  wire [15:0]gt_drpaddr;
  wire [15:0]gt_drpdi;
  wire [15:0]gt_drpdo;
  wire gt_drpen;
  wire gt_drprdy;
  wire gt_drpwe;
  wire gtrxreset_out;
  wire gttxreset_out;
  wire [2:0]pma_pmd_type;
  wire qpll0lock_out;
  wire qpll0outclk_out;
  wire qpll0outrefclk_out;
  wire refclk_n;
  wire refclk_p;
  wire reset;
  wire reset_counter_done_out;
  wire resetdone_out;
  wire rxn;
  wire rxp;
  wire rxrecclk_out;
  wire signal_detect;
  wire sim_speedup_control;
  wire [447:0]status_vector;
  wire tx_disable;
  wire tx_fault;
  wire txn;
  wire txp;
  wire txuserrdy_out;
  wire txusrclk2_out;
  wire txusrclk_out;
  wire [7:0]xgmii_rxc;
  wire [63:0]xgmii_rxd;
  wire [7:0]xgmii_txc;
  wire [63:0]xgmii_txd;

  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_support inst
       (.areset_coreclk_out(areset_coreclk_out),
        .areset_datapathclk_out(areset_datapathclk_out),
        .configuration_vector(configuration_vector),
        .core_status(core_status),
        .core_to_gt_drpaddr(core_to_gt_drpaddr),
        .core_to_gt_drpdi(core_to_gt_drpdi),
        .core_to_gt_drpdo(core_to_gt_drpdo),
        .core_to_gt_drpen(core_to_gt_drpen),
        .core_to_gt_drprdy(core_to_gt_drprdy),
        .core_to_gt_drpwe(core_to_gt_drpwe),
        .coreclk_out(coreclk_out),
        .dclk(dclk),
        .drp_gnt(drp_gnt),
        .drp_req(drp_req),
        .gt_drpaddr(gt_drpaddr),
        .gt_drpdi(gt_drpdi),
        .gt_drpdo(gt_drpdo),
        .gt_drpen(gt_drpen),
        .gt_drprdy(gt_drprdy),
        .gt_drpwe(gt_drpwe),
        .gtrxreset_out(gtrxreset_out),
        .gttxreset_out(gttxreset_out),
        .pma_pmd_type(pma_pmd_type),
        .qpll0lock_out(qpll0lock_out),
        .qpll0outclk_out(qpll0outclk_out),
        .qpll0outrefclk_out(qpll0outrefclk_out),
        .refclk_n(refclk_n),
        .refclk_p(refclk_p),
        .reset(reset),
        .reset_counter_done_out(reset_counter_done_out),
        .resetdone_out(resetdone_out),
        .rxn(rxn),
        .rxp(rxp),
        .rxrecclk_out(rxrecclk_out),
        .signal_detect(signal_detect),
        .sim_speedup_control(sim_speedup_control),
        .status_vector(status_vector),
        .tx_disable(tx_disable),
        .tx_fault(tx_fault),
        .txn(txn),
        .txp(txp),
        .txuserrdy_out(txuserrdy_out),
        .txusrclk2_out(txusrclk2_out),
        .txusrclk_out(txusrclk_out),
        .xgmii_rxc(xgmii_rxc),
        .xgmii_rxd(xgmii_rxd),
        .xgmii_txc(xgmii_txc),
        .xgmii_txd(xgmii_txd));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_block
   (CLK,
    xgmii_rxd,
    xgmii_rxc,
    status_vector,
    core_status,
    drp_req,
    core_to_gt_drpen,
    core_to_gt_drpwe,
    core_to_gt_drpaddr,
    tx_disable,
    gtwiz_reset_qpll0reset_out,
    gt_drpdo,
    gt_drprdy,
    txn,
    txp,
    txoutclk_out,
    resetdone_out,
    D,
    gtrxreset_out_reg,
    dclk,
    xgmii_txd,
    xgmii_txc,
    pma_pmd_type,
    configuration_vector,
    drp_gnt,
    core_to_gt_drprdy,
    core_to_gt_drpdo,
    reset,
    qpll0lock_out,
    gt_drpaddr,
    gt_drpdi,
    gt_drpen,
    gt_drpwe,
    rxn,
    rxp,
    qpll0outclk_out,
    qpll0outrefclk_out,
    txusrclk_out,
    refclk_n,
    data_out_reg,
    signal_detect,
    Q,
    AR,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output CLK;
  output [63:0]xgmii_rxd;
  output [7:0]xgmii_rxc;
  output [43:0]status_vector;
  output [0:0]core_status;
  output drp_req;
  output core_to_gt_drpen;
  output core_to_gt_drpwe;
  output [0:0]core_to_gt_drpaddr;
  output tx_disable;
  output [0:0]gtwiz_reset_qpll0reset_out;
  output [15:0]gt_drpdo;
  output gt_drprdy;
  output txn;
  output txp;
  output [0:0]txoutclk_out;
  output resetdone_out;
  output [0:0]D;
  input gtrxreset_out_reg;
  input dclk;
  input [63:0]xgmii_txd;
  input [7:0]xgmii_txc;
  input [2:0]pma_pmd_type;
  input [147:0]configuration_vector;
  input drp_gnt;
  input core_to_gt_drprdy;
  input [15:0]core_to_gt_drpdo;
  input reset;
  input qpll0lock_out;
  input [8:0]gt_drpaddr;
  input [15:0]gt_drpdi;
  input gt_drpen;
  input gt_drpwe;
  input rxn;
  input rxp;
  input qpll0outclk_out;
  input qpll0outrefclk_out;
  input txusrclk_out;
  input refclk_n;
  input data_out_reg;
  input signal_detect;
  input [0:0]Q;
  input [0:0]AR;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;

  wire [0:0]AR;
  wire CLK;
  wire [0:0]D;
  wire [0:0]Q;
  wire areset_rxusrclk2;
  wire areset_txusrclk2;
  wire block_lock_sync_i_n_0;
  wire cable_is_pulled;
  wire cable_pull_reset_rising_reg;
  wire cable_unpull_reset_rising_reg;
  wire [147:0]configuration_vector;
  wire core_in_testmode;
  wire core_in_testmode_coreclk;
  wire [0:0]core_status;
  wire [0:0]core_to_gt_drpaddr;
  wire [15:0]core_to_gt_drpdo;
  wire core_to_gt_drpen;
  wire core_to_gt_drprdy;
  wire core_to_gt_drpwe;
  wire data_out_reg;
  wire dclk;
  wire dclk_reset;
  wire drp_gnt;
  wire drp_req;
  wire gt0_clear_rx_prbs_err_count_i;
  wire gt0_gtrxreset_c__0;
  wire gt0_gtrxreset_i;
  wire gt0_gttxreset_c;
  wire gt0_gttxreset_i;
  wire gt0_rxbufreset_i;
  wire gt0_rxbufreset_i0;
  wire gt0_rxgearboxslip_i;
  wire gt0_rxresetdone_i_reg_rxusrclk2;
  (* DONT_TOUCH *) wire gt0_rxresetdone_reg;
  wire gt0_rxresetdone_reg1;
  (* DONT_TOUCH *) wire gt0_rxresetdone_reg_dup;
  wire gt0_rxresetdone_reg_reg0;
  wire gt0_txresetdone_reg;
  wire gt0_txresetdone_reg0;
  wire gt0_txresetdone_reg1;
  wire [8:0]gt_drpaddr;
  wire [15:0]gt_drpdi;
  wire [15:0]gt_drpdo;
  wire gt_drpen;
  wire gt_drprdy;
  wire gt_drpwe;
  wire [2:0]gt_rxc_d1;
  wire [63:0]gt_rxd_d1;
  wire [1:0]gt_txc;
  wire [63:0]gt_txd;
  wire gtrxreset_out_reg;
  wire [0:0]gtwiz_reset_qpll0reset_out;
  wire gtwiz_reset_rx_done_out;
  wire gtwiz_reset_tx_done_out;
  wire gtwiz_userclk_rx_active_in;
  wire gtwiz_userclk_tx_active_in;
  wire \^lopt ;
  wire \^lopt_1 ;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire \master_watchdog[0]_i_10_n_0 ;
  wire \master_watchdog[0]_i_3_n_0 ;
  wire \master_watchdog[0]_i_4_n_0 ;
  wire \master_watchdog[0]_i_5_n_0 ;
  wire \master_watchdog[0]_i_6_n_0 ;
  wire \master_watchdog[0]_i_7_n_0 ;
  wire \master_watchdog[0]_i_8_n_0 ;
  wire \master_watchdog[0]_i_9_n_0 ;
  wire \master_watchdog[16]_i_2_n_0 ;
  wire \master_watchdog[16]_i_3_n_0 ;
  wire \master_watchdog[16]_i_4_n_0 ;
  wire \master_watchdog[16]_i_5_n_0 ;
  wire \master_watchdog[16]_i_6_n_0 ;
  wire \master_watchdog[16]_i_7_n_0 ;
  wire \master_watchdog[16]_i_8_n_0 ;
  wire \master_watchdog[16]_i_9_n_0 ;
  wire \master_watchdog[24]_i_2_n_0 ;
  wire \master_watchdog[24]_i_3_n_0 ;
  wire \master_watchdog[24]_i_4_n_0 ;
  wire \master_watchdog[24]_i_5_n_0 ;
  wire \master_watchdog[24]_i_6_n_0 ;
  wire \master_watchdog[8]_i_2_n_0 ;
  wire \master_watchdog[8]_i_3_n_0 ;
  wire \master_watchdog[8]_i_4_n_0 ;
  wire \master_watchdog[8]_i_5_n_0 ;
  wire \master_watchdog[8]_i_6_n_0 ;
  wire \master_watchdog[8]_i_7_n_0 ;
  wire \master_watchdog[8]_i_8_n_0 ;
  wire \master_watchdog[8]_i_9_n_0 ;
  wire master_watchdog_barking;
  wire master_watchdog_barking_i_2_n_0;
  wire master_watchdog_barking_i_3_n_0;
  wire master_watchdog_barking_i_4_n_0;
  wire master_watchdog_barking_i_5_n_0;
  wire master_watchdog_barking_i_6_n_0;
  wire master_watchdog_barking_reg_n_0;
  wire [28:0]master_watchdog_reg;
  wire \master_watchdog_reg[0]_i_2_n_0 ;
  wire \master_watchdog_reg[0]_i_2_n_1 ;
  wire \master_watchdog_reg[0]_i_2_n_10 ;
  wire \master_watchdog_reg[0]_i_2_n_11 ;
  wire \master_watchdog_reg[0]_i_2_n_12 ;
  wire \master_watchdog_reg[0]_i_2_n_13 ;
  wire \master_watchdog_reg[0]_i_2_n_14 ;
  wire \master_watchdog_reg[0]_i_2_n_15 ;
  wire \master_watchdog_reg[0]_i_2_n_2 ;
  wire \master_watchdog_reg[0]_i_2_n_3 ;
  wire \master_watchdog_reg[0]_i_2_n_5 ;
  wire \master_watchdog_reg[0]_i_2_n_6 ;
  wire \master_watchdog_reg[0]_i_2_n_7 ;
  wire \master_watchdog_reg[0]_i_2_n_8 ;
  wire \master_watchdog_reg[0]_i_2_n_9 ;
  wire \master_watchdog_reg[16]_i_1_n_0 ;
  wire \master_watchdog_reg[16]_i_1_n_1 ;
  wire \master_watchdog_reg[16]_i_1_n_10 ;
  wire \master_watchdog_reg[16]_i_1_n_11 ;
  wire \master_watchdog_reg[16]_i_1_n_12 ;
  wire \master_watchdog_reg[16]_i_1_n_13 ;
  wire \master_watchdog_reg[16]_i_1_n_14 ;
  wire \master_watchdog_reg[16]_i_1_n_15 ;
  wire \master_watchdog_reg[16]_i_1_n_2 ;
  wire \master_watchdog_reg[16]_i_1_n_3 ;
  wire \master_watchdog_reg[16]_i_1_n_5 ;
  wire \master_watchdog_reg[16]_i_1_n_6 ;
  wire \master_watchdog_reg[16]_i_1_n_7 ;
  wire \master_watchdog_reg[16]_i_1_n_8 ;
  wire \master_watchdog_reg[16]_i_1_n_9 ;
  wire \master_watchdog_reg[24]_i_1_n_11 ;
  wire \master_watchdog_reg[24]_i_1_n_12 ;
  wire \master_watchdog_reg[24]_i_1_n_13 ;
  wire \master_watchdog_reg[24]_i_1_n_14 ;
  wire \master_watchdog_reg[24]_i_1_n_15 ;
  wire \master_watchdog_reg[24]_i_1_n_5 ;
  wire \master_watchdog_reg[24]_i_1_n_6 ;
  wire \master_watchdog_reg[24]_i_1_n_7 ;
  wire \master_watchdog_reg[8]_i_1_n_0 ;
  wire \master_watchdog_reg[8]_i_1_n_1 ;
  wire \master_watchdog_reg[8]_i_1_n_10 ;
  wire \master_watchdog_reg[8]_i_1_n_11 ;
  wire \master_watchdog_reg[8]_i_1_n_12 ;
  wire \master_watchdog_reg[8]_i_1_n_13 ;
  wire \master_watchdog_reg[8]_i_1_n_14 ;
  wire \master_watchdog_reg[8]_i_1_n_15 ;
  wire \master_watchdog_reg[8]_i_1_n_2 ;
  wire \master_watchdog_reg[8]_i_1_n_3 ;
  wire \master_watchdog_reg[8]_i_1_n_5 ;
  wire \master_watchdog_reg[8]_i_1_n_6 ;
  wire \master_watchdog_reg[8]_i_1_n_7 ;
  wire \master_watchdog_reg[8]_i_1_n_8 ;
  wire \master_watchdog_reg[8]_i_1_n_9 ;
  wire pcs_resetout_coreclk_sync;
  wire pcs_resetout_coreclk_sync_i_n_1;
  wire pcs_resetout_reg;
  wire pcs_resetout_reg_txuserclk2;
  wire pcs_resetout_rising;
  wire [2:0]pma_pmd_type;
  wire pma_resetout_coreclk_sync;
  wire pma_resetout_coreclk_sync_i_n_1;
  wire pma_resetout_reg;
  wire pma_resetout_reg_txuserclk2;
  wire pma_resetout_rising;
  wire pma_resetout_rising_rxusrclk2;
  wire qpll0lock_out;
  wire qpll0outclk_out;
  wire qpll0outrefclk_out;
  wire refclk_n;
  wire reset;
  wire reset_tx_bufg_gt_reg;
  wire reset_tx_bufg_gt_sig;
  wire resetdone_out;
  wire resetdone_txusrclk2;
  wire rx_prbs31_en;
  wire rx_resetdone_int;
  wire [2:2]rxbufstatus_out;
  wire [63:0]rxdata_out;
  wire rxdatavalid_out;
  wire [1:0]rxheader_out;
  wire rxheadervalid_out;
  wire rxn;
  wire rxoutclk;
  wire rxp;
  wire rxpmaresetdone_out;
  wire rxprogdivresetdone;
  wire rxreset_rxusrclk2;
  wire rxusrclk_in;
  wire signal_detect;
  wire signal_detect_comb;
  wire signal_detect_coreclk;
  wire signal_detect_rxusrclk2_sync_i_n_0;
  wire [43:0]status_vector;
  wire tx_disable;
  wire tx_prbs31_en;
  wire tx_resetdone_int;
  wire txn;
  wire [0:0]txoutclk_out;
  wire txp;
  wire txpmaresetdone_out;
  wire txprogdivresetdone;
  wire txreset_txusrclk2;
  wire txusrclk_out;
  wire [7:0]xgmii_rxc;
  wire [63:0]xgmii_rxd;
  wire [7:0]xgmii_txc;
  wire [63:0]xgmii_txd;
  wire NLW_bd_01e2_xpcs_0_core_gt_progdiv_reset_UNCONNECTED;
  wire NLW_bd_01e2_xpcs_0_core_is_eval_UNCONNECTED;
  wire NLW_bd_01e2_xpcs_0_core_mdio_out_UNCONNECTED;
  wire NLW_bd_01e2_xpcs_0_core_mdio_tri_UNCONNECTED;
  wire NLW_bd_01e2_xpcs_0_core_pcs_resetout_UNCONNECTED;
  wire NLW_bd_01e2_xpcs_0_core_pma_resetout_UNCONNECTED;
  wire NLW_bd_01e2_xpcs_0_core_training_rdack_UNCONNECTED;
  wire NLW_bd_01e2_xpcs_0_core_training_wrack_UNCONNECTED;
  wire [4:0]NLW_bd_01e2_xpcs_0_core_coeff_minus_1_UNCONNECTED;
  wire [4:0]NLW_bd_01e2_xpcs_0_core_coeff_plus_1_UNCONNECTED;
  wire [6:0]NLW_bd_01e2_xpcs_0_core_coeff_zero_UNCONNECTED;
  wire [7:1]NLW_bd_01e2_xpcs_0_core_core_status_UNCONNECTED;
  wire [15:0]NLW_bd_01e2_xpcs_0_core_drp_daddr_UNCONNECTED;
  wire [15:0]NLW_bd_01e2_xpcs_0_core_drp_di_UNCONNECTED;
  wire [7:2]NLW_bd_01e2_xpcs_0_core_gt_txc_UNCONNECTED;
  wire [2:0]NLW_bd_01e2_xpcs_0_core_loopback_ctrl_UNCONNECTED;
  wire [63:0]NLW_bd_01e2_xpcs_0_core_rxphy_correction_timer_UNCONNECTED;
  wire [35:0]NLW_bd_01e2_xpcs_0_core_rxphy_ns_field_UNCONNECTED;
  wire [47:0]NLW_bd_01e2_xpcs_0_core_rxphy_s_field_UNCONNECTED;
  wire [447:0]NLW_bd_01e2_xpcs_0_core_status_vector_UNCONNECTED;
  wire [15:0]NLW_bd_01e2_xpcs_0_core_training_rddata_UNCONNECTED;
  wire [4:0]NLW_bd_01e2_xpcs_0_core_txdiffctrl_UNCONNECTED;
  wire [15:0]NLW_bd_01e2_xpcs_0_core_txphy_async_gb_latency_UNCONNECTED;
  wire [16:0]NLW_bd_01e2_xpcs_0_gt_i_dmonitorout_out_UNCONNECTED;
  wire [0:0]NLW_bd_01e2_xpcs_0_gt_i_eyescandataerror_out_UNCONNECTED;
  wire [0:0]NLW_bd_01e2_xpcs_0_gt_i_gtwiz_reset_rx_cdr_stable_out_UNCONNECTED;
  wire [1:0]NLW_bd_01e2_xpcs_0_gt_i_rxbufstatus_out_UNCONNECTED;
  wire [0:0]NLW_bd_01e2_xpcs_0_gt_i_rxcdrlock_out_UNCONNECTED;
  wire [127:64]NLW_bd_01e2_xpcs_0_gt_i_rxdata_out_UNCONNECTED;
  wire [1:1]NLW_bd_01e2_xpcs_0_gt_i_rxdatavalid_out_UNCONNECTED;
  wire [5:2]NLW_bd_01e2_xpcs_0_gt_i_rxheader_out_UNCONNECTED;
  wire [1:1]NLW_bd_01e2_xpcs_0_gt_i_rxheadervalid_out_UNCONNECTED;
  wire [0:0]NLW_bd_01e2_xpcs_0_gt_i_rxprbserr_out_UNCONNECTED;
  wire [0:0]NLW_bd_01e2_xpcs_0_gt_i_rxprbslocked_out_UNCONNECTED;
  wire [1:0]NLW_bd_01e2_xpcs_0_gt_i_rxstartofseq_out_UNCONNECTED;
  wire [1:0]NLW_bd_01e2_xpcs_0_gt_i_txbufstatus_out_UNCONNECTED;
  wire [3:3]\NLW_master_watchdog_reg[0]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_master_watchdog_reg[16]_i_1_CO_UNCONNECTED ;
  wire [7:3]\NLW_master_watchdog_reg[24]_i_1_CO_UNCONNECTED ;
  wire [7:5]\NLW_master_watchdog_reg[24]_i_1_DI_UNCONNECTED ;
  wire [7:5]\NLW_master_watchdog_reg[24]_i_1_O_UNCONNECTED ;
  wire [7:5]\NLW_master_watchdog_reg[24]_i_1_S_UNCONNECTED ;
  wire [3:3]\NLW_master_watchdog_reg[8]_i_1_CO_UNCONNECTED ;

  assign lopt_2 = lopt_6;
  assign lopt_3 = lopt_7;
  assign lopt_4 = lopt;
  assign lopt_5 = lopt_1;
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_2 areset_txusrclk2_sync_i
       (.areset_txusrclk2(areset_txusrclk2),
        .data_out_reg_0(data_out_reg),
        .gtrxreset_out_reg(gtrxreset_out_reg));
  (* C_1588 = "0" *) 
  (* C_DP_WIDTH = "64" *) 
  (* C_GTIF_WIDTH = "64" *) 
  (* C_GTTYPE = "2" *) 
  (* C_HAS_AN = "1'b0" *) 
  (* C_HAS_FEC = "1'b0" *) 
  (* C_HAS_MDIO = "1'b0" *) 
  (* C_IS_32BIT = "1'b0" *) 
  (* C_IS_KR = "1'b0" *) 
  (* C_NO_EBUFF = "1'b0" *) 
  (* C_REFCLKRATE = "156" *) 
  (* C_SPEED10_25 = "10" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7 bd_01e2_xpcs_0_core
       (.an_enable(1'b0),
        .areset_coreclk(1'b0),
        .areset_rxusrclk2(1'b0),
        .clear_rx_prbs_err_count(gt0_clear_rx_prbs_err_count_i),
        .coeff_minus_1(NLW_bd_01e2_xpcs_0_core_coeff_minus_1_UNCONNECTED[4:0]),
        .coeff_plus_1(NLW_bd_01e2_xpcs_0_core_coeff_plus_1_UNCONNECTED[4:0]),
        .coeff_zero(NLW_bd_01e2_xpcs_0_core_coeff_zero_UNCONNECTED[6:0]),
        .configuration_vector({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,configuration_vector[147:144],1'b0,1'b0,1'b0,configuration_vector[143],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,configuration_vector[142:127],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,configuration_vector[126:121],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,configuration_vector[120:63],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,configuration_vector[62:3],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,configuration_vector[2:1],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .core_in_testmode(core_in_testmode),
        .core_status({NLW_bd_01e2_xpcs_0_core_core_status_UNCONNECTED[7:1],core_status}),
        .coreclk(gtrxreset_out_reg),
        .correction_timer({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dclk(dclk),
        .dclk_reset(dclk_reset),
        .drp_daddr({NLW_bd_01e2_xpcs_0_core_drp_daddr_UNCONNECTED[15:9],core_to_gt_drpaddr,NLW_bd_01e2_xpcs_0_core_drp_daddr_UNCONNECTED[7:0]}),
        .drp_den(core_to_gt_drpen),
        .drp_di(NLW_bd_01e2_xpcs_0_core_drp_di_UNCONNECTED[15:0]),
        .drp_drdy(core_to_gt_drprdy),
        .drp_drpdo(core_to_gt_drpdo),
        .drp_dwe(core_to_gt_drpwe),
        .drp_gnt(drp_gnt),
        .drp_req(drp_req),
        .fr_clk(1'b0),
        .gt_latclk(1'b0),
        .gt_progdiv_reset(NLW_bd_01e2_xpcs_0_core_gt_progdiv_reset_UNCONNECTED),
        .gt_rxc({1'b0,1'b0,1'b0,1'b0,1'b0,gt_rxc_d1}),
        .gt_rxd(gt_rxd_d1),
        .gt_rxstartofseq(1'b0),
        .gt_slip(gt0_rxgearboxslip_i),
        .gt_txc({NLW_bd_01e2_xpcs_0_core_gt_txc_UNCONNECTED[7:2],gt_txc}),
        .gt_txd(gt_txd),
        .is_eval(NLW_bd_01e2_xpcs_0_core_is_eval_UNCONNECTED),
        .lfreset(1'b0),
        .loopback_ctrl(NLW_bd_01e2_xpcs_0_core_loopback_ctrl_UNCONNECTED[2:0]),
        .mdc(1'b0),
        .mdio_in(1'b0),
        .mdio_out(NLW_bd_01e2_xpcs_0_core_mdio_out_UNCONNECTED),
        .mdio_tri(NLW_bd_01e2_xpcs_0_core_mdio_tri_UNCONNECTED),
        .pcs_resetout(NLW_bd_01e2_xpcs_0_core_pcs_resetout_UNCONNECTED),
        .pma_pmd_type(pma_pmd_type),
        .pma_resetout(NLW_bd_01e2_xpcs_0_core_pma_resetout_UNCONNECTED),
        .prtad({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .reset(txreset_txusrclk2),
        .resetdone(resetdone_txusrclk2),
        .rx_prbs31_en(rx_prbs31_en),
        .rxphy_correction_timer(NLW_bd_01e2_xpcs_0_core_rxphy_correction_timer_UNCONNECTED[63:0]),
        .rxphy_ns_field(NLW_bd_01e2_xpcs_0_core_rxphy_ns_field_UNCONNECTED[35:0]),
        .rxphy_s_field(NLW_bd_01e2_xpcs_0_core_rxphy_s_field_UNCONNECTED[47:0]),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(CLK),
        .signal_detect(signal_detect_comb),
        .sim_speedup_control(1'b0),
        .status_vector({NLW_bd_01e2_xpcs_0_core_status_vector_UNCONNECTED[447:304],status_vector[43:12],NLW_bd_01e2_xpcs_0_core_status_vector_UNCONNECTED[271:269],status_vector[11],NLW_bd_01e2_xpcs_0_core_status_vector_UNCONNECTED[267:258],status_vector[10:9],NLW_bd_01e2_xpcs_0_core_status_vector_UNCONNECTED[255:251],status_vector[8],NLW_bd_01e2_xpcs_0_core_status_vector_UNCONNECTED[249:227],status_vector[7],NLW_bd_01e2_xpcs_0_core_status_vector_UNCONNECTED[225:224],status_vector[6],NLW_bd_01e2_xpcs_0_core_status_vector_UNCONNECTED[222:49],status_vector[5],NLW_bd_01e2_xpcs_0_core_status_vector_UNCONNECTED[47:40],status_vector[4:2],NLW_bd_01e2_xpcs_0_core_status_vector_UNCONNECTED[36:19],status_vector[1],NLW_bd_01e2_xpcs_0_core_status_vector_UNCONNECTED[17:16],status_vector[0],NLW_bd_01e2_xpcs_0_core_status_vector_UNCONNECTED[14:0]}),
        .systemtimer_ns_field({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .systemtimer_s_field({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .training_addr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .training_drp_cs(1'b0),
        .training_enable(1'b0),
        .training_ipif_cs(1'b0),
        .training_rdack(NLW_bd_01e2_xpcs_0_core_training_rdack_UNCONNECTED),
        .training_rddata(NLW_bd_01e2_xpcs_0_core_training_rddata_UNCONNECTED[15:0]),
        .training_rnw(1'b0),
        .training_wrack(NLW_bd_01e2_xpcs_0_core_training_wrack_UNCONNECTED),
        .training_wrdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_disable(tx_disable),
        .tx_fault(1'b0),
        .tx_prbs31_en(tx_prbs31_en),
        .txdiffctrl(NLW_bd_01e2_xpcs_0_core_txdiffctrl_UNCONNECTED[4:0]),
        .txphy_async_gb_latency(NLW_bd_01e2_xpcs_0_core_txphy_async_gb_latency_UNCONNECTED[15:0]),
        .txreset_txusrclk2(1'b0),
        .txusrclk2(1'b0),
        .xgmii_rxc(xgmii_rxc),
        .xgmii_rxd(xgmii_rxd),
        .xgmii_txc(xgmii_txc),
        .xgmii_txd(xgmii_txd));
  (* CHECK_LICENSE_TYPE = "bd_01e2_xpcs_0_gt,bd_01e2_xpcs_0_gt_gtwizard_top,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "bd_01e2_xpcs_0_gt_gtwizard_top,Vivado 2016.4" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_gt bd_01e2_xpcs_0_gt_i
       (.cpllpd_in(1'b1),
        .dmonitorout_out(NLW_bd_01e2_xpcs_0_gt_i_dmonitorout_out_UNCONNECTED[16:0]),
        .drpaddr_in(gt_drpaddr),
        .drpclk_in(dclk),
        .drpdi_in(gt_drpdi),
        .drpdo_out(gt_drpdo),
        .drpen_in(gt_drpen),
        .drprdy_out(gt_drprdy),
        .drpwe_in(gt_drpwe),
        .eyescandataerror_out(NLW_bd_01e2_xpcs_0_gt_i_eyescandataerror_out_UNCONNECTED[0]),
        .eyescanreset_in(1'b0),
        .eyescantrigger_in(1'b0),
        .gthrxn_in(rxn),
        .gthrxp_in(rxp),
        .gthtxn_out(txn),
        .gthtxp_out(txp),
        .gtwiz_reset_all_in(reset),
        .gtwiz_reset_clk_freerun_in(dclk),
        .gtwiz_reset_qpll0lock_in(qpll0lock_out),
        .gtwiz_reset_qpll0reset_out(gtwiz_reset_qpll0reset_out),
        .gtwiz_reset_rx_cdr_stable_out(NLW_bd_01e2_xpcs_0_gt_i_gtwiz_reset_rx_cdr_stable_out_UNCONNECTED[0]),
        .gtwiz_reset_rx_datapath_in(gt0_gtrxreset_i),
        .gtwiz_reset_rx_done_out(gtwiz_reset_rx_done_out),
        .gtwiz_reset_rx_pll_and_datapath_in(1'b0),
        .gtwiz_reset_tx_datapath_in(gt0_gttxreset_i),
        .gtwiz_reset_tx_done_out(gtwiz_reset_tx_done_out),
        .gtwiz_reset_tx_pll_and_datapath_in(1'b0),
        .gtwiz_userclk_rx_active_in(gtwiz_userclk_rx_active_in),
        .gtwiz_userclk_tx_active_in(gtwiz_userclk_tx_active_in),
        .loopback_in({1'b0,configuration_vector[0],1'b0}),
        .lopt(\^lopt ),
        .lopt_1(\^lopt_1 ),
        .lopt_2(\^lopt_2 ),
        .lopt_3(\^lopt_3 ),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .pcsrsvdin_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpll0clk_in(qpll0outclk_out),
        .qpll0refclk_in(qpll0outrefclk_out),
        .qpll1clk_in(1'b0),
        .qpll1refclk_in(1'b0),
        .rxbufreset_in(gt0_rxbufreset_i),
        .rxbufstatus_out({rxbufstatus_out,NLW_bd_01e2_xpcs_0_gt_i_rxbufstatus_out_UNCONNECTED[1:0]}),
        .rxcdrhold_in(1'b0),
        .rxcdrlock_out(NLW_bd_01e2_xpcs_0_gt_i_rxcdrlock_out_UNCONNECTED[0]),
        .rxdata_out({NLW_bd_01e2_xpcs_0_gt_i_rxdata_out_UNCONNECTED[127:64],rxdata_out}),
        .rxdatavalid_out({NLW_bd_01e2_xpcs_0_gt_i_rxdatavalid_out_UNCONNECTED[1],rxdatavalid_out}),
        .rxdfelpmreset_in(1'b0),
        .rxgearboxslip_in(gt0_rxgearboxslip_i),
        .rxheader_out({NLW_bd_01e2_xpcs_0_gt_i_rxheader_out_UNCONNECTED[5:2],rxheader_out}),
        .rxheadervalid_out({NLW_bd_01e2_xpcs_0_gt_i_rxheadervalid_out_UNCONNECTED[1],rxheadervalid_out}),
        .rxlatclk_in(1'b0),
        .rxlpmen_in(1'b0),
        .rxoutclk_out(rxoutclk),
        .rxpcsreset_in(pcs_resetout_rising),
        .rxpd_in({1'b0,1'b0}),
        .rxpmareset_in(1'b0),
        .rxpmaresetdone_out(rxpmaresetdone_out),
        .rxpolarity_in(1'b0),
        .rxprbscntreset_in(gt0_clear_rx_prbs_err_count_i),
        .rxprbserr_out(NLW_bd_01e2_xpcs_0_gt_i_rxprbserr_out_UNCONNECTED[0]),
        .rxprbslocked_out(NLW_bd_01e2_xpcs_0_gt_i_rxprbslocked_out_UNCONNECTED[0]),
        .rxprbssel_in({1'b0,rx_prbs31_en,1'b0,rx_prbs31_en}),
        .rxprgdivresetdone_out(rxprogdivresetdone),
        .rxrate_in({1'b0,1'b0,1'b0}),
        .rxstartofseq_out(NLW_bd_01e2_xpcs_0_gt_i_rxstartofseq_out_UNCONNECTED[1:0]),
        .rxusrclk2_in(CLK),
        .rxusrclk_in(rxusrclk_in),
        .txbufstatus_out(NLW_bd_01e2_xpcs_0_gt_i_txbufstatus_out_UNCONNECTED[1:0]),
        .txdata_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,gt_txd[0],gt_txd[1],gt_txd[2],gt_txd[3],gt_txd[4],gt_txd[5],gt_txd[6],gt_txd[7],gt_txd[8],gt_txd[9],gt_txd[10],gt_txd[11],gt_txd[12],gt_txd[13],gt_txd[14],gt_txd[15],gt_txd[16],gt_txd[17],gt_txd[18],gt_txd[19],gt_txd[20],gt_txd[21],gt_txd[22],gt_txd[23],gt_txd[24],gt_txd[25],gt_txd[26],gt_txd[27],gt_txd[28],gt_txd[29],gt_txd[30],gt_txd[31],gt_txd[32],gt_txd[33],gt_txd[34],gt_txd[35],gt_txd[36],gt_txd[37],gt_txd[38],gt_txd[39],gt_txd[40],gt_txd[41],gt_txd[42],gt_txd[43],gt_txd[44],gt_txd[45],gt_txd[46],gt_txd[47],gt_txd[48],gt_txd[49],gt_txd[50],gt_txd[51],gt_txd[52],gt_txd[53],gt_txd[54],gt_txd[55],gt_txd[56],gt_txd[57],gt_txd[58],gt_txd[59],gt_txd[60],gt_txd[61],gt_txd[62],gt_txd[63]}),
        .txdiffctrl_in({1'b1,1'b1,1'b1,1'b0}),
        .txelecidle_in(1'b0),
        .txheader_in({1'b0,1'b0,1'b0,1'b0,gt_txc[0],gt_txc[1]}),
        .txinhibit_in(tx_disable),
        .txlatclk_in(1'b0),
        .txoutclk_out(txoutclk_out),
        .txoutclksel_in({1'b1,1'b0,1'b1}),
        .txpcsreset_in(pcs_resetout_rising),
        .txpd_in({1'b0,1'b0}),
        .txpdelecidlemode_in(1'b0),
        .txpmareset_in(1'b0),
        .txpmaresetdone_out(txpmaresetdone_out),
        .txpolarity_in(1'b0),
        .txpostcursor_in({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txprbsforceerr_in(1'b0),
        .txprbssel_in({1'b0,tx_prbs31_en,1'b0,tx_prbs31_en}),
        .txprecursor_in({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txprgdivresetdone_out(txprogdivresetdone),
        .txsequence_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txusrclk2_in(gtrxreset_out_reg),
        .txusrclk_in(txusrclk_out));
  (* SOFT_HLUTNM = "soft_lutpair362" *) 
  LUT2 #(
    .INIT(4'h8)) 
    bd_01e2_xpcs_0_gt_i_i_1
       (.I0(txprogdivresetdone),
        .I1(txpmaresetdone_out),
        .O(gtwiz_userclk_tx_active_in));
  LUT2 #(
    .INIT(4'h8)) 
    bd_01e2_xpcs_0_gt_i_i_2
       (.I0(rxprogdivresetdone),
        .I1(rxpmaresetdone_out),
        .O(gtwiz_userclk_rx_active_in));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_local_clock_and_reset bd_01e2_xpcs_0_local_clock_reset_block
       (.AS(pma_resetout_rising),
        .CLK(CLK),
        .areset_rxusrclk2(areset_rxusrclk2),
        .dclk(dclk),
        .dclk_reset(dclk_reset),
        .gt0_gtrxreset_i_reg(gt0_gtrxreset_i),
        .gtrxreset_out_reg(gtrxreset_out_reg),
        .lopt(\^lopt ),
        .lopt_1(\^lopt_1 ),
        .lopt_2(\^lopt_2 ),
        .lopt_3(\^lopt_3 ),
        .pma_resetout_rising_rxusrclk2(pma_resetout_rising_rxusrclk2),
        .refclk_n(refclk_n),
        .reset(txreset_txusrclk2),
        .reset_0(reset),
        .rx_resetdone_int(rx_resetdone_int),
        .rxoutclk_out(rxoutclk),
        .rxprgdivresetdone_out(rxprogdivresetdone),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk_in(rxusrclk_in),
        .signal_detect(signal_detect),
        .tx_resetdone_int(tx_resetdone_int));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer block_lock_sync_i
       (.core_in_testmode_coreclk(core_in_testmode_coreclk),
        .core_status(core_status),
        .\master_watchdog_reg[28] (block_lock_sync_i_n_0),
        .refclk_n(refclk_n),
        .rx_resetdone_int(rx_resetdone_int),
        .tx_resetdone_int(tx_resetdone_int));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_cable_pull_logic cable_pull_logic_i
       (.CLK(CLK),
        .D({rxdata_out[56],rxdata_out[57],rxdata_out[58],rxdata_out[59]}),
        .SS(gt0_rxgearboxslip_i),
        .areset_rxusrclk2(areset_rxusrclk2),
        .cable_is_pulled(cable_is_pulled),
        .cable_pull_reset_rising_reg(cable_pull_reset_rising_reg),
        .cable_unpull_reset_rising_reg(cable_unpull_reset_rising_reg),
        .gt0_rxresetdone_i_reg_rxusrclk2(gt0_rxresetdone_i_reg_rxusrclk2),
        .pma_resetout_rising_rxusrclk2(pma_resetout_rising_rxusrclk2),
        .refclk_n(refclk_n));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_3 core_in_testmode_sync_i
       (.D(core_in_testmode),
        .core_in_testmode_coreclk(core_in_testmode_coreclk),
        .refclk_n(refclk_n));
  LUT5 #(
    .INIT(32'hFFFFFFFD)) 
    gt0_gtrxreset_c
       (.I0(signal_detect_coreclk),
        .I1(cable_unpull_reset_rising_reg),
        .I2(pma_resetout_rising),
        .I3(master_watchdog_barking_reg_n_0),
        .I4(cable_pull_reset_rising_reg),
        .O(gt0_gtrxreset_c__0));
  FDRE gt0_gtrxreset_i_reg
       (.C(refclk_n),
        .CE(1'b1),
        .D(gt0_gtrxreset_c__0),
        .Q(gt0_gtrxreset_i),
        .R(1'b0));
  FDRE gt0_gttxreset_i_reg
       (.C(refclk_n),
        .CE(1'b1),
        .D(gt0_gttxreset_c),
        .Q(gt0_gttxreset_i),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    gt0_rxbufreset_i_reg
       (.C(CLK),
        .CE(1'b1),
        .D(gt0_rxbufreset_i0),
        .Q(gt0_rxbufreset_i),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_4 gt0_rxresetdone_i_reg_rxusrclk2_sync_i
       (.CLK(CLK),
        .D(gt0_rxresetdone_reg_dup),
        .gt0_rxbufreset_i0(gt0_rxbufreset_i0),
        .gt0_rxresetdone_i_reg_rxusrclk2(gt0_rxresetdone_i_reg_rxusrclk2),
        .rxbufstatus_out(rxbufstatus_out));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_5 gt0_rxresetdone_i_sync_i
       (.D(gt0_rxresetdone_reg1),
        .refclk_n(refclk_n),
        .rx_resetdone_int(rx_resetdone_int));
  FDRE #(
    .INIT(1'b0)) 
    gt0_rxresetdone_reg1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(gt0_rxresetdone_reg),
        .Q(gt0_rxresetdone_reg1),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    gt0_rxresetdone_reg_dup_reg
       (.C(CLK),
        .CE(1'b1),
        .D(gt0_rxresetdone_reg_reg0),
        .Q(gt0_rxresetdone_reg_dup),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    gt0_rxresetdone_reg_reg
       (.C(CLK),
        .CE(1'b1),
        .D(gt0_rxresetdone_reg_reg0),
        .Q(gt0_rxresetdone_reg),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_6 gt0_rxresetdone_reg_sync_i
       (.D(gt0_rxresetdone_reg),
        .gt0_txresetdone_reg(gt0_txresetdone_reg),
        .gtrxreset_out_reg(gtrxreset_out_reg),
        .resetdone(resetdone_txusrclk2));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_7 gt0_txresetdone_i_sync_i
       (.D(gt0_txresetdone_reg1),
        .refclk_n(refclk_n),
        .resetdone_out(resetdone_out),
        .rx_resetdone_int(rx_resetdone_int),
        .tx_resetdone_int(tx_resetdone_int));
  FDRE #(
    .INIT(1'b0)) 
    gt0_txresetdone_reg1_reg
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(gt0_txresetdone_reg),
        .Q(gt0_txresetdone_reg1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    gt0_txresetdone_reg_reg
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(gt0_txresetdone_reg0),
        .Q(gt0_txresetdone_reg),
        .R(1'b0));
  FDRE \gt_rxc_d1_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxheader_out[1]),
        .Q(gt_rxc_d1[0]),
        .R(1'b0));
  FDRE \gt_rxc_d1_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxheader_out[0]),
        .Q(gt_rxc_d1[1]),
        .R(1'b0));
  FDRE \gt_rxc_d1_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdatavalid_out),
        .Q(gt_rxc_d1[2]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[63]),
        .Q(gt_rxd_d1[0]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[53]),
        .Q(gt_rxd_d1[10]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[52]),
        .Q(gt_rxd_d1[11]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[51]),
        .Q(gt_rxd_d1[12]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[50]),
        .Q(gt_rxd_d1[13]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[49]),
        .Q(gt_rxd_d1[14]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[48]),
        .Q(gt_rxd_d1[15]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[16] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[47]),
        .Q(gt_rxd_d1[16]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[17] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[46]),
        .Q(gt_rxd_d1[17]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[18] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[45]),
        .Q(gt_rxd_d1[18]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[19] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[44]),
        .Q(gt_rxd_d1[19]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[62]),
        .Q(gt_rxd_d1[1]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[20] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[43]),
        .Q(gt_rxd_d1[20]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[21] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[42]),
        .Q(gt_rxd_d1[21]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[22] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[41]),
        .Q(gt_rxd_d1[22]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[23] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[40]),
        .Q(gt_rxd_d1[23]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[24] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[39]),
        .Q(gt_rxd_d1[24]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[25] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[38]),
        .Q(gt_rxd_d1[25]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[26] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[37]),
        .Q(gt_rxd_d1[26]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[27] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[36]),
        .Q(gt_rxd_d1[27]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[28] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[35]),
        .Q(gt_rxd_d1[28]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[29] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[34]),
        .Q(gt_rxd_d1[29]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[61]),
        .Q(gt_rxd_d1[2]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[30] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[33]),
        .Q(gt_rxd_d1[30]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[31] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[32]),
        .Q(gt_rxd_d1[31]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[32] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[31]),
        .Q(gt_rxd_d1[32]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[33] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[30]),
        .Q(gt_rxd_d1[33]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[34] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[29]),
        .Q(gt_rxd_d1[34]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[35] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[28]),
        .Q(gt_rxd_d1[35]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[36] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[27]),
        .Q(gt_rxd_d1[36]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[37] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[26]),
        .Q(gt_rxd_d1[37]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[38] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[25]),
        .Q(gt_rxd_d1[38]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[39] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[24]),
        .Q(gt_rxd_d1[39]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[60]),
        .Q(gt_rxd_d1[3]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[40] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[23]),
        .Q(gt_rxd_d1[40]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[41] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[22]),
        .Q(gt_rxd_d1[41]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[42] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[21]),
        .Q(gt_rxd_d1[42]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[43] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[20]),
        .Q(gt_rxd_d1[43]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[44] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[19]),
        .Q(gt_rxd_d1[44]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[45] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[18]),
        .Q(gt_rxd_d1[45]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[46] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[17]),
        .Q(gt_rxd_d1[46]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[47] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[16]),
        .Q(gt_rxd_d1[47]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[48] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[15]),
        .Q(gt_rxd_d1[48]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[49] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[14]),
        .Q(gt_rxd_d1[49]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[59]),
        .Q(gt_rxd_d1[4]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[50] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[13]),
        .Q(gt_rxd_d1[50]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[51] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[12]),
        .Q(gt_rxd_d1[51]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[52] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[11]),
        .Q(gt_rxd_d1[52]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[53] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[10]),
        .Q(gt_rxd_d1[53]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[54] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[9]),
        .Q(gt_rxd_d1[54]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[55] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[8]),
        .Q(gt_rxd_d1[55]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[56] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[7]),
        .Q(gt_rxd_d1[56]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[57] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[6]),
        .Q(gt_rxd_d1[57]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[58] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[5]),
        .Q(gt_rxd_d1[58]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[59] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[4]),
        .Q(gt_rxd_d1[59]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[58]),
        .Q(gt_rxd_d1[5]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[60] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[3]),
        .Q(gt_rxd_d1[60]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[61] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[2]),
        .Q(gt_rxd_d1[61]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[62] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[1]),
        .Q(gt_rxd_d1[62]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[63] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[0]),
        .Q(gt_rxd_d1[63]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[57]),
        .Q(gt_rxd_d1[6]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[56]),
        .Q(gt_rxd_d1[7]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[55]),
        .Q(gt_rxd_d1[8]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[54]),
        .Q(gt_rxd_d1[9]),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_8 gtrxreset_coreclk_sync_i
       (.Q(Q),
        .refclk_n(refclk_n));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[0]_i_10 
       (.I0(master_watchdog_reg[0]),
        .O(\master_watchdog[0]_i_10_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[0]_i_3 
       (.I0(master_watchdog_reg[7]),
        .O(\master_watchdog[0]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[0]_i_4 
       (.I0(master_watchdog_reg[6]),
        .O(\master_watchdog[0]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[0]_i_5 
       (.I0(master_watchdog_reg[5]),
        .O(\master_watchdog[0]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[0]_i_6 
       (.I0(master_watchdog_reg[4]),
        .O(\master_watchdog[0]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[0]_i_7 
       (.I0(master_watchdog_reg[3]),
        .O(\master_watchdog[0]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[0]_i_8 
       (.I0(master_watchdog_reg[2]),
        .O(\master_watchdog[0]_i_8_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[0]_i_9 
       (.I0(master_watchdog_reg[1]),
        .O(\master_watchdog[0]_i_9_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[16]_i_2 
       (.I0(master_watchdog_reg[23]),
        .O(\master_watchdog[16]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[16]_i_3 
       (.I0(master_watchdog_reg[22]),
        .O(\master_watchdog[16]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[16]_i_4 
       (.I0(master_watchdog_reg[21]),
        .O(\master_watchdog[16]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[16]_i_5 
       (.I0(master_watchdog_reg[20]),
        .O(\master_watchdog[16]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[16]_i_6 
       (.I0(master_watchdog_reg[19]),
        .O(\master_watchdog[16]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[16]_i_7 
       (.I0(master_watchdog_reg[18]),
        .O(\master_watchdog[16]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[16]_i_8 
       (.I0(master_watchdog_reg[17]),
        .O(\master_watchdog[16]_i_8_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[16]_i_9 
       (.I0(master_watchdog_reg[16]),
        .O(\master_watchdog[16]_i_9_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[24]_i_2 
       (.I0(master_watchdog_reg[28]),
        .O(\master_watchdog[24]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[24]_i_3 
       (.I0(master_watchdog_reg[27]),
        .O(\master_watchdog[24]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[24]_i_4 
       (.I0(master_watchdog_reg[26]),
        .O(\master_watchdog[24]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[24]_i_5 
       (.I0(master_watchdog_reg[25]),
        .O(\master_watchdog[24]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[24]_i_6 
       (.I0(master_watchdog_reg[24]),
        .O(\master_watchdog[24]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[8]_i_2 
       (.I0(master_watchdog_reg[15]),
        .O(\master_watchdog[8]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[8]_i_3 
       (.I0(master_watchdog_reg[14]),
        .O(\master_watchdog[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[8]_i_4 
       (.I0(master_watchdog_reg[13]),
        .O(\master_watchdog[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[8]_i_5 
       (.I0(master_watchdog_reg[12]),
        .O(\master_watchdog[8]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[8]_i_6 
       (.I0(master_watchdog_reg[11]),
        .O(\master_watchdog[8]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[8]_i_7 
       (.I0(master_watchdog_reg[10]),
        .O(\master_watchdog[8]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[8]_i_8 
       (.I0(master_watchdog_reg[9]),
        .O(\master_watchdog[8]_i_8_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[8]_i_9 
       (.I0(master_watchdog_reg[8]),
        .O(\master_watchdog[8]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    master_watchdog_barking_i_1
       (.I0(master_watchdog_barking_i_2_n_0),
        .I1(master_watchdog_barking_i_3_n_0),
        .I2(master_watchdog_barking_i_4_n_0),
        .I3(master_watchdog_barking_i_5_n_0),
        .I4(master_watchdog_barking_i_6_n_0),
        .O(master_watchdog_barking));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    master_watchdog_barking_i_2
       (.I0(master_watchdog_reg[25]),
        .I1(master_watchdog_reg[26]),
        .I2(master_watchdog_reg[23]),
        .I3(master_watchdog_reg[24]),
        .I4(master_watchdog_reg[28]),
        .I5(master_watchdog_reg[27]),
        .O(master_watchdog_barking_i_2_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    master_watchdog_barking_i_3
       (.I0(master_watchdog_reg[19]),
        .I1(master_watchdog_reg[20]),
        .I2(master_watchdog_reg[17]),
        .I3(master_watchdog_reg[18]),
        .I4(master_watchdog_reg[22]),
        .I5(master_watchdog_reg[21]),
        .O(master_watchdog_barking_i_3_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    master_watchdog_barking_i_4
       (.I0(master_watchdog_reg[13]),
        .I1(master_watchdog_reg[14]),
        .I2(master_watchdog_reg[11]),
        .I3(master_watchdog_reg[12]),
        .I4(master_watchdog_reg[16]),
        .I5(master_watchdog_reg[15]),
        .O(master_watchdog_barking_i_4_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    master_watchdog_barking_i_5
       (.I0(master_watchdog_reg[7]),
        .I1(master_watchdog_reg[8]),
        .I2(master_watchdog_reg[5]),
        .I3(master_watchdog_reg[6]),
        .I4(master_watchdog_reg[10]),
        .I5(master_watchdog_reg[9]),
        .O(master_watchdog_barking_i_5_n_0));
  LUT5 #(
    .INIT(32'h00000001)) 
    master_watchdog_barking_i_6
       (.I0(master_watchdog_reg[0]),
        .I1(master_watchdog_reg[1]),
        .I2(master_watchdog_reg[2]),
        .I3(master_watchdog_reg[4]),
        .I4(master_watchdog_reg[3]),
        .O(master_watchdog_barking_i_6_n_0));
  FDRE #(
    .INIT(1'b0)) 
    master_watchdog_barking_reg
       (.C(refclk_n),
        .CE(1'b1),
        .D(master_watchdog_barking),
        .Q(master_watchdog_barking_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[0] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(\master_watchdog_reg[0]_i_2_n_15 ),
        .Q(master_watchdog_reg[0]),
        .R(block_lock_sync_i_n_0));
  CARRY8 \master_watchdog_reg[0]_i_2 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\master_watchdog_reg[0]_i_2_n_0 ,\master_watchdog_reg[0]_i_2_n_1 ,\master_watchdog_reg[0]_i_2_n_2 ,\master_watchdog_reg[0]_i_2_n_3 ,\NLW_master_watchdog_reg[0]_i_2_CO_UNCONNECTED [3],\master_watchdog_reg[0]_i_2_n_5 ,\master_watchdog_reg[0]_i_2_n_6 ,\master_watchdog_reg[0]_i_2_n_7 }),
        .DI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .O({\master_watchdog_reg[0]_i_2_n_8 ,\master_watchdog_reg[0]_i_2_n_9 ,\master_watchdog_reg[0]_i_2_n_10 ,\master_watchdog_reg[0]_i_2_n_11 ,\master_watchdog_reg[0]_i_2_n_12 ,\master_watchdog_reg[0]_i_2_n_13 ,\master_watchdog_reg[0]_i_2_n_14 ,\master_watchdog_reg[0]_i_2_n_15 }),
        .S({\master_watchdog[0]_i_3_n_0 ,\master_watchdog[0]_i_4_n_0 ,\master_watchdog[0]_i_5_n_0 ,\master_watchdog[0]_i_6_n_0 ,\master_watchdog[0]_i_7_n_0 ,\master_watchdog[0]_i_8_n_0 ,\master_watchdog[0]_i_9_n_0 ,\master_watchdog[0]_i_10_n_0 }));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[10] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(\master_watchdog_reg[8]_i_1_n_13 ),
        .Q(master_watchdog_reg[10]),
        .S(block_lock_sync_i_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[11] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(\master_watchdog_reg[8]_i_1_n_12 ),
        .Q(master_watchdog_reg[11]),
        .R(block_lock_sync_i_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[12] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(\master_watchdog_reg[8]_i_1_n_11 ),
        .Q(master_watchdog_reg[12]),
        .R(block_lock_sync_i_n_0));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[13] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(\master_watchdog_reg[8]_i_1_n_10 ),
        .Q(master_watchdog_reg[13]),
        .S(block_lock_sync_i_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[14] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(\master_watchdog_reg[8]_i_1_n_9 ),
        .Q(master_watchdog_reg[14]),
        .R(block_lock_sync_i_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[15] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(\master_watchdog_reg[8]_i_1_n_8 ),
        .Q(master_watchdog_reg[15]),
        .R(block_lock_sync_i_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[16] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(\master_watchdog_reg[16]_i_1_n_15 ),
        .Q(master_watchdog_reg[16]),
        .R(block_lock_sync_i_n_0));
  CARRY8 \master_watchdog_reg[16]_i_1 
       (.CI(\master_watchdog_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\master_watchdog_reg[16]_i_1_n_0 ,\master_watchdog_reg[16]_i_1_n_1 ,\master_watchdog_reg[16]_i_1_n_2 ,\master_watchdog_reg[16]_i_1_n_3 ,\NLW_master_watchdog_reg[16]_i_1_CO_UNCONNECTED [3],\master_watchdog_reg[16]_i_1_n_5 ,\master_watchdog_reg[16]_i_1_n_6 ,\master_watchdog_reg[16]_i_1_n_7 }),
        .DI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .O({\master_watchdog_reg[16]_i_1_n_8 ,\master_watchdog_reg[16]_i_1_n_9 ,\master_watchdog_reg[16]_i_1_n_10 ,\master_watchdog_reg[16]_i_1_n_11 ,\master_watchdog_reg[16]_i_1_n_12 ,\master_watchdog_reg[16]_i_1_n_13 ,\master_watchdog_reg[16]_i_1_n_14 ,\master_watchdog_reg[16]_i_1_n_15 }),
        .S({\master_watchdog[16]_i_2_n_0 ,\master_watchdog[16]_i_3_n_0 ,\master_watchdog[16]_i_4_n_0 ,\master_watchdog[16]_i_5_n_0 ,\master_watchdog[16]_i_6_n_0 ,\master_watchdog[16]_i_7_n_0 ,\master_watchdog[16]_i_8_n_0 ,\master_watchdog[16]_i_9_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[17] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(\master_watchdog_reg[16]_i_1_n_14 ),
        .Q(master_watchdog_reg[17]),
        .R(block_lock_sync_i_n_0));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[18] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(\master_watchdog_reg[16]_i_1_n_13 ),
        .Q(master_watchdog_reg[18]),
        .S(block_lock_sync_i_n_0));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[19] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(\master_watchdog_reg[16]_i_1_n_12 ),
        .Q(master_watchdog_reg[19]),
        .S(block_lock_sync_i_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[1] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(\master_watchdog_reg[0]_i_2_n_14 ),
        .Q(master_watchdog_reg[1]),
        .R(block_lock_sync_i_n_0));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[20] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(\master_watchdog_reg[16]_i_1_n_11 ),
        .Q(master_watchdog_reg[20]),
        .S(block_lock_sync_i_n_0));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[21] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(\master_watchdog_reg[16]_i_1_n_10 ),
        .Q(master_watchdog_reg[21]),
        .S(block_lock_sync_i_n_0));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[22] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(\master_watchdog_reg[16]_i_1_n_9 ),
        .Q(master_watchdog_reg[22]),
        .S(block_lock_sync_i_n_0));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[23] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(\master_watchdog_reg[16]_i_1_n_8 ),
        .Q(master_watchdog_reg[23]),
        .S(block_lock_sync_i_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[24] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(\master_watchdog_reg[24]_i_1_n_15 ),
        .Q(master_watchdog_reg[24]),
        .R(block_lock_sync_i_n_0));
  CARRY8 \master_watchdog_reg[24]_i_1 
       (.CI(\master_watchdog_reg[16]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_master_watchdog_reg[24]_i_1_CO_UNCONNECTED [7:3],\master_watchdog_reg[24]_i_1_n_5 ,\master_watchdog_reg[24]_i_1_n_6 ,\master_watchdog_reg[24]_i_1_n_7 }),
        .DI({\NLW_master_watchdog_reg[24]_i_1_DI_UNCONNECTED [7:5],1'b0,1'b1,1'b1,1'b1,1'b1}),
        .O({\NLW_master_watchdog_reg[24]_i_1_O_UNCONNECTED [7:5],\master_watchdog_reg[24]_i_1_n_11 ,\master_watchdog_reg[24]_i_1_n_12 ,\master_watchdog_reg[24]_i_1_n_13 ,\master_watchdog_reg[24]_i_1_n_14 ,\master_watchdog_reg[24]_i_1_n_15 }),
        .S({\NLW_master_watchdog_reg[24]_i_1_S_UNCONNECTED [7:5],\master_watchdog[24]_i_2_n_0 ,\master_watchdog[24]_i_3_n_0 ,\master_watchdog[24]_i_4_n_0 ,\master_watchdog[24]_i_5_n_0 ,\master_watchdog[24]_i_6_n_0 }));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[25] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(\master_watchdog_reg[24]_i_1_n_14 ),
        .Q(master_watchdog_reg[25]),
        .S(block_lock_sync_i_n_0));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[26] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(\master_watchdog_reg[24]_i_1_n_13 ),
        .Q(master_watchdog_reg[26]),
        .S(block_lock_sync_i_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[27] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(\master_watchdog_reg[24]_i_1_n_12 ),
        .Q(master_watchdog_reg[27]),
        .R(block_lock_sync_i_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[28] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(\master_watchdog_reg[24]_i_1_n_11 ),
        .Q(master_watchdog_reg[28]),
        .R(block_lock_sync_i_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[2] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(\master_watchdog_reg[0]_i_2_n_13 ),
        .Q(master_watchdog_reg[2]),
        .R(block_lock_sync_i_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[3] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(\master_watchdog_reg[0]_i_2_n_12 ),
        .Q(master_watchdog_reg[3]),
        .R(block_lock_sync_i_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[4] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(\master_watchdog_reg[0]_i_2_n_11 ),
        .Q(master_watchdog_reg[4]),
        .R(block_lock_sync_i_n_0));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[5] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(\master_watchdog_reg[0]_i_2_n_10 ),
        .Q(master_watchdog_reg[5]),
        .S(block_lock_sync_i_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[6] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(\master_watchdog_reg[0]_i_2_n_9 ),
        .Q(master_watchdog_reg[6]),
        .R(block_lock_sync_i_n_0));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[7] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(\master_watchdog_reg[0]_i_2_n_8 ),
        .Q(master_watchdog_reg[7]),
        .S(block_lock_sync_i_n_0));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[8] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(\master_watchdog_reg[8]_i_1_n_15 ),
        .Q(master_watchdog_reg[8]),
        .S(block_lock_sync_i_n_0));
  CARRY8 \master_watchdog_reg[8]_i_1 
       (.CI(\master_watchdog_reg[0]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\master_watchdog_reg[8]_i_1_n_0 ,\master_watchdog_reg[8]_i_1_n_1 ,\master_watchdog_reg[8]_i_1_n_2 ,\master_watchdog_reg[8]_i_1_n_3 ,\NLW_master_watchdog_reg[8]_i_1_CO_UNCONNECTED [3],\master_watchdog_reg[8]_i_1_n_5 ,\master_watchdog_reg[8]_i_1_n_6 ,\master_watchdog_reg[8]_i_1_n_7 }),
        .DI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .O({\master_watchdog_reg[8]_i_1_n_8 ,\master_watchdog_reg[8]_i_1_n_9 ,\master_watchdog_reg[8]_i_1_n_10 ,\master_watchdog_reg[8]_i_1_n_11 ,\master_watchdog_reg[8]_i_1_n_12 ,\master_watchdog_reg[8]_i_1_n_13 ,\master_watchdog_reg[8]_i_1_n_14 ,\master_watchdog_reg[8]_i_1_n_15 }),
        .S({\master_watchdog[8]_i_2_n_0 ,\master_watchdog[8]_i_3_n_0 ,\master_watchdog[8]_i_4_n_0 ,\master_watchdog[8]_i_5_n_0 ,\master_watchdog[8]_i_6_n_0 ,\master_watchdog[8]_i_7_n_0 ,\master_watchdog[8]_i_8_n_0 ,\master_watchdog[8]_i_9_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[9] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(\master_watchdog_reg[8]_i_1_n_14 ),
        .Q(master_watchdog_reg[9]),
        .R(block_lock_sync_i_n_0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_9 pcs_resetout_coreclk_sync_i
       (.AS(pcs_resetout_reg_txuserclk2),
        .pcs_resetout_coreclk_sync(pcs_resetout_coreclk_sync),
        .pcs_resetout_reg(pcs_resetout_reg),
        .pcs_resetout_rising_reg(pcs_resetout_coreclk_sync_i_n_1),
        .refclk_n(refclk_n));
  FDRE #(
    .INIT(1'b0)) 
    pcs_resetout_reg_reg
       (.C(refclk_n),
        .CE(1'b1),
        .D(pcs_resetout_coreclk_sync),
        .Q(pcs_resetout_reg),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    pcs_resetout_reg_txuserclk2_reg
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(configuration_vector[4]),
        .Q(pcs_resetout_reg_txuserclk2),
        .R(areset_txusrclk2));
  FDRE #(
    .INIT(1'b0)) 
    pcs_resetout_rising_reg
       (.C(refclk_n),
        .CE(1'b1),
        .D(pcs_resetout_coreclk_sync_i_n_1),
        .Q(pcs_resetout_rising),
        .R(data_out_reg));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_10 pma_resetout_coreclk_sync_i
       (.AS(pma_resetout_reg_txuserclk2),
        .pma_resetout_coreclk_sync(pma_resetout_coreclk_sync),
        .pma_resetout_reg(pma_resetout_reg),
        .pma_resetout_rising_reg(pma_resetout_coreclk_sync_i_n_1),
        .refclk_n(refclk_n));
  FDRE #(
    .INIT(1'b0)) 
    pma_resetout_reg_reg
       (.C(refclk_n),
        .CE(1'b1),
        .D(pma_resetout_coreclk_sync),
        .Q(pma_resetout_reg),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    pma_resetout_reg_txuserclk2_reg
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(configuration_vector[1]),
        .Q(pma_resetout_reg_txuserclk2),
        .R(areset_txusrclk2));
  FDRE pma_resetout_rising_reg
       (.C(refclk_n),
        .CE(1'b1),
        .D(pma_resetout_coreclk_sync_i_n_1),
        .Q(pma_resetout_rising),
        .R(data_out_reg));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst__parameterized1 qplllock_coreclk_sync_i
       (.AR(AR),
        .refclk_n(refclk_n));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst__parameterized3 qplllock_rxusrclk2_sync_i
       (.AR(AR),
        .CLK(CLK),
        .gt0_rxresetdone_reg_reg0(gt0_rxresetdone_reg_reg0),
        .gtwiz_reset_rx_done_out(gtwiz_reset_rx_done_out));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst__parameterized2 qplllock_txusrclk2_sync_i
       (.AR(AR),
        .gt0_txresetdone_reg0(gt0_txresetdone_reg0),
        .gtrxreset_out_reg(gtrxreset_out_reg),
        .gtwiz_reset_tx_done_out(gtwiz_reset_tx_done_out));
  FDRE #(
    .INIT(1'b0)) 
    reset_tx_bufg_gt_reg_reg
       (.C(refclk_n),
        .CE(1'b1),
        .D(reset_tx_bufg_gt_sig),
        .Q(reset_tx_bufg_gt_reg),
        .R(data_out_reg));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_11 reset_tx_bufg_gt_sync_i
       (.AS(pma_resetout_rising),
        .D(D),
        .gt0_gttxreset_c(gt0_gttxreset_c),
        .refclk_n(refclk_n),
        .reset_tx_bufg_gt_reg(reset_tx_bufg_gt_reg),
        .reset_tx_bufg_gt_sig(reset_tx_bufg_gt_sig));
  FDRE #(
    .INIT(1'b1)) 
    signal_detect_comb_reg
       (.C(CLK),
        .CE(1'b1),
        .D(signal_detect_rxusrclk2_sync_i_n_0),
        .Q(signal_detect_comb),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_12 signal_detect_coreclk_sync_i
       (.refclk_n(refclk_n),
        .signal_detect(signal_detect),
        .signal_detect_coreclk(signal_detect_coreclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_13 signal_detect_rxusrclk2_sync_i
       (.CLK(CLK),
        .cable_is_pulled(cable_is_pulled),
        .signal_detect(signal_detect),
        .signal_detect_comb_reg(signal_detect_rxusrclk2_sync_i_n_0));
  (* SOFT_HLUTNM = "soft_lutpair362" *) 
  LUT1 #(
    .INIT(2'h1)) 
    txoutclk_bufg_gt_i_i_1
       (.I0(txprogdivresetdone),
        .O(D));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_cable_pull_logic
   (cable_pull_reset_rising_reg,
    cable_unpull_reset_rising_reg,
    cable_is_pulled,
    CLK,
    refclk_n,
    pma_resetout_rising_rxusrclk2,
    areset_rxusrclk2,
    gt0_rxresetdone_i_reg_rxusrclk2,
    SS,
    D);
  output cable_pull_reset_rising_reg;
  output cable_unpull_reset_rising_reg;
  output cable_is_pulled;
  input CLK;
  input refclk_n;
  input pma_resetout_rising_rxusrclk2;
  input areset_rxusrclk2;
  input gt0_rxresetdone_i_reg_rxusrclk2;
  input [0:0]SS;
  input [3:0]D;

  wire CLK;
  wire [3:0]D;
  wire [0:0]SS;
  wire areset_rxusrclk2;
  wire cable_is_pulled;
  wire cable_pull_reset;
  wire cable_pull_reset_i_2_n_0;
  wire cable_pull_reset_i_3_n_0;
  wire cable_pull_reset_i_4_n_0;
  wire cable_pull_reset_i_5_n_0;
  wire cable_pull_reset_i_6_n_0;
  wire cable_pull_reset_reg__0;
  wire cable_pull_reset_reg_reg;
  wire cable_pull_reset_rising;
  wire cable_pull_reset_rising_reg;
  wire cable_pull_reset_rising_rxusrclk2;
  wire cable_pull_reset_rising_rxusrclk2_sync_i_n_1;
  wire cable_pull_reset_sync_i_n_1;
  wire \cable_pull_watchdog[0]_i_10_n_0 ;
  wire \cable_pull_watchdog[0]_i_3_n_0 ;
  wire \cable_pull_watchdog[0]_i_4_n_0 ;
  wire \cable_pull_watchdog[0]_i_5_n_0 ;
  wire \cable_pull_watchdog[0]_i_6_n_0 ;
  wire \cable_pull_watchdog[0]_i_7_n_0 ;
  wire \cable_pull_watchdog[0]_i_8_n_0 ;
  wire \cable_pull_watchdog[0]_i_9_n_0 ;
  wire \cable_pull_watchdog[16]_i_2_n_0 ;
  wire \cable_pull_watchdog[16]_i_3_n_0 ;
  wire \cable_pull_watchdog[16]_i_4_n_0 ;
  wire \cable_pull_watchdog[16]_i_5_n_0 ;
  wire \cable_pull_watchdog[8]_i_2_n_0 ;
  wire \cable_pull_watchdog[8]_i_3_n_0 ;
  wire \cable_pull_watchdog[8]_i_4_n_0 ;
  wire \cable_pull_watchdog[8]_i_5_n_0 ;
  wire \cable_pull_watchdog[8]_i_6_n_0 ;
  wire \cable_pull_watchdog[8]_i_7_n_0 ;
  wire \cable_pull_watchdog[8]_i_8_n_0 ;
  wire \cable_pull_watchdog[8]_i_9_n_0 ;
  wire [1:0]cable_pull_watchdog_event;
  wire cable_pull_watchdog_event0;
  wire cable_pull_watchdog_event1__2;
  wire \cable_pull_watchdog_event[0]_i_1_n_0 ;
  wire \cable_pull_watchdog_event[1]_i_1_n_0 ;
  wire \cable_pull_watchdog_event[1]_i_3_n_0 ;
  wire [19:0]cable_pull_watchdog_reg;
  wire \cable_pull_watchdog_reg[0]_i_2_n_0 ;
  wire \cable_pull_watchdog_reg[0]_i_2_n_1 ;
  wire \cable_pull_watchdog_reg[0]_i_2_n_10 ;
  wire \cable_pull_watchdog_reg[0]_i_2_n_11 ;
  wire \cable_pull_watchdog_reg[0]_i_2_n_12 ;
  wire \cable_pull_watchdog_reg[0]_i_2_n_13 ;
  wire \cable_pull_watchdog_reg[0]_i_2_n_14 ;
  wire \cable_pull_watchdog_reg[0]_i_2_n_15 ;
  wire \cable_pull_watchdog_reg[0]_i_2_n_2 ;
  wire \cable_pull_watchdog_reg[0]_i_2_n_3 ;
  wire \cable_pull_watchdog_reg[0]_i_2_n_5 ;
  wire \cable_pull_watchdog_reg[0]_i_2_n_6 ;
  wire \cable_pull_watchdog_reg[0]_i_2_n_7 ;
  wire \cable_pull_watchdog_reg[0]_i_2_n_8 ;
  wire \cable_pull_watchdog_reg[0]_i_2_n_9 ;
  wire \cable_pull_watchdog_reg[16]_i_1_n_12 ;
  wire \cable_pull_watchdog_reg[16]_i_1_n_13 ;
  wire \cable_pull_watchdog_reg[16]_i_1_n_14 ;
  wire \cable_pull_watchdog_reg[16]_i_1_n_15 ;
  wire \cable_pull_watchdog_reg[16]_i_1_n_5 ;
  wire \cable_pull_watchdog_reg[16]_i_1_n_6 ;
  wire \cable_pull_watchdog_reg[16]_i_1_n_7 ;
  wire \cable_pull_watchdog_reg[8]_i_1_n_0 ;
  wire \cable_pull_watchdog_reg[8]_i_1_n_1 ;
  wire \cable_pull_watchdog_reg[8]_i_1_n_10 ;
  wire \cable_pull_watchdog_reg[8]_i_1_n_11 ;
  wire \cable_pull_watchdog_reg[8]_i_1_n_12 ;
  wire \cable_pull_watchdog_reg[8]_i_1_n_13 ;
  wire \cable_pull_watchdog_reg[8]_i_1_n_14 ;
  wire \cable_pull_watchdog_reg[8]_i_1_n_15 ;
  wire \cable_pull_watchdog_reg[8]_i_1_n_2 ;
  wire \cable_pull_watchdog_reg[8]_i_1_n_3 ;
  wire \cable_pull_watchdog_reg[8]_i_1_n_5 ;
  wire \cable_pull_watchdog_reg[8]_i_1_n_6 ;
  wire \cable_pull_watchdog_reg[8]_i_1_n_7 ;
  wire \cable_pull_watchdog_reg[8]_i_1_n_8 ;
  wire \cable_pull_watchdog_reg[8]_i_1_n_9 ;
  wire cable_unpull_enable_i_1_n_0;
  wire cable_unpull_reset1;
  wire cable_unpull_reset_reg__0;
  wire cable_unpull_reset_reg_n_0;
  wire cable_unpull_reset_reg_reg;
  wire cable_unpull_reset_rising;
  wire cable_unpull_reset_rising_reg;
  wire cable_unpull_reset_rising_rxusrclk2_sync_i_n_0;
  wire cable_unpull_reset_rising_rxusrclk2_sync_i_n_1;
  wire cable_unpull_reset_rising_rxusrclk2_sync_i_n_2;
  wire cable_unpull_reset_sync_i_n_1;
  wire \cable_unpull_watchdog[0]_i_10_n_0 ;
  wire \cable_unpull_watchdog[0]_i_11_n_0 ;
  wire \cable_unpull_watchdog[0]_i_12_n_0 ;
  wire \cable_unpull_watchdog[0]_i_13_n_0 ;
  wire \cable_unpull_watchdog[0]_i_14_n_0 ;
  wire \cable_unpull_watchdog[0]_i_15_n_0 ;
  wire \cable_unpull_watchdog[0]_i_16_n_0 ;
  wire \cable_unpull_watchdog[0]_i_4_n_0 ;
  wire \cable_unpull_watchdog[0]_i_5_n_0 ;
  wire \cable_unpull_watchdog[0]_i_6_n_0 ;
  wire \cable_unpull_watchdog[0]_i_7_n_0 ;
  wire \cable_unpull_watchdog[0]_i_8_n_0 ;
  wire \cable_unpull_watchdog[0]_i_9_n_0 ;
  wire \cable_unpull_watchdog[16]_i_2_n_0 ;
  wire \cable_unpull_watchdog[16]_i_3_n_0 ;
  wire \cable_unpull_watchdog[16]_i_4_n_0 ;
  wire \cable_unpull_watchdog[16]_i_5_n_0 ;
  wire \cable_unpull_watchdog[8]_i_2_n_0 ;
  wire \cable_unpull_watchdog[8]_i_3_n_0 ;
  wire \cable_unpull_watchdog[8]_i_4_n_0 ;
  wire \cable_unpull_watchdog[8]_i_5_n_0 ;
  wire \cable_unpull_watchdog[8]_i_6_n_0 ;
  wire \cable_unpull_watchdog[8]_i_7_n_0 ;
  wire \cable_unpull_watchdog[8]_i_8_n_0 ;
  wire \cable_unpull_watchdog[8]_i_9_n_0 ;
  wire cable_unpull_watchdog_event;
  wire \cable_unpull_watchdog_event[10]_i_4_n_0 ;
  wire \cable_unpull_watchdog_event_reg_n_0_[0] ;
  wire \cable_unpull_watchdog_event_reg_n_0_[1] ;
  wire \cable_unpull_watchdog_event_reg_n_0_[2] ;
  wire \cable_unpull_watchdog_event_reg_n_0_[3] ;
  wire \cable_unpull_watchdog_event_reg_n_0_[4] ;
  wire \cable_unpull_watchdog_event_reg_n_0_[5] ;
  wire \cable_unpull_watchdog_event_reg_n_0_[6] ;
  wire \cable_unpull_watchdog_event_reg_n_0_[7] ;
  wire \cable_unpull_watchdog_event_reg_n_0_[8] ;
  wire \cable_unpull_watchdog_event_reg_n_0_[9] ;
  wire [19:0]cable_unpull_watchdog_reg;
  wire \cable_unpull_watchdog_reg[0]_i_3_n_0 ;
  wire \cable_unpull_watchdog_reg[0]_i_3_n_1 ;
  wire \cable_unpull_watchdog_reg[0]_i_3_n_10 ;
  wire \cable_unpull_watchdog_reg[0]_i_3_n_11 ;
  wire \cable_unpull_watchdog_reg[0]_i_3_n_12 ;
  wire \cable_unpull_watchdog_reg[0]_i_3_n_13 ;
  wire \cable_unpull_watchdog_reg[0]_i_3_n_14 ;
  wire \cable_unpull_watchdog_reg[0]_i_3_n_15 ;
  wire \cable_unpull_watchdog_reg[0]_i_3_n_2 ;
  wire \cable_unpull_watchdog_reg[0]_i_3_n_3 ;
  wire \cable_unpull_watchdog_reg[0]_i_3_n_5 ;
  wire \cable_unpull_watchdog_reg[0]_i_3_n_6 ;
  wire \cable_unpull_watchdog_reg[0]_i_3_n_7 ;
  wire \cable_unpull_watchdog_reg[0]_i_3_n_8 ;
  wire \cable_unpull_watchdog_reg[0]_i_3_n_9 ;
  wire \cable_unpull_watchdog_reg[16]_i_1_n_12 ;
  wire \cable_unpull_watchdog_reg[16]_i_1_n_13 ;
  wire \cable_unpull_watchdog_reg[16]_i_1_n_14 ;
  wire \cable_unpull_watchdog_reg[16]_i_1_n_15 ;
  wire \cable_unpull_watchdog_reg[16]_i_1_n_5 ;
  wire \cable_unpull_watchdog_reg[16]_i_1_n_6 ;
  wire \cable_unpull_watchdog_reg[16]_i_1_n_7 ;
  wire \cable_unpull_watchdog_reg[8]_i_1_n_0 ;
  wire \cable_unpull_watchdog_reg[8]_i_1_n_1 ;
  wire \cable_unpull_watchdog_reg[8]_i_1_n_10 ;
  wire \cable_unpull_watchdog_reg[8]_i_1_n_11 ;
  wire \cable_unpull_watchdog_reg[8]_i_1_n_12 ;
  wire \cable_unpull_watchdog_reg[8]_i_1_n_13 ;
  wire \cable_unpull_watchdog_reg[8]_i_1_n_14 ;
  wire \cable_unpull_watchdog_reg[8]_i_1_n_15 ;
  wire \cable_unpull_watchdog_reg[8]_i_1_n_2 ;
  wire \cable_unpull_watchdog_reg[8]_i_1_n_3 ;
  wire \cable_unpull_watchdog_reg[8]_i_1_n_5 ;
  wire \cable_unpull_watchdog_reg[8]_i_1_n_6 ;
  wire \cable_unpull_watchdog_reg[8]_i_1_n_7 ;
  wire \cable_unpull_watchdog_reg[8]_i_1_n_8 ;
  wire \cable_unpull_watchdog_reg[8]_i_1_n_9 ;
  wire gearboxslipignore;
  wire gearboxslipignore_i_1_n_0;
  wire [0:0]gearboxslipignorecount0;
  wire \gearboxslipignorecount[1]_i_1_n_0 ;
  wire \gearboxslipignorecount[2]_i_1_n_0 ;
  wire \gearboxslipignorecount[3]_i_1_n_0 ;
  wire \gearboxslipignorecount[3]_i_2_n_0 ;
  wire [3:0]gearboxslipignorecount_reg__0;
  wire gt0_rxresetdone_i_reg_rxusrclk2;
  wire [10:0]p_0_in;
  wire p_1_in;
  wire pma_resetout_rising_rxusrclk2;
  wire refclk_n;
  wire [3:0]rx_sample;
  wire \rx_sample[3]_i_1_n_0 ;
  wire [3:0]rx_sample_prev;
  wire [3:3]\NLW_cable_pull_watchdog_reg[0]_i_2_CO_UNCONNECTED ;
  wire [7:3]\NLW_cable_pull_watchdog_reg[16]_i_1_CO_UNCONNECTED ;
  wire [7:4]\NLW_cable_pull_watchdog_reg[16]_i_1_DI_UNCONNECTED ;
  wire [7:4]\NLW_cable_pull_watchdog_reg[16]_i_1_O_UNCONNECTED ;
  wire [7:4]\NLW_cable_pull_watchdog_reg[16]_i_1_S_UNCONNECTED ;
  wire [3:3]\NLW_cable_pull_watchdog_reg[8]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_cable_unpull_watchdog_reg[0]_i_3_CO_UNCONNECTED ;
  wire [7:3]\NLW_cable_unpull_watchdog_reg[16]_i_1_CO_UNCONNECTED ;
  wire [7:4]\NLW_cable_unpull_watchdog_reg[16]_i_1_DI_UNCONNECTED ;
  wire [7:4]\NLW_cable_unpull_watchdog_reg[16]_i_1_O_UNCONNECTED ;
  wire [7:4]\NLW_cable_unpull_watchdog_reg[16]_i_1_S_UNCONNECTED ;
  wire [3:3]\NLW_cable_unpull_watchdog_reg[8]_i_1_CO_UNCONNECTED ;

  LUT3 #(
    .INIT(8'h02)) 
    cable_pull_reset_i_1
       (.I0(gt0_rxresetdone_i_reg_rxusrclk2),
        .I1(cable_is_pulled),
        .I2(cable_pull_reset),
        .O(cable_pull_watchdog_event0));
  LUT4 #(
    .INIT(16'h4000)) 
    cable_pull_reset_i_2
       (.I0(cable_pull_reset_i_3_n_0),
        .I1(cable_pull_reset_i_4_n_0),
        .I2(cable_pull_reset_i_5_n_0),
        .I3(cable_pull_reset_i_6_n_0),
        .O(cable_pull_reset_i_2_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    cable_pull_reset_i_3
       (.I0(cable_pull_watchdog_reg[12]),
        .I1(cable_pull_watchdog_reg[10]),
        .I2(cable_pull_watchdog_reg[11]),
        .I3(cable_pull_watchdog_reg[14]),
        .I4(cable_pull_watchdog_reg[13]),
        .O(cable_pull_reset_i_3_n_0));
  LUT5 #(
    .INIT(32'h00000001)) 
    cable_pull_reset_i_4
       (.I0(cable_pull_watchdog_reg[18]),
        .I1(cable_pull_watchdog_reg[19]),
        .I2(cable_pull_watchdog_reg[15]),
        .I3(cable_pull_watchdog_reg[16]),
        .I4(cable_pull_watchdog_reg[17]),
        .O(cable_pull_reset_i_4_n_0));
  LUT5 #(
    .INIT(32'h00000001)) 
    cable_pull_reset_i_5
       (.I0(cable_pull_watchdog_reg[9]),
        .I1(cable_pull_watchdog_reg[8]),
        .I2(cable_pull_watchdog_reg[5]),
        .I3(cable_pull_watchdog_reg[6]),
        .I4(cable_pull_watchdog_reg[7]),
        .O(cable_pull_reset_i_5_n_0));
  LUT5 #(
    .INIT(32'h00000001)) 
    cable_pull_reset_i_6
       (.I0(cable_pull_watchdog_reg[4]),
        .I1(cable_pull_watchdog_reg[3]),
        .I2(cable_pull_watchdog_reg[0]),
        .I3(cable_pull_watchdog_reg[1]),
        .I4(cable_pull_watchdog_reg[2]),
        .O(cable_pull_reset_i_6_n_0));
  FDRE #(
    .INIT(1'b0)) 
    cable_pull_reset_reg
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(cable_pull_reset_i_2_n_0),
        .Q(cable_pull_reset),
        .R(cable_pull_reset_rising_rxusrclk2));
  FDRE #(
    .INIT(1'b0)) 
    cable_pull_reset_reg_reg_reg
       (.C(refclk_n),
        .CE(1'b1),
        .D(cable_pull_reset_reg__0),
        .Q(cable_pull_reset_reg_reg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    cable_pull_reset_rising_reg__0
       (.C(refclk_n),
        .CE(1'b1),
        .D(cable_pull_reset_sync_i_n_1),
        .Q(cable_pull_reset_rising),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    cable_pull_reset_rising_reg_reg
       (.C(refclk_n),
        .CE(1'b1),
        .D(cable_pull_reset_rising),
        .Q(cable_pull_reset_rising_reg),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_14 cable_pull_reset_rising_rxusrclk2_sync_i
       (.AS(cable_pull_reset_rising),
        .CLK(CLK),
        .Q(cable_pull_watchdog_event),
        .SR(cable_pull_reset_rising_rxusrclk2),
        .cable_pull_reset(cable_pull_reset),
        .\cable_pull_watchdog_reg[0] (cable_pull_reset_rising_rxusrclk2_sync_i_n_1),
        .cable_unpull_enable_reg(cable_is_pulled),
        .gt0_rxresetdone_i_reg_rxusrclk2(gt0_rxresetdone_i_reg_rxusrclk2));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_15 cable_pull_reset_sync_i
       (.cable_pull_reset(cable_pull_reset),
        .cable_pull_reset_reg(cable_pull_reset_reg__0),
        .cable_pull_reset_reg_reg(cable_pull_reset_reg_reg),
        .cable_pull_reset_rising_reg__0(cable_pull_reset_sync_i_n_1),
        .refclk_n(refclk_n));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[0]_i_10 
       (.I0(cable_pull_watchdog_reg[0]),
        .O(\cable_pull_watchdog[0]_i_10_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[0]_i_3 
       (.I0(cable_pull_watchdog_reg[7]),
        .O(\cable_pull_watchdog[0]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[0]_i_4 
       (.I0(cable_pull_watchdog_reg[6]),
        .O(\cable_pull_watchdog[0]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[0]_i_5 
       (.I0(cable_pull_watchdog_reg[5]),
        .O(\cable_pull_watchdog[0]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[0]_i_6 
       (.I0(cable_pull_watchdog_reg[4]),
        .O(\cable_pull_watchdog[0]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[0]_i_7 
       (.I0(cable_pull_watchdog_reg[3]),
        .O(\cable_pull_watchdog[0]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[0]_i_8 
       (.I0(cable_pull_watchdog_reg[2]),
        .O(\cable_pull_watchdog[0]_i_8_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[0]_i_9 
       (.I0(cable_pull_watchdog_reg[1]),
        .O(\cable_pull_watchdog[0]_i_9_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[16]_i_2 
       (.I0(cable_pull_watchdog_reg[19]),
        .O(\cable_pull_watchdog[16]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[16]_i_3 
       (.I0(cable_pull_watchdog_reg[18]),
        .O(\cable_pull_watchdog[16]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[16]_i_4 
       (.I0(cable_pull_watchdog_reg[17]),
        .O(\cable_pull_watchdog[16]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[16]_i_5 
       (.I0(cable_pull_watchdog_reg[16]),
        .O(\cable_pull_watchdog[16]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[8]_i_2 
       (.I0(cable_pull_watchdog_reg[15]),
        .O(\cable_pull_watchdog[8]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[8]_i_3 
       (.I0(cable_pull_watchdog_reg[14]),
        .O(\cable_pull_watchdog[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[8]_i_4 
       (.I0(cable_pull_watchdog_reg[13]),
        .O(\cable_pull_watchdog[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[8]_i_5 
       (.I0(cable_pull_watchdog_reg[12]),
        .O(\cable_pull_watchdog[8]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[8]_i_6 
       (.I0(cable_pull_watchdog_reg[11]),
        .O(\cable_pull_watchdog[8]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[8]_i_7 
       (.I0(cable_pull_watchdog_reg[10]),
        .O(\cable_pull_watchdog[8]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[8]_i_8 
       (.I0(cable_pull_watchdog_reg[9]),
        .O(\cable_pull_watchdog[8]_i_8_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[8]_i_9 
       (.I0(cable_pull_watchdog_reg[8]),
        .O(\cable_pull_watchdog[8]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair359" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \cable_pull_watchdog_event[0]_i_1 
       (.I0(cable_pull_watchdog_event[1]),
        .I1(cable_pull_watchdog_event1__2),
        .I2(cable_pull_watchdog_event[0]),
        .O(\cable_pull_watchdog_event[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair359" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \cable_pull_watchdog_event[1]_i_1 
       (.I0(cable_pull_watchdog_event[0]),
        .I1(cable_pull_watchdog_event[1]),
        .I2(cable_pull_watchdog_event1__2),
        .O(\cable_pull_watchdog_event[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0F06E0F0EFF6EFF6)) 
    \cable_pull_watchdog_event[1]_i_2 
       (.I0(rx_sample[0]),
        .I1(rx_sample[2]),
        .I2(rx_sample[3]),
        .I3(rx_sample[1]),
        .I4(rx_sample_prev[3]),
        .I5(\cable_pull_watchdog_event[1]_i_3_n_0 ),
        .O(cable_pull_watchdog_event1__2));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \cable_pull_watchdog_event[1]_i_3 
       (.I0(rx_sample[0]),
        .I1(rx_sample_prev[0]),
        .I2(rx_sample_prev[2]),
        .I3(rx_sample[2]),
        .I4(rx_sample_prev[1]),
        .I5(rx_sample[1]),
        .O(\cable_pull_watchdog_event[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_event_reg[0] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_event[0]_i_1_n_0 ),
        .Q(cable_pull_watchdog_event[0]),
        .R(cable_pull_reset_rising_rxusrclk2));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_event_reg[1] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_event[1]_i_1_n_0 ),
        .Q(cable_pull_watchdog_event[1]),
        .R(cable_pull_reset_rising_rxusrclk2));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[0] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[0]_i_2_n_15 ),
        .Q(cable_pull_watchdog_reg[0]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  CARRY8 \cable_pull_watchdog_reg[0]_i_2 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\cable_pull_watchdog_reg[0]_i_2_n_0 ,\cable_pull_watchdog_reg[0]_i_2_n_1 ,\cable_pull_watchdog_reg[0]_i_2_n_2 ,\cable_pull_watchdog_reg[0]_i_2_n_3 ,\NLW_cable_pull_watchdog_reg[0]_i_2_CO_UNCONNECTED [3],\cable_pull_watchdog_reg[0]_i_2_n_5 ,\cable_pull_watchdog_reg[0]_i_2_n_6 ,\cable_pull_watchdog_reg[0]_i_2_n_7 }),
        .DI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .O({\cable_pull_watchdog_reg[0]_i_2_n_8 ,\cable_pull_watchdog_reg[0]_i_2_n_9 ,\cable_pull_watchdog_reg[0]_i_2_n_10 ,\cable_pull_watchdog_reg[0]_i_2_n_11 ,\cable_pull_watchdog_reg[0]_i_2_n_12 ,\cable_pull_watchdog_reg[0]_i_2_n_13 ,\cable_pull_watchdog_reg[0]_i_2_n_14 ,\cable_pull_watchdog_reg[0]_i_2_n_15 }),
        .S({\cable_pull_watchdog[0]_i_3_n_0 ,\cable_pull_watchdog[0]_i_4_n_0 ,\cable_pull_watchdog[0]_i_5_n_0 ,\cable_pull_watchdog[0]_i_6_n_0 ,\cable_pull_watchdog[0]_i_7_n_0 ,\cable_pull_watchdog[0]_i_8_n_0 ,\cable_pull_watchdog[0]_i_9_n_0 ,\cable_pull_watchdog[0]_i_10_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[10] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[8]_i_1_n_13 ),
        .Q(cable_pull_watchdog_reg[10]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[11] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[8]_i_1_n_12 ),
        .Q(cable_pull_watchdog_reg[11]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[12] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[8]_i_1_n_11 ),
        .Q(cable_pull_watchdog_reg[12]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[13] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[8]_i_1_n_10 ),
        .Q(cable_pull_watchdog_reg[13]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[14] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[8]_i_1_n_9 ),
        .Q(cable_pull_watchdog_reg[14]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[15] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[8]_i_1_n_8 ),
        .Q(cable_pull_watchdog_reg[15]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDSE #(
    .INIT(1'b1)) 
    \cable_pull_watchdog_reg[16] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[16]_i_1_n_15 ),
        .Q(cable_pull_watchdog_reg[16]),
        .S(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  CARRY8 \cable_pull_watchdog_reg[16]_i_1 
       (.CI(\cable_pull_watchdog_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_cable_pull_watchdog_reg[16]_i_1_CO_UNCONNECTED [7:3],\cable_pull_watchdog_reg[16]_i_1_n_5 ,\cable_pull_watchdog_reg[16]_i_1_n_6 ,\cable_pull_watchdog_reg[16]_i_1_n_7 }),
        .DI({\NLW_cable_pull_watchdog_reg[16]_i_1_DI_UNCONNECTED [7:4],1'b0,1'b1,1'b1,1'b1}),
        .O({\NLW_cable_pull_watchdog_reg[16]_i_1_O_UNCONNECTED [7:4],\cable_pull_watchdog_reg[16]_i_1_n_12 ,\cable_pull_watchdog_reg[16]_i_1_n_13 ,\cable_pull_watchdog_reg[16]_i_1_n_14 ,\cable_pull_watchdog_reg[16]_i_1_n_15 }),
        .S({\NLW_cable_pull_watchdog_reg[16]_i_1_S_UNCONNECTED [7:4],\cable_pull_watchdog[16]_i_2_n_0 ,\cable_pull_watchdog[16]_i_3_n_0 ,\cable_pull_watchdog[16]_i_4_n_0 ,\cable_pull_watchdog[16]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[17] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[16]_i_1_n_14 ),
        .Q(cable_pull_watchdog_reg[17]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[18] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[16]_i_1_n_13 ),
        .Q(cable_pull_watchdog_reg[18]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[19] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[16]_i_1_n_12 ),
        .Q(cable_pull_watchdog_reg[19]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[1] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[0]_i_2_n_14 ),
        .Q(cable_pull_watchdog_reg[1]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[2] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[0]_i_2_n_13 ),
        .Q(cable_pull_watchdog_reg[2]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[3] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[0]_i_2_n_12 ),
        .Q(cable_pull_watchdog_reg[3]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[4] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[0]_i_2_n_11 ),
        .Q(cable_pull_watchdog_reg[4]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[5] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[0]_i_2_n_10 ),
        .Q(cable_pull_watchdog_reg[5]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[6] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[0]_i_2_n_9 ),
        .Q(cable_pull_watchdog_reg[6]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[7] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[0]_i_2_n_8 ),
        .Q(cable_pull_watchdog_reg[7]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[8] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[8]_i_1_n_15 ),
        .Q(cable_pull_watchdog_reg[8]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  CARRY8 \cable_pull_watchdog_reg[8]_i_1 
       (.CI(\cable_pull_watchdog_reg[0]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\cable_pull_watchdog_reg[8]_i_1_n_0 ,\cable_pull_watchdog_reg[8]_i_1_n_1 ,\cable_pull_watchdog_reg[8]_i_1_n_2 ,\cable_pull_watchdog_reg[8]_i_1_n_3 ,\NLW_cable_pull_watchdog_reg[8]_i_1_CO_UNCONNECTED [3],\cable_pull_watchdog_reg[8]_i_1_n_5 ,\cable_pull_watchdog_reg[8]_i_1_n_6 ,\cable_pull_watchdog_reg[8]_i_1_n_7 }),
        .DI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .O({\cable_pull_watchdog_reg[8]_i_1_n_8 ,\cable_pull_watchdog_reg[8]_i_1_n_9 ,\cable_pull_watchdog_reg[8]_i_1_n_10 ,\cable_pull_watchdog_reg[8]_i_1_n_11 ,\cable_pull_watchdog_reg[8]_i_1_n_12 ,\cable_pull_watchdog_reg[8]_i_1_n_13 ,\cable_pull_watchdog_reg[8]_i_1_n_14 ,\cable_pull_watchdog_reg[8]_i_1_n_15 }),
        .S({\cable_pull_watchdog[8]_i_2_n_0 ,\cable_pull_watchdog[8]_i_3_n_0 ,\cable_pull_watchdog[8]_i_4_n_0 ,\cable_pull_watchdog[8]_i_5_n_0 ,\cable_pull_watchdog[8]_i_6_n_0 ,\cable_pull_watchdog[8]_i_7_n_0 ,\cable_pull_watchdog[8]_i_8_n_0 ,\cable_pull_watchdog[8]_i_9_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[9] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[8]_i_1_n_14 ),
        .Q(cable_pull_watchdog_reg[9]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  LUT5 #(
    .INIT(32'h000000F2)) 
    cable_unpull_enable_i_1
       (.I0(cable_is_pulled),
        .I1(cable_unpull_reset_reg_n_0),
        .I2(cable_pull_reset),
        .I3(pma_resetout_rising_rxusrclk2),
        .I4(areset_rxusrclk2),
        .O(cable_unpull_enable_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    cable_unpull_enable_reg
       (.C(CLK),
        .CE(1'b1),
        .D(cable_unpull_enable_i_1_n_0),
        .Q(cable_is_pulled),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    cable_unpull_reset_reg
       (.C(CLK),
        .CE(1'b1),
        .D(cable_unpull_reset_rising_rxusrclk2_sync_i_n_0),
        .Q(cable_unpull_reset_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    cable_unpull_reset_reg_reg_reg
       (.C(refclk_n),
        .CE(1'b1),
        .D(cable_unpull_reset_reg__0),
        .Q(cable_unpull_reset_reg_reg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    cable_unpull_reset_rising_reg__0
       (.C(refclk_n),
        .CE(1'b1),
        .D(cable_unpull_reset_sync_i_n_1),
        .Q(cable_unpull_reset_rising),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    cable_unpull_reset_rising_reg_reg
       (.C(refclk_n),
        .CE(1'b1),
        .D(cable_unpull_reset_rising),
        .Q(cable_unpull_reset_rising_reg),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_16 cable_unpull_reset_rising_rxusrclk2_sync_i
       (.AS(cable_unpull_reset_rising),
        .CLK(CLK),
        .Q(p_1_in),
        .SR(cable_unpull_reset_rising_rxusrclk2_sync_i_n_2),
        .cable_unpull_enable_reg(cable_is_pulled),
        .cable_unpull_reset_reg(cable_unpull_reset_rising_rxusrclk2_sync_i_n_0),
        .cable_unpull_reset_reg_0(cable_unpull_reset_reg_n_0),
        .\cable_unpull_watchdog_reg[0] (cable_unpull_reset_rising_rxusrclk2_sync_i_n_1),
        .\cable_unpull_watchdog_reg[12] (\cable_unpull_watchdog[0]_i_4_n_0 ),
        .gt0_rxresetdone_i_reg_rxusrclk2(gt0_rxresetdone_i_reg_rxusrclk2));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_17 cable_unpull_reset_sync_i
       (.cable_unpull_reset_reg(cable_unpull_reset_reg__0),
        .cable_unpull_reset_reg_0(cable_unpull_reset_reg_n_0),
        .cable_unpull_reset_reg_reg(cable_unpull_reset_reg_reg),
        .cable_unpull_reset_rising_reg__0(cable_unpull_reset_sync_i_n_1),
        .refclk_n(refclk_n));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[0]_i_10 
       (.I0(cable_unpull_watchdog_reg[2]),
        .O(\cable_unpull_watchdog[0]_i_10_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[0]_i_11 
       (.I0(cable_unpull_watchdog_reg[1]),
        .O(\cable_unpull_watchdog[0]_i_11_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[0]_i_12 
       (.I0(cable_unpull_watchdog_reg[0]),
        .O(\cable_unpull_watchdog[0]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \cable_unpull_watchdog[0]_i_13 
       (.I0(cable_unpull_watchdog_reg[12]),
        .I1(cable_unpull_watchdog_reg[10]),
        .I2(cable_unpull_watchdog_reg[11]),
        .I3(cable_unpull_watchdog_reg[14]),
        .I4(cable_unpull_watchdog_reg[13]),
        .O(\cable_unpull_watchdog[0]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \cable_unpull_watchdog[0]_i_14 
       (.I0(cable_unpull_watchdog_reg[18]),
        .I1(cable_unpull_watchdog_reg[19]),
        .I2(cable_unpull_watchdog_reg[15]),
        .I3(cable_unpull_watchdog_reg[16]),
        .I4(cable_unpull_watchdog_reg[17]),
        .O(\cable_unpull_watchdog[0]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \cable_unpull_watchdog[0]_i_15 
       (.I0(cable_unpull_watchdog_reg[9]),
        .I1(cable_unpull_watchdog_reg[8]),
        .I2(cable_unpull_watchdog_reg[5]),
        .I3(cable_unpull_watchdog_reg[6]),
        .I4(cable_unpull_watchdog_reg[7]),
        .O(\cable_unpull_watchdog[0]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \cable_unpull_watchdog[0]_i_16 
       (.I0(cable_unpull_watchdog_reg[4]),
        .I1(cable_unpull_watchdog_reg[3]),
        .I2(cable_unpull_watchdog_reg[0]),
        .I3(cable_unpull_watchdog_reg[1]),
        .I4(cable_unpull_watchdog_reg[2]),
        .O(\cable_unpull_watchdog[0]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \cable_unpull_watchdog[0]_i_2 
       (.I0(cable_unpull_reset_reg_n_0),
        .I1(cable_is_pulled),
        .I2(gt0_rxresetdone_i_reg_rxusrclk2),
        .O(cable_unpull_reset1));
  LUT4 #(
    .INIT(16'h4000)) 
    \cable_unpull_watchdog[0]_i_4 
       (.I0(\cable_unpull_watchdog[0]_i_13_n_0 ),
        .I1(\cable_unpull_watchdog[0]_i_14_n_0 ),
        .I2(\cable_unpull_watchdog[0]_i_15_n_0 ),
        .I3(\cable_unpull_watchdog[0]_i_16_n_0 ),
        .O(\cable_unpull_watchdog[0]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[0]_i_5 
       (.I0(cable_unpull_watchdog_reg[7]),
        .O(\cable_unpull_watchdog[0]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[0]_i_6 
       (.I0(cable_unpull_watchdog_reg[6]),
        .O(\cable_unpull_watchdog[0]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[0]_i_7 
       (.I0(cable_unpull_watchdog_reg[5]),
        .O(\cable_unpull_watchdog[0]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[0]_i_8 
       (.I0(cable_unpull_watchdog_reg[4]),
        .O(\cable_unpull_watchdog[0]_i_8_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[0]_i_9 
       (.I0(cable_unpull_watchdog_reg[3]),
        .O(\cable_unpull_watchdog[0]_i_9_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[16]_i_2 
       (.I0(cable_unpull_watchdog_reg[19]),
        .O(\cable_unpull_watchdog[16]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[16]_i_3 
       (.I0(cable_unpull_watchdog_reg[18]),
        .O(\cable_unpull_watchdog[16]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[16]_i_4 
       (.I0(cable_unpull_watchdog_reg[17]),
        .O(\cable_unpull_watchdog[16]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[16]_i_5 
       (.I0(cable_unpull_watchdog_reg[16]),
        .O(\cable_unpull_watchdog[16]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[8]_i_2 
       (.I0(cable_unpull_watchdog_reg[15]),
        .O(\cable_unpull_watchdog[8]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[8]_i_3 
       (.I0(cable_unpull_watchdog_reg[14]),
        .O(\cable_unpull_watchdog[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[8]_i_4 
       (.I0(cable_unpull_watchdog_reg[13]),
        .O(\cable_unpull_watchdog[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[8]_i_5 
       (.I0(cable_unpull_watchdog_reg[12]),
        .O(\cable_unpull_watchdog[8]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[8]_i_6 
       (.I0(cable_unpull_watchdog_reg[11]),
        .O(\cable_unpull_watchdog[8]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[8]_i_7 
       (.I0(cable_unpull_watchdog_reg[10]),
        .O(\cable_unpull_watchdog[8]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[8]_i_8 
       (.I0(cable_unpull_watchdog_reg[9]),
        .O(\cable_unpull_watchdog[8]_i_8_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[8]_i_9 
       (.I0(cable_unpull_watchdog_reg[8]),
        .O(\cable_unpull_watchdog[8]_i_9_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog_event[0]_i_1 
       (.I0(\cable_unpull_watchdog_event_reg_n_0_[0] ),
        .O(p_0_in[0]));
  LUT4 #(
    .INIT(16'h0800)) 
    \cable_unpull_watchdog_event[10]_i_2 
       (.I0(gt0_rxresetdone_i_reg_rxusrclk2),
        .I1(cable_is_pulled),
        .I2(cable_unpull_reset_reg_n_0),
        .I3(cable_pull_watchdog_event1__2),
        .O(cable_unpull_watchdog_event));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \cable_unpull_watchdog_event[10]_i_3 
       (.I0(\cable_unpull_watchdog_event_reg_n_0_[8] ),
        .I1(\cable_unpull_watchdog_event_reg_n_0_[6] ),
        .I2(\cable_unpull_watchdog_event[10]_i_4_n_0 ),
        .I3(\cable_unpull_watchdog_event_reg_n_0_[7] ),
        .I4(\cable_unpull_watchdog_event_reg_n_0_[9] ),
        .I5(p_1_in),
        .O(p_0_in[10]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \cable_unpull_watchdog_event[10]_i_4 
       (.I0(\cable_unpull_watchdog_event_reg_n_0_[5] ),
        .I1(\cable_unpull_watchdog_event_reg_n_0_[3] ),
        .I2(\cable_unpull_watchdog_event_reg_n_0_[1] ),
        .I3(\cable_unpull_watchdog_event_reg_n_0_[0] ),
        .I4(\cable_unpull_watchdog_event_reg_n_0_[2] ),
        .I5(\cable_unpull_watchdog_event_reg_n_0_[4] ),
        .O(\cable_unpull_watchdog_event[10]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair358" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \cable_unpull_watchdog_event[1]_i_1 
       (.I0(\cable_unpull_watchdog_event_reg_n_0_[0] ),
        .I1(\cable_unpull_watchdog_event_reg_n_0_[1] ),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair358" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \cable_unpull_watchdog_event[2]_i_1 
       (.I0(\cable_unpull_watchdog_event_reg_n_0_[0] ),
        .I1(\cable_unpull_watchdog_event_reg_n_0_[1] ),
        .I2(\cable_unpull_watchdog_event_reg_n_0_[2] ),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair356" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \cable_unpull_watchdog_event[3]_i_1 
       (.I0(\cable_unpull_watchdog_event_reg_n_0_[1] ),
        .I1(\cable_unpull_watchdog_event_reg_n_0_[0] ),
        .I2(\cable_unpull_watchdog_event_reg_n_0_[2] ),
        .I3(\cable_unpull_watchdog_event_reg_n_0_[3] ),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair356" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \cable_unpull_watchdog_event[4]_i_1 
       (.I0(\cable_unpull_watchdog_event_reg_n_0_[2] ),
        .I1(\cable_unpull_watchdog_event_reg_n_0_[0] ),
        .I2(\cable_unpull_watchdog_event_reg_n_0_[1] ),
        .I3(\cable_unpull_watchdog_event_reg_n_0_[3] ),
        .I4(\cable_unpull_watchdog_event_reg_n_0_[4] ),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \cable_unpull_watchdog_event[5]_i_1 
       (.I0(\cable_unpull_watchdog_event_reg_n_0_[3] ),
        .I1(\cable_unpull_watchdog_event_reg_n_0_[1] ),
        .I2(\cable_unpull_watchdog_event_reg_n_0_[0] ),
        .I3(\cable_unpull_watchdog_event_reg_n_0_[2] ),
        .I4(\cable_unpull_watchdog_event_reg_n_0_[4] ),
        .I5(\cable_unpull_watchdog_event_reg_n_0_[5] ),
        .O(p_0_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair360" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \cable_unpull_watchdog_event[6]_i_1 
       (.I0(\cable_unpull_watchdog_event[10]_i_4_n_0 ),
        .I1(\cable_unpull_watchdog_event_reg_n_0_[6] ),
        .O(p_0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair360" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \cable_unpull_watchdog_event[7]_i_1 
       (.I0(\cable_unpull_watchdog_event[10]_i_4_n_0 ),
        .I1(\cable_unpull_watchdog_event_reg_n_0_[6] ),
        .I2(\cable_unpull_watchdog_event_reg_n_0_[7] ),
        .O(p_0_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair355" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \cable_unpull_watchdog_event[8]_i_1 
       (.I0(\cable_unpull_watchdog_event_reg_n_0_[6] ),
        .I1(\cable_unpull_watchdog_event[10]_i_4_n_0 ),
        .I2(\cable_unpull_watchdog_event_reg_n_0_[7] ),
        .I3(\cable_unpull_watchdog_event_reg_n_0_[8] ),
        .O(p_0_in[8]));
  (* SOFT_HLUTNM = "soft_lutpair355" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \cable_unpull_watchdog_event[9]_i_1 
       (.I0(\cable_unpull_watchdog_event_reg_n_0_[7] ),
        .I1(\cable_unpull_watchdog_event[10]_i_4_n_0 ),
        .I2(\cable_unpull_watchdog_event_reg_n_0_[6] ),
        .I3(\cable_unpull_watchdog_event_reg_n_0_[8] ),
        .I4(\cable_unpull_watchdog_event_reg_n_0_[9] ),
        .O(p_0_in[9]));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_event_reg[0] 
       (.C(CLK),
        .CE(cable_unpull_watchdog_event),
        .D(p_0_in[0]),
        .Q(\cable_unpull_watchdog_event_reg_n_0_[0] ),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_event_reg[10] 
       (.C(CLK),
        .CE(cable_unpull_watchdog_event),
        .D(p_0_in[10]),
        .Q(p_1_in),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_event_reg[1] 
       (.C(CLK),
        .CE(cable_unpull_watchdog_event),
        .D(p_0_in[1]),
        .Q(\cable_unpull_watchdog_event_reg_n_0_[1] ),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_event_reg[2] 
       (.C(CLK),
        .CE(cable_unpull_watchdog_event),
        .D(p_0_in[2]),
        .Q(\cable_unpull_watchdog_event_reg_n_0_[2] ),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_event_reg[3] 
       (.C(CLK),
        .CE(cable_unpull_watchdog_event),
        .D(p_0_in[3]),
        .Q(\cable_unpull_watchdog_event_reg_n_0_[3] ),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_event_reg[4] 
       (.C(CLK),
        .CE(cable_unpull_watchdog_event),
        .D(p_0_in[4]),
        .Q(\cable_unpull_watchdog_event_reg_n_0_[4] ),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_event_reg[5] 
       (.C(CLK),
        .CE(cable_unpull_watchdog_event),
        .D(p_0_in[5]),
        .Q(\cable_unpull_watchdog_event_reg_n_0_[5] ),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_event_reg[6] 
       (.C(CLK),
        .CE(cable_unpull_watchdog_event),
        .D(p_0_in[6]),
        .Q(\cable_unpull_watchdog_event_reg_n_0_[6] ),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_event_reg[7] 
       (.C(CLK),
        .CE(cable_unpull_watchdog_event),
        .D(p_0_in[7]),
        .Q(\cable_unpull_watchdog_event_reg_n_0_[7] ),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_event_reg[8] 
       (.C(CLK),
        .CE(cable_unpull_watchdog_event),
        .D(p_0_in[8]),
        .Q(\cable_unpull_watchdog_event_reg_n_0_[8] ),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_event_reg[9] 
       (.C(CLK),
        .CE(cable_unpull_watchdog_event),
        .D(p_0_in[9]),
        .Q(\cable_unpull_watchdog_event_reg_n_0_[9] ),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[0] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[0]_i_3_n_15 ),
        .Q(cable_unpull_watchdog_reg[0]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  CARRY8 \cable_unpull_watchdog_reg[0]_i_3 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\cable_unpull_watchdog_reg[0]_i_3_n_0 ,\cable_unpull_watchdog_reg[0]_i_3_n_1 ,\cable_unpull_watchdog_reg[0]_i_3_n_2 ,\cable_unpull_watchdog_reg[0]_i_3_n_3 ,\NLW_cable_unpull_watchdog_reg[0]_i_3_CO_UNCONNECTED [3],\cable_unpull_watchdog_reg[0]_i_3_n_5 ,\cable_unpull_watchdog_reg[0]_i_3_n_6 ,\cable_unpull_watchdog_reg[0]_i_3_n_7 }),
        .DI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .O({\cable_unpull_watchdog_reg[0]_i_3_n_8 ,\cable_unpull_watchdog_reg[0]_i_3_n_9 ,\cable_unpull_watchdog_reg[0]_i_3_n_10 ,\cable_unpull_watchdog_reg[0]_i_3_n_11 ,\cable_unpull_watchdog_reg[0]_i_3_n_12 ,\cable_unpull_watchdog_reg[0]_i_3_n_13 ,\cable_unpull_watchdog_reg[0]_i_3_n_14 ,\cable_unpull_watchdog_reg[0]_i_3_n_15 }),
        .S({\cable_unpull_watchdog[0]_i_5_n_0 ,\cable_unpull_watchdog[0]_i_6_n_0 ,\cable_unpull_watchdog[0]_i_7_n_0 ,\cable_unpull_watchdog[0]_i_8_n_0 ,\cable_unpull_watchdog[0]_i_9_n_0 ,\cable_unpull_watchdog[0]_i_10_n_0 ,\cable_unpull_watchdog[0]_i_11_n_0 ,\cable_unpull_watchdog[0]_i_12_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[10] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[8]_i_1_n_13 ),
        .Q(cable_unpull_watchdog_reg[10]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[11] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[8]_i_1_n_12 ),
        .Q(cable_unpull_watchdog_reg[11]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[12] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[8]_i_1_n_11 ),
        .Q(cable_unpull_watchdog_reg[12]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[13] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[8]_i_1_n_10 ),
        .Q(cable_unpull_watchdog_reg[13]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[14] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[8]_i_1_n_9 ),
        .Q(cable_unpull_watchdog_reg[14]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[15] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[8]_i_1_n_8 ),
        .Q(cable_unpull_watchdog_reg[15]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDSE #(
    .INIT(1'b1)) 
    \cable_unpull_watchdog_reg[16] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[16]_i_1_n_15 ),
        .Q(cable_unpull_watchdog_reg[16]),
        .S(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  CARRY8 \cable_unpull_watchdog_reg[16]_i_1 
       (.CI(\cable_unpull_watchdog_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_cable_unpull_watchdog_reg[16]_i_1_CO_UNCONNECTED [7:3],\cable_unpull_watchdog_reg[16]_i_1_n_5 ,\cable_unpull_watchdog_reg[16]_i_1_n_6 ,\cable_unpull_watchdog_reg[16]_i_1_n_7 }),
        .DI({\NLW_cable_unpull_watchdog_reg[16]_i_1_DI_UNCONNECTED [7:4],1'b0,1'b1,1'b1,1'b1}),
        .O({\NLW_cable_unpull_watchdog_reg[16]_i_1_O_UNCONNECTED [7:4],\cable_unpull_watchdog_reg[16]_i_1_n_12 ,\cable_unpull_watchdog_reg[16]_i_1_n_13 ,\cable_unpull_watchdog_reg[16]_i_1_n_14 ,\cable_unpull_watchdog_reg[16]_i_1_n_15 }),
        .S({\NLW_cable_unpull_watchdog_reg[16]_i_1_S_UNCONNECTED [7:4],\cable_unpull_watchdog[16]_i_2_n_0 ,\cable_unpull_watchdog[16]_i_3_n_0 ,\cable_unpull_watchdog[16]_i_4_n_0 ,\cable_unpull_watchdog[16]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[17] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[16]_i_1_n_14 ),
        .Q(cable_unpull_watchdog_reg[17]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[18] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[16]_i_1_n_13 ),
        .Q(cable_unpull_watchdog_reg[18]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[19] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[16]_i_1_n_12 ),
        .Q(cable_unpull_watchdog_reg[19]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[1] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[0]_i_3_n_14 ),
        .Q(cable_unpull_watchdog_reg[1]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[2] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[0]_i_3_n_13 ),
        .Q(cable_unpull_watchdog_reg[2]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[3] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[0]_i_3_n_12 ),
        .Q(cable_unpull_watchdog_reg[3]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[4] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[0]_i_3_n_11 ),
        .Q(cable_unpull_watchdog_reg[4]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[5] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[0]_i_3_n_10 ),
        .Q(cable_unpull_watchdog_reg[5]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[6] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[0]_i_3_n_9 ),
        .Q(cable_unpull_watchdog_reg[6]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[7] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[0]_i_3_n_8 ),
        .Q(cable_unpull_watchdog_reg[7]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[8] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[8]_i_1_n_15 ),
        .Q(cable_unpull_watchdog_reg[8]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  CARRY8 \cable_unpull_watchdog_reg[8]_i_1 
       (.CI(\cable_unpull_watchdog_reg[0]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\cable_unpull_watchdog_reg[8]_i_1_n_0 ,\cable_unpull_watchdog_reg[8]_i_1_n_1 ,\cable_unpull_watchdog_reg[8]_i_1_n_2 ,\cable_unpull_watchdog_reg[8]_i_1_n_3 ,\NLW_cable_unpull_watchdog_reg[8]_i_1_CO_UNCONNECTED [3],\cable_unpull_watchdog_reg[8]_i_1_n_5 ,\cable_unpull_watchdog_reg[8]_i_1_n_6 ,\cable_unpull_watchdog_reg[8]_i_1_n_7 }),
        .DI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .O({\cable_unpull_watchdog_reg[8]_i_1_n_8 ,\cable_unpull_watchdog_reg[8]_i_1_n_9 ,\cable_unpull_watchdog_reg[8]_i_1_n_10 ,\cable_unpull_watchdog_reg[8]_i_1_n_11 ,\cable_unpull_watchdog_reg[8]_i_1_n_12 ,\cable_unpull_watchdog_reg[8]_i_1_n_13 ,\cable_unpull_watchdog_reg[8]_i_1_n_14 ,\cable_unpull_watchdog_reg[8]_i_1_n_15 }),
        .S({\cable_unpull_watchdog[8]_i_2_n_0 ,\cable_unpull_watchdog[8]_i_3_n_0 ,\cable_unpull_watchdog[8]_i_4_n_0 ,\cable_unpull_watchdog[8]_i_5_n_0 ,\cable_unpull_watchdog[8]_i_6_n_0 ,\cable_unpull_watchdog[8]_i_7_n_0 ,\cable_unpull_watchdog[8]_i_8_n_0 ,\cable_unpull_watchdog[8]_i_9_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[9] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[8]_i_1_n_14 ),
        .Q(cable_unpull_watchdog_reg[9]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFE0000)) 
    gearboxslipignore_i_1
       (.I0(gearboxslipignorecount_reg__0[3]),
        .I1(gearboxslipignorecount_reg__0[2]),
        .I2(gearboxslipignorecount_reg__0[0]),
        .I3(gearboxslipignorecount_reg__0[1]),
        .I4(gearboxslipignore),
        .I5(SS),
        .O(gearboxslipignore_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gearboxslipignore_reg
       (.C(CLK),
        .CE(1'b1),
        .D(gearboxslipignore_i_1_n_0),
        .Q(gearboxslipignore),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair361" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gearboxslipignorecount[0]_i_1 
       (.I0(gearboxslipignorecount_reg__0[0]),
        .O(gearboxslipignorecount0));
  (* SOFT_HLUTNM = "soft_lutpair361" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \gearboxslipignorecount[1]_i_1 
       (.I0(gearboxslipignorecount_reg__0[0]),
        .I1(gearboxslipignorecount_reg__0[1]),
        .O(\gearboxslipignorecount[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair357" *) 
  LUT3 #(
    .INIT(8'hE1)) 
    \gearboxslipignorecount[2]_i_1 
       (.I0(gearboxslipignorecount_reg__0[1]),
        .I1(gearboxslipignorecount_reg__0[0]),
        .I2(gearboxslipignorecount_reg__0[2]),
        .O(\gearboxslipignorecount[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gearboxslipignorecount[3]_i_1 
       (.I0(gearboxslipignorecount_reg__0[1]),
        .I1(gearboxslipignorecount_reg__0[0]),
        .I2(gearboxslipignorecount_reg__0[2]),
        .I3(gearboxslipignorecount_reg__0[3]),
        .O(\gearboxslipignorecount[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair357" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gearboxslipignorecount[3]_i_2 
       (.I0(gearboxslipignorecount_reg__0[2]),
        .I1(gearboxslipignorecount_reg__0[0]),
        .I2(gearboxslipignorecount_reg__0[1]),
        .I3(gearboxslipignorecount_reg__0[3]),
        .O(\gearboxslipignorecount[3]_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gearboxslipignorecount_reg[0] 
       (.C(CLK),
        .CE(\gearboxslipignorecount[3]_i_1_n_0 ),
        .D(gearboxslipignorecount0),
        .Q(gearboxslipignorecount_reg__0[0]),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    \gearboxslipignorecount_reg[1] 
       (.C(CLK),
        .CE(\gearboxslipignorecount[3]_i_1_n_0 ),
        .D(\gearboxslipignorecount[1]_i_1_n_0 ),
        .Q(gearboxslipignorecount_reg__0[1]),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    \gearboxslipignorecount_reg[2] 
       (.C(CLK),
        .CE(\gearboxslipignorecount[3]_i_1_n_0 ),
        .D(\gearboxslipignorecount[2]_i_1_n_0 ),
        .Q(gearboxslipignorecount_reg__0[2]),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    \gearboxslipignorecount_reg[3] 
       (.C(CLK),
        .CE(\gearboxslipignorecount[3]_i_1_n_0 ),
        .D(\gearboxslipignorecount[3]_i_2_n_0 ),
        .Q(gearboxslipignorecount_reg__0[3]),
        .S(SS));
  LUT1 #(
    .INIT(2'h1)) 
    \rx_sample[3]_i_1 
       (.I0(gearboxslipignore),
        .O(\rx_sample[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_sample_prev_reg[0] 
       (.C(CLK),
        .CE(\rx_sample[3]_i_1_n_0 ),
        .D(rx_sample[0]),
        .Q(rx_sample_prev[0]),
        .R(cable_pull_reset_rising_rxusrclk2));
  FDRE #(
    .INIT(1'b0)) 
    \rx_sample_prev_reg[1] 
       (.C(CLK),
        .CE(\rx_sample[3]_i_1_n_0 ),
        .D(rx_sample[1]),
        .Q(rx_sample_prev[1]),
        .R(cable_pull_reset_rising_rxusrclk2));
  FDRE #(
    .INIT(1'b0)) 
    \rx_sample_prev_reg[2] 
       (.C(CLK),
        .CE(\rx_sample[3]_i_1_n_0 ),
        .D(rx_sample[2]),
        .Q(rx_sample_prev[2]),
        .R(cable_pull_reset_rising_rxusrclk2));
  FDRE #(
    .INIT(1'b0)) 
    \rx_sample_prev_reg[3] 
       (.C(CLK),
        .CE(\rx_sample[3]_i_1_n_0 ),
        .D(rx_sample[3]),
        .Q(rx_sample_prev[3]),
        .R(cable_pull_reset_rising_rxusrclk2));
  FDRE #(
    .INIT(1'b0)) 
    \rx_sample_reg[0] 
       (.C(CLK),
        .CE(\rx_sample[3]_i_1_n_0 ),
        .D(D[0]),
        .Q(rx_sample[0]),
        .R(cable_pull_reset_rising_rxusrclk2));
  FDRE #(
    .INIT(1'b0)) 
    \rx_sample_reg[1] 
       (.C(CLK),
        .CE(\rx_sample[3]_i_1_n_0 ),
        .D(D[1]),
        .Q(rx_sample[1]),
        .R(cable_pull_reset_rising_rxusrclk2));
  FDRE #(
    .INIT(1'b0)) 
    \rx_sample_reg[2] 
       (.C(CLK),
        .CE(\rx_sample[3]_i_1_n_0 ),
        .D(D[2]),
        .Q(rx_sample[2]),
        .R(cable_pull_reset_rising_rxusrclk2));
  FDRE #(
    .INIT(1'b0)) 
    \rx_sample_reg[3] 
       (.C(CLK),
        .CE(\rx_sample[3]_i_1_n_0 ),
        .D(D[3]),
        .Q(rx_sample[3]),
        .R(cable_pull_reset_rising_rxusrclk2));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer
   (\master_watchdog_reg[28] ,
    refclk_n,
    core_in_testmode_coreclk,
    rx_resetdone_int,
    tx_resetdone_int,
    core_status);
  output \master_watchdog_reg[28] ;
  input refclk_n;
  input core_in_testmode_coreclk;
  input rx_resetdone_int;
  input tx_resetdone_int;
  input [0:0]core_status;

  wire block_lock_coreclk;
  wire core_in_testmode_coreclk;
  wire [0:0]core_status;
  wire \master_watchdog_reg[28] ;
  wire refclk_n;
  wire rx_resetdone_int;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;
  wire tx_resetdone_int;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(block_lock_coreclk),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hEFFF)) 
    \master_watchdog[0]_i_1 
       (.I0(block_lock_coreclk),
        .I1(core_in_testmode_coreclk),
        .I2(rx_resetdone_int),
        .I3(tx_resetdone_int),
        .O(\master_watchdog_reg[28] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(core_status),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_11
   (reset_tx_bufg_gt_sig,
    gt0_gttxreset_c,
    refclk_n,
    AS,
    reset_tx_bufg_gt_reg,
    D);
  output reset_tx_bufg_gt_sig;
  output gt0_gttxreset_c;
  input refclk_n;
  input [0:0]AS;
  input reset_tx_bufg_gt_reg;
  input [0:0]D;

  wire [0:0]AS;
  wire [0:0]D;
  wire gt0_gttxreset_c;
  wire refclk_n;
  wire reset_tx_bufg_gt_reg;
  wire reset_tx_bufg_gt_sig;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(reset_tx_bufg_gt_sig),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hBA)) 
    gt0_gttxreset_i_i_1
       (.I0(AS),
        .I1(reset_tx_bufg_gt_sig),
        .I2(reset_tx_bufg_gt_reg),
        .O(gt0_gttxreset_c));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(D),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_12
   (signal_detect_coreclk,
    refclk_n,
    signal_detect);
  output signal_detect_coreclk;
  input refclk_n;
  input signal_detect;

  wire refclk_n;
  wire signal_detect;
  wire signal_detect_coreclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(signal_detect_coreclk),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(signal_detect),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_13
   (signal_detect_comb_reg,
    CLK,
    cable_is_pulled,
    signal_detect);
  output signal_detect_comb_reg;
  input CLK;
  input cable_is_pulled;
  input signal_detect;

  wire CLK;
  wire cable_is_pulled;
  wire signal_detect;
  wire signal_detect_comb_reg;
  wire signal_detect_rxusrclk2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(signal_detect_rxusrclk2),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    signal_detect_comb_i_1
       (.I0(signal_detect_rxusrclk2),
        .I1(cable_is_pulled),
        .O(signal_detect_comb_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(signal_detect),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_15
   (cable_pull_reset_reg,
    cable_pull_reset_rising_reg__0,
    refclk_n,
    cable_pull_reset_reg_reg,
    cable_pull_reset);
  output cable_pull_reset_reg;
  output cable_pull_reset_rising_reg__0;
  input refclk_n;
  input cable_pull_reset_reg_reg;
  input cable_pull_reset;

  wire cable_pull_reset;
  wire cable_pull_reset_reg;
  wire cable_pull_reset_reg_reg;
  wire cable_pull_reset_rising_reg__0;
  wire refclk_n;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  LUT2 #(
    .INIT(4'h2)) 
    cable_pull_reset_rising_i_1
       (.I0(cable_pull_reset_reg),
        .I1(cable_pull_reset_reg_reg),
        .O(cable_pull_reset_rising_reg__0));
  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(cable_pull_reset_reg),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(cable_pull_reset),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_17
   (cable_unpull_reset_reg,
    cable_unpull_reset_rising_reg__0,
    refclk_n,
    cable_unpull_reset_reg_reg,
    cable_unpull_reset_reg_0);
  output cable_unpull_reset_reg;
  output cable_unpull_reset_rising_reg__0;
  input refclk_n;
  input cable_unpull_reset_reg_reg;
  input cable_unpull_reset_reg_0;

  wire cable_unpull_reset_reg;
  wire cable_unpull_reset_reg_0;
  wire cable_unpull_reset_reg_reg;
  wire cable_unpull_reset_rising_reg__0;
  wire refclk_n;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  LUT2 #(
    .INIT(4'h2)) 
    cable_unpull_reset_rising_i_1
       (.I0(cable_unpull_reset_reg),
        .I1(cable_unpull_reset_reg_reg),
        .O(cable_unpull_reset_rising_reg__0));
  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(cable_unpull_reset_reg),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(cable_unpull_reset_reg_0),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_27
   (rx_resetdone_dclk,
    dclk,
    rx_resetdone_int);
  output rx_resetdone_dclk;
  input dclk;
  input rx_resetdone_int;

  wire dclk;
  wire rx_resetdone_dclk;
  wire rx_resetdone_int;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(rx_resetdone_dclk),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .D(rx_resetdone_int),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_28
   (signal_detect_coreclk,
    refclk_n,
    signal_detect);
  output signal_detect_coreclk;
  input refclk_n;
  input signal_detect;

  wire refclk_n;
  wire signal_detect;
  wire signal_detect_coreclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(signal_detect_coreclk),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(signal_detect),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_29
   (signal_detect_dclk,
    dclk,
    signal_detect);
  output signal_detect_dclk;
  input dclk;
  input signal_detect;

  wire dclk;
  wire signal_detect;
  wire signal_detect_dclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(signal_detect_dclk),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .D(signal_detect),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_3
   (core_in_testmode_coreclk,
    refclk_n,
    D);
  output core_in_testmode_coreclk;
  input refclk_n;
  input [0:0]D;

  wire [0:0]D;
  wire core_in_testmode_coreclk;
  wire refclk_n;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(core_in_testmode_coreclk),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(D),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_4
   (gt0_rxresetdone_i_reg_rxusrclk2,
    gt0_rxbufreset_i0,
    CLK,
    rxbufstatus_out,
    D);
  output gt0_rxresetdone_i_reg_rxusrclk2;
  output gt0_rxbufreset_i0;
  input CLK;
  input [0:0]rxbufstatus_out;
  input [0:0]D;

  wire CLK;
  wire [0:0]D;
  wire gt0_rxbufreset_i0;
  wire gt0_rxresetdone_i_reg_rxusrclk2;
  wire [0:0]rxbufstatus_out;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(gt0_rxresetdone_i_reg_rxusrclk2),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    gt0_rxbufreset_i_i_1
       (.I0(rxbufstatus_out),
        .I1(gt0_rxresetdone_i_reg_rxusrclk2),
        .O(gt0_rxbufreset_i0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(D),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_5
   (rx_resetdone_int,
    refclk_n,
    D);
  output rx_resetdone_int;
  input refclk_n;
  input [0:0]D;

  wire [0:0]D;
  wire refclk_n;
  wire rx_resetdone_int;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(rx_resetdone_int),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(D),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_6
   (resetdone,
    gtrxreset_out_reg,
    gt0_txresetdone_reg,
    D);
  output resetdone;
  input gtrxreset_out_reg;
  input gt0_txresetdone_reg;
  input [0:0]D;

  wire [0:0]D;
  wire gt0_rxresetdone_reg_txusrclk2;
  wire gt0_txresetdone_reg;
  wire gtrxreset_out_reg;
  wire resetdone;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  LUT2 #(
    .INIT(4'h8)) 
    bd_01e2_xpcs_0_core_i_1
       (.I0(gt0_txresetdone_reg),
        .I1(gt0_rxresetdone_reg_txusrclk2),
        .O(resetdone));
  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(gt0_rxresetdone_reg_txusrclk2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(D),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_7
   (tx_resetdone_int,
    resetdone_out,
    refclk_n,
    rx_resetdone_int,
    D);
  output tx_resetdone_int;
  output resetdone_out;
  input refclk_n;
  input rx_resetdone_int;
  input [0:0]D;

  wire [0:0]D;
  wire refclk_n;
  wire resetdone_out;
  wire rx_resetdone_int;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;
  wire tx_resetdone_int;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(tx_resetdone_int),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    resetdone_out_INST_0
       (.I0(tx_resetdone_int),
        .I1(rx_resetdone_int),
        .O(resetdone_out));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(D),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst
   (SR,
    refclk_n,
    reset);
  output [0:0]SR;
  input refclk_n;
  input reset;

  wire [0:0]SR;
  wire refclk_n;
  wire reset;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(SR),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(1'b0),
        .PRE(reset),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(reset),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(reset),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(reset),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(reset),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_0
   (areset_datapathclk_out,
    CLK,
    reset);
  output areset_datapathclk_out;
  input CLK;
  input reset;

  wire CLK;
  wire areset_datapathclk_out;
  wire reset;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(areset_datapathclk_out),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(1'b0),
        .PRE(reset),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(reset),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(reset),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(reset),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(reset),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_1
   (gttxreset_txusrclk2,
    CLK,
    Q);
  output gttxreset_txusrclk2;
  input CLK;
  input [0:0]Q;

  wire CLK;
  wire [0:0]Q;
  wire gttxreset_txusrclk2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(gttxreset_txusrclk2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(1'b0),
        .PRE(Q),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(Q),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(Q),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(Q),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(Q),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_10
   (pma_resetout_coreclk_sync,
    pma_resetout_rising_reg,
    refclk_n,
    pma_resetout_reg,
    AS);
  output pma_resetout_coreclk_sync;
  output pma_resetout_rising_reg;
  input refclk_n;
  input pma_resetout_reg;
  input [0:0]AS;

  wire [0:0]AS;
  wire pma_resetout_coreclk_sync;
  wire pma_resetout_reg;
  wire pma_resetout_rising_reg;
  wire refclk_n;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(pma_resetout_coreclk_sync),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    pma_resetout_rising_i_1
       (.I0(pma_resetout_coreclk_sync),
        .I1(pma_resetout_reg),
        .O(pma_resetout_rising_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(AS),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(AS),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(AS),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(AS),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_14
   (SR,
    \cable_pull_watchdog_reg[0] ,
    CLK,
    Q,
    gt0_rxresetdone_i_reg_rxusrclk2,
    cable_unpull_enable_reg,
    cable_pull_reset,
    AS);
  output [0:0]SR;
  output \cable_pull_watchdog_reg[0] ;
  input CLK;
  input [1:0]Q;
  input gt0_rxresetdone_i_reg_rxusrclk2;
  input cable_unpull_enable_reg;
  input cable_pull_reset;
  input [0:0]AS;

  wire [0:0]AS;
  wire CLK;
  wire [1:0]Q;
  wire [0:0]SR;
  wire cable_pull_reset;
  wire \cable_pull_watchdog_reg[0] ;
  wire cable_unpull_enable_reg;
  wire gt0_rxresetdone_i_reg_rxusrclk2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAEAA)) 
    \cable_pull_watchdog[0]_i_1 
       (.I0(SR),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(gt0_rxresetdone_i_reg_rxusrclk2),
        .I4(cable_unpull_enable_reg),
        .I5(cable_pull_reset),
        .O(\cable_pull_watchdog_reg[0] ));
  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(SR),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(AS),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(AS),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(AS),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(AS),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_16
   (cable_unpull_reset_reg,
    \cable_unpull_watchdog_reg[0] ,
    SR,
    CLK,
    cable_unpull_reset_reg_0,
    gt0_rxresetdone_i_reg_rxusrclk2,
    cable_unpull_enable_reg,
    Q,
    \cable_unpull_watchdog_reg[12] ,
    AS);
  output cable_unpull_reset_reg;
  output \cable_unpull_watchdog_reg[0] ;
  output [0:0]SR;
  input CLK;
  input cable_unpull_reset_reg_0;
  input gt0_rxresetdone_i_reg_rxusrclk2;
  input cable_unpull_enable_reg;
  input [0:0]Q;
  input \cable_unpull_watchdog_reg[12] ;
  input [0:0]AS;

  wire [0:0]AS;
  wire CLK;
  wire [0:0]Q;
  wire [0:0]SR;
  wire cable_unpull_enable_reg;
  wire cable_unpull_reset_reg;
  wire cable_unpull_reset_reg_0;
  wire cable_unpull_reset_rising_rxusrclk2;
  wire \cable_unpull_watchdog_reg[0] ;
  wire \cable_unpull_watchdog_reg[12] ;
  wire gt0_rxresetdone_i_reg_rxusrclk2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  LUT5 #(
    .INIT(32'h0000EAAA)) 
    cable_unpull_reset_i_1
       (.I0(cable_unpull_reset_reg_0),
        .I1(gt0_rxresetdone_i_reg_rxusrclk2),
        .I2(cable_unpull_enable_reg),
        .I3(Q),
        .I4(cable_unpull_reset_rising_rxusrclk2),
        .O(cable_unpull_reset_reg));
  LUT6 #(
    .INIT(64'hAAFEAAAAAAAAAAAA)) 
    \cable_unpull_watchdog[0]_i_1 
       (.I0(cable_unpull_reset_rising_rxusrclk2),
        .I1(\cable_unpull_watchdog_reg[12] ),
        .I2(Q),
        .I3(cable_unpull_reset_reg_0),
        .I4(cable_unpull_enable_reg),
        .I5(gt0_rxresetdone_i_reg_rxusrclk2),
        .O(\cable_unpull_watchdog_reg[0] ));
  LUT5 #(
    .INIT(32'hAEAAAAAA)) 
    \cable_unpull_watchdog_event[10]_i_1 
       (.I0(cable_unpull_reset_rising_rxusrclk2),
        .I1(\cable_unpull_watchdog_reg[12] ),
        .I2(cable_unpull_reset_reg_0),
        .I3(cable_unpull_enable_reg),
        .I4(gt0_rxresetdone_i_reg_rxusrclk2),
        .O(SR));
  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(cable_unpull_reset_rising_rxusrclk2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(AS),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(AS),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(AS),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(AS),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_18
   (areset_rxusrclk2,
    gtrxreset_out_reg,
    reset);
  output areset_rxusrclk2;
  input gtrxreset_out_reg;
  input reset;

  wire areset_rxusrclk2;
  wire gtrxreset_out_reg;
  wire reset;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(areset_rxusrclk2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(1'b0),
        .PRE(reset),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(reset),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(reset),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(reset),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(reset),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_19
   (AS,
    \sync1_r_reg[0]_0 ,
    refclk_n,
    rx_resetdone_int,
    signal_detect_coreclk,
    tx_resetdone_int,
    reset);
  output [0:0]AS;
  output [0:0]\sync1_r_reg[0]_0 ;
  input refclk_n;
  input rx_resetdone_int;
  input signal_detect_coreclk;
  input tx_resetdone_int;
  input reset;

  wire [0:0]AS;
  wire coreclk_areset;
  wire refclk_n;
  wire reset;
  wire rx_resetdone_int;
  wire signal_detect_coreclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;
  wire [0:0]\sync1_r_reg[0]_0 ;
  wire tx_resetdone_int;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(coreclk_areset),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair354" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    \sync1_r[4]_i_1 
       (.I0(rx_resetdone_int),
        .I1(coreclk_areset),
        .I2(signal_detect_coreclk),
        .O(AS));
  (* SOFT_HLUTNM = "soft_lutpair354" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \sync1_r[4]_i_1__1 
       (.I0(coreclk_areset),
        .I1(tx_resetdone_int),
        .O(\sync1_r_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(1'b0),
        .PRE(reset),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(reset),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(reset),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(reset),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(reset),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_2
   (areset_txusrclk2,
    gtrxreset_out_reg,
    data_out_reg_0);
  output areset_txusrclk2;
  input gtrxreset_out_reg;
  input data_out_reg_0;

  wire areset_txusrclk2;
  wire data_out_reg_0;
  wire gtrxreset_out_reg;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(areset_txusrclk2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(1'b0),
        .PRE(data_out_reg_0),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(data_out_reg_0),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(data_out_reg_0),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(data_out_reg_0),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(data_out_reg_0),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_20
   (AS,
    refclk_n,
    data_out_reg_0);
  output [0:0]AS;
  input refclk_n;
  input [0:0]data_out_reg_0;

  wire [0:0]AS;
  wire [0:0]data_out_reg_0;
  wire refclk_n;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(AS),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(1'b0),
        .PRE(data_out_reg_0),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(data_out_reg_0),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(data_out_reg_0),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(data_out_reg_0),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(data_out_reg_0),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_21
   (AS,
    refclk_n,
    data_out_reg_0);
  output [0:0]AS;
  input refclk_n;
  input [0:0]data_out_reg_0;

  wire [0:0]AS;
  wire [0:0]data_out_reg_0;
  wire refclk_n;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(AS),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(1'b0),
        .PRE(data_out_reg_0),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(data_out_reg_0),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(data_out_reg_0),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(data_out_reg_0),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(data_out_reg_0),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_22
   (dclk_areset,
    dclk,
    reset);
  output dclk_areset;
  input dclk;
  input reset;

  wire dclk;
  wire dclk_areset;
  wire reset;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(dclk_areset),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(reset),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(reset),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(reset),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(reset),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(reset),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_23
   (dclk_reset,
    dclk,
    AS);
  output dclk_reset;
  input dclk;
  input [0:0]AS;

  wire [0:0]AS;
  wire dclk;
  wire dclk_reset;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(dclk_reset),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(AS),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(AS),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(AS),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(AS),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_24
   (gtrxreset_out_reg,
    gt0_gtrxreset_i_reg);
  input gtrxreset_out_reg;
  input [0:0]gt0_gtrxreset_i_reg;

  wire [0:0]gt0_gtrxreset_i_reg;
  wire gtrxreset_out_reg;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(1'b0),
        .PRE(gt0_gtrxreset_i_reg),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(gt0_gtrxreset_i_reg),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(gt0_gtrxreset_i_reg),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(gt0_gtrxreset_i_reg),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(gt0_gtrxreset_i_reg),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_25
   (pma_resetout_rising_rxusrclk2,
    gtrxreset_out_reg,
    AS);
  output pma_resetout_rising_rxusrclk2;
  input gtrxreset_out_reg;
  input [0:0]AS;

  wire [0:0]AS;
  wire gtrxreset_out_reg;
  wire pma_resetout_rising_rxusrclk2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(pma_resetout_rising_rxusrclk2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(AS),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(AS),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(AS),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(AS),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_26
   (rxreset_rxusrclk2,
    gtrxreset_out_reg,
    AS);
  output rxreset_rxusrclk2;
  input gtrxreset_out_reg;
  input [0:0]AS;

  wire [0:0]AS;
  wire gtrxreset_out_reg;
  wire rxreset_rxusrclk2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(rxreset_rxusrclk2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(AS),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(AS),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(AS),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(AS),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_30
   (reset,
    gtrxreset_out_reg,
    AS);
  output reset;
  input gtrxreset_out_reg;
  input [0:0]AS;

  wire [0:0]AS;
  wire gtrxreset_out_reg;
  wire reset;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(reset),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(AS),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(AS),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(AS),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(AS),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_8
   (refclk_n,
    Q);
  input refclk_n;
  input [0:0]Q;

  wire [0:0]Q;
  wire refclk_n;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(1'b0),
        .PRE(Q),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(Q),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(Q),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(Q),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(Q),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_9
   (pcs_resetout_coreclk_sync,
    pcs_resetout_rising_reg,
    refclk_n,
    pcs_resetout_reg,
    AS);
  output pcs_resetout_coreclk_sync;
  output pcs_resetout_rising_reg;
  input refclk_n;
  input pcs_resetout_reg;
  input [0:0]AS;

  wire [0:0]AS;
  wire pcs_resetout_coreclk_sync;
  wire pcs_resetout_reg;
  wire pcs_resetout_rising_reg;
  wire refclk_n;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(pcs_resetout_coreclk_sync),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    pcs_resetout_rising_i_1
       (.I0(pcs_resetout_coreclk_sync),
        .I1(pcs_resetout_reg),
        .O(pcs_resetout_rising_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(AS),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(AS),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(AS),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(refclk_n),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(AS),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst__parameterized0
   (qplllock_txusrclk2,
    CLK,
    AR);
  output qplllock_txusrclk2;
  input CLK;
  input [0:0]AR;

  wire [0:0]AR;
  wire CLK;
  wire qplllock_txusrclk2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(qplllock_txusrclk2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(AR),
        .D(1'b1),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[0]),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[1]),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[2]),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[3]),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst__parameterized1
   (refclk_n,
    AR);
  input refclk_n;
  input [0:0]AR;

  wire [0:0]AR;
  wire refclk_n;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(refclk_n),
        .CE(1'b1),
        .CLR(AR),
        .D(1'b1),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(refclk_n),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[0]),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(refclk_n),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[1]),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(refclk_n),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[2]),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(refclk_n),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[3]),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst__parameterized2
   (gt0_txresetdone_reg0,
    gtrxreset_out_reg,
    gtwiz_reset_tx_done_out,
    AR);
  output gt0_txresetdone_reg0;
  input gtrxreset_out_reg;
  input [0:0]gtwiz_reset_tx_done_out;
  input [0:0]AR;

  wire [0:0]AR;
  wire gt0_txresetdone_reg0;
  wire gtrxreset_out_reg;
  wire [0:0]gtwiz_reset_tx_done_out;
  wire qplllock_txusrclk2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(qplllock_txusrclk2),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    gt0_txresetdone_reg_i_1
       (.I0(gtwiz_reset_tx_done_out),
        .I1(qplllock_txusrclk2),
        .O(gt0_txresetdone_reg0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .CLR(AR),
        .D(1'b1),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[0]),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[1]),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[2]),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(gtrxreset_out_reg),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[3]),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "bd_01e2_xpcs_0_ff_synchronizer_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst__parameterized3
   (gt0_rxresetdone_reg_reg0,
    CLK,
    gtwiz_reset_rx_done_out,
    AR);
  output gt0_rxresetdone_reg_reg0;
  input CLK;
  input [0:0]gtwiz_reset_rx_done_out;
  input [0:0]AR;

  wire [0:0]AR;
  wire CLK;
  wire gt0_rxresetdone_reg_reg0;
  wire [0:0]gtwiz_reset_rx_done_out;
  wire qplllock_rxusrclk2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(qplllock_rxusrclk2),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    gt0_rxresetdone_reg_i_1
       (.I0(gtwiz_reset_rx_done_out),
        .I1(qplllock_rxusrclk2),
        .O(gt0_rxresetdone_reg_reg0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(AR),
        .D(1'b1),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[0]),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[1]),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[2]),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[3]),
        .Q(sync1_r[4]));
endmodule

(* CHECK_LICENSE_TYPE = "bd_01e2_xpcs_0_gt,bd_01e2_xpcs_0_gt_gtwizard_top,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "bd_01e2_xpcs_0_gt_gtwizard_top,Vivado 2016.4" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_gt
   (gtwiz_userclk_tx_active_in,
    gtwiz_userclk_rx_active_in,
    gtwiz_reset_clk_freerun_in,
    gtwiz_reset_all_in,
    gtwiz_reset_tx_pll_and_datapath_in,
    gtwiz_reset_tx_datapath_in,
    gtwiz_reset_rx_pll_and_datapath_in,
    gtwiz_reset_rx_datapath_in,
    gtwiz_reset_qpll0lock_in,
    gtwiz_reset_rx_cdr_stable_out,
    gtwiz_reset_tx_done_out,
    gtwiz_reset_rx_done_out,
    gtwiz_reset_qpll0reset_out,
    cpllpd_in,
    drpaddr_in,
    drpclk_in,
    drpdi_in,
    drpen_in,
    drpwe_in,
    eyescanreset_in,
    eyescantrigger_in,
    gthrxn_in,
    gthrxp_in,
    loopback_in,
    pcsrsvdin_in,
    qpll0clk_in,
    qpll0refclk_in,
    qpll1clk_in,
    qpll1refclk_in,
    rxbufreset_in,
    rxcdrhold_in,
    rxdfelpmreset_in,
    rxgearboxslip_in,
    rxlatclk_in,
    rxlpmen_in,
    rxpcsreset_in,
    rxpd_in,
    rxpmareset_in,
    rxpolarity_in,
    rxprbscntreset_in,
    rxprbssel_in,
    rxrate_in,
    rxusrclk_in,
    rxusrclk2_in,
    txdata_in,
    txdiffctrl_in,
    txelecidle_in,
    txheader_in,
    txinhibit_in,
    txlatclk_in,
    txoutclksel_in,
    txpcsreset_in,
    txpd_in,
    txpdelecidlemode_in,
    txpmareset_in,
    txpolarity_in,
    txpostcursor_in,
    txprbsforceerr_in,
    txprbssel_in,
    txprecursor_in,
    txsequence_in,
    txusrclk_in,
    txusrclk2_in,
    dmonitorout_out,
    drpdo_out,
    drprdy_out,
    eyescandataerror_out,
    gthtxn_out,
    gthtxp_out,
    rxbufstatus_out,
    rxcdrlock_out,
    rxdata_out,
    rxdatavalid_out,
    rxheader_out,
    rxheadervalid_out,
    rxoutclk_out,
    rxpmaresetdone_out,
    rxprbserr_out,
    rxprbslocked_out,
    rxprgdivresetdone_out,
    rxstartofseq_out,
    txbufstatus_out,
    txoutclk_out,
    txpmaresetdone_out,
    txprgdivresetdone_out,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7);
  input [0:0]gtwiz_userclk_tx_active_in;
  input [0:0]gtwiz_userclk_rx_active_in;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [0:0]gtwiz_reset_all_in;
  input [0:0]gtwiz_reset_tx_pll_and_datapath_in;
  input [0:0]gtwiz_reset_tx_datapath_in;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input [0:0]gtwiz_reset_qpll0lock_in;
  output [0:0]gtwiz_reset_rx_cdr_stable_out;
  output [0:0]gtwiz_reset_tx_done_out;
  output [0:0]gtwiz_reset_rx_done_out;
  output [0:0]gtwiz_reset_qpll0reset_out;
  input [0:0]cpllpd_in;
  input [8:0]drpaddr_in;
  input [0:0]drpclk_in;
  input [15:0]drpdi_in;
  input [0:0]drpen_in;
  input [0:0]drpwe_in;
  input [0:0]eyescanreset_in;
  input [0:0]eyescantrigger_in;
  input [0:0]gthrxn_in;
  input [0:0]gthrxp_in;
  input [2:0]loopback_in;
  input [15:0]pcsrsvdin_in;
  input [0:0]qpll0clk_in;
  input [0:0]qpll0refclk_in;
  input [0:0]qpll1clk_in;
  input [0:0]qpll1refclk_in;
  input [0:0]rxbufreset_in;
  input [0:0]rxcdrhold_in;
  input [0:0]rxdfelpmreset_in;
  input [0:0]rxgearboxslip_in;
  input [0:0]rxlatclk_in;
  input [0:0]rxlpmen_in;
  input [0:0]rxpcsreset_in;
  input [1:0]rxpd_in;
  input [0:0]rxpmareset_in;
  input [0:0]rxpolarity_in;
  input [0:0]rxprbscntreset_in;
  input [3:0]rxprbssel_in;
  input [2:0]rxrate_in;
  input [0:0]rxusrclk_in;
  input [0:0]rxusrclk2_in;
  input [127:0]txdata_in;
  input [3:0]txdiffctrl_in;
  input [0:0]txelecidle_in;
  input [5:0]txheader_in;
  input [0:0]txinhibit_in;
  input [0:0]txlatclk_in;
  input [2:0]txoutclksel_in;
  input [0:0]txpcsreset_in;
  input [1:0]txpd_in;
  input [0:0]txpdelecidlemode_in;
  input [0:0]txpmareset_in;
  input [0:0]txpolarity_in;
  input [4:0]txpostcursor_in;
  input [0:0]txprbsforceerr_in;
  input [3:0]txprbssel_in;
  input [4:0]txprecursor_in;
  input [6:0]txsequence_in;
  input [0:0]txusrclk_in;
  input [0:0]txusrclk2_in;
  output [16:0]dmonitorout_out;
  output [15:0]drpdo_out;
  output [0:0]drprdy_out;
  output [0:0]eyescandataerror_out;
  output [0:0]gthtxn_out;
  output [0:0]gthtxp_out;
  output [2:0]rxbufstatus_out;
  output [0:0]rxcdrlock_out;
  output [127:0]rxdata_out;
  output [1:0]rxdatavalid_out;
  output [5:0]rxheader_out;
  output [1:0]rxheadervalid_out;
  output [0:0]rxoutclk_out;
  output [0:0]rxpmaresetdone_out;
  output [0:0]rxprbserr_out;
  output [0:0]rxprbslocked_out;
  output [0:0]rxprgdivresetdone_out;
  output [1:0]rxstartofseq_out;
  output [1:0]txbufstatus_out;
  output [0:0]txoutclk_out;
  output [0:0]txpmaresetdone_out;
  output [0:0]txprgdivresetdone_out;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  output lopt_7;

  wire [0:0]cpllpd_in;
  wire [16:0]dmonitorout_out;
  wire [8:0]drpaddr_in;
  wire [0:0]drpclk_in;
  wire [15:0]drpdi_in;
  wire [15:0]drpdo_out;
  wire [0:0]drpen_in;
  wire [0:0]drprdy_out;
  wire [0:0]drpwe_in;
  wire [0:0]eyescandataerror_out;
  wire [0:0]eyescanreset_in;
  wire [0:0]eyescantrigger_in;
  wire [0:0]gthrxn_in;
  wire [0:0]gthrxp_in;
  wire [0:0]gthtxn_out;
  wire [0:0]gthtxp_out;
  wire [0:0]gtwiz_reset_all_in;
  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire [0:0]gtwiz_reset_qpll0lock_in;
  wire [0:0]gtwiz_reset_qpll0reset_out;
  wire [0:0]gtwiz_reset_rx_cdr_stable_out;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire [0:0]gtwiz_reset_rx_done_out;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  wire [0:0]gtwiz_reset_tx_datapath_in;
  wire [0:0]gtwiz_reset_tx_done_out;
  wire [0:0]gtwiz_reset_tx_pll_and_datapath_in;
  wire [0:0]gtwiz_userclk_rx_active_in;
  wire [0:0]gtwiz_userclk_tx_active_in;
  wire [2:0]loopback_in;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire [15:0]pcsrsvdin_in;
  wire [0:0]qpll0clk_in;
  wire [0:0]qpll0refclk_in;
  wire [0:0]qpll1clk_in;
  wire [0:0]qpll1refclk_in;
  wire [0:0]rxbufreset_in;
  wire [2:0]rxbufstatus_out;
  wire [0:0]rxcdrhold_in;
  wire [0:0]rxcdrlock_out;
  wire [127:0]rxdata_out;
  wire [1:0]rxdatavalid_out;
  wire [0:0]rxdfelpmreset_in;
  wire [0:0]rxgearboxslip_in;
  wire [5:0]rxheader_out;
  wire [1:0]rxheadervalid_out;
  wire [0:0]rxlatclk_in;
  wire [0:0]rxlpmen_in;
  wire [0:0]rxoutclk_out;
  wire [0:0]rxpcsreset_in;
  wire [1:0]rxpd_in;
  wire [0:0]rxpmareset_in;
  wire [0:0]rxpmaresetdone_out;
  wire [0:0]rxpolarity_in;
  wire [0:0]rxprbscntreset_in;
  wire [0:0]rxprbserr_out;
  wire [0:0]rxprbslocked_out;
  wire [3:0]rxprbssel_in;
  wire [0:0]rxprgdivresetdone_out;
  wire [2:0]rxrate_in;
  wire [1:0]rxstartofseq_out;
  wire [0:0]rxusrclk2_in;
  wire [0:0]rxusrclk_in;
  wire [1:0]txbufstatus_out;
  wire [127:0]txdata_in;
  wire [3:0]txdiffctrl_in;
  wire [0:0]txelecidle_in;
  wire [5:0]txheader_in;
  wire [0:0]txinhibit_in;
  wire [0:0]txlatclk_in;
  wire [0:0]txoutclk_out;
  wire [2:0]txoutclksel_in;
  wire [0:0]txpcsreset_in;
  wire [1:0]txpd_in;
  wire [0:0]txpdelecidlemode_in;
  wire [0:0]txpmareset_in;
  wire [0:0]txpmaresetdone_out;
  wire [0:0]txpolarity_in;
  wire [4:0]txpostcursor_in;
  wire [0:0]txprbsforceerr_in;
  wire [3:0]txprbssel_in;
  wire [4:0]txprecursor_in;
  wire [0:0]txprgdivresetdone_out;
  wire [6:0]txsequence_in;
  wire [0:0]txusrclk2_in;
  wire [0:0]txusrclk_in;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_gt_gtwizard_top inst
       (.cpllpd_in(cpllpd_in),
        .dmonitorout_out(dmonitorout_out),
        .drpaddr_in(drpaddr_in),
        .drpclk_in(drpclk_in),
        .drpdi_in(drpdi_in),
        .drpdo_out(drpdo_out),
        .drpen_in(drpen_in),
        .drprdy_out(drprdy_out),
        .drpwe_in(drpwe_in),
        .eyescandataerror_out(eyescandataerror_out),
        .eyescanreset_in(eyescanreset_in),
        .eyescantrigger_in(eyescantrigger_in),
        .gthrxn_in(gthrxn_in),
        .gthrxp_in(gthrxp_in),
        .gthtxn_out(gthtxn_out),
        .gthtxp_out(gthtxp_out),
        .gtwiz_reset_all_in(gtwiz_reset_all_in),
        .gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_qpll0lock_in(gtwiz_reset_qpll0lock_in),
        .gtwiz_reset_qpll0reset_out(gtwiz_reset_qpll0reset_out),
        .gtwiz_reset_rx_cdr_stable_out(gtwiz_reset_rx_cdr_stable_out),
        .gtwiz_reset_rx_datapath_in(gtwiz_reset_rx_datapath_in),
        .gtwiz_reset_rx_done_out(gtwiz_reset_rx_done_out),
        .gtwiz_reset_rx_pll_and_datapath_in(gtwiz_reset_rx_pll_and_datapath_in),
        .gtwiz_reset_tx_datapath_in(gtwiz_reset_tx_datapath_in),
        .gtwiz_reset_tx_done_out(gtwiz_reset_tx_done_out),
        .gtwiz_reset_tx_pll_and_datapath_in(gtwiz_reset_tx_pll_and_datapath_in),
        .gtwiz_userclk_rx_active_in(gtwiz_userclk_rx_active_in),
        .gtwiz_userclk_tx_active_in(gtwiz_userclk_tx_active_in),
        .loopback_in(loopback_in),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .pcsrsvdin_in(pcsrsvdin_in),
        .qpll0clk_in(qpll0clk_in),
        .qpll0refclk_in(qpll0refclk_in),
        .qpll1clk_in(qpll1clk_in),
        .qpll1refclk_in(qpll1refclk_in),
        .rxbufreset_in(rxbufreset_in),
        .rxbufstatus_out(rxbufstatus_out),
        .rxcdrhold_in(rxcdrhold_in),
        .rxcdrlock_out(rxcdrlock_out),
        .rxdata_out(rxdata_out),
        .rxdatavalid_out(rxdatavalid_out),
        .rxdfelpmreset_in(rxdfelpmreset_in),
        .rxgearboxslip_in(rxgearboxslip_in),
        .rxheader_out(rxheader_out),
        .rxheadervalid_out(rxheadervalid_out),
        .rxlatclk_in(rxlatclk_in),
        .rxlpmen_in(rxlpmen_in),
        .rxoutclk_out(rxoutclk_out),
        .rxpcsreset_in(rxpcsreset_in),
        .rxpd_in(rxpd_in),
        .rxpmareset_in(rxpmareset_in),
        .rxpmaresetdone_out(rxpmaresetdone_out),
        .rxpolarity_in(rxpolarity_in),
        .rxprbscntreset_in(rxprbscntreset_in),
        .rxprbserr_out(rxprbserr_out),
        .rxprbslocked_out(rxprbslocked_out),
        .rxprbssel_in(rxprbssel_in),
        .rxprgdivresetdone_out(rxprgdivresetdone_out),
        .rxrate_in(rxrate_in),
        .rxstartofseq_out(rxstartofseq_out),
        .rxusrclk2_in(rxusrclk2_in),
        .rxusrclk_in(rxusrclk_in),
        .txbufstatus_out(txbufstatus_out),
        .txdata_in(txdata_in),
        .txdiffctrl_in(txdiffctrl_in),
        .txelecidle_in(txelecidle_in),
        .txheader_in(txheader_in),
        .txinhibit_in(txinhibit_in),
        .txlatclk_in(txlatclk_in),
        .txoutclk_out(txoutclk_out),
        .txoutclksel_in(txoutclksel_in),
        .txpcsreset_in(txpcsreset_in),
        .txpd_in(txpd_in),
        .txpdelecidlemode_in(txpdelecidlemode_in),
        .txpmareset_in(txpmareset_in),
        .txpmaresetdone_out(txpmaresetdone_out),
        .txpolarity_in(txpolarity_in),
        .txpostcursor_in(txpostcursor_in),
        .txprbsforceerr_in(txprbsforceerr_in),
        .txprbssel_in(txprbssel_in),
        .txprecursor_in(txprecursor_in),
        .txprgdivresetdone_out(txprgdivresetdone_out),
        .txsequence_in(txsequence_in),
        .txusrclk2_in(txusrclk2_in),
        .txusrclk_in(txusrclk_in));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_gt_common
   (qpll0lock_out,
    qpll0outclk_out,
    qpll0outrefclk_out,
    AR,
    refclk,
    gtwiz_reset_qpll0reset_out);
  output qpll0lock_out;
  output qpll0outclk_out;
  output qpll0outrefclk_out;
  output [0:0]AR;
  input refclk;
  input [0:0]gtwiz_reset_qpll0reset_out;

  wire [0:0]AR;
  wire [0:0]gtwiz_reset_qpll0reset_out;
  wire qpll0lock_out;
  wire qpll0outclk_out;
  wire qpll0outrefclk_out;
  wire refclk;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_gt_common_wrapper bd_01e2_xpcs_0_gt_common_wrapper_i
       (.AR(AR),
        .gtwiz_reset_qpll0reset_out(gtwiz_reset_qpll0reset_out),
        .qpll0lock_out(qpll0lock_out),
        .qpll0outclk_out(qpll0outclk_out),
        .qpll0outrefclk_out(qpll0outrefclk_out),
        .refclk(refclk));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_gt_common_wrapper
   (qpll0lock_out,
    qpll0outclk_out,
    qpll0outrefclk_out,
    AR,
    refclk,
    gtwiz_reset_qpll0reset_out);
  output qpll0lock_out;
  output qpll0outclk_out;
  output qpll0outrefclk_out;
  output [0:0]AR;
  input refclk;
  input [0:0]gtwiz_reset_qpll0reset_out;

  wire [0:0]AR;
  wire [0:0]gtwiz_reset_qpll0reset_out;
  wire qpll0lock_out;
  wire qpll0outclk_out;
  wire qpll0outrefclk_out;
  wire refclk;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_gthe3_common common_inst
       (.AR(AR),
        .gtwiz_reset_qpll0reset_out(gtwiz_reset_qpll0reset_out),
        .qpll0lock_out(qpll0lock_out),
        .qpll0outclk_out(qpll0outclk_out),
        .qpll0outrefclk_out(qpll0outrefclk_out),
        .refclk(refclk));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_gt_gthe3_channel_wrapper
   (drprdy_out,
    eyescandataerror_out,
    gthtxn_out,
    gthtxp_out,
    gtpowergood_out,
    rxcdrlock_out,
    rxoutclk_out,
    rxpmaresetdone_out,
    rxprbserr_out,
    rxprbslocked_out,
    rxprgdivresetdone_out,
    rxresetdone_out,
    txoutclk_out,
    txpmaresetdone_out,
    txprgdivresetdone_out,
    txresetdone_out,
    rxdata_out,
    drpdo_out,
    dmonitorout_out,
    rxdatavalid_out,
    rxheadervalid_out,
    rxstartofseq_out,
    txbufstatus_out,
    rxbufstatus_out,
    rxheader_out,
    cpllpd_in,
    drpclk_in,
    drpen_in,
    drpwe_in,
    eyescanreset_in,
    eyescantrigger_in,
    gthrxn_in,
    gthrxp_in,
    gtrxreset_int,
    gttxreset_int,
    qpll0clk_in,
    qpll0refclk_in,
    qpll1clk_in,
    qpll1refclk_in,
    rxbufreset_in,
    rxcdrhold_in,
    rxdfelpmreset_in,
    rxgearboxslip_in,
    rxlatclk_in,
    rxlpmen_in,
    rxpcsreset_in,
    rxpmareset_in,
    rxpolarity_in,
    rxprbscntreset_in,
    rxprogdivreset_int,
    rxuserrdy_int,
    rxusrclk_in,
    rxusrclk2_in,
    txelecidle_in,
    txinhibit_in,
    txlatclk_in,
    txpcsreset_in,
    txpdelecidlemode_in,
    txpmareset_in,
    txpolarity_in,
    txprbsforceerr_in,
    txprogdivreset_int,
    txuserrdy_int,
    txusrclk_in,
    txusrclk2_in,
    txdata_in,
    drpdi_in,
    pcsrsvdin_in,
    rxpd_in,
    txpd_in,
    loopback_in,
    rxrate_in,
    txoutclksel_in,
    rxprbssel_in,
    txdiffctrl_in,
    txprbssel_in,
    txpostcursor_in,
    txprecursor_in,
    txheader_in,
    txsequence_in,
    drpaddr_in,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7);
  output [0:0]drprdy_out;
  output [0:0]eyescandataerror_out;
  output [0:0]gthtxn_out;
  output [0:0]gthtxp_out;
  output [0:0]gtpowergood_out;
  output [0:0]rxcdrlock_out;
  output [0:0]rxoutclk_out;
  output [0:0]rxpmaresetdone_out;
  output [0:0]rxprbserr_out;
  output [0:0]rxprbslocked_out;
  output [0:0]rxprgdivresetdone_out;
  output [0:0]rxresetdone_out;
  output [0:0]txoutclk_out;
  output [0:0]txpmaresetdone_out;
  output [0:0]txprgdivresetdone_out;
  output [0:0]txresetdone_out;
  output [127:0]rxdata_out;
  output [15:0]drpdo_out;
  output [16:0]dmonitorout_out;
  output [1:0]rxdatavalid_out;
  output [1:0]rxheadervalid_out;
  output [1:0]rxstartofseq_out;
  output [1:0]txbufstatus_out;
  output [2:0]rxbufstatus_out;
  output [5:0]rxheader_out;
  input [0:0]cpllpd_in;
  input [0:0]drpclk_in;
  input [0:0]drpen_in;
  input [0:0]drpwe_in;
  input [0:0]eyescanreset_in;
  input [0:0]eyescantrigger_in;
  input [0:0]gthrxn_in;
  input [0:0]gthrxp_in;
  input gtrxreset_int;
  input gttxreset_int;
  input [0:0]qpll0clk_in;
  input [0:0]qpll0refclk_in;
  input [0:0]qpll1clk_in;
  input [0:0]qpll1refclk_in;
  input [0:0]rxbufreset_in;
  input [0:0]rxcdrhold_in;
  input [0:0]rxdfelpmreset_in;
  input [0:0]rxgearboxslip_in;
  input [0:0]rxlatclk_in;
  input [0:0]rxlpmen_in;
  input [0:0]rxpcsreset_in;
  input [0:0]rxpmareset_in;
  input [0:0]rxpolarity_in;
  input [0:0]rxprbscntreset_in;
  input rxprogdivreset_int;
  input rxuserrdy_int;
  input [0:0]rxusrclk_in;
  input [0:0]rxusrclk2_in;
  input [0:0]txelecidle_in;
  input [0:0]txinhibit_in;
  input [0:0]txlatclk_in;
  input [0:0]txpcsreset_in;
  input [0:0]txpdelecidlemode_in;
  input [0:0]txpmareset_in;
  input [0:0]txpolarity_in;
  input [0:0]txprbsforceerr_in;
  input txprogdivreset_int;
  input txuserrdy_int;
  input [0:0]txusrclk_in;
  input [0:0]txusrclk2_in;
  input [127:0]txdata_in;
  input [15:0]drpdi_in;
  input [15:0]pcsrsvdin_in;
  input [1:0]rxpd_in;
  input [1:0]txpd_in;
  input [2:0]loopback_in;
  input [2:0]rxrate_in;
  input [2:0]txoutclksel_in;
  input [3:0]rxprbssel_in;
  input [3:0]txdiffctrl_in;
  input [3:0]txprbssel_in;
  input [4:0]txpostcursor_in;
  input [4:0]txprecursor_in;
  input [5:0]txheader_in;
  input [6:0]txsequence_in;
  input [8:0]drpaddr_in;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  output lopt_7;

  wire [0:0]cpllpd_in;
  wire [16:0]dmonitorout_out;
  wire [8:0]drpaddr_in;
  wire [0:0]drpclk_in;
  wire [15:0]drpdi_in;
  wire [15:0]drpdo_out;
  wire [0:0]drpen_in;
  wire [0:0]drprdy_out;
  wire [0:0]drpwe_in;
  wire [0:0]eyescandataerror_out;
  wire [0:0]eyescanreset_in;
  wire [0:0]eyescantrigger_in;
  wire [0:0]gthrxn_in;
  wire [0:0]gthrxp_in;
  wire [0:0]gthtxn_out;
  wire [0:0]gthtxp_out;
  wire [0:0]gtpowergood_out;
  wire gtrxreset_int;
  wire gttxreset_int;
  wire [2:0]loopback_in;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire [15:0]pcsrsvdin_in;
  wire [0:0]qpll0clk_in;
  wire [0:0]qpll0refclk_in;
  wire [0:0]qpll1clk_in;
  wire [0:0]qpll1refclk_in;
  wire [0:0]rxbufreset_in;
  wire [2:0]rxbufstatus_out;
  wire [0:0]rxcdrhold_in;
  wire [0:0]rxcdrlock_out;
  wire [127:0]rxdata_out;
  wire [1:0]rxdatavalid_out;
  wire [0:0]rxdfelpmreset_in;
  wire [0:0]rxgearboxslip_in;
  wire [5:0]rxheader_out;
  wire [1:0]rxheadervalid_out;
  wire [0:0]rxlatclk_in;
  wire [0:0]rxlpmen_in;
  wire [0:0]rxoutclk_out;
  wire [0:0]rxpcsreset_in;
  wire [1:0]rxpd_in;
  wire [0:0]rxpmareset_in;
  wire [0:0]rxpmaresetdone_out;
  wire [0:0]rxpolarity_in;
  wire [0:0]rxprbscntreset_in;
  wire [0:0]rxprbserr_out;
  wire [0:0]rxprbslocked_out;
  wire [3:0]rxprbssel_in;
  wire [0:0]rxprgdivresetdone_out;
  wire rxprogdivreset_int;
  wire [2:0]rxrate_in;
  wire [0:0]rxresetdone_out;
  wire [1:0]rxstartofseq_out;
  wire rxuserrdy_int;
  wire [0:0]rxusrclk2_in;
  wire [0:0]rxusrclk_in;
  wire [1:0]txbufstatus_out;
  wire [127:0]txdata_in;
  wire [3:0]txdiffctrl_in;
  wire [0:0]txelecidle_in;
  wire [5:0]txheader_in;
  wire [0:0]txinhibit_in;
  wire [0:0]txlatclk_in;
  wire [0:0]txoutclk_out;
  wire [2:0]txoutclksel_in;
  wire [0:0]txpcsreset_in;
  wire [1:0]txpd_in;
  wire [0:0]txpdelecidlemode_in;
  wire [0:0]txpmareset_in;
  wire [0:0]txpmaresetdone_out;
  wire [0:0]txpolarity_in;
  wire [4:0]txpostcursor_in;
  wire [0:0]txprbsforceerr_in;
  wire [3:0]txprbssel_in;
  wire [4:0]txprecursor_in;
  wire [0:0]txprgdivresetdone_out;
  wire txprogdivreset_int;
  wire [0:0]txresetdone_out;
  wire [6:0]txsequence_in;
  wire txuserrdy_int;
  wire [0:0]txusrclk2_in;
  wire [0:0]txusrclk_in;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_gthe3_channel channel_inst
       (.cpllpd_in(cpllpd_in),
        .dmonitorout_out(dmonitorout_out),
        .drpaddr_in(drpaddr_in),
        .drpclk_in(drpclk_in),
        .drpdi_in(drpdi_in),
        .drpdo_out(drpdo_out),
        .drpen_in(drpen_in),
        .drprdy_out(drprdy_out),
        .drpwe_in(drpwe_in),
        .eyescandataerror_out(eyescandataerror_out),
        .eyescanreset_in(eyescanreset_in),
        .eyescantrigger_in(eyescantrigger_in),
        .gthrxn_in(gthrxn_in),
        .gthrxp_in(gthrxp_in),
        .gthtxn_out(gthtxn_out),
        .gthtxp_out(gthtxp_out),
        .gtpowergood_out(gtpowergood_out),
        .gtrxreset_int(gtrxreset_int),
        .gttxreset_int(gttxreset_int),
        .loopback_in(loopback_in),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .pcsrsvdin_in(pcsrsvdin_in),
        .qpll0clk_in(qpll0clk_in),
        .qpll0refclk_in(qpll0refclk_in),
        .qpll1clk_in(qpll1clk_in),
        .qpll1refclk_in(qpll1refclk_in),
        .rxbufreset_in(rxbufreset_in),
        .rxbufstatus_out(rxbufstatus_out),
        .rxcdrhold_in(rxcdrhold_in),
        .rxcdrlock_out(rxcdrlock_out),
        .rxdata_out(rxdata_out),
        .rxdatavalid_out(rxdatavalid_out),
        .rxdfelpmreset_in(rxdfelpmreset_in),
        .rxgearboxslip_in(rxgearboxslip_in),
        .rxheader_out(rxheader_out),
        .rxheadervalid_out(rxheadervalid_out),
        .rxlatclk_in(rxlatclk_in),
        .rxlpmen_in(rxlpmen_in),
        .rxoutclk_out(rxoutclk_out),
        .rxpcsreset_in(rxpcsreset_in),
        .rxpd_in(rxpd_in),
        .rxpmareset_in(rxpmareset_in),
        .rxpmaresetdone_out(rxpmaresetdone_out),
        .rxpolarity_in(rxpolarity_in),
        .rxprbscntreset_in(rxprbscntreset_in),
        .rxprbserr_out(rxprbserr_out),
        .rxprbslocked_out(rxprbslocked_out),
        .rxprbssel_in(rxprbssel_in),
        .rxprgdivresetdone_out(rxprgdivresetdone_out),
        .rxprogdivreset_int(rxprogdivreset_int),
        .rxrate_in(rxrate_in),
        .rxresetdone_out(rxresetdone_out),
        .rxstartofseq_out(rxstartofseq_out),
        .rxuserrdy_int(rxuserrdy_int),
        .rxusrclk2_in(rxusrclk2_in),
        .rxusrclk_in(rxusrclk_in),
        .txbufstatus_out(txbufstatus_out),
        .txdata_in(txdata_in),
        .txdiffctrl_in(txdiffctrl_in),
        .txelecidle_in(txelecidle_in),
        .txheader_in(txheader_in),
        .txinhibit_in(txinhibit_in),
        .txlatclk_in(txlatclk_in),
        .txoutclk_out(txoutclk_out),
        .txoutclksel_in(txoutclksel_in),
        .txpcsreset_in(txpcsreset_in),
        .txpd_in(txpd_in),
        .txpdelecidlemode_in(txpdelecidlemode_in),
        .txpmareset_in(txpmareset_in),
        .txpmaresetdone_out(txpmaresetdone_out),
        .txpolarity_in(txpolarity_in),
        .txpostcursor_in(txpostcursor_in),
        .txprbsforceerr_in(txprbsforceerr_in),
        .txprbssel_in(txprbssel_in),
        .txprecursor_in(txprecursor_in),
        .txprgdivresetdone_out(txprgdivresetdone_out),
        .txprogdivreset_int(txprogdivreset_int),
        .txresetdone_out(txresetdone_out),
        .txsequence_in(txsequence_in),
        .txuserrdy_int(txuserrdy_int),
        .txusrclk2_in(txusrclk2_in),
        .txusrclk_in(txusrclk_in));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_gt_gtwizard_gthe3
   (rxcdrlock_out,
    gtwiz_reset_rx_cdr_stable_out,
    drprdy_out,
    eyescandataerror_out,
    gthtxn_out,
    gthtxp_out,
    rxoutclk_out,
    rxpmaresetdone_out,
    rxprbserr_out,
    rxprbslocked_out,
    rxprgdivresetdone_out,
    txoutclk_out,
    txpmaresetdone_out,
    txprgdivresetdone_out,
    rxdata_out,
    drpdo_out,
    dmonitorout_out,
    rxdatavalid_out,
    rxheadervalid_out,
    rxstartofseq_out,
    txbufstatus_out,
    rxbufstatus_out,
    rxheader_out,
    gtwiz_reset_tx_done_out,
    gtwiz_reset_rx_done_out,
    gtwiz_reset_qpll0reset_out,
    gtwiz_userclk_tx_active_in,
    gtwiz_reset_qpll0lock_in,
    gtwiz_userclk_rx_active_in,
    gtwiz_reset_clk_freerun_in,
    cpllpd_in,
    drpclk_in,
    drpen_in,
    drpwe_in,
    eyescanreset_in,
    eyescantrigger_in,
    gthrxn_in,
    gthrxp_in,
    qpll0clk_in,
    qpll0refclk_in,
    qpll1clk_in,
    qpll1refclk_in,
    rxbufreset_in,
    rxcdrhold_in,
    rxdfelpmreset_in,
    rxgearboxslip_in,
    rxlatclk_in,
    rxlpmen_in,
    rxpcsreset_in,
    rxpmareset_in,
    rxpolarity_in,
    rxprbscntreset_in,
    rxusrclk_in,
    rxusrclk2_in,
    txelecidle_in,
    txinhibit_in,
    txlatclk_in,
    txpcsreset_in,
    txpdelecidlemode_in,
    txpmareset_in,
    txpolarity_in,
    txprbsforceerr_in,
    txusrclk_in,
    txusrclk2_in,
    txdata_in,
    drpdi_in,
    pcsrsvdin_in,
    rxpd_in,
    txpd_in,
    loopback_in,
    rxrate_in,
    txoutclksel_in,
    rxprbssel_in,
    txdiffctrl_in,
    txprbssel_in,
    txpostcursor_in,
    txprecursor_in,
    txheader_in,
    txsequence_in,
    drpaddr_in,
    gtwiz_reset_all_in,
    gtwiz_reset_tx_datapath_in,
    gtwiz_reset_tx_pll_and_datapath_in,
    gtwiz_reset_rx_datapath_in,
    gtwiz_reset_rx_pll_and_datapath_in,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7);
  output [0:0]rxcdrlock_out;
  output [0:0]gtwiz_reset_rx_cdr_stable_out;
  output [0:0]drprdy_out;
  output [0:0]eyescandataerror_out;
  output [0:0]gthtxn_out;
  output [0:0]gthtxp_out;
  output [0:0]rxoutclk_out;
  output [0:0]rxpmaresetdone_out;
  output [0:0]rxprbserr_out;
  output [0:0]rxprbslocked_out;
  output [0:0]rxprgdivresetdone_out;
  output [0:0]txoutclk_out;
  output [0:0]txpmaresetdone_out;
  output [0:0]txprgdivresetdone_out;
  output [127:0]rxdata_out;
  output [15:0]drpdo_out;
  output [16:0]dmonitorout_out;
  output [1:0]rxdatavalid_out;
  output [1:0]rxheadervalid_out;
  output [1:0]rxstartofseq_out;
  output [1:0]txbufstatus_out;
  output [2:0]rxbufstatus_out;
  output [5:0]rxheader_out;
  output [0:0]gtwiz_reset_tx_done_out;
  output [0:0]gtwiz_reset_rx_done_out;
  output [0:0]gtwiz_reset_qpll0reset_out;
  input [0:0]gtwiz_userclk_tx_active_in;
  input [0:0]gtwiz_reset_qpll0lock_in;
  input [0:0]gtwiz_userclk_rx_active_in;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [0:0]cpllpd_in;
  input [0:0]drpclk_in;
  input [0:0]drpen_in;
  input [0:0]drpwe_in;
  input [0:0]eyescanreset_in;
  input [0:0]eyescantrigger_in;
  input [0:0]gthrxn_in;
  input [0:0]gthrxp_in;
  input [0:0]qpll0clk_in;
  input [0:0]qpll0refclk_in;
  input [0:0]qpll1clk_in;
  input [0:0]qpll1refclk_in;
  input [0:0]rxbufreset_in;
  input [0:0]rxcdrhold_in;
  input [0:0]rxdfelpmreset_in;
  input [0:0]rxgearboxslip_in;
  input [0:0]rxlatclk_in;
  input [0:0]rxlpmen_in;
  input [0:0]rxpcsreset_in;
  input [0:0]rxpmareset_in;
  input [0:0]rxpolarity_in;
  input [0:0]rxprbscntreset_in;
  input [0:0]rxusrclk_in;
  input [0:0]rxusrclk2_in;
  input [0:0]txelecidle_in;
  input [0:0]txinhibit_in;
  input [0:0]txlatclk_in;
  input [0:0]txpcsreset_in;
  input [0:0]txpdelecidlemode_in;
  input [0:0]txpmareset_in;
  input [0:0]txpolarity_in;
  input [0:0]txprbsforceerr_in;
  input [0:0]txusrclk_in;
  input [0:0]txusrclk2_in;
  input [127:0]txdata_in;
  input [15:0]drpdi_in;
  input [15:0]pcsrsvdin_in;
  input [1:0]rxpd_in;
  input [1:0]txpd_in;
  input [2:0]loopback_in;
  input [2:0]rxrate_in;
  input [2:0]txoutclksel_in;
  input [3:0]rxprbssel_in;
  input [3:0]txdiffctrl_in;
  input [3:0]txprbssel_in;
  input [4:0]txpostcursor_in;
  input [4:0]txprecursor_in;
  input [5:0]txheader_in;
  input [6:0]txsequence_in;
  input [8:0]drpaddr_in;
  input [0:0]gtwiz_reset_all_in;
  input [0:0]gtwiz_reset_tx_datapath_in;
  input [0:0]gtwiz_reset_tx_pll_and_datapath_in;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  output lopt_7;

  wire [0:0]cpllpd_in;
  wire [16:0]dmonitorout_out;
  wire [8:0]drpaddr_in;
  wire [0:0]drpclk_in;
  wire [15:0]drpdi_in;
  wire [15:0]drpdo_out;
  wire [0:0]drpen_in;
  wire [0:0]drprdy_out;
  wire [0:0]drpwe_in;
  wire [0:0]eyescandataerror_out;
  wire [0:0]eyescanreset_in;
  wire [0:0]eyescantrigger_in;
  wire \gen_gtwizard_gthe3.gen_channel_container[28].gen_enabled_channel.gthe3_channel_wrapper_inst_n_11 ;
  wire \gen_gtwizard_gthe3.gen_channel_container[28].gen_enabled_channel.gthe3_channel_wrapper_inst_n_15 ;
  wire \gen_gtwizard_gthe3.gen_channel_container[28].gen_enabled_channel.gthe3_channel_wrapper_inst_n_4 ;
  wire [0:0]gthrxn_in;
  wire [0:0]gthrxp_in;
  wire [0:0]gthtxn_out;
  wire [0:0]gthtxp_out;
  wire gtrxreset_int;
  wire gttxreset_int;
  wire [0:0]gtwiz_reset_all_in;
  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire [0:0]gtwiz_reset_qpll0lock_in;
  wire [0:0]gtwiz_reset_qpll0reset_out;
  wire [0:0]gtwiz_reset_rx_cdr_stable_out;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire [0:0]gtwiz_reset_rx_done_out;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  wire [0:0]gtwiz_reset_tx_datapath_in;
  wire [0:0]gtwiz_reset_tx_done_out;
  wire [0:0]gtwiz_reset_tx_pll_and_datapath_in;
  wire [0:0]gtwiz_userclk_rx_active_in;
  wire [0:0]gtwiz_userclk_tx_active_in;
  wire [2:0]loopback_in;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire [15:0]pcsrsvdin_in;
  wire [0:0]qpll0clk_in;
  wire [0:0]qpll0refclk_in;
  wire [0:0]qpll1clk_in;
  wire [0:0]qpll1refclk_in;
  wire [0:0]rxbufreset_in;
  wire [2:0]rxbufstatus_out;
  wire [0:0]rxcdrhold_in;
  wire [0:0]rxcdrlock_out;
  wire [127:0]rxdata_out;
  wire [1:0]rxdatavalid_out;
  wire [0:0]rxdfelpmreset_in;
  wire [0:0]rxgearboxslip_in;
  wire [5:0]rxheader_out;
  wire [1:0]rxheadervalid_out;
  wire [0:0]rxlatclk_in;
  wire [0:0]rxlpmen_in;
  wire [0:0]rxoutclk_out;
  wire [0:0]rxpcsreset_in;
  wire [1:0]rxpd_in;
  wire [0:0]rxpmareset_in;
  wire [0:0]rxpmaresetdone_out;
  wire [0:0]rxpolarity_in;
  wire [0:0]rxprbscntreset_in;
  wire [0:0]rxprbserr_out;
  wire [0:0]rxprbslocked_out;
  wire [3:0]rxprbssel_in;
  wire [0:0]rxprgdivresetdone_out;
  wire rxprogdivreset_int;
  wire [2:0]rxrate_in;
  wire rxresetdone_sync;
  wire [1:0]rxstartofseq_out;
  wire rxuserrdy_int;
  wire [0:0]rxusrclk2_in;
  wire [0:0]rxusrclk_in;
  wire [1:0]txbufstatus_out;
  wire [127:0]txdata_in;
  wire [3:0]txdiffctrl_in;
  wire [0:0]txelecidle_in;
  wire [5:0]txheader_in;
  wire [0:0]txinhibit_in;
  wire [0:0]txlatclk_in;
  wire [0:0]txoutclk_out;
  wire [2:0]txoutclksel_in;
  wire [0:0]txpcsreset_in;
  wire [1:0]txpd_in;
  wire [0:0]txpdelecidlemode_in;
  wire [0:0]txpmareset_in;
  wire [0:0]txpmaresetdone_out;
  wire [0:0]txpolarity_in;
  wire [4:0]txpostcursor_in;
  wire [0:0]txprbsforceerr_in;
  wire [3:0]txprbssel_in;
  wire [4:0]txprecursor_in;
  wire [0:0]txprgdivresetdone_out;
  wire txprogdivreset_int;
  wire txresetdone_sync;
  wire [6:0]txsequence_in;
  wire txuserrdy_int;
  wire [0:0]txusrclk2_in;
  wire [0:0]txusrclk_in;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_gt_gthe3_channel_wrapper \gen_gtwizard_gthe3.gen_channel_container[28].gen_enabled_channel.gthe3_channel_wrapper_inst 
       (.cpllpd_in(cpllpd_in),
        .dmonitorout_out(dmonitorout_out),
        .drpaddr_in(drpaddr_in),
        .drpclk_in(drpclk_in),
        .drpdi_in(drpdi_in),
        .drpdo_out(drpdo_out),
        .drpen_in(drpen_in),
        .drprdy_out(drprdy_out),
        .drpwe_in(drpwe_in),
        .eyescandataerror_out(eyescandataerror_out),
        .eyescanreset_in(eyescanreset_in),
        .eyescantrigger_in(eyescantrigger_in),
        .gthrxn_in(gthrxn_in),
        .gthrxp_in(gthrxp_in),
        .gthtxn_out(gthtxn_out),
        .gthtxp_out(gthtxp_out),
        .gtpowergood_out(\gen_gtwizard_gthe3.gen_channel_container[28].gen_enabled_channel.gthe3_channel_wrapper_inst_n_4 ),
        .gtrxreset_int(gtrxreset_int),
        .gttxreset_int(gttxreset_int),
        .loopback_in(loopback_in),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .pcsrsvdin_in(pcsrsvdin_in),
        .qpll0clk_in(qpll0clk_in),
        .qpll0refclk_in(qpll0refclk_in),
        .qpll1clk_in(qpll1clk_in),
        .qpll1refclk_in(qpll1refclk_in),
        .rxbufreset_in(rxbufreset_in),
        .rxbufstatus_out(rxbufstatus_out),
        .rxcdrhold_in(rxcdrhold_in),
        .rxcdrlock_out(rxcdrlock_out),
        .rxdata_out(rxdata_out),
        .rxdatavalid_out(rxdatavalid_out),
        .rxdfelpmreset_in(rxdfelpmreset_in),
        .rxgearboxslip_in(rxgearboxslip_in),
        .rxheader_out(rxheader_out),
        .rxheadervalid_out(rxheadervalid_out),
        .rxlatclk_in(rxlatclk_in),
        .rxlpmen_in(rxlpmen_in),
        .rxoutclk_out(rxoutclk_out),
        .rxpcsreset_in(rxpcsreset_in),
        .rxpd_in(rxpd_in),
        .rxpmareset_in(rxpmareset_in),
        .rxpmaresetdone_out(rxpmaresetdone_out),
        .rxpolarity_in(rxpolarity_in),
        .rxprbscntreset_in(rxprbscntreset_in),
        .rxprbserr_out(rxprbserr_out),
        .rxprbslocked_out(rxprbslocked_out),
        .rxprbssel_in(rxprbssel_in),
        .rxprgdivresetdone_out(rxprgdivresetdone_out),
        .rxprogdivreset_int(rxprogdivreset_int),
        .rxrate_in(rxrate_in),
        .rxresetdone_out(\gen_gtwizard_gthe3.gen_channel_container[28].gen_enabled_channel.gthe3_channel_wrapper_inst_n_11 ),
        .rxstartofseq_out(rxstartofseq_out),
        .rxuserrdy_int(rxuserrdy_int),
        .rxusrclk2_in(rxusrclk2_in),
        .rxusrclk_in(rxusrclk_in),
        .txbufstatus_out(txbufstatus_out),
        .txdata_in(txdata_in),
        .txdiffctrl_in(txdiffctrl_in),
        .txelecidle_in(txelecidle_in),
        .txheader_in(txheader_in),
        .txinhibit_in(txinhibit_in),
        .txlatclk_in(txlatclk_in),
        .txoutclk_out(txoutclk_out),
        .txoutclksel_in(txoutclksel_in),
        .txpcsreset_in(txpcsreset_in),
        .txpd_in(txpd_in),
        .txpdelecidlemode_in(txpdelecidlemode_in),
        .txpmareset_in(txpmareset_in),
        .txpmaresetdone_out(txpmaresetdone_out),
        .txpolarity_in(txpolarity_in),
        .txpostcursor_in(txpostcursor_in),
        .txprbsforceerr_in(txprbsforceerr_in),
        .txprbssel_in(txprbssel_in),
        .txprecursor_in(txprecursor_in),
        .txprgdivresetdone_out(txprgdivresetdone_out),
        .txprogdivreset_int(txprogdivreset_int),
        .txresetdone_out(\gen_gtwizard_gthe3.gen_channel_container[28].gen_enabled_channel.gthe3_channel_wrapper_inst_n_15 ),
        .txsequence_in(txsequence_in),
        .txuserrdy_int(txuserrdy_int),
        .txusrclk2_in(txusrclk2_in),
        .txusrclk_in(txusrclk_in));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_bit_synchronizer \gen_gtwizard_gthe3.gen_reset_controller_internal.gen_single_instance.gen_ch_xrd[0].bit_synchronizer_rxresetdone_inst 
       (.gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .rxresetdone_out(\gen_gtwizard_gthe3.gen_channel_container[28].gen_enabled_channel.gthe3_channel_wrapper_inst_n_11 ),
        .rxresetdone_sync(rxresetdone_sync));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_bit_synchronizer_31 \gen_gtwizard_gthe3.gen_reset_controller_internal.gen_single_instance.gen_ch_xrd[0].bit_synchronizer_txresetdone_inst 
       (.gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .txresetdone_out(\gen_gtwizard_gthe3.gen_channel_container[28].gen_enabled_channel.gthe3_channel_wrapper_inst_n_15 ),
        .txresetdone_sync(txresetdone_sync));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_gtwiz_reset \gen_gtwizard_gthe3.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_inst 
       (.gtpowergood_out(\gen_gtwizard_gthe3.gen_channel_container[28].gen_enabled_channel.gthe3_channel_wrapper_inst_n_4 ),
        .gtrxreset_int(gtrxreset_int),
        .gttxreset_int(gttxreset_int),
        .gtwiz_reset_all_in(gtwiz_reset_all_in),
        .gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_qpll0lock_in(gtwiz_reset_qpll0lock_in),
        .gtwiz_reset_qpll0reset_out(gtwiz_reset_qpll0reset_out),
        .gtwiz_reset_rx_cdr_stable_out(gtwiz_reset_rx_cdr_stable_out),
        .gtwiz_reset_rx_datapath_in(gtwiz_reset_rx_datapath_in),
        .gtwiz_reset_rx_done_out(gtwiz_reset_rx_done_out),
        .gtwiz_reset_rx_pll_and_datapath_in(gtwiz_reset_rx_pll_and_datapath_in),
        .gtwiz_reset_tx_datapath_in(gtwiz_reset_tx_datapath_in),
        .gtwiz_reset_tx_done_out(gtwiz_reset_tx_done_out),
        .gtwiz_reset_tx_pll_and_datapath_in(gtwiz_reset_tx_pll_and_datapath_in),
        .gtwiz_userclk_rx_active_in(gtwiz_userclk_rx_active_in),
        .gtwiz_userclk_tx_active_in(gtwiz_userclk_tx_active_in),
        .rxcdrlock_out(rxcdrlock_out),
        .rxprogdivreset_int(rxprogdivreset_int),
        .rxresetdone_sync(rxresetdone_sync),
        .rxuserrdy_int(rxuserrdy_int),
        .rxusrclk2_in(rxusrclk2_in),
        .txprogdivreset_int(txprogdivreset_int),
        .txresetdone_sync(txresetdone_sync),
        .txuserrdy_int(txuserrdy_int),
        .txusrclk2_in(txusrclk2_in));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_gt_gtwizard_top
   (rxcdrlock_out,
    gtwiz_reset_rx_cdr_stable_out,
    drprdy_out,
    eyescandataerror_out,
    gthtxn_out,
    gthtxp_out,
    rxoutclk_out,
    rxpmaresetdone_out,
    rxprbserr_out,
    rxprbslocked_out,
    rxprgdivresetdone_out,
    txoutclk_out,
    txpmaresetdone_out,
    txprgdivresetdone_out,
    rxdata_out,
    drpdo_out,
    dmonitorout_out,
    rxdatavalid_out,
    rxheadervalid_out,
    rxstartofseq_out,
    txbufstatus_out,
    rxbufstatus_out,
    rxheader_out,
    gtwiz_reset_tx_done_out,
    gtwiz_reset_rx_done_out,
    gtwiz_reset_qpll0reset_out,
    gtwiz_userclk_tx_active_in,
    gtwiz_reset_qpll0lock_in,
    gtwiz_userclk_rx_active_in,
    gtwiz_reset_clk_freerun_in,
    cpllpd_in,
    drpclk_in,
    drpen_in,
    drpwe_in,
    eyescanreset_in,
    eyescantrigger_in,
    gthrxn_in,
    gthrxp_in,
    qpll0clk_in,
    qpll0refclk_in,
    qpll1clk_in,
    qpll1refclk_in,
    rxbufreset_in,
    rxcdrhold_in,
    rxdfelpmreset_in,
    rxgearboxslip_in,
    rxlatclk_in,
    rxlpmen_in,
    rxpcsreset_in,
    rxpmareset_in,
    rxpolarity_in,
    rxprbscntreset_in,
    rxusrclk_in,
    rxusrclk2_in,
    txelecidle_in,
    txinhibit_in,
    txlatclk_in,
    txpcsreset_in,
    txpdelecidlemode_in,
    txpmareset_in,
    txpolarity_in,
    txprbsforceerr_in,
    txusrclk_in,
    txusrclk2_in,
    txdata_in,
    drpdi_in,
    pcsrsvdin_in,
    rxpd_in,
    txpd_in,
    loopback_in,
    rxrate_in,
    txoutclksel_in,
    rxprbssel_in,
    txdiffctrl_in,
    txprbssel_in,
    txpostcursor_in,
    txprecursor_in,
    txheader_in,
    txsequence_in,
    drpaddr_in,
    gtwiz_reset_all_in,
    gtwiz_reset_tx_datapath_in,
    gtwiz_reset_tx_pll_and_datapath_in,
    gtwiz_reset_rx_datapath_in,
    gtwiz_reset_rx_pll_and_datapath_in,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7);
  output [0:0]rxcdrlock_out;
  output [0:0]gtwiz_reset_rx_cdr_stable_out;
  output [0:0]drprdy_out;
  output [0:0]eyescandataerror_out;
  output [0:0]gthtxn_out;
  output [0:0]gthtxp_out;
  output [0:0]rxoutclk_out;
  output [0:0]rxpmaresetdone_out;
  output [0:0]rxprbserr_out;
  output [0:0]rxprbslocked_out;
  output [0:0]rxprgdivresetdone_out;
  output [0:0]txoutclk_out;
  output [0:0]txpmaresetdone_out;
  output [0:0]txprgdivresetdone_out;
  output [127:0]rxdata_out;
  output [15:0]drpdo_out;
  output [16:0]dmonitorout_out;
  output [1:0]rxdatavalid_out;
  output [1:0]rxheadervalid_out;
  output [1:0]rxstartofseq_out;
  output [1:0]txbufstatus_out;
  output [2:0]rxbufstatus_out;
  output [5:0]rxheader_out;
  output [0:0]gtwiz_reset_tx_done_out;
  output [0:0]gtwiz_reset_rx_done_out;
  output [0:0]gtwiz_reset_qpll0reset_out;
  input [0:0]gtwiz_userclk_tx_active_in;
  input [0:0]gtwiz_reset_qpll0lock_in;
  input [0:0]gtwiz_userclk_rx_active_in;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [0:0]cpllpd_in;
  input [0:0]drpclk_in;
  input [0:0]drpen_in;
  input [0:0]drpwe_in;
  input [0:0]eyescanreset_in;
  input [0:0]eyescantrigger_in;
  input [0:0]gthrxn_in;
  input [0:0]gthrxp_in;
  input [0:0]qpll0clk_in;
  input [0:0]qpll0refclk_in;
  input [0:0]qpll1clk_in;
  input [0:0]qpll1refclk_in;
  input [0:0]rxbufreset_in;
  input [0:0]rxcdrhold_in;
  input [0:0]rxdfelpmreset_in;
  input [0:0]rxgearboxslip_in;
  input [0:0]rxlatclk_in;
  input [0:0]rxlpmen_in;
  input [0:0]rxpcsreset_in;
  input [0:0]rxpmareset_in;
  input [0:0]rxpolarity_in;
  input [0:0]rxprbscntreset_in;
  input [0:0]rxusrclk_in;
  input [0:0]rxusrclk2_in;
  input [0:0]txelecidle_in;
  input [0:0]txinhibit_in;
  input [0:0]txlatclk_in;
  input [0:0]txpcsreset_in;
  input [0:0]txpdelecidlemode_in;
  input [0:0]txpmareset_in;
  input [0:0]txpolarity_in;
  input [0:0]txprbsforceerr_in;
  input [0:0]txusrclk_in;
  input [0:0]txusrclk2_in;
  input [127:0]txdata_in;
  input [15:0]drpdi_in;
  input [15:0]pcsrsvdin_in;
  input [1:0]rxpd_in;
  input [1:0]txpd_in;
  input [2:0]loopback_in;
  input [2:0]rxrate_in;
  input [2:0]txoutclksel_in;
  input [3:0]rxprbssel_in;
  input [3:0]txdiffctrl_in;
  input [3:0]txprbssel_in;
  input [4:0]txpostcursor_in;
  input [4:0]txprecursor_in;
  input [5:0]txheader_in;
  input [6:0]txsequence_in;
  input [8:0]drpaddr_in;
  input [0:0]gtwiz_reset_all_in;
  input [0:0]gtwiz_reset_tx_datapath_in;
  input [0:0]gtwiz_reset_tx_pll_and_datapath_in;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  output lopt_7;

  wire [0:0]cpllpd_in;
  wire [16:0]dmonitorout_out;
  wire [8:0]drpaddr_in;
  wire [0:0]drpclk_in;
  wire [15:0]drpdi_in;
  wire [15:0]drpdo_out;
  wire [0:0]drpen_in;
  wire [0:0]drprdy_out;
  wire [0:0]drpwe_in;
  wire [0:0]eyescandataerror_out;
  wire [0:0]eyescanreset_in;
  wire [0:0]eyescantrigger_in;
  wire [0:0]gthrxn_in;
  wire [0:0]gthrxp_in;
  wire [0:0]gthtxn_out;
  wire [0:0]gthtxp_out;
  wire [0:0]gtwiz_reset_all_in;
  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire [0:0]gtwiz_reset_qpll0lock_in;
  wire [0:0]gtwiz_reset_qpll0reset_out;
  wire [0:0]gtwiz_reset_rx_cdr_stable_out;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire [0:0]gtwiz_reset_rx_done_out;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  wire [0:0]gtwiz_reset_tx_datapath_in;
  wire [0:0]gtwiz_reset_tx_done_out;
  wire [0:0]gtwiz_reset_tx_pll_and_datapath_in;
  wire [0:0]gtwiz_userclk_rx_active_in;
  wire [0:0]gtwiz_userclk_tx_active_in;
  wire [2:0]loopback_in;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire [15:0]pcsrsvdin_in;
  wire [0:0]qpll0clk_in;
  wire [0:0]qpll0refclk_in;
  wire [0:0]qpll1clk_in;
  wire [0:0]qpll1refclk_in;
  wire [0:0]rxbufreset_in;
  wire [2:0]rxbufstatus_out;
  wire [0:0]rxcdrhold_in;
  wire [0:0]rxcdrlock_out;
  wire [127:0]rxdata_out;
  wire [1:0]rxdatavalid_out;
  wire [0:0]rxdfelpmreset_in;
  wire [0:0]rxgearboxslip_in;
  wire [5:0]rxheader_out;
  wire [1:0]rxheadervalid_out;
  wire [0:0]rxlatclk_in;
  wire [0:0]rxlpmen_in;
  wire [0:0]rxoutclk_out;
  wire [0:0]rxpcsreset_in;
  wire [1:0]rxpd_in;
  wire [0:0]rxpmareset_in;
  wire [0:0]rxpmaresetdone_out;
  wire [0:0]rxpolarity_in;
  wire [0:0]rxprbscntreset_in;
  wire [0:0]rxprbserr_out;
  wire [0:0]rxprbslocked_out;
  wire [3:0]rxprbssel_in;
  wire [0:0]rxprgdivresetdone_out;
  wire [2:0]rxrate_in;
  wire [1:0]rxstartofseq_out;
  wire [0:0]rxusrclk2_in;
  wire [0:0]rxusrclk_in;
  wire [1:0]txbufstatus_out;
  wire [127:0]txdata_in;
  wire [3:0]txdiffctrl_in;
  wire [0:0]txelecidle_in;
  wire [5:0]txheader_in;
  wire [0:0]txinhibit_in;
  wire [0:0]txlatclk_in;
  wire [0:0]txoutclk_out;
  wire [2:0]txoutclksel_in;
  wire [0:0]txpcsreset_in;
  wire [1:0]txpd_in;
  wire [0:0]txpdelecidlemode_in;
  wire [0:0]txpmareset_in;
  wire [0:0]txpmaresetdone_out;
  wire [0:0]txpolarity_in;
  wire [4:0]txpostcursor_in;
  wire [0:0]txprbsforceerr_in;
  wire [3:0]txprbssel_in;
  wire [4:0]txprecursor_in;
  wire [0:0]txprgdivresetdone_out;
  wire [6:0]txsequence_in;
  wire [0:0]txusrclk2_in;
  wire [0:0]txusrclk_in;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_gt_gtwizard_gthe3 \gen_gtwizard_gthe3_top.bd_01e2_xpcs_0_gt_gtwizard_gthe3_inst 
       (.cpllpd_in(cpllpd_in),
        .dmonitorout_out(dmonitorout_out),
        .drpaddr_in(drpaddr_in),
        .drpclk_in(drpclk_in),
        .drpdi_in(drpdi_in),
        .drpdo_out(drpdo_out),
        .drpen_in(drpen_in),
        .drprdy_out(drprdy_out),
        .drpwe_in(drpwe_in),
        .eyescandataerror_out(eyescandataerror_out),
        .eyescanreset_in(eyescanreset_in),
        .eyescantrigger_in(eyescantrigger_in),
        .gthrxn_in(gthrxn_in),
        .gthrxp_in(gthrxp_in),
        .gthtxn_out(gthtxn_out),
        .gthtxp_out(gthtxp_out),
        .gtwiz_reset_all_in(gtwiz_reset_all_in),
        .gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_qpll0lock_in(gtwiz_reset_qpll0lock_in),
        .gtwiz_reset_qpll0reset_out(gtwiz_reset_qpll0reset_out),
        .gtwiz_reset_rx_cdr_stable_out(gtwiz_reset_rx_cdr_stable_out),
        .gtwiz_reset_rx_datapath_in(gtwiz_reset_rx_datapath_in),
        .gtwiz_reset_rx_done_out(gtwiz_reset_rx_done_out),
        .gtwiz_reset_rx_pll_and_datapath_in(gtwiz_reset_rx_pll_and_datapath_in),
        .gtwiz_reset_tx_datapath_in(gtwiz_reset_tx_datapath_in),
        .gtwiz_reset_tx_done_out(gtwiz_reset_tx_done_out),
        .gtwiz_reset_tx_pll_and_datapath_in(gtwiz_reset_tx_pll_and_datapath_in),
        .gtwiz_userclk_rx_active_in(gtwiz_userclk_rx_active_in),
        .gtwiz_userclk_tx_active_in(gtwiz_userclk_tx_active_in),
        .loopback_in(loopback_in),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .pcsrsvdin_in(pcsrsvdin_in),
        .qpll0clk_in(qpll0clk_in),
        .qpll0refclk_in(qpll0refclk_in),
        .qpll1clk_in(qpll1clk_in),
        .qpll1refclk_in(qpll1refclk_in),
        .rxbufreset_in(rxbufreset_in),
        .rxbufstatus_out(rxbufstatus_out),
        .rxcdrhold_in(rxcdrhold_in),
        .rxcdrlock_out(rxcdrlock_out),
        .rxdata_out(rxdata_out),
        .rxdatavalid_out(rxdatavalid_out),
        .rxdfelpmreset_in(rxdfelpmreset_in),
        .rxgearboxslip_in(rxgearboxslip_in),
        .rxheader_out(rxheader_out),
        .rxheadervalid_out(rxheadervalid_out),
        .rxlatclk_in(rxlatclk_in),
        .rxlpmen_in(rxlpmen_in),
        .rxoutclk_out(rxoutclk_out),
        .rxpcsreset_in(rxpcsreset_in),
        .rxpd_in(rxpd_in),
        .rxpmareset_in(rxpmareset_in),
        .rxpmaresetdone_out(rxpmaresetdone_out),
        .rxpolarity_in(rxpolarity_in),
        .rxprbscntreset_in(rxprbscntreset_in),
        .rxprbserr_out(rxprbserr_out),
        .rxprbslocked_out(rxprbslocked_out),
        .rxprbssel_in(rxprbssel_in),
        .rxprgdivresetdone_out(rxprgdivresetdone_out),
        .rxrate_in(rxrate_in),
        .rxstartofseq_out(rxstartofseq_out),
        .rxusrclk2_in(rxusrclk2_in),
        .rxusrclk_in(rxusrclk_in),
        .txbufstatus_out(txbufstatus_out),
        .txdata_in(txdata_in),
        .txdiffctrl_in(txdiffctrl_in),
        .txelecidle_in(txelecidle_in),
        .txheader_in(txheader_in),
        .txinhibit_in(txinhibit_in),
        .txlatclk_in(txlatclk_in),
        .txoutclk_out(txoutclk_out),
        .txoutclksel_in(txoutclksel_in),
        .txpcsreset_in(txpcsreset_in),
        .txpd_in(txpd_in),
        .txpdelecidlemode_in(txpdelecidlemode_in),
        .txpmareset_in(txpmareset_in),
        .txpmaresetdone_out(txpmaresetdone_out),
        .txpolarity_in(txpolarity_in),
        .txpostcursor_in(txpostcursor_in),
        .txprbsforceerr_in(txprbsforceerr_in),
        .txprbssel_in(txprbssel_in),
        .txprecursor_in(txprecursor_in),
        .txprgdivresetdone_out(txprgdivresetdone_out),
        .txsequence_in(txsequence_in),
        .txusrclk2_in(txusrclk2_in),
        .txusrclk_in(txusrclk_in));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_local_clock_and_reset
   (rxusrclk_in,
    CLK,
    reset,
    dclk_reset,
    rxreset_rxusrclk2,
    areset_rxusrclk2,
    pma_resetout_rising_rxusrclk2,
    rxoutclk_out,
    refclk_n,
    dclk,
    gtrxreset_out_reg,
    rx_resetdone_int,
    tx_resetdone_int,
    rxprgdivresetdone_out,
    reset_0,
    signal_detect,
    AS,
    gt0_gtrxreset_i_reg,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output [0:0]rxusrclk_in;
  output CLK;
  output reset;
  output dclk_reset;
  output rxreset_rxusrclk2;
  output areset_rxusrclk2;
  output pma_resetout_rising_rxusrclk2;
  input [0:0]rxoutclk_out;
  input refclk_n;
  input dclk;
  input gtrxreset_out_reg;
  input rx_resetdone_int;
  input tx_resetdone_int;
  input [0:0]rxprgdivresetdone_out;
  input reset_0;
  input signal_detect;
  input [0:0]AS;
  input [0:0]gt0_gtrxreset_i_reg;
  output lopt;
  output lopt_1;
  input lopt_2;
  input lopt_3;

  wire \<const1> ;
  wire [0:0]AS;
  wire CLK;
  wire areset_rxusrclk2;
  wire coreclk_areset_sync_i_n_1;
  wire coreclk_reset_rx_sync_i_n_0;
  wire coreclk_reset_rx_tmp;
  wire data_out;
  wire dclk;
  wire dclk_areset;
  wire dclk_reset;
  wire dclk_reset_rx_tmp__0;
  wire [0:0]gt0_gtrxreset_i_reg;
  wire gtrxreset_out_reg;
  wire \^lopt ;
  wire \^lopt_1 ;
  wire pma_resetout_rising_rxusrclk2;
  wire refclk_n;
  wire reset;
  wire reset_0;
  wire reset_rx_bufg_gt;
  wire rx_resetdone_dclk;
  wire rx_resetdone_int;
  wire [0:0]rxoutclk_out;
  wire [0:0]rxprgdivresetdone_out;
  wire rxreset_rxusrclk2;
  wire [0:0]rxusrclk_in;
  wire signal_detect;
  wire signal_detect_coreclk;
  wire signal_detect_dclk;
  wire tx_resetdone_int;

  assign \^lopt  = lopt_2;
  assign \^lopt_1  = lopt_3;
  assign lopt = \<const1> ;
  assign lopt_1 = reset_rx_bufg_gt;
  VCC VCC
       (.P(\<const1> ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_18 areset_rxusrclk2_sync_i
       (.areset_rxusrclk2(areset_rxusrclk2),
        .gtrxreset_out_reg(CLK),
        .reset(reset_0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_19 coreclk_areset_sync_i
       (.AS(coreclk_reset_rx_tmp),
        .refclk_n(refclk_n),
        .reset(reset_0),
        .rx_resetdone_int(rx_resetdone_int),
        .signal_detect_coreclk(signal_detect_coreclk),
        .\sync1_r_reg[0]_0 (coreclk_areset_sync_i_n_1),
        .tx_resetdone_int(tx_resetdone_int));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_20 coreclk_reset_rx_sync_i
       (.AS(coreclk_reset_rx_sync_i_n_0),
        .data_out_reg_0(coreclk_reset_rx_tmp),
        .refclk_n(refclk_n));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_21 coreclk_reset_tx_sync_i
       (.AS(data_out),
        .data_out_reg_0(coreclk_areset_sync_i_n_1),
        .refclk_n(refclk_n));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_22 dclk_areset_sync_i
       (.dclk(dclk),
        .dclk_areset(dclk_areset),
        .reset(reset_0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_23 dclk_reset_rx_sync_i
       (.AS(dclk_reset_rx_tmp__0),
        .dclk(dclk),
        .dclk_reset(dclk_reset));
  LUT3 #(
    .INIT(8'hBF)) 
    dclk_reset_rx_tmp
       (.I0(dclk_areset),
        .I1(rx_resetdone_dclk),
        .I2(signal_detect_dclk),
        .O(dclk_reset_rx_tmp__0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_24 gtrxreset_rxusrclk2_sync_i
       (.gt0_gtrxreset_i_reg(gt0_gtrxreset_i_reg),
        .gtrxreset_out_reg(CLK));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_25 pma_resetout_rising_rxusrclk2_sync_i
       (.AS(AS),
        .gtrxreset_out_reg(CLK),
        .pma_resetout_rising_rxusrclk2(pma_resetout_rising_rxusrclk2));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG_GT rxoutclk_bufg_gt_i
       (.CE(\^lopt ),
        .CEMASK(1'b1),
        .CLR(\^lopt_1 ),
        .CLRMASK(1'b0),
        .DIV({1'b0,1'b0,1'b0}),
        .I(rxoutclk_out),
        .O(rxusrclk_in));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_26 rxreset_rxusrclk2_sync_i
       (.AS(coreclk_reset_rx_sync_i_n_0),
        .gtrxreset_out_reg(CLK),
        .rxreset_rxusrclk2(rxreset_rxusrclk2));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_27 rxresetdone_dclk_sync_i
       (.dclk(dclk),
        .rx_resetdone_dclk(rx_resetdone_dclk),
        .rx_resetdone_int(rx_resetdone_int));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG_GT rxusrclk2_bufg_gt_i
       (.CE(\^lopt ),
        .CEMASK(1'b1),
        .CLR(\^lopt_1 ),
        .CLRMASK(1'b0),
        .DIV({1'b0,1'b0,1'b1}),
        .I(rxoutclk_out),
        .O(CLK));
  LUT1 #(
    .INIT(2'h1)) 
    rxusrclk2_bufg_gt_i_i_1
       (.I0(rxprgdivresetdone_out),
        .O(reset_rx_bufg_gt));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_28 signal_detect_coreclk_sync_i
       (.refclk_n(refclk_n),
        .signal_detect(signal_detect),
        .signal_detect_coreclk(signal_detect_coreclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_29 signal_detect_dclk_sync_i
       (.dclk(dclk),
        .signal_detect(signal_detect),
        .signal_detect_dclk(signal_detect_dclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_30 txreset_txusrclk2_sync_i
       (.AS(data_out),
        .gtrxreset_out_reg(gtrxreset_out_reg),
        .reset(reset));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_shared_clock_and_reset
   (refclk,
    coreclk_out,
    txusrclk_out,
    CLK,
    areset_coreclk_out,
    areset_datapathclk_out,
    txuserrdy_out,
    Q,
    gttxreset_out,
    refclk_p,
    refclk_n,
    D,
    txoutclk_out,
    reset,
    AR,
    lopt,
    lopt_1,
    lopt_2);
  output refclk;
  output coreclk_out;
  output txusrclk_out;
  output CLK;
  output areset_coreclk_out;
  output areset_datapathclk_out;
  output txuserrdy_out;
  output [0:0]Q;
  output [0:0]gttxreset_out;
  input refclk_p;
  input refclk_n;
  input [0:0]D;
  input [0:0]txoutclk_out;
  input reset;
  input [0:0]AR;
  output lopt;
  input lopt_1;
  input lopt_2;

  wire \<const1> ;
  wire [0:0]AR;
  wire CLK;
  wire [0:0]D;
  wire [0:0]Q;
  wire areset_coreclk_out;
  wire areset_datapathclk_out;
  wire coreclk_out;
  wire [0:0]gttxreset_out;
  wire gttxreset_txusrclk2;
  wire \^lopt ;
  wire \^lopt_1 ;
  wire [8:0]p_0_in;
  wire qplllock_txusrclk2;
  wire refclk;
  wire refclk_n;
  wire refclk_p;
  wire refclkcopy;
  wire reset;
  wire \reset_counter[8]_i_3_n_0 ;
  wire \reset_counter_reg_n_0_[0] ;
  wire \reset_counter_reg_n_0_[1] ;
  wire \reset_counter_reg_n_0_[2] ;
  wire \reset_counter_reg_n_0_[3] ;
  wire \reset_counter_reg_n_0_[4] ;
  wire \reset_counter_reg_n_0_[5] ;
  wire \reset_counter_reg_n_0_[6] ;
  wire \reset_counter_reg_n_0_[7] ;
  wire [3:1]reset_pulse;
  wire sel;
  wire [0:0]txoutclk_out;
  wire txuserrdy_out;
  wire txusrclk_out;
  wire xlnx_opt_;
  wire xlnx_opt__1;

  assign \^lopt  = lopt_1;
  assign \^lopt_1  = lopt_2;
  assign lopt = \<const1> ;
  BUFG_GT_SYNC BUFG_GT_SYNC
       (.CE(1'b1),
        .CESYNC(xlnx_opt_),
        .CLK(refclkcopy),
        .CLR(1'b0),
        .CLRSYNC(xlnx_opt__1));
  VCC VCC
       (.P(\<const1> ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst areset_coreclk_sync_i
       (.SR(areset_coreclk_out),
        .refclk_n(coreclk_out),
        .reset(reset));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_0 areset_txusrclk2_sync_i
       (.CLK(CLK),
        .areset_datapathclk_out(areset_datapathclk_out),
        .reset(reset));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst_1 gttxreset_txusrclk2_sync_i
       (.CLK(CLK),
        .Q(gttxreset_out),
        .gttxreset_txusrclk2(gttxreset_txusrclk2));
  (* BOX_TYPE = "PRIMITIVE" *) 
  IBUFDS_GTE3 #(
    .REFCLK_EN_TX_PATH(1'b0),
    .REFCLK_HROW_CK_SEL(2'b00),
    .REFCLK_ICNTL_RX(2'b00)) 
    ibufds_inst
       (.CEB(1'b0),
        .I(refclk_p),
        .IB(refclk_n),
        .O(refclk),
        .ODIV2(refclkcopy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_ff_synchronizer_rst__parameterized0 qplllock_txusrclk2_sync_i
       (.AR(AR),
        .CLK(CLK),
        .qplllock_txusrclk2(qplllock_txusrclk2));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG_GT refclk_bufg_gt_i
       (.CE(xlnx_opt_),
        .CEMASK(1'b1),
        .CLR(xlnx_opt__1),
        .CLRMASK(1'b1),
        .DIV({1'b0,1'b0,1'b0}),
        .I(refclkcopy),
        .O(coreclk_out));
  LUT1 #(
    .INIT(2'h1)) 
    \reset_counter[0]_i_1 
       (.I0(\reset_counter_reg_n_0_[0] ),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair365" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \reset_counter[1]_i_1 
       (.I0(\reset_counter_reg_n_0_[0] ),
        .I1(\reset_counter_reg_n_0_[1] ),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair365" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \reset_counter[2]_i_1 
       (.I0(\reset_counter_reg_n_0_[1] ),
        .I1(\reset_counter_reg_n_0_[0] ),
        .I2(\reset_counter_reg_n_0_[2] ),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair363" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \reset_counter[3]_i_1 
       (.I0(\reset_counter_reg_n_0_[2] ),
        .I1(\reset_counter_reg_n_0_[0] ),
        .I2(\reset_counter_reg_n_0_[1] ),
        .I3(\reset_counter_reg_n_0_[3] ),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair363" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \reset_counter[4]_i_1 
       (.I0(\reset_counter_reg_n_0_[3] ),
        .I1(\reset_counter_reg_n_0_[1] ),
        .I2(\reset_counter_reg_n_0_[0] ),
        .I3(\reset_counter_reg_n_0_[2] ),
        .I4(\reset_counter_reg_n_0_[4] ),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \reset_counter[5]_i_1 
       (.I0(\reset_counter_reg_n_0_[4] ),
        .I1(\reset_counter_reg_n_0_[2] ),
        .I2(\reset_counter_reg_n_0_[0] ),
        .I3(\reset_counter_reg_n_0_[1] ),
        .I4(\reset_counter_reg_n_0_[3] ),
        .I5(\reset_counter_reg_n_0_[5] ),
        .O(p_0_in[5]));
  LUT2 #(
    .INIT(4'h9)) 
    \reset_counter[6]_i_1 
       (.I0(\reset_counter[8]_i_3_n_0 ),
        .I1(\reset_counter_reg_n_0_[6] ),
        .O(p_0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair364" *) 
  LUT3 #(
    .INIT(8'hD2)) 
    \reset_counter[7]_i_1 
       (.I0(\reset_counter_reg_n_0_[6] ),
        .I1(\reset_counter[8]_i_3_n_0 ),
        .I2(\reset_counter_reg_n_0_[7] ),
        .O(p_0_in[7]));
  LUT1 #(
    .INIT(2'h1)) 
    \reset_counter[8]_i_1 
       (.I0(Q),
        .O(sel));
  (* SOFT_HLUTNM = "soft_lutpair364" *) 
  LUT4 #(
    .INIT(16'hDF20)) 
    \reset_counter[8]_i_2 
       (.I0(\reset_counter_reg_n_0_[7] ),
        .I1(\reset_counter[8]_i_3_n_0 ),
        .I2(\reset_counter_reg_n_0_[6] ),
        .I3(Q),
        .O(p_0_in[8]));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \reset_counter[8]_i_3 
       (.I0(\reset_counter_reg_n_0_[4] ),
        .I1(\reset_counter_reg_n_0_[2] ),
        .I2(\reset_counter_reg_n_0_[0] ),
        .I3(\reset_counter_reg_n_0_[1] ),
        .I4(\reset_counter_reg_n_0_[3] ),
        .I5(\reset_counter_reg_n_0_[5] ),
        .O(\reset_counter[8]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reset_counter_reg[0] 
       (.C(coreclk_out),
        .CE(sel),
        .D(p_0_in[0]),
        .Q(\reset_counter_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reset_counter_reg[1] 
       (.C(coreclk_out),
        .CE(sel),
        .D(p_0_in[1]),
        .Q(\reset_counter_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reset_counter_reg[2] 
       (.C(coreclk_out),
        .CE(sel),
        .D(p_0_in[2]),
        .Q(\reset_counter_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reset_counter_reg[3] 
       (.C(coreclk_out),
        .CE(sel),
        .D(p_0_in[3]),
        .Q(\reset_counter_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reset_counter_reg[4] 
       (.C(coreclk_out),
        .CE(sel),
        .D(p_0_in[4]),
        .Q(\reset_counter_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reset_counter_reg[5] 
       (.C(coreclk_out),
        .CE(sel),
        .D(p_0_in[5]),
        .Q(\reset_counter_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reset_counter_reg[6] 
       (.C(coreclk_out),
        .CE(sel),
        .D(p_0_in[6]),
        .Q(\reset_counter_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reset_counter_reg[7] 
       (.C(coreclk_out),
        .CE(sel),
        .D(p_0_in[7]),
        .Q(\reset_counter_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reset_counter_reg[8] 
       (.C(coreclk_out),
        .CE(sel),
        .D(p_0_in[8]),
        .Q(Q),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \reset_pulse_reg[0] 
       (.C(coreclk_out),
        .CE(Q),
        .D(reset_pulse[1]),
        .Q(gttxreset_out),
        .R(areset_coreclk_out));
  FDSE #(
    .INIT(1'b1)) 
    \reset_pulse_reg[1] 
       (.C(coreclk_out),
        .CE(Q),
        .D(reset_pulse[2]),
        .Q(reset_pulse[1]),
        .S(areset_coreclk_out));
  FDSE #(
    .INIT(1'b1)) 
    \reset_pulse_reg[2] 
       (.C(coreclk_out),
        .CE(Q),
        .D(reset_pulse[3]),
        .Q(reset_pulse[2]),
        .S(areset_coreclk_out));
  FDSE #(
    .INIT(1'b1)) 
    \reset_pulse_reg[3] 
       (.C(coreclk_out),
        .CE(Q),
        .D(1'b0),
        .Q(reset_pulse[3]),
        .S(areset_coreclk_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG_GT txoutclk_bufg_gt_i
       (.CE(\^lopt ),
        .CEMASK(1'b1),
        .CLR(\^lopt_1 ),
        .CLRMASK(1'b0),
        .DIV({1'b0,1'b0,1'b0}),
        .I(txoutclk_out),
        .O(txusrclk_out));
  FDCE #(
    .INIT(1'b0)) 
    txuserrdy_reg
       (.C(CLK),
        .CE(1'b1),
        .CLR(gttxreset_txusrclk2),
        .D(qplllock_txusrclk2),
        .Q(txuserrdy_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG_GT txusrclk2_bufg_gt_i
       (.CE(\^lopt ),
        .CEMASK(1'b1),
        .CLR(\^lopt_1 ),
        .CLRMASK(1'b0),
        .DIV({1'b0,1'b0,1'b1}),
        .I(txoutclk_out),
        .O(CLK));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_support
   (refclk_p,
    refclk_n,
    dclk,
    coreclk_out,
    reset,
    sim_speedup_control,
    qpll0outclk_out,
    qpll0outrefclk_out,
    qpll0lock_out,
    areset_datapathclk_out,
    areset_coreclk_out,
    txusrclk_out,
    txusrclk2_out,
    gttxreset_out,
    gtrxreset_out,
    txuserrdy_out,
    rxrecclk_out,
    reset_counter_done_out,
    drp_gnt,
    drp_req,
    core_to_gt_drpen,
    core_to_gt_drpwe,
    core_to_gt_drpaddr,
    core_to_gt_drpdi,
    gt_drprdy,
    gt_drpdo,
    gt_drpen,
    gt_drpwe,
    gt_drpaddr,
    gt_drpdi,
    core_to_gt_drprdy,
    core_to_gt_drpdo,
    xgmii_txd,
    xgmii_txc,
    xgmii_rxd,
    xgmii_rxc,
    txp,
    txn,
    rxp,
    rxn,
    configuration_vector,
    status_vector,
    core_status,
    resetdone_out,
    signal_detect,
    tx_fault,
    pma_pmd_type,
    tx_disable);
  input refclk_p;
  input refclk_n;
  input dclk;
  output coreclk_out;
  input reset;
  input sim_speedup_control;
  output qpll0outclk_out;
  output qpll0outrefclk_out;
  output qpll0lock_out;
  output areset_datapathclk_out;
  output areset_coreclk_out;
  output txusrclk_out;
  output txusrclk2_out;
  output gttxreset_out;
  output gtrxreset_out;
  output txuserrdy_out;
  output rxrecclk_out;
  output reset_counter_done_out;
  input drp_gnt;
  output drp_req;
  output core_to_gt_drpen;
  output core_to_gt_drpwe;
  output [15:0]core_to_gt_drpaddr;
  output [15:0]core_to_gt_drpdi;
  output gt_drprdy;
  output [15:0]gt_drpdo;
  input gt_drpen;
  input gt_drpwe;
  input [15:0]gt_drpaddr;
  input [15:0]gt_drpdi;
  input core_to_gt_drprdy;
  input [15:0]core_to_gt_drpdo;
  input [63:0]xgmii_txd;
  input [7:0]xgmii_txc;
  output [63:0]xgmii_rxd;
  output [7:0]xgmii_rxc;
  output txp;
  output txn;
  input rxp;
  input rxn;
  input [535:0]configuration_vector;
  output [447:0]status_vector;
  output [7:0]core_status;
  output resetdone_out;
  input signal_detect;
  input tx_fault;
  input [2:0]pma_pmd_type;
  output tx_disable;

  wire \<const0> ;
  wire \<const1> ;
  wire areset_coreclk_out;
  wire areset_datapathclk_out;
  wire [535:0]configuration_vector;
  wire [0:0]\^core_status ;
  wire [1:1]\^core_to_gt_drpaddr ;
  wire [15:0]core_to_gt_drpdo;
  wire core_to_gt_drpen;
  wire core_to_gt_drprdy;
  wire core_to_gt_drpwe;
  wire coreclk_out;
  wire dclk;
  wire drp_gnt;
  wire drp_req;
  wire [15:0]gt_drpaddr;
  wire [15:0]gt_drpdi;
  wire [15:0]gt_drpdo;
  wire gt_drpen;
  wire gt_drprdy;
  wire gt_drpwe;
  wire gttxreset_out;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire [2:0]pma_pmd_type;
  wire qpll0lock_out;
  wire qpll0outclk_out;
  wire qpll0outrefclk_out;
  wire qpll0reset;
  wire refclk;
  wire refclk_n;
  wire refclk_p;
  wire reset;
  wire reset_counter_done_out;
  wire reset_tx_bufg_gt;
  wire resetdone_out;
  wire rst0;
  wire rxn;
  wire rxp;
  wire rxrecclk_out;
  wire signal_detect;
  wire [303:15]\^status_vector ;
  wire tx_disable;
  wire txn;
  wire txoutclk;
  wire txp;
  wire txuserrdy_out;
  wire txusrclk2_out;
  wire txusrclk_out;
  wire [7:0]xgmii_rxc;
  wire [63:0]xgmii_rxd;
  wire [7:0]xgmii_txc;
  wire [63:0]xgmii_txd;

  assign core_status[7] = \<const0> ;
  assign core_status[6] = \<const0> ;
  assign core_status[5] = \<const0> ;
  assign core_status[4] = \<const0> ;
  assign core_status[3] = \<const0> ;
  assign core_status[2] = \<const0> ;
  assign core_status[1] = \<const0> ;
  assign core_status[0] = \^core_status [0];
  assign core_to_gt_drpaddr[15] = \<const0> ;
  assign core_to_gt_drpaddr[14] = \<const0> ;
  assign core_to_gt_drpaddr[13] = \<const0> ;
  assign core_to_gt_drpaddr[12] = \<const0> ;
  assign core_to_gt_drpaddr[11] = \<const0> ;
  assign core_to_gt_drpaddr[10] = \<const0> ;
  assign core_to_gt_drpaddr[9] = \<const0> ;
  assign core_to_gt_drpaddr[8] = \^core_to_gt_drpaddr [1];
  assign core_to_gt_drpaddr[7] = \<const0> ;
  assign core_to_gt_drpaddr[6] = \^core_to_gt_drpaddr [1];
  assign core_to_gt_drpaddr[5] = \<const0> ;
  assign core_to_gt_drpaddr[4] = \^core_to_gt_drpaddr [1];
  assign core_to_gt_drpaddr[3] = \^core_to_gt_drpaddr [1];
  assign core_to_gt_drpaddr[2] = \^core_to_gt_drpaddr [1];
  assign core_to_gt_drpaddr[1] = \^core_to_gt_drpaddr [1];
  assign core_to_gt_drpaddr[0] = \<const0> ;
  assign core_to_gt_drpdi[15] = \<const0> ;
  assign core_to_gt_drpdi[14] = \<const0> ;
  assign core_to_gt_drpdi[13] = \<const0> ;
  assign core_to_gt_drpdi[12] = \<const0> ;
  assign core_to_gt_drpdi[11] = \<const0> ;
  assign core_to_gt_drpdi[10] = \<const0> ;
  assign core_to_gt_drpdi[9] = \<const0> ;
  assign core_to_gt_drpdi[8] = \<const0> ;
  assign core_to_gt_drpdi[7] = \<const0> ;
  assign core_to_gt_drpdi[6] = \<const0> ;
  assign core_to_gt_drpdi[5] = \<const0> ;
  assign core_to_gt_drpdi[4] = \<const0> ;
  assign core_to_gt_drpdi[3] = \<const0> ;
  assign core_to_gt_drpdi[2] = \<const0> ;
  assign core_to_gt_drpdi[1] = \<const0> ;
  assign core_to_gt_drpdi[0] = \<const0> ;
  assign gtrxreset_out = gttxreset_out;
  assign status_vector[447] = \<const0> ;
  assign status_vector[446] = \<const0> ;
  assign status_vector[445] = \<const0> ;
  assign status_vector[444] = \<const0> ;
  assign status_vector[443] = \<const0> ;
  assign status_vector[442] = \<const0> ;
  assign status_vector[441] = \<const0> ;
  assign status_vector[440] = \<const0> ;
  assign status_vector[439] = \<const0> ;
  assign status_vector[438] = \<const0> ;
  assign status_vector[437] = \<const0> ;
  assign status_vector[436] = \<const0> ;
  assign status_vector[435] = \<const0> ;
  assign status_vector[434] = \<const0> ;
  assign status_vector[433] = \<const0> ;
  assign status_vector[432] = \<const0> ;
  assign status_vector[431] = \<const0> ;
  assign status_vector[430] = \<const0> ;
  assign status_vector[429] = \<const0> ;
  assign status_vector[428] = \<const0> ;
  assign status_vector[427] = \<const0> ;
  assign status_vector[426] = \<const0> ;
  assign status_vector[425] = \<const0> ;
  assign status_vector[424] = \<const0> ;
  assign status_vector[423] = \<const0> ;
  assign status_vector[422] = \<const0> ;
  assign status_vector[421] = \<const0> ;
  assign status_vector[420] = \<const0> ;
  assign status_vector[419] = \<const0> ;
  assign status_vector[418] = \<const0> ;
  assign status_vector[417] = \<const0> ;
  assign status_vector[416] = \<const0> ;
  assign status_vector[415] = \<const0> ;
  assign status_vector[414] = \<const0> ;
  assign status_vector[413] = \<const0> ;
  assign status_vector[412] = \<const0> ;
  assign status_vector[411] = \<const0> ;
  assign status_vector[410] = \<const0> ;
  assign status_vector[409] = \<const0> ;
  assign status_vector[408] = \<const0> ;
  assign status_vector[407] = \<const0> ;
  assign status_vector[406] = \<const0> ;
  assign status_vector[405] = \<const0> ;
  assign status_vector[404] = \<const0> ;
  assign status_vector[403] = \<const0> ;
  assign status_vector[402] = \<const0> ;
  assign status_vector[401] = \<const0> ;
  assign status_vector[400] = \<const0> ;
  assign status_vector[399] = \<const0> ;
  assign status_vector[398] = \<const0> ;
  assign status_vector[397] = \<const0> ;
  assign status_vector[396] = \<const0> ;
  assign status_vector[395] = \<const0> ;
  assign status_vector[394] = \<const0> ;
  assign status_vector[393] = \<const0> ;
  assign status_vector[392] = \<const0> ;
  assign status_vector[391] = \<const0> ;
  assign status_vector[390] = \<const0> ;
  assign status_vector[389] = \<const0> ;
  assign status_vector[388] = \<const0> ;
  assign status_vector[387] = \<const0> ;
  assign status_vector[386] = \<const0> ;
  assign status_vector[385] = \<const0> ;
  assign status_vector[384] = \<const0> ;
  assign status_vector[383] = \<const0> ;
  assign status_vector[382] = \<const0> ;
  assign status_vector[381] = \<const0> ;
  assign status_vector[380] = \<const0> ;
  assign status_vector[379] = \<const0> ;
  assign status_vector[378] = \<const0> ;
  assign status_vector[377] = \<const0> ;
  assign status_vector[376] = \<const0> ;
  assign status_vector[375] = \<const0> ;
  assign status_vector[374] = \<const0> ;
  assign status_vector[373] = \<const0> ;
  assign status_vector[372] = \<const0> ;
  assign status_vector[371] = \<const0> ;
  assign status_vector[370] = \<const0> ;
  assign status_vector[369] = \<const0> ;
  assign status_vector[368] = \<const0> ;
  assign status_vector[367] = \<const0> ;
  assign status_vector[366] = \<const0> ;
  assign status_vector[365] = \<const0> ;
  assign status_vector[364] = \<const0> ;
  assign status_vector[363] = \<const0> ;
  assign status_vector[362] = \<const0> ;
  assign status_vector[361] = \<const0> ;
  assign status_vector[360] = \<const0> ;
  assign status_vector[359] = \<const0> ;
  assign status_vector[358] = \<const0> ;
  assign status_vector[357] = \<const0> ;
  assign status_vector[356] = \<const0> ;
  assign status_vector[355] = \<const0> ;
  assign status_vector[354] = \<const0> ;
  assign status_vector[353] = \<const0> ;
  assign status_vector[352] = \<const0> ;
  assign status_vector[351] = \<const0> ;
  assign status_vector[350] = \<const0> ;
  assign status_vector[349] = \<const0> ;
  assign status_vector[348] = \<const0> ;
  assign status_vector[347] = \<const0> ;
  assign status_vector[346] = \<const0> ;
  assign status_vector[345] = \<const0> ;
  assign status_vector[344] = \<const0> ;
  assign status_vector[343] = \<const0> ;
  assign status_vector[342] = \<const0> ;
  assign status_vector[341] = \<const0> ;
  assign status_vector[340] = \<const0> ;
  assign status_vector[339] = \<const0> ;
  assign status_vector[338] = \<const0> ;
  assign status_vector[337] = \<const0> ;
  assign status_vector[336] = \<const0> ;
  assign status_vector[335] = \<const0> ;
  assign status_vector[334] = \<const0> ;
  assign status_vector[333] = \<const0> ;
  assign status_vector[332] = \<const0> ;
  assign status_vector[331] = \<const0> ;
  assign status_vector[330] = \<const0> ;
  assign status_vector[329] = \<const0> ;
  assign status_vector[328] = \<const0> ;
  assign status_vector[327] = \<const0> ;
  assign status_vector[326] = \<const0> ;
  assign status_vector[325] = \<const0> ;
  assign status_vector[324] = \<const0> ;
  assign status_vector[323] = \<const0> ;
  assign status_vector[322] = \<const0> ;
  assign status_vector[321] = \<const0> ;
  assign status_vector[320] = \<const0> ;
  assign status_vector[319] = \<const0> ;
  assign status_vector[318] = \<const0> ;
  assign status_vector[317] = \<const0> ;
  assign status_vector[316] = \<const0> ;
  assign status_vector[315] = \<const0> ;
  assign status_vector[314] = \<const0> ;
  assign status_vector[313] = \<const0> ;
  assign status_vector[312] = \<const0> ;
  assign status_vector[311] = \<const0> ;
  assign status_vector[310] = \<const0> ;
  assign status_vector[309] = \<const0> ;
  assign status_vector[308] = \<const0> ;
  assign status_vector[307] = \<const0> ;
  assign status_vector[306] = \<const0> ;
  assign status_vector[305] = \<const0> ;
  assign status_vector[304] = \<const0> ;
  assign status_vector[303:272] = \^status_vector [303:272];
  assign status_vector[271] = \<const0> ;
  assign status_vector[270] = \<const0> ;
  assign status_vector[269] = \<const0> ;
  assign status_vector[268] = \^status_vector [268];
  assign status_vector[267] = \<const0> ;
  assign status_vector[266] = \<const0> ;
  assign status_vector[265] = \<const0> ;
  assign status_vector[264] = \<const0> ;
  assign status_vector[263] = \<const0> ;
  assign status_vector[262] = \<const0> ;
  assign status_vector[261] = \<const0> ;
  assign status_vector[260] = \<const0> ;
  assign status_vector[259] = \<const0> ;
  assign status_vector[258] = \<const1> ;
  assign status_vector[257:256] = \^status_vector [257:256];
  assign status_vector[255] = \<const1> ;
  assign status_vector[254] = \<const0> ;
  assign status_vector[253] = \<const0> ;
  assign status_vector[252] = \<const0> ;
  assign status_vector[251] = \<const0> ;
  assign status_vector[250] = \^status_vector [231];
  assign status_vector[249] = \<const0> ;
  assign status_vector[248] = \<const0> ;
  assign status_vector[247] = \<const0> ;
  assign status_vector[246] = \<const0> ;
  assign status_vector[245] = \<const0> ;
  assign status_vector[244] = \<const0> ;
  assign status_vector[243] = \<const0> ;
  assign status_vector[242] = \<const0> ;
  assign status_vector[241] = \<const0> ;
  assign status_vector[240] = \<const1> ;
  assign status_vector[239] = \<const0> ;
  assign status_vector[238] = \<const0> ;
  assign status_vector[237] = \<const0> ;
  assign status_vector[236] = \<const0> ;
  assign status_vector[235] = \<const0> ;
  assign status_vector[234] = \<const0> ;
  assign status_vector[233] = \<const0> ;
  assign status_vector[232] = \<const0> ;
  assign status_vector[231] = \^status_vector [231];
  assign status_vector[230] = \<const0> ;
  assign status_vector[229] = \<const0> ;
  assign status_vector[228] = \<const0> ;
  assign status_vector[227] = \<const0> ;
  assign status_vector[226] = \^status_vector [226];
  assign status_vector[225] = \<const0> ;
  assign status_vector[224] = \<const0> ;
  assign status_vector[223] = \^status_vector [223];
  assign status_vector[222] = \<const0> ;
  assign status_vector[221] = \<const0> ;
  assign status_vector[220] = \<const0> ;
  assign status_vector[219] = \<const0> ;
  assign status_vector[218] = \<const0> ;
  assign status_vector[217] = \<const0> ;
  assign status_vector[216] = \<const0> ;
  assign status_vector[215] = \<const0> ;
  assign status_vector[214] = \<const0> ;
  assign status_vector[213] = \<const0> ;
  assign status_vector[212] = \<const0> ;
  assign status_vector[211] = \<const0> ;
  assign status_vector[210] = \<const0> ;
  assign status_vector[209] = \<const0> ;
  assign status_vector[208] = \<const0> ;
  assign status_vector[207] = \<const0> ;
  assign status_vector[206] = \<const1> ;
  assign status_vector[205] = \<const1> ;
  assign status_vector[204] = \<const0> ;
  assign status_vector[203] = \<const0> ;
  assign status_vector[202] = \<const0> ;
  assign status_vector[201] = \<const0> ;
  assign status_vector[200] = \<const0> ;
  assign status_vector[199] = \<const0> ;
  assign status_vector[198] = \<const0> ;
  assign status_vector[197] = \<const0> ;
  assign status_vector[196] = \<const0> ;
  assign status_vector[195] = \<const0> ;
  assign status_vector[194] = \<const0> ;
  assign status_vector[193] = \<const1> ;
  assign status_vector[192] = \<const0> ;
  assign status_vector[191] = \<const0> ;
  assign status_vector[190] = \<const0> ;
  assign status_vector[189] = \<const0> ;
  assign status_vector[188] = \<const0> ;
  assign status_vector[187] = \<const0> ;
  assign status_vector[186] = \<const0> ;
  assign status_vector[185] = \<const0> ;
  assign status_vector[184] = \<const0> ;
  assign status_vector[183] = \<const0> ;
  assign status_vector[182] = \<const0> ;
  assign status_vector[181] = \<const0> ;
  assign status_vector[180] = \<const0> ;
  assign status_vector[179] = \<const0> ;
  assign status_vector[178] = \<const0> ;
  assign status_vector[177] = \<const0> ;
  assign status_vector[176] = \<const0> ;
  assign status_vector[175] = \<const0> ;
  assign status_vector[174] = \<const0> ;
  assign status_vector[173] = \<const0> ;
  assign status_vector[172] = \<const0> ;
  assign status_vector[171] = \<const0> ;
  assign status_vector[170] = \<const0> ;
  assign status_vector[169] = \<const0> ;
  assign status_vector[168] = \<const0> ;
  assign status_vector[167] = \<const0> ;
  assign status_vector[166] = \<const0> ;
  assign status_vector[165] = \<const0> ;
  assign status_vector[164] = \<const0> ;
  assign status_vector[163] = \<const0> ;
  assign status_vector[162] = \<const0> ;
  assign status_vector[161] = \<const0> ;
  assign status_vector[160] = \<const0> ;
  assign status_vector[159] = \<const0> ;
  assign status_vector[158] = \<const0> ;
  assign status_vector[157] = \<const0> ;
  assign status_vector[156] = \<const0> ;
  assign status_vector[155] = \<const0> ;
  assign status_vector[154] = \<const0> ;
  assign status_vector[153] = \<const0> ;
  assign status_vector[152] = \<const0> ;
  assign status_vector[151] = \<const0> ;
  assign status_vector[150] = \<const0> ;
  assign status_vector[149] = \<const0> ;
  assign status_vector[148] = \<const0> ;
  assign status_vector[147] = \<const0> ;
  assign status_vector[146] = \<const0> ;
  assign status_vector[145] = \<const0> ;
  assign status_vector[144] = \<const0> ;
  assign status_vector[143] = \<const0> ;
  assign status_vector[142] = \<const0> ;
  assign status_vector[141] = \<const0> ;
  assign status_vector[140] = \<const0> ;
  assign status_vector[139] = \<const0> ;
  assign status_vector[138] = \<const0> ;
  assign status_vector[137] = \<const0> ;
  assign status_vector[136] = \<const0> ;
  assign status_vector[135] = \<const0> ;
  assign status_vector[134] = \<const0> ;
  assign status_vector[133] = \<const0> ;
  assign status_vector[132] = \<const0> ;
  assign status_vector[131] = \<const0> ;
  assign status_vector[130] = \<const0> ;
  assign status_vector[129] = \<const0> ;
  assign status_vector[128] = \<const0> ;
  assign status_vector[127] = \<const0> ;
  assign status_vector[126] = \<const0> ;
  assign status_vector[125] = \<const0> ;
  assign status_vector[124] = \<const0> ;
  assign status_vector[123] = \<const0> ;
  assign status_vector[122] = \<const0> ;
  assign status_vector[121] = \<const0> ;
  assign status_vector[120] = \<const0> ;
  assign status_vector[119] = \<const0> ;
  assign status_vector[118] = \<const0> ;
  assign status_vector[117] = \<const0> ;
  assign status_vector[116] = \<const0> ;
  assign status_vector[115] = \<const0> ;
  assign status_vector[114] = \<const0> ;
  assign status_vector[113] = \<const0> ;
  assign status_vector[112] = \<const0> ;
  assign status_vector[111] = \<const0> ;
  assign status_vector[110] = \<const0> ;
  assign status_vector[109] = \<const0> ;
  assign status_vector[108] = \<const0> ;
  assign status_vector[107] = \<const0> ;
  assign status_vector[106] = \<const0> ;
  assign status_vector[105] = \<const0> ;
  assign status_vector[104] = \<const0> ;
  assign status_vector[103] = \<const0> ;
  assign status_vector[102] = \<const0> ;
  assign status_vector[101] = \<const0> ;
  assign status_vector[100] = \<const0> ;
  assign status_vector[99] = \<const0> ;
  assign status_vector[98] = \<const0> ;
  assign status_vector[97] = \<const0> ;
  assign status_vector[96] = \<const0> ;
  assign status_vector[95] = \<const0> ;
  assign status_vector[94] = \<const0> ;
  assign status_vector[93] = \<const0> ;
  assign status_vector[92] = \<const0> ;
  assign status_vector[91] = \<const0> ;
  assign status_vector[90] = \<const0> ;
  assign status_vector[89] = \<const0> ;
  assign status_vector[88] = \<const0> ;
  assign status_vector[87] = \<const0> ;
  assign status_vector[86] = \<const0> ;
  assign status_vector[85] = \<const0> ;
  assign status_vector[84] = \<const0> ;
  assign status_vector[83] = \<const0> ;
  assign status_vector[82] = \<const0> ;
  assign status_vector[81] = \<const0> ;
  assign status_vector[80] = \<const0> ;
  assign status_vector[79] = \<const0> ;
  assign status_vector[78] = \<const0> ;
  assign status_vector[77] = \<const0> ;
  assign status_vector[76] = \<const0> ;
  assign status_vector[75] = \<const0> ;
  assign status_vector[74] = \<const0> ;
  assign status_vector[73] = \<const0> ;
  assign status_vector[72] = \<const0> ;
  assign status_vector[71] = \<const0> ;
  assign status_vector[70] = \<const0> ;
  assign status_vector[69] = \<const0> ;
  assign status_vector[68] = \<const0> ;
  assign status_vector[67] = \<const0> ;
  assign status_vector[66] = \<const0> ;
  assign status_vector[65] = \<const0> ;
  assign status_vector[64] = \<const0> ;
  assign status_vector[63] = \<const0> ;
  assign status_vector[62] = \<const0> ;
  assign status_vector[61] = \<const0> ;
  assign status_vector[60] = \<const0> ;
  assign status_vector[59] = \<const0> ;
  assign status_vector[58] = \<const0> ;
  assign status_vector[57] = \<const0> ;
  assign status_vector[56] = \<const0> ;
  assign status_vector[55] = \<const0> ;
  assign status_vector[54] = \<const0> ;
  assign status_vector[53] = \<const0> ;
  assign status_vector[52] = \<const0> ;
  assign status_vector[51] = \<const0> ;
  assign status_vector[50] = \<const0> ;
  assign status_vector[49] = \<const0> ;
  assign status_vector[48] = \^status_vector [48];
  assign status_vector[47] = \<const1> ;
  assign status_vector[46] = \<const0> ;
  assign status_vector[45] = \<const1> ;
  assign status_vector[44] = \<const1> ;
  assign status_vector[43] = \<const0> ;
  assign status_vector[42] = \<const0> ;
  assign status_vector[41] = \<const1> ;
  assign status_vector[40] = \<const1> ;
  assign status_vector[39:37] = \^status_vector [39:37];
  assign status_vector[36] = \<const0> ;
  assign status_vector[35] = \<const0> ;
  assign status_vector[34] = \<const0> ;
  assign status_vector[33] = \<const0> ;
  assign status_vector[32] = \<const1> ;
  assign status_vector[31] = \<const0> ;
  assign status_vector[30] = \<const0> ;
  assign status_vector[29] = \<const0> ;
  assign status_vector[28] = \<const0> ;
  assign status_vector[27] = \<const0> ;
  assign status_vector[26] = \<const0> ;
  assign status_vector[25] = \<const0> ;
  assign status_vector[24] = \<const0> ;
  assign status_vector[23] = \<const0> ;
  assign status_vector[22] = \<const0> ;
  assign status_vector[21] = \<const0> ;
  assign status_vector[20] = \<const0> ;
  assign status_vector[19] = \<const0> ;
  assign status_vector[18] = \^status_vector [18];
  assign status_vector[17] = \<const0> ;
  assign status_vector[16] = \<const0> ;
  assign status_vector[15] = \^status_vector [15];
  assign status_vector[14] = \<const0> ;
  assign status_vector[13] = \<const0> ;
  assign status_vector[12] = \<const0> ;
  assign status_vector[11] = \<const0> ;
  assign status_vector[10] = \<const0> ;
  assign status_vector[9] = \<const0> ;
  assign status_vector[8] = \<const0> ;
  assign status_vector[7] = \<const0> ;
  assign status_vector[6] = \<const0> ;
  assign status_vector[5] = \<const0> ;
  assign status_vector[4] = \<const0> ;
  assign status_vector[3] = \<const0> ;
  assign status_vector[2] = \<const0> ;
  assign status_vector[1] = \<const0> ;
  assign status_vector[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_block ten_gig_eth_pcs_pma_block_i
       (.AR(rst0),
        .CLK(rxrecclk_out),
        .D(reset_tx_bufg_gt),
        .Q(gttxreset_out),
        .configuration_vector({configuration_vector[519:516],configuration_vector[512],configuration_vector[399:384],configuration_vector[245:240],configuration_vector[233:176],configuration_vector[169:110],configuration_vector[16:15],configuration_vector[0]}),
        .core_status(\^core_status ),
        .core_to_gt_drpaddr(\^core_to_gt_drpaddr ),
        .core_to_gt_drpdo(core_to_gt_drpdo),
        .core_to_gt_drpen(core_to_gt_drpen),
        .core_to_gt_drprdy(core_to_gt_drprdy),
        .core_to_gt_drpwe(core_to_gt_drpwe),
        .data_out_reg(areset_coreclk_out),
        .dclk(dclk),
        .drp_gnt(drp_gnt),
        .drp_req(drp_req),
        .gt_drpaddr(gt_drpaddr[8:0]),
        .gt_drpdi(gt_drpdi),
        .gt_drpdo(gt_drpdo),
        .gt_drpen(gt_drpen),
        .gt_drprdy(gt_drprdy),
        .gt_drpwe(gt_drpwe),
        .gtrxreset_out_reg(txusrclk2_out),
        .gtwiz_reset_qpll0reset_out(qpll0reset),
        .lopt(lopt),
        .lopt_1(reset_tx_bufg_gt),
        .lopt_2(lopt_1),
        .lopt_3(lopt_2),
        .pma_pmd_type(pma_pmd_type),
        .qpll0lock_out(qpll0lock_out),
        .qpll0outclk_out(qpll0outclk_out),
        .qpll0outrefclk_out(qpll0outrefclk_out),
        .refclk_n(coreclk_out),
        .reset(reset),
        .resetdone_out(resetdone_out),
        .rxn(rxn),
        .rxp(rxp),
        .signal_detect(signal_detect),
        .status_vector({\^status_vector [303:272],\^status_vector [268],\^status_vector [257:256],\^status_vector [231],\^status_vector [226],\^status_vector [223],\^status_vector [48],\^status_vector [39:37],\^status_vector [18],\^status_vector [15]}),
        .tx_disable(tx_disable),
        .txn(txn),
        .txoutclk_out(txoutclk),
        .txp(txp),
        .txusrclk_out(txusrclk_out),
        .xgmii_rxc(xgmii_rxc),
        .xgmii_rxd(xgmii_rxd),
        .xgmii_txc(xgmii_txc),
        .xgmii_txd(xgmii_txd));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_gt_common ten_gig_eth_pcs_pma_gt_common_block
       (.AR(rst0),
        .gtwiz_reset_qpll0reset_out(qpll0reset),
        .qpll0lock_out(qpll0lock_out),
        .qpll0outclk_out(qpll0outclk_out),
        .qpll0outrefclk_out(qpll0outrefclk_out),
        .refclk(refclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_bd_01e2_xpcs_0_shared_clock_and_reset ten_gig_eth_pcs_pma_shared_clock_reset_block
       (.AR(rst0),
        .CLK(txusrclk2_out),
        .D(reset_tx_bufg_gt),
        .Q(reset_counter_done_out),
        .areset_coreclk_out(areset_coreclk_out),
        .areset_datapathclk_out(areset_datapathclk_out),
        .coreclk_out(coreclk_out),
        .gttxreset_out(gttxreset_out),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .refclk(refclk),
        .refclk_n(refclk_n),
        .refclk_p(refclk_p),
        .reset(reset),
        .txoutclk_out(txoutclk),
        .txuserrdy_out(txuserrdy_out),
        .txusrclk_out(txusrclk_out));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_bit_synchronizer
   (rxresetdone_sync,
    rxresetdone_out,
    gtwiz_reset_clk_freerun_in);
  output rxresetdone_sync;
  input [0:0]rxresetdone_out;
  input [0:0]gtwiz_reset_clk_freerun_in;

  wire [0:0]gtwiz_reset_clk_freerun_in;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire [0:0]rxresetdone_out;
  wire rxresetdone_sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rxresetdone_out),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(rxresetdone_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_6_5_bit_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_bit_synchronizer_31
   (txresetdone_sync,
    txresetdone_out,
    gtwiz_reset_clk_freerun_in);
  output txresetdone_sync;
  input [0:0]txresetdone_out;
  input [0:0]gtwiz_reset_clk_freerun_in;

  wire [0:0]gtwiz_reset_clk_freerun_in;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire [0:0]txresetdone_out;
  wire txresetdone_sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(txresetdone_out),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(txresetdone_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_6_5_bit_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_bit_synchronizer_32
   (gtpowergood_sync,
    gtpowergood_out,
    gtwiz_reset_clk_freerun_in);
  output gtpowergood_sync;
  input [0:0]gtpowergood_out;
  input [0:0]gtwiz_reset_clk_freerun_in;

  wire [0:0]gtpowergood_out;
  wire gtpowergood_sync;
  wire [0:0]gtwiz_reset_clk_freerun_in;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(gtpowergood_out),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtpowergood_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_6_5_bit_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_bit_synchronizer_33
   (gtwiz_reset_rx_datapath_dly,
    in0,
    gtwiz_reset_clk_freerun_in);
  output gtwiz_reset_rx_datapath_dly;
  input in0;
  input [0:0]gtwiz_reset_clk_freerun_in;

  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire gtwiz_reset_rx_datapath_dly;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire in0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(in0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_rx_datapath_dly),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_6_5_bit_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_bit_synchronizer_34
   (gtwiz_reset_rx_pll_and_datapath_dly,
    D,
    in0,
    gtwiz_reset_clk_freerun_in,
    out,
    p_0_in11_out);
  output gtwiz_reset_rx_pll_and_datapath_dly;
  output [1:0]D;
  input in0;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [2:0]out;
  input p_0_in11_out;

  wire [1:0]D;
  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire gtwiz_reset_rx_pll_and_datapath_dly;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire in0;
  wire [2:0]out;
  wire p_0_in11_out;

  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT5 #(
    .INIT(32'h0303BFBC)) 
    \FSM_sequential_sm_reset_rx[0]_i_1 
       (.I0(p_0_in11_out),
        .I1(out[1]),
        .I2(out[2]),
        .I3(gtwiz_reset_rx_pll_and_datapath_dly),
        .I4(out[0]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT5 #(
    .INIT(32'h00F3FF11)) 
    \FSM_sequential_sm_reset_rx[1]_i_1 
       (.I0(gtwiz_reset_rx_pll_and_datapath_dly),
        .I1(out[2]),
        .I2(p_0_in11_out),
        .I3(out[0]),
        .I4(out[1]),
        .O(D[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(in0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_rx_pll_and_datapath_dly),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_6_5_bit_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_bit_synchronizer_35
   (gtwiz_reset_tx_datapath_dly,
    in0,
    gtwiz_reset_clk_freerun_in);
  output gtwiz_reset_tx_datapath_dly;
  input in0;
  input [0:0]gtwiz_reset_clk_freerun_in;

  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire gtwiz_reset_tx_datapath_dly;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire in0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(in0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_tx_datapath_dly),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_6_5_bit_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_bit_synchronizer_36
   (gtwiz_reset_tx_pll_and_datapath_dly,
    D,
    in0,
    gtwiz_reset_clk_freerun_in,
    out);
  output gtwiz_reset_tx_pll_and_datapath_dly;
  output [1:0]D;
  input in0;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [2:0]out;

  wire [1:0]D;
  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire gtwiz_reset_tx_pll_and_datapath_dly;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire in0;
  wire [2:0]out;

  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT4 #(
    .INIT(16'h5756)) 
    \FSM_sequential_sm_reset_tx[0]_i_1 
       (.I0(out[0]),
        .I1(out[2]),
        .I2(out[1]),
        .I3(gtwiz_reset_tx_pll_and_datapath_dly),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT4 #(
    .INIT(16'h03F1)) 
    \FSM_sequential_sm_reset_tx[1]_i_1 
       (.I0(gtwiz_reset_tx_pll_and_datapath_dly),
        .I1(out[2]),
        .I2(out[0]),
        .I3(out[1]),
        .O(D[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(in0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_tx_pll_and_datapath_dly),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_6_5_bit_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_bit_synchronizer_37
   (rxuserrdy_out_reg,
    sm_reset_rx_timer_clr0,
    sm_reset_rx_timer_clr_reg,
    gtwiz_userclk_rx_active_in,
    gtwiz_reset_clk_freerun_in,
    sm_reset_rx_timer_sat,
    sm_reset_rx_timer_clr_reg_0,
    out,
    rxresetdone_sync,
    gtwiz_reset_rx_any_sync,
    rxuserrdy_int,
    i_in_out_reg_0);
  output rxuserrdy_out_reg;
  output sm_reset_rx_timer_clr0;
  output sm_reset_rx_timer_clr_reg;
  input [0:0]gtwiz_userclk_rx_active_in;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input sm_reset_rx_timer_sat;
  input sm_reset_rx_timer_clr_reg_0;
  input [2:0]out;
  input rxresetdone_sync;
  input gtwiz_reset_rx_any_sync;
  input rxuserrdy_int;
  input i_in_out_reg_0;

  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire gtwiz_reset_rx_any_sync;
  wire gtwiz_reset_userclk_rx_active_sync;
  wire [0:0]gtwiz_userclk_rx_active_in;
  (* async_reg = "true" *) wire i_in_meta;
  wire i_in_out_reg_0;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire [2:0]out;
  wire rxresetdone_sync;
  wire rxuserrdy_int;
  wire rxuserrdy_out_reg;
  wire sm_reset_rx_timer_clr0;
  wire sm_reset_rx_timer_clr_i_2_n_0;
  wire sm_reset_rx_timer_clr_reg;
  wire sm_reset_rx_timer_clr_reg_0;
  wire sm_reset_rx_timer_sat;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(gtwiz_userclk_rx_active_in),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_userclk_rx_active_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFEDED00000800)) 
    rxuserrdy_out_i_1
       (.I0(out[0]),
        .I1(out[2]),
        .I2(out[1]),
        .I3(sm_reset_rx_timer_clr0),
        .I4(gtwiz_reset_rx_any_sync),
        .I5(rxuserrdy_int),
        .O(rxuserrdy_out_reg));
  LUT3 #(
    .INIT(8'h40)) 
    rxuserrdy_out_i_2
       (.I0(sm_reset_rx_timer_clr_reg_0),
        .I1(sm_reset_rx_timer_sat),
        .I2(gtwiz_reset_userclk_rx_active_sync),
        .O(sm_reset_rx_timer_clr0));
  LUT6 #(
    .INIT(64'hFAAFCCFA0AA0CC0A)) 
    sm_reset_rx_timer_clr_i_1
       (.I0(sm_reset_rx_timer_clr_i_2_n_0),
        .I1(i_in_out_reg_0),
        .I2(out[0]),
        .I3(out[1]),
        .I4(out[2]),
        .I5(sm_reset_rx_timer_clr_reg_0),
        .O(sm_reset_rx_timer_clr_reg));
  LUT6 #(
    .INIT(64'h0C080008FFFFFFFF)) 
    sm_reset_rx_timer_clr_i_2
       (.I0(gtwiz_reset_userclk_rx_active_sync),
        .I1(sm_reset_rx_timer_sat),
        .I2(sm_reset_rx_timer_clr_reg_0),
        .I3(out[1]),
        .I4(rxresetdone_sync),
        .I5(out[2]),
        .O(sm_reset_rx_timer_clr_i_2_n_0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_6_5_bit_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_bit_synchronizer_38
   (gtwiz_reset_userclk_tx_active_sync,
    txuserrdy_out_reg,
    E,
    gtwiz_userclk_tx_active_in,
    gtwiz_reset_clk_freerun_in,
    out,
    gtwiz_reset_tx_any_sync,
    txuserrdy_int,
    sm_reset_tx_timer_clr_reg,
    sm_reset_tx_timer_sat,
    i_in_out_reg_0,
    sm_reset_tx_timer_sat_reg,
    gtwiz_reset_tx_pll_and_datapath_dly,
    gtwiz_reset_tx_datapath_dly);
  output gtwiz_reset_userclk_tx_active_sync;
  output txuserrdy_out_reg;
  output [0:0]E;
  input [0:0]gtwiz_userclk_tx_active_in;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [2:0]out;
  input gtwiz_reset_tx_any_sync;
  input txuserrdy_int;
  input sm_reset_tx_timer_clr_reg;
  input sm_reset_tx_timer_sat;
  input i_in_out_reg_0;
  input sm_reset_tx_timer_sat_reg;
  input gtwiz_reset_tx_pll_and_datapath_dly;
  input gtwiz_reset_tx_datapath_dly;

  wire [0:0]E;
  wire \FSM_sequential_sm_reset_tx[2]_i_3_n_0 ;
  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire gtwiz_reset_tx_any_sync;
  wire gtwiz_reset_tx_datapath_dly;
  wire gtwiz_reset_tx_pll_and_datapath_dly;
  wire gtwiz_reset_userclk_tx_active_sync;
  wire [0:0]gtwiz_userclk_tx_active_in;
  (* async_reg = "true" *) wire i_in_meta;
  wire i_in_out_reg_0;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire [2:0]out;
  wire sm_reset_tx_timer_clr0;
  wire sm_reset_tx_timer_clr_reg;
  wire sm_reset_tx_timer_sat;
  wire sm_reset_tx_timer_sat_reg;
  wire txuserrdy_int;
  wire txuserrdy_out_reg;

  LUT6 #(
    .INIT(64'h40DD40DD40DD4088)) 
    \FSM_sequential_sm_reset_tx[2]_i_3 
       (.I0(out[1]),
        .I1(sm_reset_tx_timer_sat_reg),
        .I2(gtwiz_reset_userclk_tx_active_sync),
        .I3(out[2]),
        .I4(gtwiz_reset_tx_pll_and_datapath_dly),
        .I5(gtwiz_reset_tx_datapath_dly),
        .O(\FSM_sequential_sm_reset_tx[2]_i_3_n_0 ));
  MUXF7 \FSM_sequential_sm_reset_tx_reg[2]_i_1 
       (.I0(\FSM_sequential_sm_reset_tx[2]_i_3_n_0 ),
        .I1(i_in_out_reg_0),
        .O(E),
        .S(out[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(gtwiz_userclk_tx_active_in),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_userclk_tx_active_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFCCF00000008)) 
    txuserrdy_out_i_1
       (.I0(sm_reset_tx_timer_clr0),
        .I1(out[2]),
        .I2(out[1]),
        .I3(out[0]),
        .I4(gtwiz_reset_tx_any_sync),
        .I5(txuserrdy_int),
        .O(txuserrdy_out_reg));
  LUT3 #(
    .INIT(8'h40)) 
    txuserrdy_out_i_2
       (.I0(sm_reset_tx_timer_clr_reg),
        .I1(sm_reset_tx_timer_sat),
        .I2(gtwiz_reset_userclk_tx_active_sync),
        .O(sm_reset_tx_timer_clr0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_6_5_bit_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_bit_synchronizer_39
   (gtrxreset_out_reg,
    sm_reset_rx_timer_clr09_out,
    gtwiz_reset_rx_done_int_reg,
    \FSM_sequential_sm_reset_rx_reg[0] ,
    sm_reset_rx_timer_clr_reg,
    gtwiz_reset_qpll0lock_in,
    gtwiz_reset_clk_freerun_in,
    out,
    gtwiz_reset_rx_any_sync,
    gtrxreset_int,
    p_0_in11_out,
    gtwiz_reset_rx_done_int_reg_0,
    sm_reset_rx_timer_clr_reg_0,
    sm_reset_rx_timer_sat,
    sm_reset_rx_timer_clr0,
    sm_reset_rx_pll_timer_sat,
    sm_reset_rx_pll_timer_clr_reg);
  output gtrxreset_out_reg;
  output sm_reset_rx_timer_clr09_out;
  output gtwiz_reset_rx_done_int_reg;
  output \FSM_sequential_sm_reset_rx_reg[0] ;
  output sm_reset_rx_timer_clr_reg;
  input [0:0]gtwiz_reset_qpll0lock_in;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [2:0]out;
  input gtwiz_reset_rx_any_sync;
  input gtrxreset_int;
  input p_0_in11_out;
  input gtwiz_reset_rx_done_int_reg_0;
  input sm_reset_rx_timer_clr_reg_0;
  input sm_reset_rx_timer_sat;
  input sm_reset_rx_timer_clr0;
  input sm_reset_rx_pll_timer_sat;
  input sm_reset_rx_pll_timer_clr_reg;

  wire \FSM_sequential_sm_reset_rx_reg[0] ;
  wire gtrxreset_int;
  wire gtrxreset_out_reg;
  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire [0:0]gtwiz_reset_qpll0lock_in;
  wire gtwiz_reset_rx_any_sync;
  wire gtwiz_reset_rx_done_int_reg;
  wire gtwiz_reset_rx_done_int_reg_0;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire [2:0]out;
  wire p_0_in11_out;
  wire plllock_rx_sync;
  wire sm_reset_rx_pll_timer_clr_reg;
  wire sm_reset_rx_pll_timer_sat;
  wire sm_reset_rx_timer_clr0;
  wire sm_reset_rx_timer_clr09_out;
  wire sm_reset_rx_timer_clr_reg;
  wire sm_reset_rx_timer_clr_reg_0;
  wire sm_reset_rx_timer_sat;

  LUT6 #(
    .INIT(64'h3088308830BB3088)) 
    \FSM_sequential_sm_reset_rx[2]_i_4 
       (.I0(sm_reset_rx_timer_clr09_out),
        .I1(out[1]),
        .I2(sm_reset_rx_timer_clr0),
        .I3(out[2]),
        .I4(sm_reset_rx_pll_timer_sat),
        .I5(sm_reset_rx_pll_timer_clr_reg),
        .O(\FSM_sequential_sm_reset_rx_reg[0] ));
  LUT6 #(
    .INIT(64'hFFFFFF7F0000003C)) 
    gtrxreset_out_i_1
       (.I0(sm_reset_rx_timer_clr09_out),
        .I1(out[1]),
        .I2(out[0]),
        .I3(out[2]),
        .I4(gtwiz_reset_rx_any_sync),
        .I5(gtrxreset_int),
        .O(gtrxreset_out_reg));
  LUT6 #(
    .INIT(64'hFFFF77FF00800080)) 
    gtwiz_reset_rx_done_int_i_1
       (.I0(out[2]),
        .I1(out[1]),
        .I2(p_0_in11_out),
        .I3(out[0]),
        .I4(plllock_rx_sync),
        .I5(gtwiz_reset_rx_done_int_reg_0),
        .O(gtwiz_reset_rx_done_int_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(gtwiz_reset_qpll0lock_in),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(plllock_rx_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT3 #(
    .INIT(8'h40)) 
    sm_reset_rx_cdr_to_clr_i_3
       (.I0(sm_reset_rx_timer_clr_reg_0),
        .I1(sm_reset_rx_timer_sat),
        .I2(plllock_rx_sync),
        .O(sm_reset_rx_timer_clr09_out));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT4 #(
    .INIT(16'h00B0)) 
    sm_reset_rx_timer_clr_i_3
       (.I0(plllock_rx_sync),
        .I1(out[0]),
        .I2(sm_reset_rx_timer_sat),
        .I3(sm_reset_rx_timer_clr_reg_0),
        .O(sm_reset_rx_timer_clr_reg));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_6_5_bit_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_bit_synchronizer_40
   (gttxreset_out_reg,
    sm_reset_tx_timer_clr_reg,
    gtwiz_reset_tx_done_int_reg,
    \FSM_sequential_sm_reset_tx_reg[0] ,
    gtwiz_reset_qpll0lock_in,
    gtwiz_reset_clk_freerun_in,
    sm_reset_tx_timer_sat,
    sm_reset_tx_timer_clr_reg_0,
    out,
    gtwiz_reset_tx_any_sync,
    gttxreset_int,
    gtwiz_reset_tx_done_int0,
    gtwiz_reset_tx_done_int_reg_0,
    sm_reset_tx_timer_sat_reg,
    txresetdone_sync,
    sm_reset_tx_pll_timer_sat_reg,
    gtwiz_reset_userclk_tx_active_sync);
  output gttxreset_out_reg;
  output sm_reset_tx_timer_clr_reg;
  output gtwiz_reset_tx_done_int_reg;
  output \FSM_sequential_sm_reset_tx_reg[0] ;
  input [0:0]gtwiz_reset_qpll0lock_in;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input sm_reset_tx_timer_sat;
  input sm_reset_tx_timer_clr_reg_0;
  input [2:0]out;
  input gtwiz_reset_tx_any_sync;
  input gttxreset_int;
  input gtwiz_reset_tx_done_int0;
  input gtwiz_reset_tx_done_int_reg_0;
  input sm_reset_tx_timer_sat_reg;
  input txresetdone_sync;
  input sm_reset_tx_pll_timer_sat_reg;
  input gtwiz_reset_userclk_tx_active_sync;

  wire \FSM_sequential_sm_reset_tx_reg[0] ;
  wire gttxreset_int;
  wire gttxreset_out_reg;
  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire [0:0]gtwiz_reset_qpll0lock_in;
  wire gtwiz_reset_tx_any_sync;
  wire gtwiz_reset_tx_done_int0;
  wire gtwiz_reset_tx_done_int_reg;
  wire gtwiz_reset_tx_done_int_reg_0;
  wire gtwiz_reset_userclk_tx_active_sync;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire [2:0]out;
  wire plllock_tx_sync;
  wire sm_reset_tx_pll_timer_sat_reg;
  wire sm_reset_tx_timer_clr012_out;
  wire sm_reset_tx_timer_clr_i_2_n_0;
  wire sm_reset_tx_timer_clr_i_3_n_0;
  wire sm_reset_tx_timer_clr_reg;
  wire sm_reset_tx_timer_clr_reg_0;
  wire sm_reset_tx_timer_sat;
  wire sm_reset_tx_timer_sat_reg;
  wire txresetdone_sync;

  LUT6 #(
    .INIT(64'h3000B3B330008080)) 
    \FSM_sequential_sm_reset_tx[2]_i_4 
       (.I0(plllock_tx_sync),
        .I1(out[1]),
        .I2(sm_reset_tx_timer_sat_reg),
        .I3(txresetdone_sync),
        .I4(out[2]),
        .I5(sm_reset_tx_pll_timer_sat_reg),
        .O(\FSM_sequential_sm_reset_tx_reg[0] ));
  LUT6 #(
    .INIT(64'hFFFFFF7F0000003C)) 
    gttxreset_out_i_1
       (.I0(sm_reset_tx_timer_clr012_out),
        .I1(out[1]),
        .I2(out[0]),
        .I3(out[2]),
        .I4(gtwiz_reset_tx_any_sync),
        .I5(gttxreset_int),
        .O(gttxreset_out_reg));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT3 #(
    .INIT(8'h40)) 
    gttxreset_out_i_2
       (.I0(sm_reset_tx_timer_clr_reg_0),
        .I1(sm_reset_tx_timer_sat),
        .I2(plllock_tx_sync),
        .O(sm_reset_tx_timer_clr012_out));
  LUT6 #(
    .INIT(64'hFFCFFFFF00008080)) 
    gtwiz_reset_tx_done_int_i_1
       (.I0(gtwiz_reset_tx_done_int0),
        .I1(out[0]),
        .I2(out[2]),
        .I3(plllock_tx_sync),
        .I4(out[1]),
        .I5(gtwiz_reset_tx_done_int_reg_0),
        .O(gtwiz_reset_tx_done_int_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(gtwiz_reset_qpll0lock_in),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(plllock_tx_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEBEB282B)) 
    sm_reset_tx_timer_clr_i_1
       (.I0(sm_reset_tx_timer_clr_i_2_n_0),
        .I1(out[1]),
        .I2(out[2]),
        .I3(out[0]),
        .I4(sm_reset_tx_timer_clr_reg_0),
        .O(sm_reset_tx_timer_clr_reg));
  LUT6 #(
    .INIT(64'hCFEFC0C0CFE0C0C0)) 
    sm_reset_tx_timer_clr_i_2
       (.I0(txresetdone_sync),
        .I1(sm_reset_tx_timer_clr_i_3_n_0),
        .I2(out[0]),
        .I3(out[1]),
        .I4(sm_reset_tx_timer_sat_reg),
        .I5(gtwiz_reset_userclk_tx_active_sync),
        .O(sm_reset_tx_timer_clr_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT4 #(
    .INIT(16'h0008)) 
    sm_reset_tx_timer_clr_i_3
       (.I0(plllock_tx_sync),
        .I1(sm_reset_tx_timer_sat),
        .I2(sm_reset_tx_timer_clr_reg_0),
        .I3(out[2]),
        .O(sm_reset_tx_timer_clr_i_3_n_0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_6_5_bit_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_bit_synchronizer_41
   (gtwiz_reset_rx_cdr_stable_out,
    sm_reset_rx_cdr_to_clr_reg,
    rxprogdivreset_out_reg,
    E,
    rxcdrlock_out,
    gtwiz_reset_clk_freerun_in,
    out,
    sm_reset_rx_timer_clr09_out,
    sm_reset_rx_cdr_to_clr,
    gtwiz_reset_rx_any_sync,
    rxprogdivreset_int,
    sm_reset_rx_cdr_to_sat,
    \FSM_sequential_sm_reset_rx_reg[1] ,
    rxresetdone_sync,
    sm_reset_rx_timer_sat,
    sm_reset_rx_timer_clr_reg,
    gtwiz_reset_rx_pll_and_datapath_dly,
    gtwiz_reset_rx_datapath_dly);
  output [0:0]gtwiz_reset_rx_cdr_stable_out;
  output sm_reset_rx_cdr_to_clr_reg;
  output rxprogdivreset_out_reg;
  output [0:0]E;
  input [0:0]rxcdrlock_out;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [2:0]out;
  input sm_reset_rx_timer_clr09_out;
  input sm_reset_rx_cdr_to_clr;
  input gtwiz_reset_rx_any_sync;
  input rxprogdivreset_int;
  input sm_reset_rx_cdr_to_sat;
  input \FSM_sequential_sm_reset_rx_reg[1] ;
  input rxresetdone_sync;
  input sm_reset_rx_timer_sat;
  input sm_reset_rx_timer_clr_reg;
  input gtwiz_reset_rx_pll_and_datapath_dly;
  input gtwiz_reset_rx_datapath_dly;

  wire [0:0]E;
  wire \FSM_sequential_sm_reset_rx[2]_i_3_n_0 ;
  wire \FSM_sequential_sm_reset_rx[2]_i_5_n_0 ;
  wire \FSM_sequential_sm_reset_rx_reg[1] ;
  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire gtwiz_reset_rx_any_sync;
  wire [0:0]gtwiz_reset_rx_cdr_stable_out;
  wire gtwiz_reset_rx_datapath_dly;
  wire gtwiz_reset_rx_pll_and_datapath_dly;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire [2:0]out;
  wire [0:0]rxcdrlock_out;
  wire rxprogdivreset_int;
  wire rxprogdivreset_out_reg;
  wire rxresetdone_sync;
  wire sm_reset_rx_cdr_to_clr;
  wire sm_reset_rx_cdr_to_clr0;
  wire sm_reset_rx_cdr_to_clr_reg;
  wire sm_reset_rx_cdr_to_sat;
  wire sm_reset_rx_timer_clr09_out;
  wire sm_reset_rx_timer_clr_reg;
  wire sm_reset_rx_timer_sat;

  LUT6 #(
    .INIT(64'h00B0FFFF00B00000)) 
    \FSM_sequential_sm_reset_rx[2]_i_3 
       (.I0(rxresetdone_sync),
        .I1(out[2]),
        .I2(sm_reset_rx_timer_sat),
        .I3(sm_reset_rx_timer_clr_reg),
        .I4(out[1]),
        .I5(\FSM_sequential_sm_reset_rx[2]_i_5_n_0 ),
        .O(\FSM_sequential_sm_reset_rx[2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT5 #(
    .INIT(32'hEFEFEFE0)) 
    \FSM_sequential_sm_reset_rx[2]_i_5 
       (.I0(sm_reset_rx_cdr_to_sat),
        .I1(gtwiz_reset_rx_cdr_stable_out),
        .I2(out[2]),
        .I3(gtwiz_reset_rx_pll_and_datapath_dly),
        .I4(gtwiz_reset_rx_datapath_dly),
        .O(\FSM_sequential_sm_reset_rx[2]_i_5_n_0 ));
  MUXF7 \FSM_sequential_sm_reset_rx_reg[2]_i_1 
       (.I0(\FSM_sequential_sm_reset_rx[2]_i_3_n_0 ),
        .I1(\FSM_sequential_sm_reset_rx_reg[1] ),
        .O(E),
        .S(out[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rxcdrlock_out),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_rx_cdr_stable_out),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFF700000330)) 
    rxprogdivreset_out_i_1
       (.I0(sm_reset_rx_cdr_to_clr0),
        .I1(out[2]),
        .I2(out[1]),
        .I3(out[0]),
        .I4(gtwiz_reset_rx_any_sync),
        .I5(rxprogdivreset_int),
        .O(rxprogdivreset_out_reg));
  LUT6 #(
    .INIT(64'hFFFF3FFF02020303)) 
    sm_reset_rx_cdr_to_clr_i_1
       (.I0(sm_reset_rx_cdr_to_clr0),
        .I1(out[1]),
        .I2(out[0]),
        .I3(sm_reset_rx_timer_clr09_out),
        .I4(out[2]),
        .I5(sm_reset_rx_cdr_to_clr),
        .O(sm_reset_rx_cdr_to_clr_reg));
  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT2 #(
    .INIT(4'hE)) 
    sm_reset_rx_cdr_to_clr_i_2
       (.I0(sm_reset_rx_cdr_to_sat),
        .I1(gtwiz_reset_rx_cdr_stable_out),
        .O(sm_reset_rx_cdr_to_clr0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_gthe3_channel
   (drprdy_out,
    eyescandataerror_out,
    gthtxn_out,
    gthtxp_out,
    gtpowergood_out,
    rxcdrlock_out,
    rxoutclk_out,
    rxpmaresetdone_out,
    rxprbserr_out,
    rxprbslocked_out,
    rxprgdivresetdone_out,
    rxresetdone_out,
    txoutclk_out,
    txpmaresetdone_out,
    txprgdivresetdone_out,
    txresetdone_out,
    rxdata_out,
    drpdo_out,
    dmonitorout_out,
    rxdatavalid_out,
    rxheadervalid_out,
    rxstartofseq_out,
    txbufstatus_out,
    rxbufstatus_out,
    rxheader_out,
    cpllpd_in,
    drpclk_in,
    drpen_in,
    drpwe_in,
    eyescanreset_in,
    eyescantrigger_in,
    gthrxn_in,
    gthrxp_in,
    gtrxreset_int,
    gttxreset_int,
    qpll0clk_in,
    qpll0refclk_in,
    qpll1clk_in,
    qpll1refclk_in,
    rxbufreset_in,
    rxcdrhold_in,
    rxdfelpmreset_in,
    rxgearboxslip_in,
    rxlatclk_in,
    rxlpmen_in,
    rxpcsreset_in,
    rxpmareset_in,
    rxpolarity_in,
    rxprbscntreset_in,
    rxprogdivreset_int,
    rxuserrdy_int,
    rxusrclk_in,
    rxusrclk2_in,
    txelecidle_in,
    txinhibit_in,
    txlatclk_in,
    txpcsreset_in,
    txpdelecidlemode_in,
    txpmareset_in,
    txpolarity_in,
    txprbsforceerr_in,
    txprogdivreset_int,
    txuserrdy_int,
    txusrclk_in,
    txusrclk2_in,
    txdata_in,
    drpdi_in,
    pcsrsvdin_in,
    rxpd_in,
    txpd_in,
    loopback_in,
    rxrate_in,
    txoutclksel_in,
    rxprbssel_in,
    txdiffctrl_in,
    txprbssel_in,
    txpostcursor_in,
    txprecursor_in,
    txheader_in,
    txsequence_in,
    drpaddr_in,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7);
  output [0:0]drprdy_out;
  output [0:0]eyescandataerror_out;
  output [0:0]gthtxn_out;
  output [0:0]gthtxp_out;
  output [0:0]gtpowergood_out;
  output [0:0]rxcdrlock_out;
  output [0:0]rxoutclk_out;
  output [0:0]rxpmaresetdone_out;
  output [0:0]rxprbserr_out;
  output [0:0]rxprbslocked_out;
  output [0:0]rxprgdivresetdone_out;
  output [0:0]rxresetdone_out;
  output [0:0]txoutclk_out;
  output [0:0]txpmaresetdone_out;
  output [0:0]txprgdivresetdone_out;
  output [0:0]txresetdone_out;
  output [127:0]rxdata_out;
  output [15:0]drpdo_out;
  output [16:0]dmonitorout_out;
  output [1:0]rxdatavalid_out;
  output [1:0]rxheadervalid_out;
  output [1:0]rxstartofseq_out;
  output [1:0]txbufstatus_out;
  output [2:0]rxbufstatus_out;
  output [5:0]rxheader_out;
  input [0:0]cpllpd_in;
  input [0:0]drpclk_in;
  input [0:0]drpen_in;
  input [0:0]drpwe_in;
  input [0:0]eyescanreset_in;
  input [0:0]eyescantrigger_in;
  input [0:0]gthrxn_in;
  input [0:0]gthrxp_in;
  input gtrxreset_int;
  input gttxreset_int;
  input [0:0]qpll0clk_in;
  input [0:0]qpll0refclk_in;
  input [0:0]qpll1clk_in;
  input [0:0]qpll1refclk_in;
  input [0:0]rxbufreset_in;
  input [0:0]rxcdrhold_in;
  input [0:0]rxdfelpmreset_in;
  input [0:0]rxgearboxslip_in;
  input [0:0]rxlatclk_in;
  input [0:0]rxlpmen_in;
  input [0:0]rxpcsreset_in;
  input [0:0]rxpmareset_in;
  input [0:0]rxpolarity_in;
  input [0:0]rxprbscntreset_in;
  input rxprogdivreset_int;
  input rxuserrdy_int;
  input [0:0]rxusrclk_in;
  input [0:0]rxusrclk2_in;
  input [0:0]txelecidle_in;
  input [0:0]txinhibit_in;
  input [0:0]txlatclk_in;
  input [0:0]txpcsreset_in;
  input [0:0]txpdelecidlemode_in;
  input [0:0]txpmareset_in;
  input [0:0]txpolarity_in;
  input [0:0]txprbsforceerr_in;
  input txprogdivreset_int;
  input txuserrdy_int;
  input [0:0]txusrclk_in;
  input [0:0]txusrclk2_in;
  input [127:0]txdata_in;
  input [15:0]drpdi_in;
  input [15:0]pcsrsvdin_in;
  input [1:0]rxpd_in;
  input [1:0]txpd_in;
  input [2:0]loopback_in;
  input [2:0]rxrate_in;
  input [2:0]txoutclksel_in;
  input [3:0]rxprbssel_in;
  input [3:0]txdiffctrl_in;
  input [3:0]txprbssel_in;
  input [4:0]txpostcursor_in;
  input [4:0]txprecursor_in;
  input [5:0]txheader_in;
  input [6:0]txsequence_in;
  input [8:0]drpaddr_in;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  output lopt_7;

  wire [0:0]cpllpd_in;
  wire [16:0]dmonitorout_out;
  wire [8:0]drpaddr_in;
  wire [0:0]drpclk_in;
  wire [15:0]drpdi_in;
  wire [15:0]drpdo_out;
  wire [0:0]drpen_in;
  wire [0:0]drprdy_out;
  wire [0:0]drpwe_in;
  wire [0:0]eyescandataerror_out;
  wire [0:0]eyescanreset_in;
  wire [0:0]eyescantrigger_in;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_0 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_1 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_10 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_11 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_12 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_13 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_14 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_15 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_16 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_17 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_18 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_2 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_20 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_21 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_22 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_226 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_227 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_228 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_229 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_23 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_230 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_231 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_232 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_233 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_234 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_235 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_236 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_237 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_238 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_239 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_24 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_240 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_241 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_242 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_243 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_244 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_245 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_246 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_247 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_248 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_249 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_25 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_250 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_251 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_252 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_253 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_254 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_255 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_256 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_257 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_26 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_27 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_275 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_276 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_277 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_278 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_279 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_28 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_280 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_289 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_29 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_290 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_291 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_292 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_293 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_294 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_295 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_296 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_297 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_298 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_299 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_30 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_300 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_304 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_305 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_306 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_307 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_308 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_309 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_31 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_310 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_311 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_318 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_319 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_32 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_320 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_321 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_322 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_323 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_324 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_325 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_326 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_327 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_328 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_329 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_33 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_330 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_331 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_332 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_333 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_334 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_335 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_336 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_337 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_338 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_339 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_340 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_341 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_342 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_343 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_344 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_345 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_346 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_347 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_348 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_349 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_35 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_350 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_351 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_352 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_353 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_354 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_355 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_356 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_357 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_358 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_359 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_36 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_360 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_361 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_362 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_363 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_364 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_365 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_37 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_38 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_43 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_44 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_45 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_46 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_48 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_49 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_50 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_51 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_52 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_53 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_54 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_55 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_56 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_58 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_59 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_60 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_61 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_64 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_65 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_66 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_68 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_69 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_70 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_71 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_72 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_73 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_74 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_75 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_76 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_77 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_78 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_79 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_8 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_80 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_81 ;
  wire \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_9 ;
  wire [0:0]gthrxn_in;
  wire [0:0]gthrxp_in;
  wire [0:0]gthtxn_out;
  wire [0:0]gthtxp_out;
  wire [0:0]gtpowergood_out;
  wire gtrxreset_int;
  wire gttxreset_int;
  wire [2:0]loopback_in;
  wire lopt;
  wire lopt_1;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire [15:0]pcsrsvdin_in;
  wire [0:0]qpll0clk_in;
  wire [0:0]qpll0refclk_in;
  wire [0:0]qpll1clk_in;
  wire [0:0]qpll1refclk_in;
  wire [0:0]rxbufreset_in;
  wire [2:0]rxbufstatus_out;
  wire [0:0]rxcdrhold_in;
  wire [0:0]rxcdrlock_out;
  wire [127:0]rxdata_out;
  wire [1:0]rxdatavalid_out;
  wire [0:0]rxdfelpmreset_in;
  wire [0:0]rxgearboxslip_in;
  wire [5:0]rxheader_out;
  wire [1:0]rxheadervalid_out;
  wire [0:0]rxlatclk_in;
  wire [0:0]rxlpmen_in;
  wire [0:0]rxoutclk_out;
  wire [0:0]rxpcsreset_in;
  wire [1:0]rxpd_in;
  wire [0:0]rxpmareset_in;
  wire [0:0]rxpmaresetdone_out;
  wire [0:0]rxpolarity_in;
  wire [0:0]rxprbscntreset_in;
  wire [0:0]rxprbserr_out;
  wire [0:0]rxprbslocked_out;
  wire [3:0]rxprbssel_in;
  wire [0:0]rxprgdivresetdone_out;
  wire rxprogdivreset_int;
  wire [2:0]rxrate_in;
  wire [0:0]rxresetdone_out;
  wire [1:0]rxstartofseq_out;
  wire rxuserrdy_int;
  wire [0:0]rxusrclk2_in;
  wire [0:0]rxusrclk_in;
  wire [1:0]txbufstatus_out;
  wire [127:0]txdata_in;
  wire [3:0]txdiffctrl_in;
  wire [0:0]txelecidle_in;
  wire [5:0]txheader_in;
  wire [0:0]txinhibit_in;
  wire [0:0]txlatclk_in;
  wire [0:0]txoutclk_out;
  wire [2:0]txoutclksel_in;
  wire [0:0]txpcsreset_in;
  wire [1:0]txpd_in;
  wire [0:0]txpdelecidlemode_in;
  wire [0:0]txpmareset_in;
  wire [0:0]txpmaresetdone_out;
  wire [0:0]txpolarity_in;
  wire [4:0]txpostcursor_in;
  wire [0:0]txprbsforceerr_in;
  wire [3:0]txprbssel_in;
  wire [4:0]txprecursor_in;
  wire [0:0]txprgdivresetdone_out;
  wire txprogdivreset_int;
  wire [0:0]txresetdone_out;
  wire [6:0]txsequence_in;
  wire txuserrdy_int;
  wire [0:0]txusrclk2_in;
  wire [0:0]txusrclk_in;
  wire xlnx_opt_;
  wire xlnx_opt__1;
  wire xlnx_opt__2;
  wire xlnx_opt__3;

  assign \^lopt_2  = lopt_4;
  assign \^lopt_3  = lopt_5;
  assign lopt_2 = xlnx_opt_;
  assign lopt_3 = xlnx_opt__1;
  assign lopt_6 = xlnx_opt__2;
  assign lopt_7 = xlnx_opt__3;
  BUFG_GT_SYNC BUFG_GT_SYNC
       (.CE(lopt),
        .CESYNC(xlnx_opt_),
        .CLK(rxoutclk_out),
        .CLR(lopt_1),
        .CLRSYNC(xlnx_opt__1));
  BUFG_GT_SYNC BUFG_GT_SYNC_1
       (.CE(\^lopt_2 ),
        .CESYNC(xlnx_opt__2),
        .CLK(txoutclk_out),
        .CLR(\^lopt_3 ),
        .CLRSYNC(xlnx_opt__3));
  (* BOX_TYPE = "PRIMITIVE" *) 
  GTHE3_CHANNEL #(
    .ACJTAG_DEBUG_MODE(1'b0),
    .ACJTAG_MODE(1'b0),
    .ACJTAG_RESET(1'b0),
    .ADAPT_CFG0(16'hF800),
    .ADAPT_CFG1(16'h0000),
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b0000000000),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("FALSE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("FALSE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .A_RXOSCALRESET(1'b0),
    .A_RXPROGDIVRESET(1'b0),
    .A_TXPROGDIVRESET(1'b0),
    .CBCC_DATA_SOURCE_SEL("ENCODED"),
    .CDR_SWAP_MODE_EN(1'b0),
    .CHAN_BOND_KEEP_ALIGN("FALSE"),
    .CHAN_BOND_MAX_SKEW(1),
    .CHAN_BOND_SEQ_1_1(10'b0000000000),
    .CHAN_BOND_SEQ_1_2(10'b0000000000),
    .CHAN_BOND_SEQ_1_3(10'b0000000000),
    .CHAN_BOND_SEQ_1_4(10'b0000000000),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0000000000),
    .CHAN_BOND_SEQ_2_2(10'b0000000000),
    .CHAN_BOND_SEQ_2_3(10'b0000000000),
    .CHAN_BOND_SEQ_2_4(10'b0000000000),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("FALSE"),
    .CHAN_BOND_SEQ_LEN(1),
    .CLK_CORRECT_USE("FALSE"),
    .CLK_COR_KEEP_IDLE("FALSE"),
    .CLK_COR_MAX_LAT(20),
    .CLK_COR_MIN_LAT(18),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0000000000),
    .CLK_COR_SEQ_1_2(10'b0000000000),
    .CLK_COR_SEQ_1_3(10'b0000000000),
    .CLK_COR_SEQ_1_4(10'b0000000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0000000000),
    .CLK_COR_SEQ_2_2(10'b0000000000),
    .CLK_COR_SEQ_2_3(10'b0000000000),
    .CLK_COR_SEQ_2_4(10'b0000000000),
    .CLK_COR_SEQ_2_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .CPLL_CFG0(16'h67F8),
    .CPLL_CFG1(16'hA4AC),
    .CPLL_CFG2(16'h5007),
    .CPLL_CFG3(6'h00),
    .CPLL_FBDIV(2),
    .CPLL_FBDIV_45(5),
    .CPLL_INIT_CFG0(16'h02B2),
    .CPLL_INIT_CFG1(8'h00),
    .CPLL_LOCK_CFG(16'h01E8),
    .CPLL_REFCLK_DIV(1),
    .DDI_CTRL(2'b00),
    .DDI_REALIGN_WAIT(15),
    .DEC_MCOMMA_DETECT("FALSE"),
    .DEC_PCOMMA_DETECT("FALSE"),
    .DEC_VALID_COMMA_ONLY("FALSE"),
    .DFE_D_X_REL_POS(1'b0),
    .DFE_VCM_COMP_EN(1'b0),
    .DMONITOR_CFG0(10'h000),
    .DMONITOR_CFG1(8'h00),
    .ES_CLK_PHASE_SEL(1'b0),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h000),
    .ES_PMA_CFG(10'b0000000000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER0(16'h0000),
    .ES_QUALIFIER1(16'h0000),
    .ES_QUALIFIER2(16'h0000),
    .ES_QUALIFIER3(16'h0000),
    .ES_QUALIFIER4(16'h0000),
    .ES_QUAL_MASK0(16'h0000),
    .ES_QUAL_MASK1(16'h0000),
    .ES_QUAL_MASK2(16'h0000),
    .ES_QUAL_MASK3(16'h0000),
    .ES_QUAL_MASK4(16'h0000),
    .ES_SDATA_MASK0(16'h0000),
    .ES_SDATA_MASK1(16'h0000),
    .ES_SDATA_MASK2(16'h0000),
    .ES_SDATA_MASK3(16'h0000),
    .ES_SDATA_MASK4(16'h0000),
    .EVODD_PHI_CFG(11'b00000000000),
    .EYE_SCAN_SWAP_EN(1'b0),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("FALSE"),
    .GEARBOX_MODE(5'b10001),
    .GM_BIAS_SELECT(1'b0),
    .LOCAL_MASTER(1'b1),
    .OOBDIVCTL(2'b00),
    .OOB_PWRUP(1'b0),
    .PCI3_AUTO_REALIGN("OVR_1K_BLK"),
    .PCI3_PIPE_RX_ELECIDLE(1'b0),
    .PCI3_RX_ASYNC_EBUF_BYPASS(2'b00),
    .PCI3_RX_ELECIDLE_EI2_ENABLE(1'b0),
    .PCI3_RX_ELECIDLE_H2L_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_H2L_DISABLE(3'b000),
    .PCI3_RX_ELECIDLE_HI_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_LP4_DISABLE(1'b0),
    .PCI3_RX_FIFO_DISABLE(1'b0),
    .PCIE_BUFG_DIV_CTRL(16'h1000),
    .PCIE_RXPCS_CFG_GEN3(16'h02A4),
    .PCIE_RXPMA_CFG(16'h000A),
    .PCIE_TXPCS_CFG_GEN3(16'h2CA4),
    .PCIE_TXPMA_CFG(16'h000A),
    .PCS_PCIE_EN("FALSE"),
    .PCS_RSVD0(16'b0000000000000000),
    .PCS_RSVD1(3'b000),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h19),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PLL_SEL_MODE_GEN12(2'h3),
    .PLL_SEL_MODE_GEN3(2'h3),
    .PMA_RSV1(16'hF000),
    .PROCESS_PAR(3'b010),
    .RATE_SW_USE_DRP(1'b1),
    .RESET_POWERSAVE_DISABLE(1'b0),
    .RXBUFRESET_TIME(5'b00011),
    .RXBUF_ADDR_MODE("FAST"),
    .RXBUF_EIDLE_HI_CNT(4'b1000),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("FALSE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("FALSE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(0),
    .RXBUF_THRESH_OVRD("FALSE"),
    .RXBUF_THRESH_UNDFLW(0),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG0(16'h0000),
    .RXCDR_CFG0_GEN3(16'h0000),
    .RXCDR_CFG1(16'h0000),
    .RXCDR_CFG1_GEN3(16'h0000),
    .RXCDR_CFG2(16'h07E6),
    .RXCDR_CFG2_GEN3(16'h07E6),
    .RXCDR_CFG3(16'h0000),
    .RXCDR_CFG3_GEN3(16'h0000),
    .RXCDR_CFG4(16'h0000),
    .RXCDR_CFG4_GEN3(16'h0000),
    .RXCDR_CFG5(16'h0000),
    .RXCDR_CFG5_GEN3(16'h0000),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b0),
    .RXCDR_LOCK_CFG0(16'h4480),
    .RXCDR_LOCK_CFG1(16'h5FFF),
    .RXCDR_LOCK_CFG2(16'h77C3),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXCFOK_CFG0(16'h4000),
    .RXCFOK_CFG1(16'h0065),
    .RXCFOK_CFG2(16'h002E),
    .RXDFELPMRESET_TIME(7'b0001111),
    .RXDFELPM_KL_CFG0(16'h0000),
    .RXDFELPM_KL_CFG1(16'h0002),
    .RXDFELPM_KL_CFG2(16'h0000),
    .RXDFE_CFG0(16'h0A00),
    .RXDFE_CFG1(16'h0000),
    .RXDFE_GC_CFG0(16'h0000),
    .RXDFE_GC_CFG1(16'h7870),
    .RXDFE_GC_CFG2(16'h0000),
    .RXDFE_H2_CFG0(16'h0000),
    .RXDFE_H2_CFG1(16'h0000),
    .RXDFE_H3_CFG0(16'h4000),
    .RXDFE_H3_CFG1(16'h0000),
    .RXDFE_H4_CFG0(16'h2000),
    .RXDFE_H4_CFG1(16'h0003),
    .RXDFE_H5_CFG0(16'h2000),
    .RXDFE_H5_CFG1(16'h0003),
    .RXDFE_H6_CFG0(16'h2000),
    .RXDFE_H6_CFG1(16'h0000),
    .RXDFE_H7_CFG0(16'h2000),
    .RXDFE_H7_CFG1(16'h0000),
    .RXDFE_H8_CFG0(16'h2000),
    .RXDFE_H8_CFG1(16'h0000),
    .RXDFE_H9_CFG0(16'h2000),
    .RXDFE_H9_CFG1(16'h0000),
    .RXDFE_HA_CFG0(16'h2000),
    .RXDFE_HA_CFG1(16'h0000),
    .RXDFE_HB_CFG0(16'h2000),
    .RXDFE_HB_CFG1(16'h0000),
    .RXDFE_HC_CFG0(16'h0000),
    .RXDFE_HC_CFG1(16'h0000),
    .RXDFE_HD_CFG0(16'h0000),
    .RXDFE_HD_CFG1(16'h0000),
    .RXDFE_HE_CFG0(16'h0000),
    .RXDFE_HE_CFG1(16'h0000),
    .RXDFE_HF_CFG0(16'h0000),
    .RXDFE_HF_CFG1(16'h0000),
    .RXDFE_OS_CFG0(16'h8000),
    .RXDFE_OS_CFG1(16'h0000),
    .RXDFE_UT_CFG0(16'h8000),
    .RXDFE_UT_CFG1(16'h0003),
    .RXDFE_VP_CFG0(16'hAA00),
    .RXDFE_VP_CFG1(16'h0033),
    .RXDLY_CFG(16'h001F),
    .RXDLY_LCFG(16'h0030),
    .RXELECIDLE_CFG("Sigcfg_4"),
    .RXGBOX_FIFO_INIT_RD_ADDR(4),
    .RXGEARBOX_EN("TRUE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPM_CFG(16'h0000),
    .RXLPM_GC_CFG(16'h1000),
    .RXLPM_KH_CFG0(16'h0000),
    .RXLPM_KH_CFG1(16'h0002),
    .RXLPM_OS_CFG0(16'h8000),
    .RXLPM_OS_CFG1(16'h0002),
    .RXOOB_CFG(9'b000000110),
    .RXOOB_CLK_CFG("PMA"),
    .RXOSCALRESET_TIME(5'b00011),
    .RXOUT_DIV(1),
    .RXPCSRESET_TIME(5'b00011),
    .RXPHBEACON_CFG(16'h0000),
    .RXPHDLY_CFG(16'h2020),
    .RXPHSAMP_CFG(16'h2100),
    .RXPHSLIP_CFG(16'h6622),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPI_CFG0(2'b00),
    .RXPI_CFG1(2'b00),
    .RXPI_CFG2(2'b00),
    .RXPI_CFG3(2'b00),
    .RXPI_CFG4(1'b0),
    .RXPI_CFG5(1'b1),
    .RXPI_CFG6(3'b000),
    .RXPI_LPM(1'b0),
    .RXPI_VREFSEL(1'b0),
    .RXPMACLK_SEL("DATA"),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXPRBS_LINKACQ_CNT(15),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("OFF"),
    .RXSYNC_MULTILANE(1'b0),
    .RXSYNC_OVRD(1'b0),
    .RXSYNC_SKIP_DA(1'b0),
    .RX_AFE_CM_EN(1'b0),
    .RX_BIAS_CFG0(16'h0AB4),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CAPFF_SARC_ENB(1'b0),
    .RX_CLK25_DIV(7),
    .RX_CLKMUX_EN(1'b1),
    .RX_CLK_SLIP_OVRD(5'b00000),
    .RX_CM_BUF_CFG(4'b1010),
    .RX_CM_BUF_PD(1'b0),
    .RX_CM_SEL(2'b11),
    .RX_CM_TRIM(4'b1010),
    .RX_CTLE3_LPF(8'b00000001),
    .RX_DATA_WIDTH(64),
    .RX_DDI_SEL(6'b000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DFELPM_CFG0(4'b0110),
    .RX_DFELPM_CFG1(1'b1),
    .RX_DFELPM_KLKH_AGC_STUP_EN(1'b1),
    .RX_DFE_AGC_CFG0(2'b10),
    .RX_DFE_AGC_CFG1(3'b100),
    .RX_DFE_KL_LPM_KH_CFG0(2'b01),
    .RX_DFE_KL_LPM_KH_CFG1(3'b100),
    .RX_DFE_KL_LPM_KL_CFG0(2'b01),
    .RX_DFE_KL_LPM_KL_CFG1(3'b100),
    .RX_DFE_LPM_HOLD_DURING_EIDLE(1'b0),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_DIVRESET_TIME(5'b00001),
    .RX_EN_HI_LR(1'b1),
    .RX_EYESCAN_VS_CODE(7'b0000000),
    .RX_EYESCAN_VS_NEG_DIR(1'b0),
    .RX_EYESCAN_VS_RANGE(2'b00),
    .RX_EYESCAN_VS_UT_SIGN(1'b0),
    .RX_FABINT_USRCLK_FLOP(1'b0),
    .RX_INT_DATAWIDTH(1),
    .RX_PMA_POWER_SAVE(1'b0),
    .RX_PROGDIV_CFG(16.500000),
    .RX_SAMPLE_PERIOD(3'b111),
    .RX_SIG_VALID_DLY(11),
    .RX_SUM_DFETAPREP_EN(1'b0),
    .RX_SUM_IREF_TUNE(4'b0000),
    .RX_SUM_RES_CTRL(2'b00),
    .RX_SUM_VCMTUNE(4'b0000),
    .RX_SUM_VCM_OVWR(1'b0),
    .RX_SUM_VREF_TUNE(3'b000),
    .RX_TUNE_AFE_OS(2'b10),
    .RX_WIDEMODE_CDR(1'b1),
    .RX_XCLK_SEL("RXDES"),
    .SAS_MAX_COM(64),
    .SAS_MIN_COM(36),
    .SATA_BURST_SEQ_LEN(4'b1110),
    .SATA_BURST_VAL(3'b100),
    .SATA_CPLL_CFG("VCO_3000MHZ"),
    .SATA_EIDLE_VAL(3'b100),
    .SATA_MAX_BURST(8),
    .SATA_MAX_INIT(21),
    .SATA_MAX_WAKE(7),
    .SATA_MIN_BURST(4),
    .SATA_MIN_INIT(12),
    .SATA_MIN_WAKE(4),
    .SHOW_REALIGN_COMMA("TRUE"),
    .SIM_MODE("FAST"),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL(1'b0),
    .SIM_VERSION(2),
    .TAPDLY_SET_TX(2'h0),
    .TEMPERATUR_PAR(4'b0010),
    .TERM_RCAL_CFG(15'b100001000010000),
    .TERM_RCAL_OVRD(3'b000),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV0(8'h00),
    .TST_RSV1(8'h00),
    .TXBUF_EN("FALSE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h0009),
    .TXDLY_LCFG(16'h0050),
    .TXDRVBIAS_N(4'b1010),
    .TXDRVBIAS_P(4'b1010),
    .TXFIFO_ADDR_CFG("LOW"),
    .TXGBOX_FIFO_INIT_RD_ADDR(4),
    .TXGEARBOX_EN("TRUE"),
    .TXOUT_DIV(1),
    .TXPCSRESET_TIME(5'b00011),
    .TXPHDLY_CFG0(16'h2020),
    .TXPHDLY_CFG1(16'h0075),
    .TXPH_CFG(16'h0980),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPI_CFG0(2'b00),
    .TXPI_CFG1(2'b00),
    .TXPI_CFG2(2'b00),
    .TXPI_CFG3(1'b1),
    .TXPI_CFG4(1'b1),
    .TXPI_CFG5(3'b000),
    .TXPI_GRAY_SEL(1'b0),
    .TXPI_INVSTROBE_SEL(1'b0),
    .TXPI_LPM(1'b0),
    .TXPI_PPMCLK_SEL("TXUSRCLK2"),
    .TXPI_PPM_CFG(8'b00000000),
    .TXPI_SYNFREQ_PPM(3'b001),
    .TXPI_VREFSEL(1'b0),
    .TXPMARESET_TIME(5'b00011),
    .TXSYNC_MULTILANE(1'b0),
    .TXSYNC_OVRD(1'b0),
    .TXSYNC_SKIP_DA(1'b0),
    .TX_CLK25_DIV(7),
    .TX_CLKMUX_EN(1'b1),
    .TX_DATA_WIDTH(64),
    .TX_DCD_CFG(6'b000010),
    .TX_DCD_EN(1'b0),
    .TX_DEEMPH0(6'b000000),
    .TX_DEEMPH1(6'b000000),
    .TX_DIVRESET_TIME(5'b00001),
    .TX_DRIVE_MODE("DIRECT"),
    .TX_EIDLE_ASSERT_DELAY(3'b100),
    .TX_EIDLE_DEASSERT_DELAY(3'b011),
    .TX_EML_PHI_TUNE(1'b0),
    .TX_FABINT_USRCLK_FLOP(1'b0),
    .TX_IDLE_DATA_ZERO(1'b0),
    .TX_INT_DATAWIDTH(1),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1001111),
    .TX_MARGIN_FULL_1(7'b1001110),
    .TX_MARGIN_FULL_2(7'b1001100),
    .TX_MARGIN_FULL_3(7'b1001010),
    .TX_MARGIN_FULL_4(7'b1001000),
    .TX_MARGIN_LOW_0(7'b1000110),
    .TX_MARGIN_LOW_1(7'b1000101),
    .TX_MARGIN_LOW_2(7'b1000011),
    .TX_MARGIN_LOW_3(7'b1000010),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_MODE_SEL(3'b000),
    .TX_PMADATA_OPT(1'b0),
    .TX_PMA_POWER_SAVE(1'b0),
    .TX_PROGCLK_SEL("PREPI"),
    .TX_PROGDIV_CFG(16.500000),
    .TX_QPI_STATUS_EN(1'b0),
    .TX_RXDETECT_CFG(14'h0032),
    .TX_RXDETECT_REF(3'b100),
    .TX_SAMPLE_PERIOD(3'b111),
    .TX_SARC_LPBK_ENB(1'b0),
    .TX_XCLK_SEL("TXOUT"),
    .USE_PCS_CLK_PHASE_SEL(1'b0),
    .WB_MODE(2'b00)) 
    \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST 
       (.BUFGTCE({\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_289 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_290 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_291 }),
        .BUFGTCEMASK({\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_292 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_293 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_294 }),
        .BUFGTDIV({\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_357 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_358 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_359 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_360 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_361 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_362 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_363 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_364 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_365 }),
        .BUFGTRESET({\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_295 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_296 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_297 }),
        .BUFGTRSTMASK({\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_298 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_299 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_300 }),
        .CFGRESET(1'b0),
        .CLKRSVD0(1'b0),
        .CLKRSVD1(1'b0),
        .CPLLFBCLKLOST(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_0 ),
        .CPLLLOCK(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_1 ),
        .CPLLLOCKDETCLK(1'b0),
        .CPLLLOCKEN(1'b0),
        .CPLLPD(cpllpd_in),
        .CPLLREFCLKLOST(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_2 ),
        .CPLLREFCLKSEL({1'b0,1'b0,1'b1}),
        .CPLLRESET(1'b1),
        .DMONFIFORESET(1'b0),
        .DMONITORCLK(1'b0),
        .DMONITOROUT(dmonitorout_out),
        .DRPADDR(drpaddr_in),
        .DRPCLK(drpclk_in),
        .DRPDI(drpdi_in),
        .DRPDO(drpdo_out),
        .DRPEN(drpen_in),
        .DRPRDY(drprdy_out),
        .DRPWE(drpwe_in),
        .EVODDPHICALDONE(1'b0),
        .EVODDPHICALSTART(1'b0),
        .EVODDPHIDRDEN(1'b0),
        .EVODDPHIDWREN(1'b0),
        .EVODDPHIXRDEN(1'b0),
        .EVODDPHIXWREN(1'b0),
        .EYESCANDATAERROR(eyescandataerror_out),
        .EYESCANMODE(1'b0),
        .EYESCANRESET(eyescanreset_in),
        .EYESCANTRIGGER(eyescantrigger_in),
        .GTGREFCLK(1'b0),
        .GTHRXN(gthrxn_in),
        .GTHRXP(gthrxp_in),
        .GTHTXN(gthtxn_out),
        .GTHTXP(gthtxp_out),
        .GTNORTHREFCLK0(1'b0),
        .GTNORTHREFCLK1(1'b0),
        .GTPOWERGOOD(gtpowergood_out),
        .GTREFCLK0(1'b0),
        .GTREFCLK1(1'b0),
        .GTREFCLKMONITOR(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_8 ),
        .GTRESETSEL(1'b0),
        .GTRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .GTRXRESET(gtrxreset_int),
        .GTSOUTHREFCLK0(1'b0),
        .GTSOUTHREFCLK1(1'b0),
        .GTTXRESET(gttxreset_int),
        .LOOPBACK(loopback_in),
        .LPBKRXTXSEREN(1'b0),
        .LPBKTXRXSEREN(1'b0),
        .PCIEEQRXEQADAPTDONE(1'b0),
        .PCIERATEGEN3(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_9 ),
        .PCIERATEIDLE(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_10 ),
        .PCIERATEQPLLPD({\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_275 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_276 }),
        .PCIERATEQPLLRESET({\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_277 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_278 }),
        .PCIERSTIDLE(1'b0),
        .PCIERSTTXSYNCSTART(1'b0),
        .PCIESYNCTXSYNCDONE(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_11 ),
        .PCIEUSERGEN3RDY(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_12 ),
        .PCIEUSERPHYSTATUSRST(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_13 ),
        .PCIEUSERRATEDONE(1'b0),
        .PCIEUSERRATESTART(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_14 ),
        .PCSRSVDIN(pcsrsvdin_in),
        .PCSRSVDIN2({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDOUT({\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_70 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_71 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_72 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_73 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_74 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_75 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_76 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_77 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_78 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_79 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_80 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_81 }),
        .PHYSTATUS(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_15 ),
        .PINRSRVDAS({\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_325 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_326 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_327 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_328 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_329 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_330 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_331 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_332 }),
        .PMARSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .QPLL0CLK(qpll0clk_in),
        .QPLL0REFCLK(qpll0refclk_in),
        .QPLL1CLK(qpll1clk_in),
        .QPLL1REFCLK(qpll1refclk_in),
        .RESETEXCEPTION(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_16 ),
        .RESETOVRD(1'b0),
        .RSTCLKENTX(1'b0),
        .RX8B10BEN(1'b0),
        .RXBUFRESET(rxbufreset_in),
        .RXBUFSTATUS(rxbufstatus_out),
        .RXBYTEISALIGNED(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_17 ),
        .RXBYTEREALIGN(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_18 ),
        .RXCDRFREQRESET(1'b0),
        .RXCDRHOLD(rxcdrhold_in),
        .RXCDRLOCK(rxcdrlock_out),
        .RXCDROVRDEN(1'b0),
        .RXCDRPHDONE(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_20 ),
        .RXCDRRESET(1'b0),
        .RXCDRRESETRSV(1'b0),
        .RXCHANBONDSEQ(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_21 ),
        .RXCHANISALIGNED(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_22 ),
        .RXCHANREALIGN(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_23 ),
        .RXCHBONDEN(1'b0),
        .RXCHBONDI({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXCHBONDLEVEL({1'b0,1'b0,1'b0}),
        .RXCHBONDMASTER(1'b0),
        .RXCHBONDO({\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_307 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_308 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_309 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_310 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_311 }),
        .RXCHBONDSLAVE(1'b0),
        .RXCLKCORCNT({\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_279 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_280 }),
        .RXCOMINITDET(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_24 ),
        .RXCOMMADET(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_25 ),
        .RXCOMMADETEN(1'b0),
        .RXCOMSASDET(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_26 ),
        .RXCOMWAKEDET(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_27 ),
        .RXCTRL0({\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_226 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_227 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_228 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_229 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_230 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_231 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_232 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_233 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_234 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_235 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_236 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_237 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_238 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_239 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_240 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_241 }),
        .RXCTRL1({\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_242 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_243 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_244 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_245 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_246 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_247 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_248 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_249 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_250 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_251 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_252 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_253 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_254 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_255 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_256 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_257 }),
        .RXCTRL2({\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_333 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_334 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_335 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_336 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_337 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_338 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_339 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_340 }),
        .RXCTRL3({\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_341 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_342 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_343 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_344 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_345 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_346 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_347 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_348 }),
        .RXDATA(rxdata_out),
        .RXDATAEXTENDRSVD({\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_349 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_350 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_351 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_352 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_353 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_354 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_355 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_356 }),
        .RXDATAVALID(rxdatavalid_out),
        .RXDFEAGCCTRL({1'b0,1'b1}),
        .RXDFEAGCHOLD(1'b0),
        .RXDFEAGCOVRDEN(1'b0),
        .RXDFELFHOLD(1'b0),
        .RXDFELFOVRDEN(1'b0),
        .RXDFELPMRESET(rxdfelpmreset_in),
        .RXDFETAP10HOLD(1'b0),
        .RXDFETAP10OVRDEN(1'b0),
        .RXDFETAP11HOLD(1'b0),
        .RXDFETAP11OVRDEN(1'b0),
        .RXDFETAP12HOLD(1'b0),
        .RXDFETAP12OVRDEN(1'b0),
        .RXDFETAP13HOLD(1'b0),
        .RXDFETAP13OVRDEN(1'b0),
        .RXDFETAP14HOLD(1'b0),
        .RXDFETAP14OVRDEN(1'b0),
        .RXDFETAP15HOLD(1'b0),
        .RXDFETAP15OVRDEN(1'b0),
        .RXDFETAP2HOLD(1'b0),
        .RXDFETAP2OVRDEN(1'b0),
        .RXDFETAP3HOLD(1'b0),
        .RXDFETAP3OVRDEN(1'b0),
        .RXDFETAP4HOLD(1'b0),
        .RXDFETAP4OVRDEN(1'b0),
        .RXDFETAP5HOLD(1'b0),
        .RXDFETAP5OVRDEN(1'b0),
        .RXDFETAP6HOLD(1'b0),
        .RXDFETAP6OVRDEN(1'b0),
        .RXDFETAP7HOLD(1'b0),
        .RXDFETAP7OVRDEN(1'b0),
        .RXDFETAP8HOLD(1'b0),
        .RXDFETAP8OVRDEN(1'b0),
        .RXDFETAP9HOLD(1'b0),
        .RXDFETAP9OVRDEN(1'b0),
        .RXDFEUTHOLD(1'b0),
        .RXDFEUTOVRDEN(1'b0),
        .RXDFEVPHOLD(1'b0),
        .RXDFEVPOVRDEN(1'b0),
        .RXDFEVSEN(1'b0),
        .RXDFEXYDEN(1'b1),
        .RXDLYBYPASS(1'b1),
        .RXDLYEN(1'b0),
        .RXDLYOVRDEN(1'b0),
        .RXDLYSRESET(1'b0),
        .RXDLYSRESETDONE(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_28 ),
        .RXELECIDLE(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_29 ),
        .RXELECIDLEMODE({1'b1,1'b1}),
        .RXGEARBOXSLIP(rxgearboxslip_in),
        .RXHEADER(rxheader_out),
        .RXHEADERVALID(rxheadervalid_out),
        .RXLATCLK(rxlatclk_in),
        .RXLPMEN(rxlpmen_in),
        .RXLPMGCHOLD(1'b0),
        .RXLPMGCOVRDEN(1'b0),
        .RXLPMHFHOLD(1'b0),
        .RXLPMHFOVRDEN(1'b0),
        .RXLPMLFHOLD(1'b0),
        .RXLPMLFKLOVRDEN(1'b0),
        .RXLPMOSHOLD(1'b0),
        .RXLPMOSOVRDEN(1'b0),
        .RXMCOMMAALIGNEN(1'b0),
        .RXMONITOROUT({\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_318 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_319 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_320 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_321 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_322 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_323 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_324 }),
        .RXMONITORSEL({1'b0,1'b0}),
        .RXOOBRESET(1'b0),
        .RXOSCALRESET(1'b0),
        .RXOSHOLD(1'b0),
        .RXOSINTCFG({1'b1,1'b1,1'b0,1'b1}),
        .RXOSINTDONE(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_30 ),
        .RXOSINTEN(1'b1),
        .RXOSINTHOLD(1'b0),
        .RXOSINTOVRDEN(1'b0),
        .RXOSINTSTARTED(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_31 ),
        .RXOSINTSTROBE(1'b0),
        .RXOSINTSTROBEDONE(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_32 ),
        .RXOSINTSTROBESTARTED(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_33 ),
        .RXOSINTTESTOVRDEN(1'b0),
        .RXOSOVRDEN(1'b0),
        .RXOUTCLK(rxoutclk_out),
        .RXOUTCLKFABRIC(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_35 ),
        .RXOUTCLKPCS(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_36 ),
        .RXOUTCLKSEL({1'b1,1'b0,1'b1}),
        .RXPCOMMAALIGNEN(1'b0),
        .RXPCSRESET(rxpcsreset_in),
        .RXPD(rxpd_in),
        .RXPHALIGN(1'b0),
        .RXPHALIGNDONE(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_37 ),
        .RXPHALIGNEN(1'b0),
        .RXPHALIGNERR(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_38 ),
        .RXPHDLYPD(1'b1),
        .RXPHDLYRESET(1'b0),
        .RXPHOVRDEN(1'b0),
        .RXPLLCLKSEL({1'b1,1'b1}),
        .RXPMARESET(rxpmareset_in),
        .RXPMARESETDONE(rxpmaresetdone_out),
        .RXPOLARITY(rxpolarity_in),
        .RXPRBSCNTRESET(rxprbscntreset_in),
        .RXPRBSERR(rxprbserr_out),
        .RXPRBSLOCKED(rxprbslocked_out),
        .RXPRBSSEL(rxprbssel_in),
        .RXPRGDIVRESETDONE(rxprgdivresetdone_out),
        .RXPROGDIVRESET(rxprogdivreset_int),
        .RXQPIEN(1'b0),
        .RXQPISENN(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_43 ),
        .RXQPISENP(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_44 ),
        .RXRATE(rxrate_in),
        .RXRATEDONE(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_45 ),
        .RXRATEMODE(1'b0),
        .RXRECCLKOUT(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_46 ),
        .RXRESETDONE(rxresetdone_out),
        .RXSLIDE(1'b0),
        .RXSLIDERDY(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_48 ),
        .RXSLIPDONE(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_49 ),
        .RXSLIPOUTCLK(1'b0),
        .RXSLIPOUTCLKRDY(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_50 ),
        .RXSLIPPMA(1'b0),
        .RXSLIPPMARDY(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_51 ),
        .RXSTARTOFSEQ(rxstartofseq_out),
        .RXSTATUS({\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_304 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_305 ,\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_306 }),
        .RXSYNCALLIN(1'b0),
        .RXSYNCDONE(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_52 ),
        .RXSYNCIN(1'b0),
        .RXSYNCMODE(1'b0),
        .RXSYNCOUT(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_53 ),
        .RXSYSCLKSEL({1'b1,1'b0}),
        .RXUSERRDY(rxuserrdy_int),
        .RXUSRCLK(rxusrclk_in),
        .RXUSRCLK2(rxusrclk2_in),
        .RXVALID(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_54 ),
        .SIGVALIDCLK(1'b0),
        .TSTIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BBYPASS({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BEN(1'b0),
        .TXBUFDIFFCTRL({1'b0,1'b0,1'b0}),
        .TXBUFSTATUS(txbufstatus_out),
        .TXCOMFINISH(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_55 ),
        .TXCOMINIT(1'b0),
        .TXCOMSAS(1'b0),
        .TXCOMWAKE(1'b0),
        .TXCTRL0({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCTRL1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCTRL2({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXDATA(txdata_in),
        .TXDATAEXTENDRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXDEEMPH(1'b0),
        .TXDETECTRX(1'b0),
        .TXDIFFCTRL(txdiffctrl_in),
        .TXDIFFPD(1'b0),
        .TXDLYBYPASS(1'b1),
        .TXDLYEN(1'b0),
        .TXDLYHOLD(1'b0),
        .TXDLYOVRDEN(1'b0),
        .TXDLYSRESET(1'b0),
        .TXDLYSRESETDONE(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_56 ),
        .TXDLYUPDOWN(1'b0),
        .TXELECIDLE(txelecidle_in),
        .TXHEADER(txheader_in),
        .TXINHIBIT(txinhibit_in),
        .TXLATCLK(txlatclk_in),
        .TXMAINCURSOR({1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXMARGIN({1'b0,1'b0,1'b0}),
        .TXOUTCLK(txoutclk_out),
        .TXOUTCLKFABRIC(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_58 ),
        .TXOUTCLKPCS(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_59 ),
        .TXOUTCLKSEL(txoutclksel_in),
        .TXPCSRESET(txpcsreset_in),
        .TXPD(txpd_in),
        .TXPDELECIDLEMODE(txpdelecidlemode_in),
        .TXPHALIGN(1'b0),
        .TXPHALIGNDONE(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_60 ),
        .TXPHALIGNEN(1'b0),
        .TXPHDLYPD(1'b1),
        .TXPHDLYRESET(1'b0),
        .TXPHDLYTSTCLK(1'b0),
        .TXPHINIT(1'b0),
        .TXPHINITDONE(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_61 ),
        .TXPHOVRDEN(1'b0),
        .TXPIPPMEN(1'b0),
        .TXPIPPMOVRDEN(1'b0),
        .TXPIPPMPD(1'b0),
        .TXPIPPMSEL(1'b0),
        .TXPIPPMSTEPSIZE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPISOPD(1'b0),
        .TXPLLCLKSEL({1'b1,1'b1}),
        .TXPMARESET(txpmareset_in),
        .TXPMARESETDONE(txpmaresetdone_out),
        .TXPOLARITY(txpolarity_in),
        .TXPOSTCURSOR(txpostcursor_in),
        .TXPOSTCURSORINV(1'b0),
        .TXPRBSFORCEERR(txprbsforceerr_in),
        .TXPRBSSEL(txprbssel_in),
        .TXPRECURSOR(txprecursor_in),
        .TXPRECURSORINV(1'b0),
        .TXPRGDIVRESETDONE(txprgdivresetdone_out),
        .TXPROGDIVRESET(txprogdivreset_int),
        .TXQPIBIASEN(1'b0),
        .TXQPISENN(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_64 ),
        .TXQPISENP(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_65 ),
        .TXQPISTRONGPDOWN(1'b0),
        .TXQPIWEAKPUP(1'b0),
        .TXRATE({1'b0,1'b0,1'b0}),
        .TXRATEDONE(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_66 ),
        .TXRATEMODE(1'b0),
        .TXRESETDONE(txresetdone_out),
        .TXSEQUENCE(txsequence_in),
        .TXSWING(1'b0),
        .TXSYNCALLIN(1'b0),
        .TXSYNCDONE(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_68 ),
        .TXSYNCIN(1'b0),
        .TXSYNCMODE(1'b0),
        .TXSYNCOUT(\gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST_n_69 ),
        .TXSYSCLKSEL({1'b1,1'b0}),
        .TXUSERRDY(txuserrdy_int),
        .TXUSRCLK(txusrclk_in),
        .TXUSRCLK2(txusrclk2_in));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_gthe3_common
   (qpll0lock_out,
    qpll0outclk_out,
    qpll0outrefclk_out,
    AR,
    refclk,
    gtwiz_reset_qpll0reset_out);
  output qpll0lock_out;
  output qpll0outclk_out;
  output qpll0outrefclk_out;
  output [0:0]AR;
  input refclk;
  input [0:0]gtwiz_reset_qpll0reset_out;

  wire [0:0]AR;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_0 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_1 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_10 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_11 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_12 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_13 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_14 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_15 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_16 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_17 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_18 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_19 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_20 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_21 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_22 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_23 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_24 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_25 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_26 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_27 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_28 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_29 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_30 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_31 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_32 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_33 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_34 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_35 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_36 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_37 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_38 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_39 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_40 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_41 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_42 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_43 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_44 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_45 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_46 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_47 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_48 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_49 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_5 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_50 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_51 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_52 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_53 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_54 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_55 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_56 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_57 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_58 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_59 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_6 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_60 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_61 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_62 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_63 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_64 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_7 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_8 ;
  wire \gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_9 ;
  wire [0:0]gtwiz_reset_qpll0reset_out;
  wire qpll0lock_out;
  wire qpll0outclk_out;
  wire qpll0outrefclk_out;
  wire refclk;

  (* BOX_TYPE = "PRIMITIVE" *) 
  GTHE3_COMMON #(
    .BIAS_CFG0(16'h0000),
    .BIAS_CFG1(16'h0000),
    .BIAS_CFG2(16'h0000),
    .BIAS_CFG3(16'h0040),
    .BIAS_CFG4(16'h0000),
    .BIAS_CFG_RSVD(10'b0000000000),
    .COMMON_CFG0(16'h0000),
    .COMMON_CFG1(16'h0000),
    .POR_CFG(16'h0004),
    .QPLL0_CFG0(16'h321C),
    .QPLL0_CFG1(16'h1018),
    .QPLL0_CFG1_G3(16'h1018),
    .QPLL0_CFG2(16'h0048),
    .QPLL0_CFG2_G3(16'h0048),
    .QPLL0_CFG3(16'h0120),
    .QPLL0_CFG4(16'h0009),
    .QPLL0_CP(10'b0000011111),
    .QPLL0_CP_G3(10'b1111111111),
    .QPLL0_FBDIV(66),
    .QPLL0_FBDIV_G3(80),
    .QPLL0_INIT_CFG0(16'h02B2),
    .QPLL0_INIT_CFG1(8'h00),
    .QPLL0_LOCK_CFG(16'h21E8),
    .QPLL0_LOCK_CFG_G3(16'h21E8),
    .QPLL0_LPF(10'b1111111100),
    .QPLL0_LPF_G3(10'b0000010101),
    .QPLL0_REFCLK_DIV(1),
    .QPLL0_SDM_CFG0(16'b0000000000000000),
    .QPLL0_SDM_CFG1(16'b0000000000000000),
    .QPLL0_SDM_CFG2(16'b0000000000000000),
    .QPLL1_CFG0(16'h321C),
    .QPLL1_CFG1(16'h1018),
    .QPLL1_CFG1_G3(16'h1018),
    .QPLL1_CFG2(16'h0040),
    .QPLL1_CFG2_G3(16'h0040),
    .QPLL1_CFG3(16'h0120),
    .QPLL1_CFG4(16'h0009),
    .QPLL1_CP(10'b0001111111),
    .QPLL1_CP_G3(10'b1111111111),
    .QPLL1_FBDIV(66),
    .QPLL1_FBDIV_G3(80),
    .QPLL1_INIT_CFG0(16'h02B2),
    .QPLL1_INIT_CFG1(8'h00),
    .QPLL1_LOCK_CFG(16'h21E8),
    .QPLL1_LOCK_CFG_G3(16'h21E8),
    .QPLL1_LPF(10'b1111111100),
    .QPLL1_LPF_G3(10'b0000010101),
    .QPLL1_REFCLK_DIV(1),
    .QPLL1_SDM_CFG0(16'b0000000000000000),
    .QPLL1_SDM_CFG1(16'b0000000000000000),
    .QPLL1_SDM_CFG2(16'b0000000000000000),
    .RSVD_ATTR0(16'h0000),
    .RSVD_ATTR1(16'h0000),
    .RSVD_ATTR2(16'h0000),
    .RSVD_ATTR3(16'h0000),
    .RXRECCLKOUT0_SEL(2'b00),
    .RXRECCLKOUT1_SEL(2'b00),
    .SARC_EN(1'b1),
    .SARC_SEL(1'b0),
    .SDM0DATA1_0(16'b0000000000000000),
    .SDM0DATA1_1(9'b000000000),
    .SDM0INITSEED0_0(16'b0000000000000000),
    .SDM0INITSEED0_1(9'b000000000),
    .SDM0_DATA_PIN_SEL(1'b0),
    .SDM0_WIDTH_PIN_SEL(1'b0),
    .SDM1DATA1_0(16'b0000000000000000),
    .SDM1DATA1_1(9'b000000000),
    .SDM1INITSEED0_0(16'b0000000000000000),
    .SDM1INITSEED0_1(9'b000000000),
    .SDM1_DATA_PIN_SEL(1'b0),
    .SDM1_WIDTH_PIN_SEL(1'b0),
    .SIM_MODE("FAST"),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_VERSION(2)) 
    \gthe3_common_gen.GTHE3_COMMON_PRIM_INST 
       (.BGBYPASSB(1'b1),
        .BGMONITORENB(1'b1),
        .BGPDB(1'b1),
        .BGRCALOVRD({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .BGRCALOVRDENB(1'b1),
        .DRPADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DRPCLK(1'b0),
        .DRPDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DRPDO({\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_13 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_14 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_15 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_16 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_17 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_18 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_19 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_20 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_21 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_22 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_23 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_24 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_25 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_26 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_27 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_28 }),
        .DRPEN(1'b0),
        .DRPRDY(\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_0 ),
        .DRPWE(1'b0),
        .GTGREFCLK0(1'b0),
        .GTGREFCLK1(1'b0),
        .GTNORTHREFCLK00(1'b0),
        .GTNORTHREFCLK01(1'b0),
        .GTNORTHREFCLK10(1'b0),
        .GTNORTHREFCLK11(1'b0),
        .GTREFCLK00(refclk),
        .GTREFCLK01(1'b0),
        .GTREFCLK10(1'b0),
        .GTREFCLK11(1'b0),
        .GTSOUTHREFCLK00(1'b0),
        .GTSOUTHREFCLK01(1'b0),
        .GTSOUTHREFCLK10(1'b0),
        .GTSOUTHREFCLK11(1'b0),
        .PMARSVD0({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PMARSVD1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PMARSVDOUT0({\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_33 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_34 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_35 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_36 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_37 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_38 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_39 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_40 }),
        .PMARSVDOUT1({\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_41 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_42 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_43 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_44 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_45 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_46 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_47 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_48 }),
        .QPLL0CLKRSVD0(1'b0),
        .QPLL0CLKRSVD1(1'b0),
        .QPLL0FBCLKLOST(\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_1 ),
        .QPLL0LOCK(qpll0lock_out),
        .QPLL0LOCKDETCLK(1'b0),
        .QPLL0LOCKEN(1'b1),
        .QPLL0OUTCLK(qpll0outclk_out),
        .QPLL0OUTREFCLK(qpll0outrefclk_out),
        .QPLL0PD(1'b0),
        .QPLL0REFCLKLOST(\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_5 ),
        .QPLL0REFCLKSEL({1'b0,1'b0,1'b1}),
        .QPLL0RESET(gtwiz_reset_qpll0reset_out),
        .QPLL1CLKRSVD0(1'b0),
        .QPLL1CLKRSVD1(1'b0),
        .QPLL1FBCLKLOST(\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_6 ),
        .QPLL1LOCK(\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_7 ),
        .QPLL1LOCKDETCLK(1'b0),
        .QPLL1LOCKEN(1'b0),
        .QPLL1OUTCLK(\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_8 ),
        .QPLL1OUTREFCLK(\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_9 ),
        .QPLL1PD(1'b1),
        .QPLL1REFCLKLOST(\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_10 ),
        .QPLL1REFCLKSEL({1'b0,1'b0,1'b1}),
        .QPLL1RESET(1'b1),
        .QPLLDMONITOR0({\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_49 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_50 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_51 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_52 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_53 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_54 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_55 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_56 }),
        .QPLLDMONITOR1({\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_57 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_58 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_59 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_60 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_61 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_62 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_63 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_64 }),
        .QPLLRSVD1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .QPLLRSVD2({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .QPLLRSVD3({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .QPLLRSVD4({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RCALENB(1'b1),
        .REFCLKOUTMONITOR0(\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_11 ),
        .REFCLKOUTMONITOR1(\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_12 ),
        .RXRECCLK0_SEL({\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_29 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_30 }),
        .RXRECCLK1_SEL({\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_31 ,\gthe3_common_gen.GTHE3_COMMON_PRIM_INST_n_32 }));
  LUT1 #(
    .INIT(2'h1)) 
    \sync1_r[4]_i_1__0 
       (.I0(qpll0lock_out),
        .O(AR));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_gtwiz_reset
   (txprogdivreset_int,
    gtwiz_reset_tx_done_out,
    gtwiz_reset_rx_cdr_stable_out,
    gtwiz_reset_rx_done_out,
    gttxreset_int,
    txuserrdy_int,
    rxprogdivreset_int,
    gtrxreset_int,
    rxuserrdy_int,
    gtwiz_reset_qpll0reset_out,
    gtpowergood_out,
    gtwiz_userclk_tx_active_in,
    gtwiz_reset_qpll0lock_in,
    gtwiz_userclk_rx_active_in,
    rxcdrlock_out,
    gtwiz_reset_clk_freerun_in,
    gtwiz_reset_all_in,
    gtwiz_reset_tx_datapath_in,
    txusrclk2_in,
    rxusrclk2_in,
    rxresetdone_sync,
    txresetdone_sync,
    gtwiz_reset_tx_pll_and_datapath_in,
    gtwiz_reset_rx_datapath_in,
    gtwiz_reset_rx_pll_and_datapath_in);
  output txprogdivreset_int;
  output [0:0]gtwiz_reset_tx_done_out;
  output [0:0]gtwiz_reset_rx_cdr_stable_out;
  output [0:0]gtwiz_reset_rx_done_out;
  output gttxreset_int;
  output txuserrdy_int;
  output rxprogdivreset_int;
  output gtrxreset_int;
  output rxuserrdy_int;
  output [0:0]gtwiz_reset_qpll0reset_out;
  input [0:0]gtpowergood_out;
  input [0:0]gtwiz_userclk_tx_active_in;
  input [0:0]gtwiz_reset_qpll0lock_in;
  input [0:0]gtwiz_userclk_rx_active_in;
  input [0:0]rxcdrlock_out;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [0:0]gtwiz_reset_all_in;
  input [0:0]gtwiz_reset_tx_datapath_in;
  input [0:0]txusrclk2_in;
  input [0:0]rxusrclk2_in;
  input rxresetdone_sync;
  input txresetdone_sync;
  input [0:0]gtwiz_reset_tx_pll_and_datapath_in;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;

  wire \FSM_sequential_sm_reset_all[0]_i_1_n_0 ;
  wire \FSM_sequential_sm_reset_all[1]_i_1_n_0 ;
  wire \FSM_sequential_sm_reset_all[2]_i_1_n_0 ;
  wire \FSM_sequential_sm_reset_all[2]_i_2_n_0 ;
  wire \FSM_sequential_sm_reset_all[2]_i_3_n_0 ;
  wire \FSM_sequential_sm_reset_rx[2]_i_2_n_0 ;
  wire \FSM_sequential_sm_reset_tx[2]_i_2_n_0 ;
  wire \FSM_sequential_sm_reset_tx[2]_i_5_n_0 ;
  wire \FSM_sequential_sm_reset_tx[2]_i_6_n_0 ;
  wire bit_synchronizer_gtwiz_reset_rx_pll_and_datapath_dly_inst_n_1;
  wire bit_synchronizer_gtwiz_reset_rx_pll_and_datapath_dly_inst_n_2;
  wire bit_synchronizer_gtwiz_reset_tx_pll_and_datapath_dly_inst_n_1;
  wire bit_synchronizer_gtwiz_reset_tx_pll_and_datapath_dly_inst_n_2;
  wire bit_synchronizer_gtwiz_reset_userclk_rx_active_inst_n_0;
  wire bit_synchronizer_gtwiz_reset_userclk_rx_active_inst_n_2;
  wire bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_1;
  wire bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_2;
  wire bit_synchronizer_plllock_rx_inst_n_0;
  wire bit_synchronizer_plllock_rx_inst_n_2;
  wire bit_synchronizer_plllock_rx_inst_n_3;
  wire bit_synchronizer_plllock_rx_inst_n_4;
  wire bit_synchronizer_plllock_tx_inst_n_0;
  wire bit_synchronizer_plllock_tx_inst_n_1;
  wire bit_synchronizer_plllock_tx_inst_n_2;
  wire bit_synchronizer_plllock_tx_inst_n_3;
  wire bit_synchronizer_rxcdrlock_inst_n_1;
  wire bit_synchronizer_rxcdrlock_inst_n_2;
  wire bit_synchronizer_rxcdrlock_inst_n_3;
  wire [0:0]gtpowergood_out;
  wire gtpowergood_sync;
  wire gtrxreset_int;
  wire gttxreset_int;
  wire [0:0]gtwiz_reset_all_in;
  wire gtwiz_reset_all_sync;
  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire gtwiz_reset_pllreset_rx_int;
  wire gtwiz_reset_pllreset_tx_int;
  wire [0:0]gtwiz_reset_qpll0lock_in;
  wire [0:0]gtwiz_reset_qpll0reset_out;
  wire gtwiz_reset_rx_any_sync;
  wire [0:0]gtwiz_reset_rx_cdr_stable_out;
  wire gtwiz_reset_rx_datapath_dly;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire gtwiz_reset_rx_datapath_int_i_1_n_0;
  wire gtwiz_reset_rx_datapath_int_reg_n_0;
  wire gtwiz_reset_rx_datapath_sync;
  wire gtwiz_reset_rx_done_int_reg_n_0;
  wire [0:0]gtwiz_reset_rx_done_out;
  wire gtwiz_reset_rx_pll_and_datapath_dly;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  wire gtwiz_reset_rx_pll_and_datapath_int_i_1_n_0;
  wire gtwiz_reset_rx_pll_and_datapath_int_reg_n_0;
  wire gtwiz_reset_rx_pll_and_datapath_sync;
  wire gtwiz_reset_tx_any_sync;
  wire gtwiz_reset_tx_datapath_dly;
  wire [0:0]gtwiz_reset_tx_datapath_in;
  wire gtwiz_reset_tx_datapath_sync;
  wire gtwiz_reset_tx_done_int0;
  wire gtwiz_reset_tx_done_int_reg_n_0;
  wire [0:0]gtwiz_reset_tx_done_out;
  wire gtwiz_reset_tx_pll_and_datapath_dly;
  wire [0:0]gtwiz_reset_tx_pll_and_datapath_in;
  wire gtwiz_reset_tx_pll_and_datapath_int_i_1_n_0;
  wire gtwiz_reset_tx_pll_and_datapath_int_reg_n_0;
  wire gtwiz_reset_tx_pll_and_datapath_sync;
  wire gtwiz_reset_userclk_tx_active_sync;
  wire [0:0]gtwiz_userclk_rx_active_in;
  wire [0:0]gtwiz_userclk_tx_active_in;
  wire p_0_in;
  wire p_0_in11_out;
  wire [9:0]p_0_in__0;
  wire [9:0]p_0_in__1;
  wire [2:0]p_1_in;
  wire reset_synchronizer_gtwiz_reset_rx_any_inst_n_1;
  wire reset_synchronizer_gtwiz_reset_tx_any_inst_n_1;
  wire [0:0]rxcdrlock_out;
  wire rxprogdivreset_int;
  wire rxresetdone_sync;
  wire rxuserrdy_int;
  wire [0:0]rxusrclk2_in;
  wire sel;
  (* RTL_KEEP = "yes" *) wire [2:0]sm_reset_all;
  wire sm_reset_all_timer_clr_i_1_n_0;
  wire sm_reset_all_timer_clr_i_2_n_0;
  wire sm_reset_all_timer_clr_reg_n_0;
  wire [2:0]sm_reset_all_timer_ctr;
  wire \sm_reset_all_timer_ctr0_inferred__0/i__n_0 ;
  wire \sm_reset_all_timer_ctr[0]_i_1_n_0 ;
  wire \sm_reset_all_timer_ctr[1]_i_1_n_0 ;
  wire \sm_reset_all_timer_ctr[2]_i_1_n_0 ;
  wire sm_reset_all_timer_sat;
  wire sm_reset_all_timer_sat_i_1_n_0;
  (* RTL_KEEP = "yes" *) wire [2:0]sm_reset_rx;
  wire sm_reset_rx_cdr_to_clr;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_10_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_11_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_12_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_13_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_14_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_15_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_16_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_3_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_4_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_5_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_6_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_7_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_8_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_9_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[16]_i_2_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[16]_i_3_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[16]_i_4_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[16]_i_5_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[16]_i_6_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[16]_i_7_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[16]_i_8_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[16]_i_9_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[24]_i_2_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[24]_i_3_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[8]_i_2_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[8]_i_3_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[8]_i_4_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[8]_i_5_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[8]_i_6_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[8]_i_7_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[8]_i_8_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[8]_i_9_n_0 ;
  wire [25:0]sm_reset_rx_cdr_to_ctr_reg;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_1 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_10 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_11 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_12 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_13 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_14 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_15 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_2 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_3 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_5 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_6 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_7 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_8 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_9 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_1 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_10 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_11 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_12 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_13 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_14 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_15 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_2 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_3 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_5 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_6 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_7 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_8 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_9 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_14 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_15 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_7 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_1 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_10 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_11 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_12 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_13 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_14 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_15 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_2 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_3 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_5 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_6 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_7 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_8 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_9 ;
  wire sm_reset_rx_cdr_to_sat;
  wire sm_reset_rx_cdr_to_sat_i_1_n_0;
  wire sm_reset_rx_pll_timer_clr_i_1_n_0;
  wire sm_reset_rx_pll_timer_clr_reg_n_0;
  wire \sm_reset_rx_pll_timer_ctr[2]_i_1_n_0 ;
  wire \sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ;
  wire \sm_reset_rx_pll_timer_ctr[9]_i_3_n_0 ;
  wire \sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ;
  wire [9:0]sm_reset_rx_pll_timer_ctr_reg__0;
  wire sm_reset_rx_pll_timer_sat;
  wire sm_reset_rx_pll_timer_sat_i_1_n_0;
  wire sm_reset_rx_timer_clr0;
  wire sm_reset_rx_timer_clr09_out;
  wire sm_reset_rx_timer_clr_reg_n_0;
  wire [2:0]sm_reset_rx_timer_ctr;
  wire \sm_reset_rx_timer_ctr0_inferred__0/i__n_0 ;
  wire \sm_reset_rx_timer_ctr[0]_i_1_n_0 ;
  wire \sm_reset_rx_timer_ctr[1]_i_1_n_0 ;
  wire \sm_reset_rx_timer_ctr[2]_i_1_n_0 ;
  wire sm_reset_rx_timer_sat;
  wire sm_reset_rx_timer_sat_i_1_n_0;
  (* RTL_KEEP = "yes" *) wire [2:0]sm_reset_tx;
  wire sm_reset_tx_pll_timer_clr_i_1_n_0;
  wire sm_reset_tx_pll_timer_clr_reg_n_0;
  wire \sm_reset_tx_pll_timer_ctr[2]_i_1_n_0 ;
  wire \sm_reset_tx_pll_timer_ctr[9]_i_3_n_0 ;
  wire \sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ;
  wire [9:0]sm_reset_tx_pll_timer_ctr_reg__0;
  wire sm_reset_tx_pll_timer_sat;
  wire sm_reset_tx_pll_timer_sat_i_1_n_0;
  wire sm_reset_tx_timer_clr_reg_n_0;
  wire [2:0]sm_reset_tx_timer_ctr;
  wire sm_reset_tx_timer_sat;
  wire sm_reset_tx_timer_sat_i_1_n_0;
  wire txprogdivreset_int;
  wire txresetdone_sync;
  wire txuserrdy_int;
  wire [0:0]txusrclk2_in;
  wire [3:3]\NLW_sm_reset_rx_cdr_to_ctr_reg[0]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_sm_reset_rx_cdr_to_ctr_reg[16]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_sm_reset_rx_cdr_to_ctr_reg[24]_i_1_CO_UNCONNECTED ;
  wire [7:2]\NLW_sm_reset_rx_cdr_to_ctr_reg[24]_i_1_DI_UNCONNECTED ;
  wire [7:2]\NLW_sm_reset_rx_cdr_to_ctr_reg[24]_i_1_O_UNCONNECTED ;
  wire [7:2]\NLW_sm_reset_rx_cdr_to_ctr_reg[24]_i_1_S_UNCONNECTED ;
  wire [3:3]\NLW_sm_reset_rx_cdr_to_ctr_reg[8]_i_1_CO_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h77777777DDDD5DDD)) 
    \FSM_sequential_sm_reset_all[0]_i_1 
       (.I0(sm_reset_all[0]),
        .I1(sm_reset_all[2]),
        .I2(gtwiz_reset_rx_done_int_reg_n_0),
        .I3(sm_reset_all_timer_sat),
        .I4(sm_reset_all_timer_clr_reg_n_0),
        .I5(sm_reset_all[1]),
        .O(\FSM_sequential_sm_reset_all[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_sm_reset_all[1]_i_1 
       (.I0(sm_reset_all[0]),
        .I1(sm_reset_all[1]),
        .O(\FSM_sequential_sm_reset_all[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0000AAEA)) 
    \FSM_sequential_sm_reset_all[2]_i_1 
       (.I0(sm_reset_all[0]),
        .I1(gtwiz_reset_tx_done_int_reg_n_0),
        .I2(sm_reset_all_timer_sat),
        .I3(sm_reset_all_timer_clr_reg_n_0),
        .I4(sm_reset_all[2]),
        .I5(\FSM_sequential_sm_reset_all[2]_i_3_n_0 ),
        .O(\FSM_sequential_sm_reset_all[2]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h2C)) 
    \FSM_sequential_sm_reset_all[2]_i_2 
       (.I0(sm_reset_all[0]),
        .I1(sm_reset_all[2]),
        .I2(sm_reset_all[1]),
        .O(\FSM_sequential_sm_reset_all[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8888B88833333333)) 
    \FSM_sequential_sm_reset_all[2]_i_3 
       (.I0(gtpowergood_sync),
        .I1(sm_reset_all[1]),
        .I2(gtwiz_reset_rx_done_int_reg_n_0),
        .I3(sm_reset_all_timer_sat),
        .I4(sm_reset_all_timer_clr_reg_n_0),
        .I5(sm_reset_all[0]),
        .O(\FSM_sequential_sm_reset_all[2]_i_3_n_0 ));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_sequential_sm_reset_all_reg[0] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\FSM_sequential_sm_reset_all[2]_i_1_n_0 ),
        .D(\FSM_sequential_sm_reset_all[0]_i_1_n_0 ),
        .Q(sm_reset_all[0]),
        .R(gtwiz_reset_all_sync));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_sequential_sm_reset_all_reg[1] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\FSM_sequential_sm_reset_all[2]_i_1_n_0 ),
        .D(\FSM_sequential_sm_reset_all[1]_i_1_n_0 ),
        .Q(sm_reset_all[1]),
        .R(gtwiz_reset_all_sync));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_sequential_sm_reset_all_reg[2] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\FSM_sequential_sm_reset_all[2]_i_1_n_0 ),
        .D(\FSM_sequential_sm_reset_all[2]_i_2_n_0 ),
        .Q(sm_reset_all[2]),
        .R(gtwiz_reset_all_sync));
  LUT3 #(
    .INIT(8'h40)) 
    \FSM_sequential_sm_reset_rx[1]_i_2 
       (.I0(sm_reset_rx_timer_clr_reg_n_0),
        .I1(sm_reset_rx_timer_sat),
        .I2(rxresetdone_sync),
        .O(p_0_in11_out));
  LUT6 #(
    .INIT(64'hCCCCECCCAAAAAAAA)) 
    \FSM_sequential_sm_reset_rx[2]_i_2 
       (.I0(sm_reset_rx[2]),
        .I1(sm_reset_rx[0]),
        .I2(rxresetdone_sync),
        .I3(sm_reset_rx_timer_sat),
        .I4(sm_reset_rx_timer_clr_reg_n_0),
        .I5(sm_reset_rx[1]),
        .O(\FSM_sequential_sm_reset_rx[2]_i_2_n_0 ));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_sm_reset_rx_reg[0] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(bit_synchronizer_rxcdrlock_inst_n_3),
        .D(bit_synchronizer_gtwiz_reset_rx_pll_and_datapath_dly_inst_n_2),
        .Q(sm_reset_rx[0]),
        .R(gtwiz_reset_rx_any_sync));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_sm_reset_rx_reg[1] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(bit_synchronizer_rxcdrlock_inst_n_3),
        .D(bit_synchronizer_gtwiz_reset_rx_pll_and_datapath_dly_inst_n_1),
        .Q(sm_reset_rx[1]),
        .R(gtwiz_reset_rx_any_sync));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_sm_reset_rx_reg[2] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(bit_synchronizer_rxcdrlock_inst_n_3),
        .D(\FSM_sequential_sm_reset_rx[2]_i_2_n_0 ),
        .Q(sm_reset_rx[2]),
        .R(gtwiz_reset_rx_any_sync));
  LUT3 #(
    .INIT(8'h38)) 
    \FSM_sequential_sm_reset_tx[2]_i_2 
       (.I0(sm_reset_tx[0]),
        .I1(sm_reset_tx[1]),
        .I2(sm_reset_tx[2]),
        .O(\FSM_sequential_sm_reset_tx[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_sm_reset_tx[2]_i_5 
       (.I0(sm_reset_tx_timer_sat),
        .I1(sm_reset_tx_timer_clr_reg_n_0),
        .O(\FSM_sequential_sm_reset_tx[2]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair347" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_sm_reset_tx[2]_i_6 
       (.I0(sm_reset_tx_pll_timer_sat),
        .I1(sm_reset_tx_pll_timer_clr_reg_n_0),
        .O(\FSM_sequential_sm_reset_tx[2]_i_6_n_0 ));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_sm_reset_tx_reg[0] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_2),
        .D(bit_synchronizer_gtwiz_reset_tx_pll_and_datapath_dly_inst_n_2),
        .Q(sm_reset_tx[0]),
        .R(gtwiz_reset_tx_any_sync));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_sm_reset_tx_reg[1] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_2),
        .D(bit_synchronizer_gtwiz_reset_tx_pll_and_datapath_dly_inst_n_1),
        .Q(sm_reset_tx[1]),
        .R(gtwiz_reset_tx_any_sync));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_sm_reset_tx_reg[2] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_2),
        .D(\FSM_sequential_sm_reset_tx[2]_i_2_n_0 ),
        .Q(sm_reset_tx[2]),
        .R(gtwiz_reset_tx_any_sync));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_bit_synchronizer_32 bit_synchronizer_gtpowergood_inst
       (.gtpowergood_out(gtpowergood_out),
        .gtpowergood_sync(gtpowergood_sync),
        .gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_bit_synchronizer_33 bit_synchronizer_gtwiz_reset_rx_datapath_dly_inst
       (.gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_rx_datapath_dly(gtwiz_reset_rx_datapath_dly),
        .in0(gtwiz_reset_rx_datapath_sync));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_bit_synchronizer_34 bit_synchronizer_gtwiz_reset_rx_pll_and_datapath_dly_inst
       (.D({bit_synchronizer_gtwiz_reset_rx_pll_and_datapath_dly_inst_n_1,bit_synchronizer_gtwiz_reset_rx_pll_and_datapath_dly_inst_n_2}),
        .gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_rx_pll_and_datapath_dly(gtwiz_reset_rx_pll_and_datapath_dly),
        .in0(gtwiz_reset_rx_pll_and_datapath_sync),
        .out(sm_reset_rx),
        .p_0_in11_out(p_0_in11_out));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_bit_synchronizer_35 bit_synchronizer_gtwiz_reset_tx_datapath_dly_inst
       (.gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_tx_datapath_dly(gtwiz_reset_tx_datapath_dly),
        .in0(gtwiz_reset_tx_datapath_sync));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_bit_synchronizer_36 bit_synchronizer_gtwiz_reset_tx_pll_and_datapath_dly_inst
       (.D({bit_synchronizer_gtwiz_reset_tx_pll_and_datapath_dly_inst_n_1,bit_synchronizer_gtwiz_reset_tx_pll_and_datapath_dly_inst_n_2}),
        .gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_tx_pll_and_datapath_dly(gtwiz_reset_tx_pll_and_datapath_dly),
        .in0(gtwiz_reset_tx_pll_and_datapath_sync),
        .out(sm_reset_tx));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_bit_synchronizer_37 bit_synchronizer_gtwiz_reset_userclk_rx_active_inst
       (.gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_rx_any_sync(gtwiz_reset_rx_any_sync),
        .gtwiz_userclk_rx_active_in(gtwiz_userclk_rx_active_in),
        .i_in_out_reg_0(bit_synchronizer_plllock_rx_inst_n_4),
        .out(sm_reset_rx),
        .rxresetdone_sync(rxresetdone_sync),
        .rxuserrdy_int(rxuserrdy_int),
        .rxuserrdy_out_reg(bit_synchronizer_gtwiz_reset_userclk_rx_active_inst_n_0),
        .sm_reset_rx_timer_clr0(sm_reset_rx_timer_clr0),
        .sm_reset_rx_timer_clr_reg(bit_synchronizer_gtwiz_reset_userclk_rx_active_inst_n_2),
        .sm_reset_rx_timer_clr_reg_0(sm_reset_rx_timer_clr_reg_n_0),
        .sm_reset_rx_timer_sat(sm_reset_rx_timer_sat));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_bit_synchronizer_38 bit_synchronizer_gtwiz_reset_userclk_tx_active_inst
       (.E(bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_2),
        .gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_tx_any_sync(gtwiz_reset_tx_any_sync),
        .gtwiz_reset_tx_datapath_dly(gtwiz_reset_tx_datapath_dly),
        .gtwiz_reset_tx_pll_and_datapath_dly(gtwiz_reset_tx_pll_and_datapath_dly),
        .gtwiz_reset_userclk_tx_active_sync(gtwiz_reset_userclk_tx_active_sync),
        .gtwiz_userclk_tx_active_in(gtwiz_userclk_tx_active_in),
        .i_in_out_reg_0(bit_synchronizer_plllock_tx_inst_n_3),
        .out(sm_reset_tx),
        .sm_reset_tx_timer_clr_reg(sm_reset_tx_timer_clr_reg_n_0),
        .sm_reset_tx_timer_sat(sm_reset_tx_timer_sat),
        .sm_reset_tx_timer_sat_reg(\FSM_sequential_sm_reset_tx[2]_i_5_n_0 ),
        .txuserrdy_int(txuserrdy_int),
        .txuserrdy_out_reg(bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_1));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_bit_synchronizer_39 bit_synchronizer_plllock_rx_inst
       (.\FSM_sequential_sm_reset_rx_reg[0] (bit_synchronizer_plllock_rx_inst_n_3),
        .gtrxreset_int(gtrxreset_int),
        .gtrxreset_out_reg(bit_synchronizer_plllock_rx_inst_n_0),
        .gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_qpll0lock_in(gtwiz_reset_qpll0lock_in),
        .gtwiz_reset_rx_any_sync(gtwiz_reset_rx_any_sync),
        .gtwiz_reset_rx_done_int_reg(bit_synchronizer_plllock_rx_inst_n_2),
        .gtwiz_reset_rx_done_int_reg_0(gtwiz_reset_rx_done_int_reg_n_0),
        .out(sm_reset_rx),
        .p_0_in11_out(p_0_in11_out),
        .sm_reset_rx_pll_timer_clr_reg(sm_reset_rx_pll_timer_clr_reg_n_0),
        .sm_reset_rx_pll_timer_sat(sm_reset_rx_pll_timer_sat),
        .sm_reset_rx_timer_clr0(sm_reset_rx_timer_clr0),
        .sm_reset_rx_timer_clr09_out(sm_reset_rx_timer_clr09_out),
        .sm_reset_rx_timer_clr_reg(bit_synchronizer_plllock_rx_inst_n_4),
        .sm_reset_rx_timer_clr_reg_0(sm_reset_rx_timer_clr_reg_n_0),
        .sm_reset_rx_timer_sat(sm_reset_rx_timer_sat));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_bit_synchronizer_40 bit_synchronizer_plllock_tx_inst
       (.\FSM_sequential_sm_reset_tx_reg[0] (bit_synchronizer_plllock_tx_inst_n_3),
        .gttxreset_int(gttxreset_int),
        .gttxreset_out_reg(bit_synchronizer_plllock_tx_inst_n_0),
        .gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_qpll0lock_in(gtwiz_reset_qpll0lock_in),
        .gtwiz_reset_tx_any_sync(gtwiz_reset_tx_any_sync),
        .gtwiz_reset_tx_done_int0(gtwiz_reset_tx_done_int0),
        .gtwiz_reset_tx_done_int_reg(bit_synchronizer_plllock_tx_inst_n_2),
        .gtwiz_reset_tx_done_int_reg_0(gtwiz_reset_tx_done_int_reg_n_0),
        .gtwiz_reset_userclk_tx_active_sync(gtwiz_reset_userclk_tx_active_sync),
        .out(sm_reset_tx),
        .sm_reset_tx_pll_timer_sat_reg(\FSM_sequential_sm_reset_tx[2]_i_6_n_0 ),
        .sm_reset_tx_timer_clr_reg(bit_synchronizer_plllock_tx_inst_n_1),
        .sm_reset_tx_timer_clr_reg_0(sm_reset_tx_timer_clr_reg_n_0),
        .sm_reset_tx_timer_sat(sm_reset_tx_timer_sat),
        .sm_reset_tx_timer_sat_reg(\FSM_sequential_sm_reset_tx[2]_i_5_n_0 ),
        .txresetdone_sync(txresetdone_sync));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_bit_synchronizer_41 bit_synchronizer_rxcdrlock_inst
       (.E(bit_synchronizer_rxcdrlock_inst_n_3),
        .\FSM_sequential_sm_reset_rx_reg[1] (bit_synchronizer_plllock_rx_inst_n_3),
        .gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_rx_any_sync(gtwiz_reset_rx_any_sync),
        .gtwiz_reset_rx_cdr_stable_out(gtwiz_reset_rx_cdr_stable_out),
        .gtwiz_reset_rx_datapath_dly(gtwiz_reset_rx_datapath_dly),
        .gtwiz_reset_rx_pll_and_datapath_dly(gtwiz_reset_rx_pll_and_datapath_dly),
        .out(sm_reset_rx),
        .rxcdrlock_out(rxcdrlock_out),
        .rxprogdivreset_int(rxprogdivreset_int),
        .rxprogdivreset_out_reg(bit_synchronizer_rxcdrlock_inst_n_2),
        .rxresetdone_sync(rxresetdone_sync),
        .sm_reset_rx_cdr_to_clr(sm_reset_rx_cdr_to_clr),
        .sm_reset_rx_cdr_to_clr_reg(bit_synchronizer_rxcdrlock_inst_n_1),
        .sm_reset_rx_cdr_to_sat(sm_reset_rx_cdr_to_sat),
        .sm_reset_rx_timer_clr09_out(sm_reset_rx_timer_clr09_out),
        .sm_reset_rx_timer_clr_reg(sm_reset_rx_timer_clr_reg_n_0),
        .sm_reset_rx_timer_sat(sm_reset_rx_timer_sat));
  FDRE #(
    .INIT(1'b1)) 
    gtrxreset_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(bit_synchronizer_plllock_rx_inst_n_0),
        .Q(gtrxreset_int),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    gttxreset_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(bit_synchronizer_plllock_tx_inst_n_0),
        .Q(gttxreset_int),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    \gtwiz_reset_qpll0reset_out[0]_INST_0 
       (.I0(gtwiz_reset_pllreset_tx_int),
        .I1(gtwiz_reset_pllreset_rx_int),
        .O(gtwiz_reset_qpll0reset_out));
  LUT4 #(
    .INIT(16'hF720)) 
    gtwiz_reset_rx_datapath_int_i_1
       (.I0(sm_reset_all[0]),
        .I1(sm_reset_all[2]),
        .I2(sm_reset_all[1]),
        .I3(gtwiz_reset_rx_datapath_int_reg_n_0),
        .O(gtwiz_reset_rx_datapath_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_reset_rx_datapath_int_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(gtwiz_reset_rx_datapath_int_i_1_n_0),
        .Q(gtwiz_reset_rx_datapath_int_reg_n_0),
        .R(gtwiz_reset_all_sync));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_reset_rx_done_int_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(bit_synchronizer_plllock_rx_inst_n_2),
        .Q(gtwiz_reset_rx_done_int_reg_n_0),
        .R(gtwiz_reset_rx_any_sync));
  LUT4 #(
    .INIT(16'hF704)) 
    gtwiz_reset_rx_pll_and_datapath_int_i_1
       (.I0(sm_reset_all[0]),
        .I1(sm_reset_all[2]),
        .I2(sm_reset_all[1]),
        .I3(gtwiz_reset_rx_pll_and_datapath_int_reg_n_0),
        .O(gtwiz_reset_rx_pll_and_datapath_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_reset_rx_pll_and_datapath_int_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(gtwiz_reset_rx_pll_and_datapath_int_i_1_n_0),
        .Q(gtwiz_reset_rx_pll_and_datapath_int_reg_n_0),
        .R(gtwiz_reset_all_sync));
  LUT3 #(
    .INIT(8'h40)) 
    gtwiz_reset_tx_done_int_i_2
       (.I0(sm_reset_tx_timer_clr_reg_n_0),
        .I1(sm_reset_tx_timer_sat),
        .I2(txresetdone_sync),
        .O(gtwiz_reset_tx_done_int0));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_reset_tx_done_int_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(bit_synchronizer_plllock_tx_inst_n_2),
        .Q(gtwiz_reset_tx_done_int_reg_n_0),
        .R(gtwiz_reset_tx_any_sync));
  LUT4 #(
    .INIT(16'hFD04)) 
    gtwiz_reset_tx_pll_and_datapath_int_i_1
       (.I0(sm_reset_all[1]),
        .I1(sm_reset_all[0]),
        .I2(sm_reset_all[2]),
        .I3(gtwiz_reset_tx_pll_and_datapath_int_reg_n_0),
        .O(gtwiz_reset_tx_pll_and_datapath_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_reset_tx_pll_and_datapath_int_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(gtwiz_reset_tx_pll_and_datapath_int_i_1_n_0),
        .Q(gtwiz_reset_tx_pll_and_datapath_int_reg_n_0),
        .R(gtwiz_reset_all_sync));
  FDRE #(
    .INIT(1'b0)) 
    pllreset_rx_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(reset_synchronizer_gtwiz_reset_rx_any_inst_n_1),
        .Q(gtwiz_reset_pllreset_rx_int),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    pllreset_tx_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(reset_synchronizer_gtwiz_reset_tx_any_inst_n_1),
        .Q(gtwiz_reset_pllreset_tx_int),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_reset_synchronizer reset_synchronizer_gtwiz_reset_all_inst
       (.SR(gtwiz_reset_all_sync),
        .gtwiz_reset_all_in(gtwiz_reset_all_in),
        .gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_reset_synchronizer_42 reset_synchronizer_gtwiz_reset_rx_any_inst
       (.gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_pllreset_rx_int(gtwiz_reset_pllreset_rx_int),
        .gtwiz_reset_rx_any_sync(gtwiz_reset_rx_any_sync),
        .gtwiz_reset_rx_datapath_in(gtwiz_reset_rx_datapath_in),
        .gtwiz_reset_rx_datapath_int_reg(gtwiz_reset_rx_datapath_int_reg_n_0),
        .gtwiz_reset_rx_pll_and_datapath_in(gtwiz_reset_rx_pll_and_datapath_in),
        .gtwiz_reset_rx_pll_and_datapath_int_reg(gtwiz_reset_rx_pll_and_datapath_int_reg_n_0),
        .out(sm_reset_rx),
        .pllreset_rx_out_reg(reset_synchronizer_gtwiz_reset_rx_any_inst_n_1));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_reset_synchronizer_43 reset_synchronizer_gtwiz_reset_rx_datapath_inst
       (.gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_rx_datapath_in(gtwiz_reset_rx_datapath_in),
        .gtwiz_reset_rx_datapath_int_reg(gtwiz_reset_rx_datapath_int_reg_n_0),
        .in0(gtwiz_reset_rx_datapath_sync));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_reset_synchronizer_44 reset_synchronizer_gtwiz_reset_rx_pll_and_datapath_inst
       (.gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_rx_pll_and_datapath_in(gtwiz_reset_rx_pll_and_datapath_in),
        .gtwiz_reset_rx_pll_and_datapath_int_reg(gtwiz_reset_rx_pll_and_datapath_int_reg_n_0),
        .in0(gtwiz_reset_rx_pll_and_datapath_sync));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_reset_synchronizer_45 reset_synchronizer_gtwiz_reset_tx_any_inst
       (.gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_pllreset_tx_int(gtwiz_reset_pllreset_tx_int),
        .gtwiz_reset_tx_any_sync(gtwiz_reset_tx_any_sync),
        .gtwiz_reset_tx_datapath_in(gtwiz_reset_tx_datapath_in),
        .gtwiz_reset_tx_pll_and_datapath_in(gtwiz_reset_tx_pll_and_datapath_in),
        .gtwiz_reset_tx_pll_and_datapath_int_reg(gtwiz_reset_tx_pll_and_datapath_int_reg_n_0),
        .out(sm_reset_tx),
        .pllreset_tx_out_reg(reset_synchronizer_gtwiz_reset_tx_any_inst_n_1));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_reset_synchronizer_46 reset_synchronizer_gtwiz_reset_tx_datapath_inst
       (.gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_tx_datapath_in(gtwiz_reset_tx_datapath_in),
        .in0(gtwiz_reset_tx_datapath_sync));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_reset_synchronizer_47 reset_synchronizer_gtwiz_reset_tx_pll_and_datapath_inst
       (.gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_tx_pll_and_datapath_in(gtwiz_reset_tx_pll_and_datapath_in),
        .gtwiz_reset_tx_pll_and_datapath_int_reg(gtwiz_reset_tx_pll_and_datapath_int_reg_n_0),
        .in0(gtwiz_reset_tx_pll_and_datapath_sync));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_reset_inv_synchronizer reset_synchronizer_rx_done_inst
       (.gtwiz_reset_rx_done_int_reg(gtwiz_reset_rx_done_int_reg_n_0),
        .gtwiz_reset_rx_done_out(gtwiz_reset_rx_done_out),
        .rxusrclk2_in(rxusrclk2_in));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_reset_inv_synchronizer_48 reset_synchronizer_tx_done_inst
       (.gtwiz_reset_tx_done_int_reg(gtwiz_reset_tx_done_int_reg_n_0),
        .gtwiz_reset_tx_done_out(gtwiz_reset_tx_done_out),
        .txusrclk2_in(txusrclk2_in));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_reset_synchronizer_49 reset_synchronizer_txprogdivreset_inst
       (.gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_qpll0lock_in(gtwiz_reset_qpll0lock_in),
        .txprogdivreset_int(txprogdivreset_int));
  FDRE #(
    .INIT(1'b1)) 
    rxprogdivreset_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(bit_synchronizer_rxcdrlock_inst_n_2),
        .Q(rxprogdivreset_int),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    rxuserrdy_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(bit_synchronizer_gtwiz_reset_userclk_rx_active_inst_n_0),
        .Q(rxuserrdy_int),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFA200A)) 
    sm_reset_all_timer_clr_i_1
       (.I0(sm_reset_all_timer_clr_i_2_n_0),
        .I1(sm_reset_all[1]),
        .I2(sm_reset_all[0]),
        .I3(sm_reset_all[2]),
        .I4(sm_reset_all_timer_clr_reg_n_0),
        .O(sm_reset_all_timer_clr_i_1_n_0));
  LUT6 #(
    .INIT(64'h05050505DD0D0505)) 
    sm_reset_all_timer_clr_i_2
       (.I0(sm_reset_all[1]),
        .I1(gtwiz_reset_tx_done_int_reg_n_0),
        .I2(sm_reset_all[2]),
        .I3(gtwiz_reset_rx_done_int_reg_n_0),
        .I4(sm_reset_all_timer_sat),
        .I5(sm_reset_all_timer_clr_reg_n_0),
        .O(sm_reset_all_timer_clr_i_2_n_0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_all_timer_clr_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(sm_reset_all_timer_clr_i_1_n_0),
        .Q(sm_reset_all_timer_clr_reg_n_0),
        .S(gtwiz_reset_all_sync));
  LUT3 #(
    .INIT(8'h7F)) 
    \sm_reset_all_timer_ctr0_inferred__0/i_ 
       (.I0(sm_reset_all_timer_ctr[2]),
        .I1(sm_reset_all_timer_ctr[0]),
        .I2(sm_reset_all_timer_ctr[1]),
        .O(\sm_reset_all_timer_ctr0_inferred__0/i__n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_all_timer_ctr[0]_i_1 
       (.I0(sm_reset_all_timer_ctr[0]),
        .O(\sm_reset_all_timer_ctr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair352" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_all_timer_ctr[1]_i_1 
       (.I0(sm_reset_all_timer_ctr[0]),
        .I1(sm_reset_all_timer_ctr[1]),
        .O(\sm_reset_all_timer_ctr[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair352" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_all_timer_ctr[2]_i_1 
       (.I0(sm_reset_all_timer_ctr[0]),
        .I1(sm_reset_all_timer_ctr[1]),
        .I2(sm_reset_all_timer_ctr[2]),
        .O(\sm_reset_all_timer_ctr[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_all_timer_ctr_reg[0] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_all_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_all_timer_ctr[0]_i_1_n_0 ),
        .Q(sm_reset_all_timer_ctr[0]),
        .R(sm_reset_all_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_all_timer_ctr_reg[1] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_all_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_all_timer_ctr[1]_i_1_n_0 ),
        .Q(sm_reset_all_timer_ctr[1]),
        .R(sm_reset_all_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_all_timer_ctr_reg[2] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_all_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_all_timer_ctr[2]_i_1_n_0 ),
        .Q(sm_reset_all_timer_ctr[2]),
        .R(sm_reset_all_timer_clr_reg_n_0));
  LUT5 #(
    .INIT(32'h0000FF80)) 
    sm_reset_all_timer_sat_i_1
       (.I0(sm_reset_all_timer_ctr[2]),
        .I1(sm_reset_all_timer_ctr[0]),
        .I2(sm_reset_all_timer_ctr[1]),
        .I3(sm_reset_all_timer_sat),
        .I4(sm_reset_all_timer_clr_reg_n_0),
        .O(sm_reset_all_timer_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_all_timer_sat_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(sm_reset_all_timer_sat_i_1_n_0),
        .Q(sm_reset_all_timer_sat),
        .R(1'b0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_rx_cdr_to_clr_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(bit_synchronizer_rxcdrlock_inst_n_1),
        .Q(sm_reset_rx_cdr_to_clr),
        .S(gtwiz_reset_rx_any_sync));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_1 
       (.I0(\sm_reset_rx_cdr_to_ctr[0]_i_3_n_0 ),
        .I1(\sm_reset_rx_cdr_to_ctr[0]_i_4_n_0 ),
        .I2(\sm_reset_rx_cdr_to_ctr[0]_i_5_n_0 ),
        .I3(\sm_reset_rx_cdr_to_ctr[0]_i_6_n_0 ),
        .I4(\sm_reset_rx_cdr_to_ctr[0]_i_7_n_0 ),
        .I5(\sm_reset_rx_cdr_to_ctr[0]_i_8_n_0 ),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_10 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[6]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_10_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_11 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[5]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_11_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_12 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[4]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_12_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_13 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[3]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_13_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_14 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[2]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_14_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_15 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[1]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_15_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_16 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[0]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_3 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[7]),
        .I1(sm_reset_rx_cdr_to_ctr_reg[2]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[11]),
        .I3(sm_reset_rx_cdr_to_ctr_reg[8]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_4 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[14]),
        .I1(sm_reset_rx_cdr_to_ctr_reg[13]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[12]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_5 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[4]),
        .I1(sm_reset_rx_cdr_to_ctr_reg[1]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[3]),
        .I3(sm_reset_rx_cdr_to_ctr_reg[0]),
        .I4(sm_reset_rx_cdr_to_ctr_reg[16]),
        .I5(sm_reset_rx_cdr_to_ctr_reg[18]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_6 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[10]),
        .I1(sm_reset_rx_cdr_to_ctr_reg[9]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[6]),
        .I3(sm_reset_rx_cdr_to_ctr_reg[5]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_7 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[17]),
        .I1(sm_reset_rx_cdr_to_ctr_reg[15]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[19]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_8 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[24]),
        .I1(sm_reset_rx_cdr_to_ctr_reg[23]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[25]),
        .I3(sm_reset_rx_cdr_to_ctr_reg[20]),
        .I4(sm_reset_rx_cdr_to_ctr_reg[21]),
        .I5(sm_reset_rx_cdr_to_ctr_reg[22]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_8_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_9 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[7]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_9_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sm_reset_rx_cdr_to_ctr[16]_i_2 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[23]),
        .O(\sm_reset_rx_cdr_to_ctr[16]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sm_reset_rx_cdr_to_ctr[16]_i_3 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[22]),
        .O(\sm_reset_rx_cdr_to_ctr[16]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sm_reset_rx_cdr_to_ctr[16]_i_4 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[21]),
        .O(\sm_reset_rx_cdr_to_ctr[16]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sm_reset_rx_cdr_to_ctr[16]_i_5 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[20]),
        .O(\sm_reset_rx_cdr_to_ctr[16]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sm_reset_rx_cdr_to_ctr[16]_i_6 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[19]),
        .O(\sm_reset_rx_cdr_to_ctr[16]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sm_reset_rx_cdr_to_ctr[16]_i_7 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[18]),
        .O(\sm_reset_rx_cdr_to_ctr[16]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sm_reset_rx_cdr_to_ctr[16]_i_8 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[17]),
        .O(\sm_reset_rx_cdr_to_ctr[16]_i_8_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sm_reset_rx_cdr_to_ctr[16]_i_9 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[16]),
        .O(\sm_reset_rx_cdr_to_ctr[16]_i_9_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sm_reset_rx_cdr_to_ctr[24]_i_2 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[25]),
        .O(\sm_reset_rx_cdr_to_ctr[24]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sm_reset_rx_cdr_to_ctr[24]_i_3 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[24]),
        .O(\sm_reset_rx_cdr_to_ctr[24]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sm_reset_rx_cdr_to_ctr[8]_i_2 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[15]),
        .O(\sm_reset_rx_cdr_to_ctr[8]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sm_reset_rx_cdr_to_ctr[8]_i_3 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[14]),
        .O(\sm_reset_rx_cdr_to_ctr[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sm_reset_rx_cdr_to_ctr[8]_i_4 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[13]),
        .O(\sm_reset_rx_cdr_to_ctr[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sm_reset_rx_cdr_to_ctr[8]_i_5 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[12]),
        .O(\sm_reset_rx_cdr_to_ctr[8]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sm_reset_rx_cdr_to_ctr[8]_i_6 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[11]),
        .O(\sm_reset_rx_cdr_to_ctr[8]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sm_reset_rx_cdr_to_ctr[8]_i_7 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[10]),
        .O(\sm_reset_rx_cdr_to_ctr[8]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sm_reset_rx_cdr_to_ctr[8]_i_8 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[9]),
        .O(\sm_reset_rx_cdr_to_ctr[8]_i_8_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sm_reset_rx_cdr_to_ctr[8]_i_9 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[8]),
        .O(\sm_reset_rx_cdr_to_ctr[8]_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[0] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_15 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[0]),
        .R(sm_reset_rx_cdr_to_clr));
  CARRY8 \sm_reset_rx_cdr_to_ctr_reg[0]_i_2 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_0 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_1 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_2 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_3 ,\NLW_sm_reset_rx_cdr_to_ctr_reg[0]_i_2_CO_UNCONNECTED [3],\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_5 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_6 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_8 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_9 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_10 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_11 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_12 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_13 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_14 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_15 }),
        .S({\sm_reset_rx_cdr_to_ctr[0]_i_9_n_0 ,\sm_reset_rx_cdr_to_ctr[0]_i_10_n_0 ,\sm_reset_rx_cdr_to_ctr[0]_i_11_n_0 ,\sm_reset_rx_cdr_to_ctr[0]_i_12_n_0 ,\sm_reset_rx_cdr_to_ctr[0]_i_13_n_0 ,\sm_reset_rx_cdr_to_ctr[0]_i_14_n_0 ,\sm_reset_rx_cdr_to_ctr[0]_i_15_n_0 ,\sm_reset_rx_cdr_to_ctr[0]_i_16_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[10] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_13 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[10]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[11] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_12 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[11]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[12] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_11 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[12]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[13] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_10 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[13]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[14] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_9 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[14]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[15] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_8 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[15]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[16] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_15 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[16]),
        .R(sm_reset_rx_cdr_to_clr));
  CARRY8 \sm_reset_rx_cdr_to_ctr_reg[16]_i_1 
       (.CI(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_0 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_1 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_2 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_3 ,\NLW_sm_reset_rx_cdr_to_ctr_reg[16]_i_1_CO_UNCONNECTED [3],\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_5 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_6 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_8 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_9 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_10 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_11 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_12 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_13 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_14 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_15 }),
        .S({\sm_reset_rx_cdr_to_ctr[16]_i_2_n_0 ,\sm_reset_rx_cdr_to_ctr[16]_i_3_n_0 ,\sm_reset_rx_cdr_to_ctr[16]_i_4_n_0 ,\sm_reset_rx_cdr_to_ctr[16]_i_5_n_0 ,\sm_reset_rx_cdr_to_ctr[16]_i_6_n_0 ,\sm_reset_rx_cdr_to_ctr[16]_i_7_n_0 ,\sm_reset_rx_cdr_to_ctr[16]_i_8_n_0 ,\sm_reset_rx_cdr_to_ctr[16]_i_9_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[17] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_14 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[17]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[18] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_13 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[18]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[19] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_12 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[19]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[1] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_14 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[1]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[20] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_11 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[20]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[21] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_10 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[21]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[22] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_9 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[22]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[23] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_8 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[23]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[24] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_15 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[24]),
        .R(sm_reset_rx_cdr_to_clr));
  CARRY8 \sm_reset_rx_cdr_to_ctr_reg[24]_i_1 
       (.CI(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_sm_reset_rx_cdr_to_ctr_reg[24]_i_1_CO_UNCONNECTED [7:1],\sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_7 }),
        .DI({\NLW_sm_reset_rx_cdr_to_ctr_reg[24]_i_1_DI_UNCONNECTED [7:2],1'b0,1'b0}),
        .O({\NLW_sm_reset_rx_cdr_to_ctr_reg[24]_i_1_O_UNCONNECTED [7:2],\sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_14 ,\sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_15 }),
        .S({\NLW_sm_reset_rx_cdr_to_ctr_reg[24]_i_1_S_UNCONNECTED [7:2],\sm_reset_rx_cdr_to_ctr[24]_i_2_n_0 ,\sm_reset_rx_cdr_to_ctr[24]_i_3_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[25] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_14 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[25]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[2] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_13 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[2]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[3] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_12 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[3]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[4] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_11 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[4]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[5] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_10 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[5]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[6] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_9 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[6]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[7] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_8 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[7]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[8] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_15 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[8]),
        .R(sm_reset_rx_cdr_to_clr));
  CARRY8 \sm_reset_rx_cdr_to_ctr_reg[8]_i_1 
       (.CI(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_0 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_1 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_2 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_3 ,\NLW_sm_reset_rx_cdr_to_ctr_reg[8]_i_1_CO_UNCONNECTED [3],\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_5 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_6 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_8 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_9 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_10 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_11 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_12 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_13 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_14 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_15 }),
        .S({\sm_reset_rx_cdr_to_ctr[8]_i_2_n_0 ,\sm_reset_rx_cdr_to_ctr[8]_i_3_n_0 ,\sm_reset_rx_cdr_to_ctr[8]_i_4_n_0 ,\sm_reset_rx_cdr_to_ctr[8]_i_5_n_0 ,\sm_reset_rx_cdr_to_ctr[8]_i_6_n_0 ,\sm_reset_rx_cdr_to_ctr[8]_i_7_n_0 ,\sm_reset_rx_cdr_to_ctr[8]_i_8_n_0 ,\sm_reset_rx_cdr_to_ctr[8]_i_9_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[9] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_14 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[9]),
        .R(sm_reset_rx_cdr_to_clr));
  LUT3 #(
    .INIT(8'h0D)) 
    sm_reset_rx_cdr_to_sat_i_1
       (.I0(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .I1(sm_reset_rx_cdr_to_sat),
        .I2(sm_reset_rx_cdr_to_clr),
        .O(sm_reset_rx_cdr_to_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_rx_cdr_to_sat_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(sm_reset_rx_cdr_to_sat_i_1_n_0),
        .Q(sm_reset_rx_cdr_to_sat),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFF3000B)) 
    sm_reset_rx_pll_timer_clr_i_1
       (.I0(sm_reset_rx_pll_timer_sat),
        .I1(sm_reset_rx[0]),
        .I2(sm_reset_rx[1]),
        .I3(sm_reset_rx[2]),
        .I4(sm_reset_rx_pll_timer_clr_reg_n_0),
        .O(sm_reset_rx_pll_timer_clr_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_rx_pll_timer_clr_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(sm_reset_rx_pll_timer_clr_i_1_n_0),
        .Q(sm_reset_rx_pll_timer_clr_reg_n_0),
        .S(gtwiz_reset_rx_any_sync));
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_rx_pll_timer_ctr[0]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg__0[0]),
        .O(p_0_in__1[0]));
  (* SOFT_HLUTNM = "soft_lutpair351" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_rx_pll_timer_ctr[1]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg__0[0]),
        .I1(sm_reset_rx_pll_timer_ctr_reg__0[1]),
        .O(p_0_in__1[1]));
  (* SOFT_HLUTNM = "soft_lutpair351" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_rx_pll_timer_ctr[2]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg__0[1]),
        .I1(sm_reset_rx_pll_timer_ctr_reg__0[0]),
        .I2(sm_reset_rx_pll_timer_ctr_reg__0[2]),
        .O(\sm_reset_rx_pll_timer_ctr[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sm_reset_rx_pll_timer_ctr[3]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg__0[1]),
        .I1(sm_reset_rx_pll_timer_ctr_reg__0[0]),
        .I2(sm_reset_rx_pll_timer_ctr_reg__0[2]),
        .I3(sm_reset_rx_pll_timer_ctr_reg__0[3]),
        .O(p_0_in__1[3]));
  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sm_reset_rx_pll_timer_ctr[4]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg__0[2]),
        .I1(sm_reset_rx_pll_timer_ctr_reg__0[0]),
        .I2(sm_reset_rx_pll_timer_ctr_reg__0[1]),
        .I3(sm_reset_rx_pll_timer_ctr_reg__0[3]),
        .I4(sm_reset_rx_pll_timer_ctr_reg__0[4]),
        .O(p_0_in__1[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \sm_reset_rx_pll_timer_ctr[5]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg__0[3]),
        .I1(sm_reset_rx_pll_timer_ctr_reg__0[1]),
        .I2(sm_reset_rx_pll_timer_ctr_reg__0[0]),
        .I3(sm_reset_rx_pll_timer_ctr_reg__0[2]),
        .I4(sm_reset_rx_pll_timer_ctr_reg__0[4]),
        .I5(sm_reset_rx_pll_timer_ctr_reg__0[5]),
        .O(p_0_in__1[5]));
  (* SOFT_HLUTNM = "soft_lutpair346" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_rx_pll_timer_ctr[6]_i_1 
       (.I0(\sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ),
        .I1(sm_reset_rx_pll_timer_ctr_reg__0[6]),
        .O(p_0_in__1[6]));
  (* SOFT_HLUTNM = "soft_lutpair346" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_rx_pll_timer_ctr[7]_i_1 
       (.I0(\sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ),
        .I1(sm_reset_rx_pll_timer_ctr_reg__0[6]),
        .I2(sm_reset_rx_pll_timer_ctr_reg__0[7]),
        .O(p_0_in__1[7]));
  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sm_reset_rx_pll_timer_ctr[8]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg__0[6]),
        .I1(\sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ),
        .I2(sm_reset_rx_pll_timer_ctr_reg__0[7]),
        .I3(sm_reset_rx_pll_timer_ctr_reg__0[8]),
        .O(p_0_in__1[8]));
  LUT6 #(
    .INIT(64'hFFFFFF7FFFFFFFFF)) 
    \sm_reset_rx_pll_timer_ctr[9]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg__0[1]),
        .I1(sm_reset_rx_pll_timer_ctr_reg__0[0]),
        .I2(sm_reset_rx_pll_timer_ctr_reg__0[2]),
        .I3(sm_reset_rx_pll_timer_ctr_reg__0[3]),
        .I4(sm_reset_rx_pll_timer_ctr_reg__0[4]),
        .I5(\sm_reset_rx_pll_timer_ctr[9]_i_3_n_0 ),
        .O(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sm_reset_rx_pll_timer_ctr[9]_i_2 
       (.I0(sm_reset_rx_pll_timer_ctr_reg__0[7]),
        .I1(\sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ),
        .I2(sm_reset_rx_pll_timer_ctr_reg__0[6]),
        .I3(sm_reset_rx_pll_timer_ctr_reg__0[8]),
        .I4(sm_reset_rx_pll_timer_ctr_reg__0[9]),
        .O(p_0_in__1[9]));
  LUT5 #(
    .INIT(32'h00000001)) 
    \sm_reset_rx_pll_timer_ctr[9]_i_3 
       (.I0(sm_reset_rx_pll_timer_ctr_reg__0[8]),
        .I1(sm_reset_rx_pll_timer_ctr_reg__0[9]),
        .I2(sm_reset_rx_pll_timer_ctr_reg__0[5]),
        .I3(sm_reset_rx_pll_timer_ctr_reg__0[6]),
        .I4(sm_reset_rx_pll_timer_ctr_reg__0[7]),
        .O(\sm_reset_rx_pll_timer_ctr[9]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sm_reset_rx_pll_timer_ctr[9]_i_4 
       (.I0(sm_reset_rx_pll_timer_ctr_reg__0[5]),
        .I1(sm_reset_rx_pll_timer_ctr_reg__0[3]),
        .I2(sm_reset_rx_pll_timer_ctr_reg__0[1]),
        .I3(sm_reset_rx_pll_timer_ctr_reg__0[0]),
        .I4(sm_reset_rx_pll_timer_ctr_reg__0[2]),
        .I5(sm_reset_rx_pll_timer_ctr_reg__0[4]),
        .O(\sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[0] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[0]),
        .Q(sm_reset_rx_pll_timer_ctr_reg__0[0]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[1] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[1]),
        .Q(sm_reset_rx_pll_timer_ctr_reg__0[1]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[2] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(\sm_reset_rx_pll_timer_ctr[2]_i_1_n_0 ),
        .Q(sm_reset_rx_pll_timer_ctr_reg__0[2]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[3] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[3]),
        .Q(sm_reset_rx_pll_timer_ctr_reg__0[3]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[4] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[4]),
        .Q(sm_reset_rx_pll_timer_ctr_reg__0[4]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[5] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[5]),
        .Q(sm_reset_rx_pll_timer_ctr_reg__0[5]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[6] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[6]),
        .Q(sm_reset_rx_pll_timer_ctr_reg__0[6]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[7] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[7]),
        .Q(sm_reset_rx_pll_timer_ctr_reg__0[7]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[8] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[8]),
        .Q(sm_reset_rx_pll_timer_ctr_reg__0[8]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[9] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[9]),
        .Q(sm_reset_rx_pll_timer_ctr_reg__0[9]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  LUT3 #(
    .INIT(8'h0D)) 
    sm_reset_rx_pll_timer_sat_i_1
       (.I0(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .I1(sm_reset_rx_pll_timer_sat),
        .I2(sm_reset_rx_pll_timer_clr_reg_n_0),
        .O(sm_reset_rx_pll_timer_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_rx_pll_timer_sat_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(sm_reset_rx_pll_timer_sat_i_1_n_0),
        .Q(sm_reset_rx_pll_timer_sat),
        .R(1'b0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_rx_timer_clr_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(bit_synchronizer_gtwiz_reset_userclk_rx_active_inst_n_2),
        .Q(sm_reset_rx_timer_clr_reg_n_0),
        .S(gtwiz_reset_rx_any_sync));
  LUT3 #(
    .INIT(8'h7F)) 
    \sm_reset_rx_timer_ctr0_inferred__0/i_ 
       (.I0(sm_reset_rx_timer_ctr[2]),
        .I1(sm_reset_rx_timer_ctr[0]),
        .I2(sm_reset_rx_timer_ctr[1]),
        .O(\sm_reset_rx_timer_ctr0_inferred__0/i__n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_rx_timer_ctr[0]_i_1 
       (.I0(sm_reset_rx_timer_ctr[0]),
        .O(\sm_reset_rx_timer_ctr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair353" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_rx_timer_ctr[1]_i_1 
       (.I0(sm_reset_rx_timer_ctr[0]),
        .I1(sm_reset_rx_timer_ctr[1]),
        .O(\sm_reset_rx_timer_ctr[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair353" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_rx_timer_ctr[2]_i_1 
       (.I0(sm_reset_rx_timer_ctr[0]),
        .I1(sm_reset_rx_timer_ctr[1]),
        .I2(sm_reset_rx_timer_ctr[2]),
        .O(\sm_reset_rx_timer_ctr[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_timer_ctr_reg[0] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_rx_timer_ctr[0]_i_1_n_0 ),
        .Q(sm_reset_rx_timer_ctr[0]),
        .R(sm_reset_rx_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_timer_ctr_reg[1] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_rx_timer_ctr[1]_i_1_n_0 ),
        .Q(sm_reset_rx_timer_ctr[1]),
        .R(sm_reset_rx_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_timer_ctr_reg[2] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_rx_timer_ctr[2]_i_1_n_0 ),
        .Q(sm_reset_rx_timer_ctr[2]),
        .R(sm_reset_rx_timer_clr_reg_n_0));
  LUT5 #(
    .INIT(32'h0000FF80)) 
    sm_reset_rx_timer_sat_i_1
       (.I0(sm_reset_rx_timer_ctr[2]),
        .I1(sm_reset_rx_timer_ctr[0]),
        .I2(sm_reset_rx_timer_ctr[1]),
        .I3(sm_reset_rx_timer_sat),
        .I4(sm_reset_rx_timer_clr_reg_n_0),
        .O(sm_reset_rx_timer_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_rx_timer_sat_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(sm_reset_rx_timer_sat_i_1_n_0),
        .Q(sm_reset_rx_timer_sat),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFF3000B)) 
    sm_reset_tx_pll_timer_clr_i_1
       (.I0(sm_reset_tx_pll_timer_sat),
        .I1(sm_reset_tx[0]),
        .I2(sm_reset_tx[1]),
        .I3(sm_reset_tx[2]),
        .I4(sm_reset_tx_pll_timer_clr_reg_n_0),
        .O(sm_reset_tx_pll_timer_clr_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_tx_pll_timer_clr_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(sm_reset_tx_pll_timer_clr_i_1_n_0),
        .Q(sm_reset_tx_pll_timer_clr_reg_n_0),
        .S(gtwiz_reset_tx_any_sync));
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_tx_pll_timer_ctr[0]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg__0[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair350" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_tx_pll_timer_ctr[1]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg__0[0]),
        .I1(sm_reset_tx_pll_timer_ctr_reg__0[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair350" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_tx_pll_timer_ctr[2]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg__0[1]),
        .I1(sm_reset_tx_pll_timer_ctr_reg__0[0]),
        .I2(sm_reset_tx_pll_timer_ctr_reg__0[2]),
        .O(\sm_reset_tx_pll_timer_ctr[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sm_reset_tx_pll_timer_ctr[3]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg__0[1]),
        .I1(sm_reset_tx_pll_timer_ctr_reg__0[0]),
        .I2(sm_reset_tx_pll_timer_ctr_reg__0[2]),
        .I3(sm_reset_tx_pll_timer_ctr_reg__0[3]),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sm_reset_tx_pll_timer_ctr[4]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg__0[2]),
        .I1(sm_reset_tx_pll_timer_ctr_reg__0[0]),
        .I2(sm_reset_tx_pll_timer_ctr_reg__0[1]),
        .I3(sm_reset_tx_pll_timer_ctr_reg__0[3]),
        .I4(sm_reset_tx_pll_timer_ctr_reg__0[4]),
        .O(p_0_in__0[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \sm_reset_tx_pll_timer_ctr[5]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg__0[3]),
        .I1(sm_reset_tx_pll_timer_ctr_reg__0[1]),
        .I2(sm_reset_tx_pll_timer_ctr_reg__0[0]),
        .I3(sm_reset_tx_pll_timer_ctr_reg__0[2]),
        .I4(sm_reset_tx_pll_timer_ctr_reg__0[4]),
        .I5(sm_reset_tx_pll_timer_ctr_reg__0[5]),
        .O(p_0_in__0[5]));
  (* SOFT_HLUTNM = "soft_lutpair348" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_tx_pll_timer_ctr[6]_i_1 
       (.I0(\sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ),
        .I1(sm_reset_tx_pll_timer_ctr_reg__0[6]),
        .O(p_0_in__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair348" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_tx_pll_timer_ctr[7]_i_1 
       (.I0(\sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ),
        .I1(sm_reset_tx_pll_timer_ctr_reg__0[6]),
        .I2(sm_reset_tx_pll_timer_ctr_reg__0[7]),
        .O(p_0_in__0[7]));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sm_reset_tx_pll_timer_ctr[8]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg__0[6]),
        .I1(\sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ),
        .I2(sm_reset_tx_pll_timer_ctr_reg__0[7]),
        .I3(sm_reset_tx_pll_timer_ctr_reg__0[8]),
        .O(p_0_in__0[8]));
  LUT6 #(
    .INIT(64'hFFFFFF7FFFFFFFFF)) 
    \sm_reset_tx_pll_timer_ctr[9]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg__0[1]),
        .I1(sm_reset_tx_pll_timer_ctr_reg__0[0]),
        .I2(sm_reset_tx_pll_timer_ctr_reg__0[2]),
        .I3(sm_reset_tx_pll_timer_ctr_reg__0[3]),
        .I4(sm_reset_tx_pll_timer_ctr_reg__0[4]),
        .I5(\sm_reset_tx_pll_timer_ctr[9]_i_3_n_0 ),
        .O(sel));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sm_reset_tx_pll_timer_ctr[9]_i_2 
       (.I0(sm_reset_tx_pll_timer_ctr_reg__0[7]),
        .I1(\sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ),
        .I2(sm_reset_tx_pll_timer_ctr_reg__0[6]),
        .I3(sm_reset_tx_pll_timer_ctr_reg__0[8]),
        .I4(sm_reset_tx_pll_timer_ctr_reg__0[9]),
        .O(p_0_in__0[9]));
  LUT5 #(
    .INIT(32'h00000001)) 
    \sm_reset_tx_pll_timer_ctr[9]_i_3 
       (.I0(sm_reset_tx_pll_timer_ctr_reg__0[8]),
        .I1(sm_reset_tx_pll_timer_ctr_reg__0[9]),
        .I2(sm_reset_tx_pll_timer_ctr_reg__0[5]),
        .I3(sm_reset_tx_pll_timer_ctr_reg__0[6]),
        .I4(sm_reset_tx_pll_timer_ctr_reg__0[7]),
        .O(\sm_reset_tx_pll_timer_ctr[9]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sm_reset_tx_pll_timer_ctr[9]_i_4 
       (.I0(sm_reset_tx_pll_timer_ctr_reg__0[5]),
        .I1(sm_reset_tx_pll_timer_ctr_reg__0[3]),
        .I2(sm_reset_tx_pll_timer_ctr_reg__0[1]),
        .I3(sm_reset_tx_pll_timer_ctr_reg__0[0]),
        .I4(sm_reset_tx_pll_timer_ctr_reg__0[2]),
        .I5(sm_reset_tx_pll_timer_ctr_reg__0[4]),
        .O(\sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[0] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(sel),
        .D(p_0_in__0[0]),
        .Q(sm_reset_tx_pll_timer_ctr_reg__0[0]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[1] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(sel),
        .D(p_0_in__0[1]),
        .Q(sm_reset_tx_pll_timer_ctr_reg__0[1]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[2] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(sel),
        .D(\sm_reset_tx_pll_timer_ctr[2]_i_1_n_0 ),
        .Q(sm_reset_tx_pll_timer_ctr_reg__0[2]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[3] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(sel),
        .D(p_0_in__0[3]),
        .Q(sm_reset_tx_pll_timer_ctr_reg__0[3]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[4] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(sel),
        .D(p_0_in__0[4]),
        .Q(sm_reset_tx_pll_timer_ctr_reg__0[4]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[5] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(sel),
        .D(p_0_in__0[5]),
        .Q(sm_reset_tx_pll_timer_ctr_reg__0[5]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[6] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(sel),
        .D(p_0_in__0[6]),
        .Q(sm_reset_tx_pll_timer_ctr_reg__0[6]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[7] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(sel),
        .D(p_0_in__0[7]),
        .Q(sm_reset_tx_pll_timer_ctr_reg__0[7]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[8] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(sel),
        .D(p_0_in__0[8]),
        .Q(sm_reset_tx_pll_timer_ctr_reg__0[8]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[9] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(sel),
        .D(p_0_in__0[9]),
        .Q(sm_reset_tx_pll_timer_ctr_reg__0[9]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  (* SOFT_HLUTNM = "soft_lutpair347" *) 
  LUT3 #(
    .INIT(8'h0D)) 
    sm_reset_tx_pll_timer_sat_i_1
       (.I0(sel),
        .I1(sm_reset_tx_pll_timer_sat),
        .I2(sm_reset_tx_pll_timer_clr_reg_n_0),
        .O(sm_reset_tx_pll_timer_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_tx_pll_timer_sat_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(sm_reset_tx_pll_timer_sat_i_1_n_0),
        .Q(sm_reset_tx_pll_timer_sat),
        .R(1'b0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_tx_timer_clr_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(bit_synchronizer_plllock_tx_inst_n_1),
        .Q(sm_reset_tx_timer_clr_reg_n_0),
        .S(gtwiz_reset_tx_any_sync));
  LUT3 #(
    .INIT(8'h7F)) 
    \sm_reset_tx_timer_ctr0_inferred__0/i_ 
       (.I0(sm_reset_tx_timer_ctr[2]),
        .I1(sm_reset_tx_timer_ctr[0]),
        .I2(sm_reset_tx_timer_ctr[1]),
        .O(p_0_in));
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_tx_timer_ctr[0]_i_1 
       (.I0(sm_reset_tx_timer_ctr[0]),
        .O(p_1_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair349" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_tx_timer_ctr[1]_i_1 
       (.I0(sm_reset_tx_timer_ctr[0]),
        .I1(sm_reset_tx_timer_ctr[1]),
        .O(p_1_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair349" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_tx_timer_ctr[2]_i_1 
       (.I0(sm_reset_tx_timer_ctr[0]),
        .I1(sm_reset_tx_timer_ctr[1]),
        .I2(sm_reset_tx_timer_ctr[2]),
        .O(p_1_in[2]));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_timer_ctr_reg[0] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(p_0_in),
        .D(p_1_in[0]),
        .Q(sm_reset_tx_timer_ctr[0]),
        .R(sm_reset_tx_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_timer_ctr_reg[1] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(p_0_in),
        .D(p_1_in[1]),
        .Q(sm_reset_tx_timer_ctr[1]),
        .R(sm_reset_tx_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_timer_ctr_reg[2] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(p_0_in),
        .D(p_1_in[2]),
        .Q(sm_reset_tx_timer_ctr[2]),
        .R(sm_reset_tx_timer_clr_reg_n_0));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT5 #(
    .INIT(32'h0000FF80)) 
    sm_reset_tx_timer_sat_i_1
       (.I0(sm_reset_tx_timer_ctr[2]),
        .I1(sm_reset_tx_timer_ctr[0]),
        .I2(sm_reset_tx_timer_ctr[1]),
        .I3(sm_reset_tx_timer_sat),
        .I4(sm_reset_tx_timer_clr_reg_n_0),
        .O(sm_reset_tx_timer_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_tx_timer_sat_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(sm_reset_tx_timer_sat_i_1_n_0),
        .Q(sm_reset_tx_timer_sat),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    txuserrdy_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_1),
        .Q(txuserrdy_int),
        .R(1'b0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_reset_inv_synchronizer
   (gtwiz_reset_rx_done_out,
    rxusrclk2_in,
    gtwiz_reset_rx_done_int_reg);
  output [0:0]gtwiz_reset_rx_done_out;
  input [0:0]rxusrclk2_in;
  input gtwiz_reset_rx_done_int_reg;

  wire gtwiz_reset_rx_done_int_reg;
  wire [0:0]gtwiz_reset_rx_done_out;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_out_i_1__0_n_0;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;
  wire [0:0]rxusrclk2_in;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(rxusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__0_n_0),
        .D(1'b1),
        .Q(rst_in_meta));
  LUT1 #(
    .INIT(2'h1)) 
    rst_in_out_i_1__0
       (.I0(gtwiz_reset_rx_done_int_reg),
        .O(rst_in_out_i_1__0_n_0));
  FDCE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(rxusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__0_n_0),
        .D(rst_in_sync3),
        .Q(gtwiz_reset_rx_done_out));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(rxusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__0_n_0),
        .D(rst_in_meta),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(rxusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__0_n_0),
        .D(rst_in_sync1),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(rxusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__0_n_0),
        .D(rst_in_sync2),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_6_5_reset_inv_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_reset_inv_synchronizer_48
   (gtwiz_reset_tx_done_out,
    txusrclk2_in,
    gtwiz_reset_tx_done_int_reg);
  output [0:0]gtwiz_reset_tx_done_out;
  input [0:0]txusrclk2_in;
  input gtwiz_reset_tx_done_int_reg;

  wire gtwiz_reset_tx_done_int_reg;
  wire [0:0]gtwiz_reset_tx_done_out;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_out_i_1_n_0;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;
  wire [0:0]txusrclk2_in;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(txusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1_n_0),
        .D(1'b1),
        .Q(rst_in_meta));
  LUT1 #(
    .INIT(2'h1)) 
    rst_in_out_i_1
       (.I0(gtwiz_reset_tx_done_int_reg),
        .O(rst_in_out_i_1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(txusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1_n_0),
        .D(rst_in_sync3),
        .Q(gtwiz_reset_tx_done_out));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(txusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1_n_0),
        .D(rst_in_meta),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(txusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1_n_0),
        .D(rst_in_sync1),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(txusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1_n_0),
        .D(rst_in_sync2),
        .Q(rst_in_sync3));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_reset_synchronizer
   (SR,
    gtwiz_reset_clk_freerun_in,
    gtwiz_reset_all_in);
  output [0:0]SR;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [0:0]gtwiz_reset_all_in;

  wire [0:0]SR;
  wire [0:0]gtwiz_reset_all_in;
  wire [0:0]gtwiz_reset_clk_freerun_in;
  (* async_reg = "true" *) wire rst_in_meta;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(gtwiz_reset_all_in),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(gtwiz_reset_all_in),
        .Q(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(gtwiz_reset_all_in),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(gtwiz_reset_all_in),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(gtwiz_reset_all_in),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_6_5_reset_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_reset_synchronizer_42
   (gtwiz_reset_rx_any_sync,
    pllreset_rx_out_reg,
    gtwiz_reset_clk_freerun_in,
    out,
    gtwiz_reset_pllreset_rx_int,
    gtwiz_reset_rx_datapath_int_reg,
    gtwiz_reset_rx_datapath_in,
    gtwiz_reset_rx_pll_and_datapath_in,
    gtwiz_reset_rx_pll_and_datapath_int_reg);
  output gtwiz_reset_rx_any_sync;
  output pllreset_rx_out_reg;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [2:0]out;
  input gtwiz_reset_pllreset_rx_int;
  input gtwiz_reset_rx_datapath_int_reg;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  input gtwiz_reset_rx_pll_and_datapath_int_reg;

  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire gtwiz_reset_pllreset_rx_int;
  wire gtwiz_reset_rx_any;
  wire gtwiz_reset_rx_any_sync;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire gtwiz_reset_rx_datapath_int_reg;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  wire gtwiz_reset_rx_pll_and_datapath_int_reg;
  wire [2:0]out;
  wire pllreset_rx_out_reg;
  (* async_reg = "true" *) wire rst_in_meta;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  LUT5 #(
    .INIT(32'hFFDF0010)) 
    pllreset_rx_out_i_1
       (.I0(out[1]),
        .I1(out[2]),
        .I2(out[0]),
        .I3(gtwiz_reset_rx_any_sync),
        .I4(gtwiz_reset_pllreset_rx_int),
        .O(pllreset_rx_out_reg));
  LUT4 #(
    .INIT(16'hFFFE)) 
    rst_in_meta_i_1__1
       (.I0(gtwiz_reset_rx_datapath_int_reg),
        .I1(gtwiz_reset_rx_datapath_in),
        .I2(gtwiz_reset_rx_pll_and_datapath_in),
        .I3(gtwiz_reset_rx_pll_and_datapath_int_reg),
        .O(gtwiz_reset_rx_any));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(gtwiz_reset_rx_any),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(gtwiz_reset_rx_any),
        .Q(gtwiz_reset_rx_any_sync));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(gtwiz_reset_rx_any),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(gtwiz_reset_rx_any),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(gtwiz_reset_rx_any),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_6_5_reset_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_reset_synchronizer_43
   (in0,
    gtwiz_reset_clk_freerun_in,
    gtwiz_reset_rx_datapath_in,
    gtwiz_reset_rx_datapath_int_reg);
  output in0;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input gtwiz_reset_rx_datapath_int_reg;

  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire gtwiz_reset_rx_datapath_int_reg;
  wire in0;
  wire rst_in0_2;
  (* async_reg = "true" *) wire rst_in_meta;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  LUT2 #(
    .INIT(4'hE)) 
    rst_in_meta_i_1__3
       (.I0(gtwiz_reset_rx_datapath_in),
        .I1(gtwiz_reset_rx_datapath_int_reg),
        .O(rst_in0_2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst_in0_2),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(rst_in0_2),
        .Q(in0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(rst_in0_2),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(rst_in0_2),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(rst_in0_2),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_6_5_reset_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_reset_synchronizer_44
   (in0,
    gtwiz_reset_clk_freerun_in,
    gtwiz_reset_rx_pll_and_datapath_int_reg,
    gtwiz_reset_rx_pll_and_datapath_in);
  output in0;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input gtwiz_reset_rx_pll_and_datapath_int_reg;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;

  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  wire gtwiz_reset_rx_pll_and_datapath_int_reg;
  wire in0;
  wire p_0_in_1;
  (* async_reg = "true" *) wire rst_in_meta;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  LUT2 #(
    .INIT(4'hE)) 
    rst_in_meta_i_1__2
       (.I0(gtwiz_reset_rx_pll_and_datapath_int_reg),
        .I1(gtwiz_reset_rx_pll_and_datapath_in),
        .O(p_0_in_1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(p_0_in_1),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(p_0_in_1),
        .Q(in0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(p_0_in_1),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(p_0_in_1),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(p_0_in_1),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_6_5_reset_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_reset_synchronizer_45
   (gtwiz_reset_tx_any_sync,
    pllreset_tx_out_reg,
    gtwiz_reset_clk_freerun_in,
    out,
    gtwiz_reset_pllreset_tx_int,
    gtwiz_reset_tx_datapath_in,
    gtwiz_reset_tx_pll_and_datapath_in,
    gtwiz_reset_tx_pll_and_datapath_int_reg);
  output gtwiz_reset_tx_any_sync;
  output pllreset_tx_out_reg;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [2:0]out;
  input gtwiz_reset_pllreset_tx_int;
  input [0:0]gtwiz_reset_tx_datapath_in;
  input [0:0]gtwiz_reset_tx_pll_and_datapath_in;
  input gtwiz_reset_tx_pll_and_datapath_int_reg;

  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire gtwiz_reset_pllreset_tx_int;
  wire gtwiz_reset_tx_any;
  wire gtwiz_reset_tx_any_sync;
  wire [0:0]gtwiz_reset_tx_datapath_in;
  wire [0:0]gtwiz_reset_tx_pll_and_datapath_in;
  wire gtwiz_reset_tx_pll_and_datapath_int_reg;
  wire [2:0]out;
  wire pllreset_tx_out_reg;
  (* async_reg = "true" *) wire rst_in_meta;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  LUT5 #(
    .INIT(32'hFFDF0010)) 
    pllreset_tx_out_i_1
       (.I0(out[1]),
        .I1(out[2]),
        .I2(out[0]),
        .I3(gtwiz_reset_tx_any_sync),
        .I4(gtwiz_reset_pllreset_tx_int),
        .O(pllreset_tx_out_reg));
  LUT3 #(
    .INIT(8'hFE)) 
    rst_in_meta_i_1
       (.I0(gtwiz_reset_tx_datapath_in),
        .I1(gtwiz_reset_tx_pll_and_datapath_in),
        .I2(gtwiz_reset_tx_pll_and_datapath_int_reg),
        .O(gtwiz_reset_tx_any));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(gtwiz_reset_tx_any),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(gtwiz_reset_tx_any),
        .Q(gtwiz_reset_tx_any_sync));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(gtwiz_reset_tx_any),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(gtwiz_reset_tx_any),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(gtwiz_reset_tx_any),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_6_5_reset_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_reset_synchronizer_46
   (in0,
    gtwiz_reset_clk_freerun_in,
    gtwiz_reset_tx_datapath_in);
  output in0;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [0:0]gtwiz_reset_tx_datapath_in;

  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire [0:0]gtwiz_reset_tx_datapath_in;
  wire in0;
  (* async_reg = "true" *) wire rst_in_meta;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(gtwiz_reset_tx_datapath_in),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(gtwiz_reset_tx_datapath_in),
        .Q(in0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(gtwiz_reset_tx_datapath_in),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(gtwiz_reset_tx_datapath_in),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(gtwiz_reset_tx_datapath_in),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_6_5_reset_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_reset_synchronizer_47
   (in0,
    gtwiz_reset_clk_freerun_in,
    gtwiz_reset_tx_pll_and_datapath_int_reg,
    gtwiz_reset_tx_pll_and_datapath_in);
  output in0;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input gtwiz_reset_tx_pll_and_datapath_int_reg;
  input [0:0]gtwiz_reset_tx_pll_and_datapath_in;

  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire [0:0]gtwiz_reset_tx_pll_and_datapath_in;
  wire gtwiz_reset_tx_pll_and_datapath_int_reg;
  wire in0;
  wire p_1_in_0;
  (* async_reg = "true" *) wire rst_in_meta;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  LUT2 #(
    .INIT(4'hE)) 
    rst_in_meta_i_1__0
       (.I0(gtwiz_reset_tx_pll_and_datapath_int_reg),
        .I1(gtwiz_reset_tx_pll_and_datapath_in),
        .O(p_1_in_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(p_1_in_0),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(p_1_in_0),
        .Q(in0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(p_1_in_0),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(p_1_in_0),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(p_1_in_0),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_6_5_reset_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_gtwizard_ultrascale_v1_6_5_reset_synchronizer_49
   (txprogdivreset_int,
    gtwiz_reset_clk_freerun_in,
    gtwiz_reset_qpll0lock_in);
  output txprogdivreset_int;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [0:0]gtwiz_reset_qpll0lock_in;

  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire [0:0]gtwiz_reset_qpll0lock_in;
  wire rst_in0;
  (* async_reg = "true" *) wire rst_in_meta;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;
  wire txprogdivreset_int;

  LUT1 #(
    .INIT(2'h1)) 
    rst_in_meta_i_1__4
       (.I0(gtwiz_reset_qpll0lock_in),
        .O(rst_in0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst_in0),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(rst_in0),
        .Q(txprogdivreset_int));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(rst_in0),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(rst_in0),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(rst_in0),
        .Q(rst_in_sync3));
endmodule

(* C_1588 = "0" *) (* C_DP_WIDTH = "64" *) (* C_GTIF_WIDTH = "64" *) 
(* C_GTTYPE = "2" *) (* C_HAS_AN = "1'b0" *) (* C_HAS_FEC = "1'b0" *) 
(* C_HAS_MDIO = "1'b0" *) (* C_IS_32BIT = "1'b0" *) (* C_IS_KR = "1'b0" *) 
(* C_NO_EBUFF = "1'b0" *) (* C_REFCLKRATE = "156" *) (* C_SPEED10_25 = "10" *) 
(* DowngradeIPIdentifiedWarnings = "yes" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7
   (reset,
    areset_coreclk,
    txreset_txusrclk2,
    rxreset_rxusrclk2,
    areset_rxusrclk2,
    dclk_reset,
    lfreset,
    pma_resetout,
    pcs_resetout,
    coreclk,
    txusrclk2,
    rxusrclk2,
    dclk,
    fr_clk,
    sim_speedup_control,
    xgmii_txd,
    xgmii_txc,
    xgmii_rxd,
    xgmii_rxc,
    mdc,
    mdio_in,
    mdio_out,
    mdio_tri,
    prtad,
    pma_pmd_type,
    configuration_vector,
    status_vector,
    core_status,
    resetdone,
    gt_txd,
    gt_txc,
    gt_rxd,
    gt_rxc,
    gt_slip,
    drp_req,
    drp_gnt,
    drp_den,
    drp_dwe,
    drp_daddr,
    drp_di,
    drp_drdy,
    drp_drpdo,
    signal_detect,
    tx_fault,
    tx_disable,
    is_eval,
    gt_progdiv_reset,
    tx_prbs31_en,
    rx_prbs31_en,
    core_in_testmode,
    clear_rx_prbs_err_count,
    loopback_ctrl,
    an_enable,
    coeff_minus_1,
    coeff_plus_1,
    coeff_zero,
    txdiffctrl,
    training_enable,
    training_addr,
    training_rnw,
    training_wrdata,
    training_ipif_cs,
    training_drp_cs,
    training_rddata,
    training_rdack,
    training_wrack,
    systemtimer_s_field,
    systemtimer_ns_field,
    correction_timer,
    rxphy_s_field,
    rxphy_ns_field,
    rxphy_correction_timer,
    txphy_async_gb_latency,
    gt_rxstartofseq,
    gt_latclk);
  input reset;
  input areset_coreclk;
  input txreset_txusrclk2;
  input rxreset_rxusrclk2;
  input areset_rxusrclk2;
  input dclk_reset;
  input lfreset;
  output pma_resetout;
  output pcs_resetout;
  input coreclk;
  input txusrclk2;
  input rxusrclk2;
  input dclk;
  input fr_clk;
  input sim_speedup_control;
  input [63:0]xgmii_txd;
  input [7:0]xgmii_txc;
  output [63:0]xgmii_rxd;
  output [7:0]xgmii_rxc;
  input mdc;
  input mdio_in;
  output mdio_out;
  output mdio_tri;
  input [4:0]prtad;
  input [2:0]pma_pmd_type;
  input [535:0]configuration_vector;
  output [447:0]status_vector;
  output [7:0]core_status;
  input resetdone;
  output [63:0]gt_txd;
  output [7:0]gt_txc;
  input [63:0]gt_rxd;
  input [7:0]gt_rxc;
  output gt_slip;
  output drp_req;
  input drp_gnt;
  output drp_den;
  output drp_dwe;
  output [15:0]drp_daddr;
  output [15:0]drp_di;
  input drp_drdy;
  input [15:0]drp_drpdo;
  input signal_detect;
  input tx_fault;
  output tx_disable;
  output is_eval;
  output gt_progdiv_reset;
  output tx_prbs31_en;
  output rx_prbs31_en;
  output core_in_testmode;
  output clear_rx_prbs_err_count;
  output [2:0]loopback_ctrl;
  input an_enable;
  output [4:0]coeff_minus_1;
  output [4:0]coeff_plus_1;
  output [6:0]coeff_zero;
  output [4:0]txdiffctrl;
  input training_enable;
  input [20:0]training_addr;
  input training_rnw;
  input [15:0]training_wrdata;
  input training_ipif_cs;
  input training_drp_cs;
  output [15:0]training_rddata;
  output training_rdack;
  output training_wrack;
  input [47:0]systemtimer_s_field;
  input [31:0]systemtimer_ns_field;
  input [63:0]correction_timer;
  output [47:0]rxphy_s_field;
  output [35:0]rxphy_ns_field;
  output [63:0]rxphy_correction_timer;
  output [15:0]txphy_async_gb_latency;
  input gt_rxstartofseq;
  input gt_latclk;

  wire \<const0> ;
  wire clear_rx_prbs_err_count;
  wire [535:0]configuration_vector;
  wire core_in_testmode;
  wire [0:0]\^core_status ;
  wire coreclk;
  wire dclk;
  wire dclk_reset;
  wire [8:8]\^drp_daddr ;
  wire drp_den;
  wire drp_drdy;
  wire [15:0]drp_drpdo;
  wire drp_dwe;
  wire drp_gnt;
  wire drp_req;
  wire [7:0]gt_rxc;
  wire [63:0]gt_rxd;
  wire gt_slip;
  wire [1:0]\^gt_txc ;
  wire [63:0]gt_txd;
  wire [2:0]pma_pmd_type;
  wire reset;
  wire resetdone;
  wire rx_prbs31_en;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;
  wire signal_detect;
  wire [303:15]\^status_vector ;
  wire tx_disable;
  wire tx_prbs31_en;
  wire [7:0]xgmii_rxc;
  wire [63:0]xgmii_rxd;
  wire [7:0]xgmii_txc;
  wire [63:0]xgmii_txd;

  assign coeff_minus_1[4] = \<const0> ;
  assign coeff_minus_1[3] = \<const0> ;
  assign coeff_minus_1[2] = \<const0> ;
  assign coeff_minus_1[1] = \<const0> ;
  assign coeff_minus_1[0] = \<const0> ;
  assign coeff_plus_1[4] = \<const0> ;
  assign coeff_plus_1[3] = \<const0> ;
  assign coeff_plus_1[2] = \<const0> ;
  assign coeff_plus_1[1] = \<const0> ;
  assign coeff_plus_1[0] = \<const0> ;
  assign coeff_zero[6] = \<const0> ;
  assign coeff_zero[5] = \<const0> ;
  assign coeff_zero[4] = \<const0> ;
  assign coeff_zero[3] = \<const0> ;
  assign coeff_zero[2] = \<const0> ;
  assign coeff_zero[1] = \<const0> ;
  assign coeff_zero[0] = \<const0> ;
  assign core_status[7] = \<const0> ;
  assign core_status[6] = \<const0> ;
  assign core_status[5] = \<const0> ;
  assign core_status[4] = \<const0> ;
  assign core_status[3] = \<const0> ;
  assign core_status[2] = \<const0> ;
  assign core_status[1] = \<const0> ;
  assign core_status[0] = \^core_status [0];
  assign drp_daddr[15] = \<const0> ;
  assign drp_daddr[14] = \<const0> ;
  assign drp_daddr[13] = \<const0> ;
  assign drp_daddr[12] = \<const0> ;
  assign drp_daddr[11] = \<const0> ;
  assign drp_daddr[10] = \<const0> ;
  assign drp_daddr[9] = \<const0> ;
  assign drp_daddr[8] = \^drp_daddr [8];
  assign drp_daddr[7] = \<const0> ;
  assign drp_daddr[6] = \<const0> ;
  assign drp_daddr[5] = \<const0> ;
  assign drp_daddr[4] = \<const0> ;
  assign drp_daddr[3] = \<const0> ;
  assign drp_daddr[2] = \<const0> ;
  assign drp_daddr[1] = \<const0> ;
  assign drp_daddr[0] = \<const0> ;
  assign drp_di[15] = \<const0> ;
  assign drp_di[14] = \<const0> ;
  assign drp_di[13] = \<const0> ;
  assign drp_di[12] = \<const0> ;
  assign drp_di[11] = \<const0> ;
  assign drp_di[10] = \<const0> ;
  assign drp_di[9] = \<const0> ;
  assign drp_di[8] = \<const0> ;
  assign drp_di[7] = \<const0> ;
  assign drp_di[6] = \<const0> ;
  assign drp_di[5] = \<const0> ;
  assign drp_di[4] = \<const0> ;
  assign drp_di[3] = \<const0> ;
  assign drp_di[2] = \<const0> ;
  assign drp_di[1] = \<const0> ;
  assign drp_di[0] = \<const0> ;
  assign gt_progdiv_reset = \<const0> ;
  assign gt_txc[7] = \<const0> ;
  assign gt_txc[6] = \<const0> ;
  assign gt_txc[5] = \<const0> ;
  assign gt_txc[4] = \<const0> ;
  assign gt_txc[3] = \<const0> ;
  assign gt_txc[2] = \<const0> ;
  assign gt_txc[1:0] = \^gt_txc [1:0];
  assign is_eval = \<const0> ;
  assign loopback_ctrl[2] = \<const0> ;
  assign loopback_ctrl[1] = \<const0> ;
  assign loopback_ctrl[0] = \<const0> ;
  assign mdio_out = \<const0> ;
  assign mdio_tri = \<const0> ;
  assign pcs_resetout = \<const0> ;
  assign pma_resetout = \<const0> ;
  assign rxphy_correction_timer[63] = \<const0> ;
  assign rxphy_correction_timer[62] = \<const0> ;
  assign rxphy_correction_timer[61] = \<const0> ;
  assign rxphy_correction_timer[60] = \<const0> ;
  assign rxphy_correction_timer[59] = \<const0> ;
  assign rxphy_correction_timer[58] = \<const0> ;
  assign rxphy_correction_timer[57] = \<const0> ;
  assign rxphy_correction_timer[56] = \<const0> ;
  assign rxphy_correction_timer[55] = \<const0> ;
  assign rxphy_correction_timer[54] = \<const0> ;
  assign rxphy_correction_timer[53] = \<const0> ;
  assign rxphy_correction_timer[52] = \<const0> ;
  assign rxphy_correction_timer[51] = \<const0> ;
  assign rxphy_correction_timer[50] = \<const0> ;
  assign rxphy_correction_timer[49] = \<const0> ;
  assign rxphy_correction_timer[48] = \<const0> ;
  assign rxphy_correction_timer[47] = \<const0> ;
  assign rxphy_correction_timer[46] = \<const0> ;
  assign rxphy_correction_timer[45] = \<const0> ;
  assign rxphy_correction_timer[44] = \<const0> ;
  assign rxphy_correction_timer[43] = \<const0> ;
  assign rxphy_correction_timer[42] = \<const0> ;
  assign rxphy_correction_timer[41] = \<const0> ;
  assign rxphy_correction_timer[40] = \<const0> ;
  assign rxphy_correction_timer[39] = \<const0> ;
  assign rxphy_correction_timer[38] = \<const0> ;
  assign rxphy_correction_timer[37] = \<const0> ;
  assign rxphy_correction_timer[36] = \<const0> ;
  assign rxphy_correction_timer[35] = \<const0> ;
  assign rxphy_correction_timer[34] = \<const0> ;
  assign rxphy_correction_timer[33] = \<const0> ;
  assign rxphy_correction_timer[32] = \<const0> ;
  assign rxphy_correction_timer[31] = \<const0> ;
  assign rxphy_correction_timer[30] = \<const0> ;
  assign rxphy_correction_timer[29] = \<const0> ;
  assign rxphy_correction_timer[28] = \<const0> ;
  assign rxphy_correction_timer[27] = \<const0> ;
  assign rxphy_correction_timer[26] = \<const0> ;
  assign rxphy_correction_timer[25] = \<const0> ;
  assign rxphy_correction_timer[24] = \<const0> ;
  assign rxphy_correction_timer[23] = \<const0> ;
  assign rxphy_correction_timer[22] = \<const0> ;
  assign rxphy_correction_timer[21] = \<const0> ;
  assign rxphy_correction_timer[20] = \<const0> ;
  assign rxphy_correction_timer[19] = \<const0> ;
  assign rxphy_correction_timer[18] = \<const0> ;
  assign rxphy_correction_timer[17] = \<const0> ;
  assign rxphy_correction_timer[16] = \<const0> ;
  assign rxphy_correction_timer[15] = \<const0> ;
  assign rxphy_correction_timer[14] = \<const0> ;
  assign rxphy_correction_timer[13] = \<const0> ;
  assign rxphy_correction_timer[12] = \<const0> ;
  assign rxphy_correction_timer[11] = \<const0> ;
  assign rxphy_correction_timer[10] = \<const0> ;
  assign rxphy_correction_timer[9] = \<const0> ;
  assign rxphy_correction_timer[8] = \<const0> ;
  assign rxphy_correction_timer[7] = \<const0> ;
  assign rxphy_correction_timer[6] = \<const0> ;
  assign rxphy_correction_timer[5] = \<const0> ;
  assign rxphy_correction_timer[4] = \<const0> ;
  assign rxphy_correction_timer[3] = \<const0> ;
  assign rxphy_correction_timer[2] = \<const0> ;
  assign rxphy_correction_timer[1] = \<const0> ;
  assign rxphy_correction_timer[0] = \<const0> ;
  assign rxphy_ns_field[35] = \<const0> ;
  assign rxphy_ns_field[34] = \<const0> ;
  assign rxphy_ns_field[33] = \<const0> ;
  assign rxphy_ns_field[32] = \<const0> ;
  assign rxphy_ns_field[31] = \<const0> ;
  assign rxphy_ns_field[30] = \<const0> ;
  assign rxphy_ns_field[29] = \<const0> ;
  assign rxphy_ns_field[28] = \<const0> ;
  assign rxphy_ns_field[27] = \<const0> ;
  assign rxphy_ns_field[26] = \<const0> ;
  assign rxphy_ns_field[25] = \<const0> ;
  assign rxphy_ns_field[24] = \<const0> ;
  assign rxphy_ns_field[23] = \<const0> ;
  assign rxphy_ns_field[22] = \<const0> ;
  assign rxphy_ns_field[21] = \<const0> ;
  assign rxphy_ns_field[20] = \<const0> ;
  assign rxphy_ns_field[19] = \<const0> ;
  assign rxphy_ns_field[18] = \<const0> ;
  assign rxphy_ns_field[17] = \<const0> ;
  assign rxphy_ns_field[16] = \<const0> ;
  assign rxphy_ns_field[15] = \<const0> ;
  assign rxphy_ns_field[14] = \<const0> ;
  assign rxphy_ns_field[13] = \<const0> ;
  assign rxphy_ns_field[12] = \<const0> ;
  assign rxphy_ns_field[11] = \<const0> ;
  assign rxphy_ns_field[10] = \<const0> ;
  assign rxphy_ns_field[9] = \<const0> ;
  assign rxphy_ns_field[8] = \<const0> ;
  assign rxphy_ns_field[7] = \<const0> ;
  assign rxphy_ns_field[6] = \<const0> ;
  assign rxphy_ns_field[5] = \<const0> ;
  assign rxphy_ns_field[4] = \<const0> ;
  assign rxphy_ns_field[3] = \<const0> ;
  assign rxphy_ns_field[2] = \<const0> ;
  assign rxphy_ns_field[1] = \<const0> ;
  assign rxphy_ns_field[0] = \<const0> ;
  assign rxphy_s_field[47] = \<const0> ;
  assign rxphy_s_field[46] = \<const0> ;
  assign rxphy_s_field[45] = \<const0> ;
  assign rxphy_s_field[44] = \<const0> ;
  assign rxphy_s_field[43] = \<const0> ;
  assign rxphy_s_field[42] = \<const0> ;
  assign rxphy_s_field[41] = \<const0> ;
  assign rxphy_s_field[40] = \<const0> ;
  assign rxphy_s_field[39] = \<const0> ;
  assign rxphy_s_field[38] = \<const0> ;
  assign rxphy_s_field[37] = \<const0> ;
  assign rxphy_s_field[36] = \<const0> ;
  assign rxphy_s_field[35] = \<const0> ;
  assign rxphy_s_field[34] = \<const0> ;
  assign rxphy_s_field[33] = \<const0> ;
  assign rxphy_s_field[32] = \<const0> ;
  assign rxphy_s_field[31] = \<const0> ;
  assign rxphy_s_field[30] = \<const0> ;
  assign rxphy_s_field[29] = \<const0> ;
  assign rxphy_s_field[28] = \<const0> ;
  assign rxphy_s_field[27] = \<const0> ;
  assign rxphy_s_field[26] = \<const0> ;
  assign rxphy_s_field[25] = \<const0> ;
  assign rxphy_s_field[24] = \<const0> ;
  assign rxphy_s_field[23] = \<const0> ;
  assign rxphy_s_field[22] = \<const0> ;
  assign rxphy_s_field[21] = \<const0> ;
  assign rxphy_s_field[20] = \<const0> ;
  assign rxphy_s_field[19] = \<const0> ;
  assign rxphy_s_field[18] = \<const0> ;
  assign rxphy_s_field[17] = \<const0> ;
  assign rxphy_s_field[16] = \<const0> ;
  assign rxphy_s_field[15] = \<const0> ;
  assign rxphy_s_field[14] = \<const0> ;
  assign rxphy_s_field[13] = \<const0> ;
  assign rxphy_s_field[12] = \<const0> ;
  assign rxphy_s_field[11] = \<const0> ;
  assign rxphy_s_field[10] = \<const0> ;
  assign rxphy_s_field[9] = \<const0> ;
  assign rxphy_s_field[8] = \<const0> ;
  assign rxphy_s_field[7] = \<const0> ;
  assign rxphy_s_field[6] = \<const0> ;
  assign rxphy_s_field[5] = \<const0> ;
  assign rxphy_s_field[4] = \<const0> ;
  assign rxphy_s_field[3] = \<const0> ;
  assign rxphy_s_field[2] = \<const0> ;
  assign rxphy_s_field[1] = \<const0> ;
  assign rxphy_s_field[0] = \<const0> ;
  assign status_vector[447] = \<const0> ;
  assign status_vector[446] = \<const0> ;
  assign status_vector[445] = \<const0> ;
  assign status_vector[444] = \<const0> ;
  assign status_vector[443] = \<const0> ;
  assign status_vector[442] = \<const0> ;
  assign status_vector[441] = \<const0> ;
  assign status_vector[440] = \<const0> ;
  assign status_vector[439] = \<const0> ;
  assign status_vector[438] = \<const0> ;
  assign status_vector[437] = \<const0> ;
  assign status_vector[436] = \<const0> ;
  assign status_vector[435] = \<const0> ;
  assign status_vector[434] = \<const0> ;
  assign status_vector[433] = \<const0> ;
  assign status_vector[432] = \<const0> ;
  assign status_vector[431] = \<const0> ;
  assign status_vector[430] = \<const0> ;
  assign status_vector[429] = \<const0> ;
  assign status_vector[428] = \<const0> ;
  assign status_vector[427] = \<const0> ;
  assign status_vector[426] = \<const0> ;
  assign status_vector[425] = \<const0> ;
  assign status_vector[424] = \<const0> ;
  assign status_vector[423] = \<const0> ;
  assign status_vector[422] = \<const0> ;
  assign status_vector[421] = \<const0> ;
  assign status_vector[420] = \<const0> ;
  assign status_vector[419] = \<const0> ;
  assign status_vector[418] = \<const0> ;
  assign status_vector[417] = \<const0> ;
  assign status_vector[416] = \<const0> ;
  assign status_vector[415] = \<const0> ;
  assign status_vector[414] = \<const0> ;
  assign status_vector[413] = \<const0> ;
  assign status_vector[412] = \<const0> ;
  assign status_vector[411] = \<const0> ;
  assign status_vector[410] = \<const0> ;
  assign status_vector[409] = \<const0> ;
  assign status_vector[408] = \<const0> ;
  assign status_vector[407] = \<const0> ;
  assign status_vector[406] = \<const0> ;
  assign status_vector[405] = \<const0> ;
  assign status_vector[404] = \<const0> ;
  assign status_vector[403] = \<const0> ;
  assign status_vector[402] = \<const0> ;
  assign status_vector[401] = \<const0> ;
  assign status_vector[400] = \<const0> ;
  assign status_vector[399] = \<const0> ;
  assign status_vector[398] = \<const0> ;
  assign status_vector[397] = \<const0> ;
  assign status_vector[396] = \<const0> ;
  assign status_vector[395] = \<const0> ;
  assign status_vector[394] = \<const0> ;
  assign status_vector[393] = \<const0> ;
  assign status_vector[392] = \<const0> ;
  assign status_vector[391] = \<const0> ;
  assign status_vector[390] = \<const0> ;
  assign status_vector[389] = \<const0> ;
  assign status_vector[388] = \<const0> ;
  assign status_vector[387] = \<const0> ;
  assign status_vector[386] = \<const0> ;
  assign status_vector[385] = \<const0> ;
  assign status_vector[384] = \<const0> ;
  assign status_vector[383] = \<const0> ;
  assign status_vector[382] = \<const0> ;
  assign status_vector[381] = \<const0> ;
  assign status_vector[380] = \<const0> ;
  assign status_vector[379] = \<const0> ;
  assign status_vector[378] = \<const0> ;
  assign status_vector[377] = \<const0> ;
  assign status_vector[376] = \<const0> ;
  assign status_vector[375] = \<const0> ;
  assign status_vector[374] = \<const0> ;
  assign status_vector[373] = \<const0> ;
  assign status_vector[372] = \<const0> ;
  assign status_vector[371] = \<const0> ;
  assign status_vector[370] = \<const0> ;
  assign status_vector[369] = \<const0> ;
  assign status_vector[368] = \<const0> ;
  assign status_vector[367] = \<const0> ;
  assign status_vector[366] = \<const0> ;
  assign status_vector[365] = \<const0> ;
  assign status_vector[364] = \<const0> ;
  assign status_vector[363] = \<const0> ;
  assign status_vector[362] = \<const0> ;
  assign status_vector[361] = \<const0> ;
  assign status_vector[360] = \<const0> ;
  assign status_vector[359] = \<const0> ;
  assign status_vector[358] = \<const0> ;
  assign status_vector[357] = \<const0> ;
  assign status_vector[356] = \<const0> ;
  assign status_vector[355] = \<const0> ;
  assign status_vector[354] = \<const0> ;
  assign status_vector[353] = \<const0> ;
  assign status_vector[352] = \<const0> ;
  assign status_vector[351] = \<const0> ;
  assign status_vector[350] = \<const0> ;
  assign status_vector[349] = \<const0> ;
  assign status_vector[348] = \<const0> ;
  assign status_vector[347] = \<const0> ;
  assign status_vector[346] = \<const0> ;
  assign status_vector[345] = \<const0> ;
  assign status_vector[344] = \<const0> ;
  assign status_vector[343] = \<const0> ;
  assign status_vector[342] = \<const0> ;
  assign status_vector[341] = \<const0> ;
  assign status_vector[340] = \<const0> ;
  assign status_vector[339] = \<const0> ;
  assign status_vector[338] = \<const0> ;
  assign status_vector[337] = \<const0> ;
  assign status_vector[336] = \<const0> ;
  assign status_vector[335] = \<const0> ;
  assign status_vector[334] = \<const0> ;
  assign status_vector[333] = \<const0> ;
  assign status_vector[332] = \<const0> ;
  assign status_vector[331] = \<const0> ;
  assign status_vector[330] = \<const0> ;
  assign status_vector[329] = \<const0> ;
  assign status_vector[328] = \<const0> ;
  assign status_vector[327] = \<const0> ;
  assign status_vector[326] = \<const0> ;
  assign status_vector[325] = \<const0> ;
  assign status_vector[324] = \<const0> ;
  assign status_vector[323] = \<const0> ;
  assign status_vector[322] = \<const0> ;
  assign status_vector[321] = \<const0> ;
  assign status_vector[320] = \<const0> ;
  assign status_vector[319] = \<const0> ;
  assign status_vector[318] = \<const0> ;
  assign status_vector[317] = \<const0> ;
  assign status_vector[316] = \<const0> ;
  assign status_vector[315] = \<const0> ;
  assign status_vector[314] = \<const0> ;
  assign status_vector[313] = \<const0> ;
  assign status_vector[312] = \<const0> ;
  assign status_vector[311] = \<const0> ;
  assign status_vector[310] = \<const0> ;
  assign status_vector[309] = \<const0> ;
  assign status_vector[308] = \<const0> ;
  assign status_vector[307] = \<const0> ;
  assign status_vector[306] = \<const0> ;
  assign status_vector[305] = \<const0> ;
  assign status_vector[304] = \<const0> ;
  assign status_vector[303:272] = \^status_vector [303:272];
  assign status_vector[271] = \<const0> ;
  assign status_vector[270] = \<const0> ;
  assign status_vector[269] = \<const0> ;
  assign status_vector[268] = \^status_vector [268];
  assign status_vector[267] = \<const0> ;
  assign status_vector[266] = \<const0> ;
  assign status_vector[265] = \<const0> ;
  assign status_vector[264] = \<const0> ;
  assign status_vector[263] = \<const0> ;
  assign status_vector[262] = \<const0> ;
  assign status_vector[261] = \<const0> ;
  assign status_vector[260] = \<const0> ;
  assign status_vector[259] = \<const0> ;
  assign status_vector[258] = \<const0> ;
  assign status_vector[257:256] = \^status_vector [257:256];
  assign status_vector[255] = \<const0> ;
  assign status_vector[254] = \<const0> ;
  assign status_vector[253] = \<const0> ;
  assign status_vector[252] = \<const0> ;
  assign status_vector[251] = \<const0> ;
  assign status_vector[250] = \^status_vector [250];
  assign status_vector[249] = \<const0> ;
  assign status_vector[248] = \<const0> ;
  assign status_vector[247] = \<const0> ;
  assign status_vector[246] = \<const0> ;
  assign status_vector[245] = \<const0> ;
  assign status_vector[244] = \<const0> ;
  assign status_vector[243] = \<const0> ;
  assign status_vector[242] = \<const0> ;
  assign status_vector[241] = \<const0> ;
  assign status_vector[240] = \<const0> ;
  assign status_vector[239] = \<const0> ;
  assign status_vector[238] = \<const0> ;
  assign status_vector[237] = \<const0> ;
  assign status_vector[236] = \<const0> ;
  assign status_vector[235] = \<const0> ;
  assign status_vector[234] = \<const0> ;
  assign status_vector[233] = \<const0> ;
  assign status_vector[232] = \<const0> ;
  assign status_vector[231] = \<const0> ;
  assign status_vector[230] = \<const0> ;
  assign status_vector[229] = \<const0> ;
  assign status_vector[228] = \<const0> ;
  assign status_vector[227] = \<const0> ;
  assign status_vector[226] = \^status_vector [226];
  assign status_vector[225] = \<const0> ;
  assign status_vector[224] = \<const0> ;
  assign status_vector[223] = \^status_vector [223];
  assign status_vector[222] = \<const0> ;
  assign status_vector[221] = \<const0> ;
  assign status_vector[220] = \<const0> ;
  assign status_vector[219] = \<const0> ;
  assign status_vector[218] = \<const0> ;
  assign status_vector[217] = \<const0> ;
  assign status_vector[216] = \<const0> ;
  assign status_vector[215] = \<const0> ;
  assign status_vector[214] = \<const0> ;
  assign status_vector[213] = \<const0> ;
  assign status_vector[212] = \<const0> ;
  assign status_vector[211] = \<const0> ;
  assign status_vector[210] = \<const0> ;
  assign status_vector[209] = \<const0> ;
  assign status_vector[208] = \<const0> ;
  assign status_vector[207] = \<const0> ;
  assign status_vector[206] = \<const0> ;
  assign status_vector[205] = \<const0> ;
  assign status_vector[204] = \<const0> ;
  assign status_vector[203] = \<const0> ;
  assign status_vector[202] = \<const0> ;
  assign status_vector[201] = \<const0> ;
  assign status_vector[200] = \<const0> ;
  assign status_vector[199] = \<const0> ;
  assign status_vector[198] = \<const0> ;
  assign status_vector[197] = \<const0> ;
  assign status_vector[196] = \<const0> ;
  assign status_vector[195] = \<const0> ;
  assign status_vector[194] = \<const0> ;
  assign status_vector[193] = \<const0> ;
  assign status_vector[192] = \<const0> ;
  assign status_vector[191] = \<const0> ;
  assign status_vector[190] = \<const0> ;
  assign status_vector[189] = \<const0> ;
  assign status_vector[188] = \<const0> ;
  assign status_vector[187] = \<const0> ;
  assign status_vector[186] = \<const0> ;
  assign status_vector[185] = \<const0> ;
  assign status_vector[184] = \<const0> ;
  assign status_vector[183] = \<const0> ;
  assign status_vector[182] = \<const0> ;
  assign status_vector[181] = \<const0> ;
  assign status_vector[180] = \<const0> ;
  assign status_vector[179] = \<const0> ;
  assign status_vector[178] = \<const0> ;
  assign status_vector[177] = \<const0> ;
  assign status_vector[176] = \<const0> ;
  assign status_vector[175] = \<const0> ;
  assign status_vector[174] = \<const0> ;
  assign status_vector[173] = \<const0> ;
  assign status_vector[172] = \<const0> ;
  assign status_vector[171] = \<const0> ;
  assign status_vector[170] = \<const0> ;
  assign status_vector[169] = \<const0> ;
  assign status_vector[168] = \<const0> ;
  assign status_vector[167] = \<const0> ;
  assign status_vector[166] = \<const0> ;
  assign status_vector[165] = \<const0> ;
  assign status_vector[164] = \<const0> ;
  assign status_vector[163] = \<const0> ;
  assign status_vector[162] = \<const0> ;
  assign status_vector[161] = \<const0> ;
  assign status_vector[160] = \<const0> ;
  assign status_vector[159] = \<const0> ;
  assign status_vector[158] = \<const0> ;
  assign status_vector[157] = \<const0> ;
  assign status_vector[156] = \<const0> ;
  assign status_vector[155] = \<const0> ;
  assign status_vector[154] = \<const0> ;
  assign status_vector[153] = \<const0> ;
  assign status_vector[152] = \<const0> ;
  assign status_vector[151] = \<const0> ;
  assign status_vector[150] = \<const0> ;
  assign status_vector[149] = \<const0> ;
  assign status_vector[148] = \<const0> ;
  assign status_vector[147] = \<const0> ;
  assign status_vector[146] = \<const0> ;
  assign status_vector[145] = \<const0> ;
  assign status_vector[144] = \<const0> ;
  assign status_vector[143] = \<const0> ;
  assign status_vector[142] = \<const0> ;
  assign status_vector[141] = \<const0> ;
  assign status_vector[140] = \<const0> ;
  assign status_vector[139] = \<const0> ;
  assign status_vector[138] = \<const0> ;
  assign status_vector[137] = \<const0> ;
  assign status_vector[136] = \<const0> ;
  assign status_vector[135] = \<const0> ;
  assign status_vector[134] = \<const0> ;
  assign status_vector[133] = \<const0> ;
  assign status_vector[132] = \<const0> ;
  assign status_vector[131] = \<const0> ;
  assign status_vector[130] = \<const0> ;
  assign status_vector[129] = \<const0> ;
  assign status_vector[128] = \<const0> ;
  assign status_vector[127] = \<const0> ;
  assign status_vector[126] = \<const0> ;
  assign status_vector[125] = \<const0> ;
  assign status_vector[124] = \<const0> ;
  assign status_vector[123] = \<const0> ;
  assign status_vector[122] = \<const0> ;
  assign status_vector[121] = \<const0> ;
  assign status_vector[120] = \<const0> ;
  assign status_vector[119] = \<const0> ;
  assign status_vector[118] = \<const0> ;
  assign status_vector[117] = \<const0> ;
  assign status_vector[116] = \<const0> ;
  assign status_vector[115] = \<const0> ;
  assign status_vector[114] = \<const0> ;
  assign status_vector[113] = \<const0> ;
  assign status_vector[112] = \<const0> ;
  assign status_vector[111] = \<const0> ;
  assign status_vector[110] = \<const0> ;
  assign status_vector[109] = \<const0> ;
  assign status_vector[108] = \<const0> ;
  assign status_vector[107] = \<const0> ;
  assign status_vector[106] = \<const0> ;
  assign status_vector[105] = \<const0> ;
  assign status_vector[104] = \<const0> ;
  assign status_vector[103] = \<const0> ;
  assign status_vector[102] = \<const0> ;
  assign status_vector[101] = \<const0> ;
  assign status_vector[100] = \<const0> ;
  assign status_vector[99] = \<const0> ;
  assign status_vector[98] = \<const0> ;
  assign status_vector[97] = \<const0> ;
  assign status_vector[96] = \<const0> ;
  assign status_vector[95] = \<const0> ;
  assign status_vector[94] = \<const0> ;
  assign status_vector[93] = \<const0> ;
  assign status_vector[92] = \<const0> ;
  assign status_vector[91] = \<const0> ;
  assign status_vector[90] = \<const0> ;
  assign status_vector[89] = \<const0> ;
  assign status_vector[88] = \<const0> ;
  assign status_vector[87] = \<const0> ;
  assign status_vector[86] = \<const0> ;
  assign status_vector[85] = \<const0> ;
  assign status_vector[84] = \<const0> ;
  assign status_vector[83] = \<const0> ;
  assign status_vector[82] = \<const0> ;
  assign status_vector[81] = \<const0> ;
  assign status_vector[80] = \<const0> ;
  assign status_vector[79] = \<const0> ;
  assign status_vector[78] = \<const0> ;
  assign status_vector[77] = \<const0> ;
  assign status_vector[76] = \<const0> ;
  assign status_vector[75] = \<const0> ;
  assign status_vector[74] = \<const0> ;
  assign status_vector[73] = \<const0> ;
  assign status_vector[72] = \<const0> ;
  assign status_vector[71] = \<const0> ;
  assign status_vector[70] = \<const0> ;
  assign status_vector[69] = \<const0> ;
  assign status_vector[68] = \<const0> ;
  assign status_vector[67] = \<const0> ;
  assign status_vector[66] = \<const0> ;
  assign status_vector[65] = \<const0> ;
  assign status_vector[64] = \<const0> ;
  assign status_vector[63] = \<const0> ;
  assign status_vector[62] = \<const0> ;
  assign status_vector[61] = \<const0> ;
  assign status_vector[60] = \<const0> ;
  assign status_vector[59] = \<const0> ;
  assign status_vector[58] = \<const0> ;
  assign status_vector[57] = \<const0> ;
  assign status_vector[56] = \<const0> ;
  assign status_vector[55] = \<const0> ;
  assign status_vector[54] = \<const0> ;
  assign status_vector[53] = \<const0> ;
  assign status_vector[52] = \<const0> ;
  assign status_vector[51] = \<const0> ;
  assign status_vector[50] = \<const0> ;
  assign status_vector[49] = \<const0> ;
  assign status_vector[48] = \^status_vector [48];
  assign status_vector[47] = \<const0> ;
  assign status_vector[46] = \<const0> ;
  assign status_vector[45] = \<const0> ;
  assign status_vector[44] = \<const0> ;
  assign status_vector[43] = \<const0> ;
  assign status_vector[42] = \<const0> ;
  assign status_vector[41] = \<const0> ;
  assign status_vector[40] = \<const0> ;
  assign status_vector[39:37] = \^status_vector [39:37];
  assign status_vector[36] = \<const0> ;
  assign status_vector[35] = \<const0> ;
  assign status_vector[34] = \<const0> ;
  assign status_vector[33] = \<const0> ;
  assign status_vector[32] = \<const0> ;
  assign status_vector[31] = \<const0> ;
  assign status_vector[30] = \<const0> ;
  assign status_vector[29] = \<const0> ;
  assign status_vector[28] = \<const0> ;
  assign status_vector[27] = \<const0> ;
  assign status_vector[26] = \<const0> ;
  assign status_vector[25] = \<const0> ;
  assign status_vector[24] = \<const0> ;
  assign status_vector[23] = \<const0> ;
  assign status_vector[22] = \<const0> ;
  assign status_vector[21] = \<const0> ;
  assign status_vector[20] = \<const0> ;
  assign status_vector[19] = \<const0> ;
  assign status_vector[18] = \^status_vector [18];
  assign status_vector[17] = \<const0> ;
  assign status_vector[16] = \<const0> ;
  assign status_vector[15] = \^status_vector [15];
  assign status_vector[14] = \<const0> ;
  assign status_vector[13] = \<const0> ;
  assign status_vector[12] = \<const0> ;
  assign status_vector[11] = \<const0> ;
  assign status_vector[10] = \<const0> ;
  assign status_vector[9] = \<const0> ;
  assign status_vector[8] = \<const0> ;
  assign status_vector[7] = \<const0> ;
  assign status_vector[6] = \<const0> ;
  assign status_vector[5] = \<const0> ;
  assign status_vector[4] = \<const0> ;
  assign status_vector[3] = \<const0> ;
  assign status_vector[2] = \<const0> ;
  assign status_vector[1] = \<const0> ;
  assign status_vector[0] = \<const0> ;
  assign training_rdack = \<const0> ;
  assign training_rddata[15] = \<const0> ;
  assign training_rddata[14] = \<const0> ;
  assign training_rddata[13] = \<const0> ;
  assign training_rddata[12] = \<const0> ;
  assign training_rddata[11] = \<const0> ;
  assign training_rddata[10] = \<const0> ;
  assign training_rddata[9] = \<const0> ;
  assign training_rddata[8] = \<const0> ;
  assign training_rddata[7] = \<const0> ;
  assign training_rddata[6] = \<const0> ;
  assign training_rddata[5] = \<const0> ;
  assign training_rddata[4] = \<const0> ;
  assign training_rddata[3] = \<const0> ;
  assign training_rddata[2] = \<const0> ;
  assign training_rddata[1] = \<const0> ;
  assign training_rddata[0] = \<const0> ;
  assign training_wrack = \<const0> ;
  assign txdiffctrl[4] = \<const0> ;
  assign txdiffctrl[3] = \<const0> ;
  assign txdiffctrl[2] = \<const0> ;
  assign txdiffctrl[1] = \<const0> ;
  assign txdiffctrl[0] = \<const0> ;
  assign txphy_async_gb_latency[15] = \<const0> ;
  assign txphy_async_gb_latency[14] = \<const0> ;
  assign txphy_async_gb_latency[13] = \<const0> ;
  assign txphy_async_gb_latency[12] = \<const0> ;
  assign txphy_async_gb_latency[11] = \<const0> ;
  assign txphy_async_gb_latency[10] = \<const0> ;
  assign txphy_async_gb_latency[9] = \<const0> ;
  assign txphy_async_gb_latency[8] = \<const0> ;
  assign txphy_async_gb_latency[7] = \<const0> ;
  assign txphy_async_gb_latency[6] = \<const0> ;
  assign txphy_async_gb_latency[5] = \<const0> ;
  assign txphy_async_gb_latency[4] = \<const0> ;
  assign txphy_async_gb_latency[3] = \<const0> ;
  assign txphy_async_gb_latency[2] = \<const0> ;
  assign txphy_async_gb_latency[1] = \<const0> ;
  assign txphy_async_gb_latency[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  LUT2 #(
    .INIT(4'h7)) 
    \status_vector[37]_INST_0 
       (.I0(pma_pmd_type[1]),
        .I1(pma_pmd_type[2]),
        .O(\^status_vector [37]));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \status_vector[38]_INST_0 
       (.I0(pma_pmd_type[2]),
        .I1(pma_pmd_type[1]),
        .I2(pma_pmd_type[0]),
        .O(\^status_vector [38]));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \status_vector[39]_INST_0 
       (.I0(pma_pmd_type[0]),
        .I1(pma_pmd_type[2]),
        .I2(pma_pmd_type[1]),
        .O(\^status_vector [39]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_wrapper ten_gig_eth_pcs_pma_inst
       (.clear_rx_prbs_err_count(clear_rx_prbs_err_count),
        .configuration_vector({configuration_vector[519:516],configuration_vector[512],configuration_vector[399:384],configuration_vector[245:240],configuration_vector[233:176],configuration_vector[169:110],configuration_vector[16:15]}),
        .core_in_testmode(core_in_testmode),
        .core_status(\^core_status ),
        .coreclk(coreclk),
        .dclk(dclk),
        .dclk_reset(dclk_reset),
        .drp_daddr(\^drp_daddr ),
        .drp_den(drp_den),
        .drp_drdy(drp_drdy),
        .drp_drpdo(drp_drpdo),
        .drp_dwe(drp_dwe),
        .drp_gnt(drp_gnt),
        .drp_req(drp_req),
        .gt_rxc(gt_rxc[2:0]),
        .gt_rxd(gt_rxd),
        .gt_slip(gt_slip),
        .gt_txc(\^gt_txc ),
        .gt_txd(gt_txd),
        .out(rx_prbs31_en),
        .reset(reset),
        .resetdone(resetdone),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2),
        .signal_detect(signal_detect),
        .status_vector({\^status_vector [303:272],\^status_vector [268],\^status_vector [257:256],\^status_vector [250],\^status_vector [226],\^status_vector [223],\^status_vector [48],\^status_vector [18],\^status_vector [15]}),
        .tx_disable(tx_disable),
        .tx_prbs31_en(tx_prbs31_en),
        .xgmii_rxc(xgmii_rxc),
        .xgmii_rxd(xgmii_rxd),
        .xgmii_txc(xgmii_txc),
        .xgmii_txd(xgmii_txd));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) (* WIDTH = "74" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_asynch_fifo
   (wr_clk,
    wr_clk_en,
    wr_reset,
    wr_en,
    wr_data,
    rd_clk,
    rd_clk_en,
    rd_reset,
    rd_en,
    full,
    empty,
    rd_data,
    fifo_wr_addr,
    fifo_rd_addr,
    status);
  input wr_clk;
  input wr_clk_en;
  input wr_reset;
  input wr_en;
  input [73:0]wr_data;
  input rd_clk;
  input rd_clk_en;
  input rd_reset;
  input rd_en;
  output full;
  output empty;
  output [73:0]rd_data;
  output [4:0]fifo_wr_addr;
  output [4:0]fifo_rd_addr;
  output [4:0]status;

  wire ecomp_0;
  wire ecomp_1;
  wire ecomp_2;
  wire ecomp_3;
  wire ecomp_4;
  wire empty;
  wire empty_allow0;
  wire empty_int_i_1_n_0;
  wire emptyg;
  wire emuxcyo_0;
  wire emuxcyo_1;
  wire emuxcyo_2;
  wire fcomp_0;
  wire fcomp_01;
  wire fcomp_1;
  wire fcomp_2;
  wire fcomp_3;
  wire fcomp_4;
  wire [4:0]fifo_rd_addr;
  wire [4:0]fifo_wr_addr;
  wire fmuxcyo_0;
  wire fmuxcyo_1;
  wire fmuxcyo_2;
  wire full;
  wire full_int_i_1_n_0;
  wire fullg;
  wire p_0_in23_in;
  wire p_0_in27_in;
  wire p_0_in31_in;
  wire p_0_in35_in;
  wire p_0_in42_in;
  wire p_0_in46_in;
  wire p_0_in50_in;
  wire p_0_in54_in;
  wire [4:0]p_0_in__0;
  wire [4:0]p_0_in__1;
  wire p_3_in44_in;
  wire p_3_in48_in;
  wire p_3_in52_in;
  wire p_3_in56_in;
  wire [3:0]p_4_out;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]rag_writesync;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]rag_writesync0;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]rag_writesync1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]rag_writesync2;
  wire ram_wr_en;
  wire rd_clk;
  wire rd_clk_en;
  wire [73:0]rd_data;
  wire rd_en;
  wire \rd_gray_reg_n_0_[0] ;
  wire [4:0]rd_lastgray;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]rd_lastgray_wrclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]rd_lastgray_wrclk0;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]rd_lastgray_wrclk1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]rd_lastgray_wrclk2;
  wire rd_nextgray0;
  wire rd_nextgray018_out;
  wire rd_nextgray020_out;
  wire rd_nextgray022_out;
  wire \rd_nextgray_reg_n_0_[0] ;
  wire rd_reset;
  wire [4:0]rd_truegray;
  wire [4:0]status;
  wire [4:1]status0;
  wire \status[0]_i_1_n_0 ;
  wire \status[2]_i_2_n_0 ;
  wire \status[4]_i_3_n_0 ;
  wire [4:0]wr_addr_pipe;
  wire [4:0]wr_addr_pipe0;
  wire [4:0]wr_addr_pipe1;
  wire wr_clk;
  wire wr_clk_en;
  wire [73:0]wr_data;
  wire wr_en;
  wire [4:0]wr_gray;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]wr_gray_rdclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]wr_gray_rdclk0;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]wr_gray_rdclk1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]wr_gray_rdclk2;
  wire \wr_nextgray_reg_n_0_[0] ;
  wire wr_reset;
  wire [7:3]NLW_emuxcy0_CARRY4_CARRY8_CO_UNCONNECTED;
  wire [7:5]NLW_emuxcy0_CARRY4_CARRY8_DI_UNCONNECTED;
  wire [7:0]NLW_emuxcy0_CARRY4_CARRY8_O_UNCONNECTED;
  wire [7:5]NLW_emuxcy0_CARRY4_CARRY8_S_UNCONNECTED;
  wire [7:3]NLW_fmuxcy0_CARRY4_CARRY8_CO_UNCONNECTED;
  wire [7:5]NLW_fmuxcy0_CARRY4_CARRY8_DI_UNCONNECTED;
  wire [7:0]NLW_fmuxcy0_CARRY4_CARRY8_O_UNCONNECTED;
  wire [7:5]NLW_fmuxcy0_CARRY4_CARRY8_S_UNCONNECTED;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_dp_ram dp_ram_i
       (.E(ram_wr_en),
        .Q(fifo_rd_addr),
        .empty_int_reg(empty),
        .full_int_reg(full),
        .rd_clk(rd_clk),
        .rd_clk_en(rd_clk_en),
        .rd_data(rd_data),
        .rd_en(rd_en),
        .\wr_addr_reg[4] (fifo_wr_addr),
        .wr_clk(wr_clk),
        .wr_clk_en(wr_clk_en),
        .wr_data(wr_data),
        .wr_en(wr_en));
  LUT4 #(
    .INIT(16'hA8CC)) 
    empty_int_i_1
       (.I0(emptyg),
        .I1(empty),
        .I2(rd_en),
        .I3(rd_clk_en),
        .O(empty_int_i_1_n_0));
  FDSE empty_int_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_int_i_1_n_0),
        .Q(empty),
        .S(rd_reset));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "(CARRY4)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY8 emuxcy0_CARRY4_CARRY8
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({NLW_emuxcy0_CARRY4_CARRY8_CO_UNCONNECTED[7:5],emptyg,NLW_emuxcy0_CARRY4_CARRY8_CO_UNCONNECTED[3],emuxcyo_2,emuxcyo_1,emuxcyo_0}),
        .DI({NLW_emuxcy0_CARRY4_CARRY8_DI_UNCONNECTED[7:5],1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_emuxcy0_CARRY4_CARRY8_O_UNCONNECTED[7:0]),
        .S({NLW_emuxcy0_CARRY4_CARRY8_S_UNCONNECTED[7:5],ecomp_4,ecomp_3,ecomp_2,ecomp_1,ecomp_0}));
  LUT4 #(
    .INIT(16'h9A95)) 
    emuxcy0_i_1
       (.I0(wr_gray_rdclk[0]),
        .I1(\rd_gray_reg_n_0_[0] ),
        .I2(empty),
        .I3(\rd_nextgray_reg_n_0_[0] ),
        .O(ecomp_0));
  LUT4 #(
    .INIT(16'h9A95)) 
    emuxcy1_i_1
       (.I0(wr_gray_rdclk[1]),
        .I1(p_3_in56_in),
        .I2(empty),
        .I3(p_0_in54_in),
        .O(ecomp_1));
  LUT4 #(
    .INIT(16'h9A95)) 
    emuxcy2_i_1
       (.I0(wr_gray_rdclk[2]),
        .I1(p_3_in52_in),
        .I2(empty),
        .I3(p_0_in50_in),
        .O(ecomp_2));
  LUT4 #(
    .INIT(16'h9A95)) 
    emuxcy3_i_1
       (.I0(wr_gray_rdclk[3]),
        .I1(p_3_in48_in),
        .I2(empty),
        .I3(p_0_in46_in),
        .O(ecomp_3));
  LUT4 #(
    .INIT(16'h9A95)) 
    emuxcy4_i_1
       (.I0(wr_gray_rdclk[4]),
        .I1(p_3_in44_in),
        .I2(empty),
        .I3(p_0_in42_in),
        .O(ecomp_4));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "(CARRY4)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY8 fmuxcy0_CARRY4_CARRY8
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({NLW_fmuxcy0_CARRY4_CARRY8_CO_UNCONNECTED[7:5],fullg,NLW_fmuxcy0_CARRY4_CARRY8_CO_UNCONNECTED[3],fmuxcyo_2,fmuxcyo_1,fmuxcyo_0}),
        .DI({NLW_fmuxcy0_CARRY4_CARRY8_DI_UNCONNECTED[7:5],1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_fmuxcy0_CARRY4_CARRY8_O_UNCONNECTED[7:0]),
        .S({NLW_fmuxcy0_CARRY4_CARRY8_S_UNCONNECTED[7:5],fcomp_4,fcomp_3,fcomp_2,fcomp_1,fcomp_0}));
  LUT4 #(
    .INIT(16'h9A95)) 
    fmuxcy0_i_1
       (.I0(rd_lastgray_wrclk[0]),
        .I1(wr_gray[0]),
        .I2(full),
        .I3(\wr_nextgray_reg_n_0_[0] ),
        .O(fcomp_0));
  LUT4 #(
    .INIT(16'h9A95)) 
    fmuxcy1_i_1
       (.I0(rd_lastgray_wrclk[1]),
        .I1(wr_gray[1]),
        .I2(full),
        .I3(p_0_in35_in),
        .O(fcomp_1));
  LUT4 #(
    .INIT(16'h9A95)) 
    fmuxcy2_i_1
       (.I0(rd_lastgray_wrclk[2]),
        .I1(wr_gray[2]),
        .I2(full),
        .I3(p_0_in31_in),
        .O(fcomp_2));
  LUT4 #(
    .INIT(16'h9A95)) 
    fmuxcy3_i_1
       (.I0(rd_lastgray_wrclk[3]),
        .I1(wr_gray[3]),
        .I2(full),
        .I3(p_0_in27_in),
        .O(fcomp_3));
  LUT4 #(
    .INIT(16'h9A95)) 
    fmuxcy4_i_1
       (.I0(rd_lastgray_wrclk[4]),
        .I1(wr_gray[4]),
        .I2(full),
        .I3(p_0_in23_in),
        .O(fcomp_4));
  LUT4 #(
    .INIT(16'hA8A0)) 
    full_int_i_1
       (.I0(fullg),
        .I1(wr_en),
        .I2(full),
        .I3(wr_clk_en),
        .O(full_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    full_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(full_int_i_1_n_0),
        .Q(full),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync0_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_truegray[0]),
        .Q(rag_writesync0[0]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync0_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_truegray[1]),
        .Q(rag_writesync0[1]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync0_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_truegray[2]),
        .Q(rag_writesync0[2]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync0_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_truegray[3]),
        .Q(rag_writesync0[3]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync0_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_truegray[4]),
        .Q(rag_writesync0[4]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync1_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync0[0]),
        .Q(rag_writesync1[0]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync1_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync0[1]),
        .Q(rag_writesync1[1]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync1_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync0[2]),
        .Q(rag_writesync1[2]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync1_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync0[3]),
        .Q(rag_writesync1[3]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync1_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync0[4]),
        .Q(rag_writesync1[4]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync2_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync1[0]),
        .Q(rag_writesync2[0]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync2_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync1[1]),
        .Q(rag_writesync2[1]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync2_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync1[2]),
        .Q(rag_writesync2[2]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync2_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync1[3]),
        .Q(rag_writesync2[3]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync2_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync1[4]),
        .Q(rag_writesync2[4]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync2[0]),
        .Q(rag_writesync[0]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync2[1]),
        .Q(rag_writesync[1]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync2[2]),
        .Q(rag_writesync[2]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync2[3]),
        .Q(rag_writesync[3]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync2[4]),
        .Q(rag_writesync[4]),
        .R(wr_reset));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \rd_addr[0]_i_1 
       (.I0(fifo_rd_addr[0]),
        .O(p_0_in__1[0]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_addr[1]_i_1 
       (.I0(fifo_rd_addr[0]),
        .I1(fifo_rd_addr[1]),
        .O(p_0_in__1[1]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \rd_addr[2]_i_1 
       (.I0(fifo_rd_addr[0]),
        .I1(fifo_rd_addr[1]),
        .I2(fifo_rd_addr[2]),
        .O(p_0_in__1[2]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \rd_addr[3]_i_1 
       (.I0(fifo_rd_addr[1]),
        .I1(fifo_rd_addr[0]),
        .I2(fifo_rd_addr[2]),
        .I3(fifo_rd_addr[3]),
        .O(p_0_in__1[3]));
  LUT3 #(
    .INIT(8'h40)) 
    \rd_addr[4]_i_1 
       (.I0(empty),
        .I1(rd_en),
        .I2(rd_clk_en),
        .O(empty_allow0));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \rd_addr[4]_i_2 
       (.I0(fifo_rd_addr[2]),
        .I1(fifo_rd_addr[0]),
        .I2(fifo_rd_addr[1]),
        .I3(fifo_rd_addr[3]),
        .I4(fifo_rd_addr[4]),
        .O(p_0_in__1[4]));
  FDRE \rd_addr_reg[0] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in__1[0]),
        .Q(fifo_rd_addr[0]),
        .R(rd_reset));
  FDRE \rd_addr_reg[1] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in__1[1]),
        .Q(fifo_rd_addr[1]),
        .R(rd_reset));
  FDRE \rd_addr_reg[2] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in__1[2]),
        .Q(fifo_rd_addr[2]),
        .R(rd_reset));
  FDRE \rd_addr_reg[3] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in__1[3]),
        .Q(fifo_rd_addr[3]),
        .R(rd_reset));
  FDRE \rd_addr_reg[4] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in__1[4]),
        .Q(fifo_rd_addr[4]),
        .R(rd_reset));
  FDSE \rd_gray_reg[0] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(\rd_nextgray_reg_n_0_[0] ),
        .Q(\rd_gray_reg_n_0_[0] ),
        .S(rd_reset));
  FDRE \rd_gray_reg[1] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in54_in),
        .Q(p_3_in56_in),
        .R(rd_reset));
  FDRE \rd_gray_reg[2] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in50_in),
        .Q(p_3_in52_in),
        .R(rd_reset));
  FDRE \rd_gray_reg[3] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in46_in),
        .Q(p_3_in48_in),
        .R(rd_reset));
  FDSE \rd_gray_reg[4] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in42_in),
        .Q(p_3_in44_in),
        .S(rd_reset));
  FDSE \rd_lastgray_reg[0] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(\rd_gray_reg_n_0_[0] ),
        .Q(rd_lastgray[0]),
        .S(rd_reset));
  FDSE \rd_lastgray_reg[1] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_3_in56_in),
        .Q(rd_lastgray[1]),
        .S(rd_reset));
  FDRE \rd_lastgray_reg[2] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_3_in52_in),
        .Q(rd_lastgray[2]),
        .R(rd_reset));
  FDRE \rd_lastgray_reg[3] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_3_in48_in),
        .Q(rd_lastgray[3]),
        .R(rd_reset));
  FDSE \rd_lastgray_reg[4] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_3_in44_in),
        .Q(rd_lastgray[4]),
        .S(rd_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk0_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray[0]),
        .Q(rd_lastgray_wrclk0[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk0_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray[1]),
        .Q(rd_lastgray_wrclk0[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk0_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray[2]),
        .Q(rd_lastgray_wrclk0[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk0_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray[3]),
        .Q(rd_lastgray_wrclk0[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk0_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray[4]),
        .Q(rd_lastgray_wrclk0[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk1_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk0[0]),
        .Q(rd_lastgray_wrclk1[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk1_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk0[1]),
        .Q(rd_lastgray_wrclk1[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk1_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk0[2]),
        .Q(rd_lastgray_wrclk1[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk1_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk0[3]),
        .Q(rd_lastgray_wrclk1[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk1_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk0[4]),
        .Q(rd_lastgray_wrclk1[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk2_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk1[0]),
        .Q(rd_lastgray_wrclk2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk2_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk1[1]),
        .Q(rd_lastgray_wrclk2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk2_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk1[2]),
        .Q(rd_lastgray_wrclk2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk2_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk1[3]),
        .Q(rd_lastgray_wrclk2[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk2_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk1[4]),
        .Q(rd_lastgray_wrclk2[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk2[0]),
        .Q(rd_lastgray_wrclk[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk2[1]),
        .Q(rd_lastgray_wrclk[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk2[2]),
        .Q(rd_lastgray_wrclk[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk2[3]),
        .Q(rd_lastgray_wrclk[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk2[4]),
        .Q(rd_lastgray_wrclk[4]),
        .R(1'b0));
  FDRE \rd_nextgray_reg[0] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(rd_nextgray0),
        .Q(\rd_nextgray_reg_n_0_[0] ),
        .R(rd_reset));
  FDRE \rd_nextgray_reg[1] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(rd_nextgray018_out),
        .Q(p_0_in54_in),
        .R(rd_reset));
  FDRE \rd_nextgray_reg[2] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(rd_nextgray020_out),
        .Q(p_0_in50_in),
        .R(rd_reset));
  FDRE \rd_nextgray_reg[3] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(rd_nextgray022_out),
        .Q(p_0_in46_in),
        .R(rd_reset));
  FDSE \rd_nextgray_reg[4] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(fifo_rd_addr[4]),
        .Q(p_0_in42_in),
        .S(rd_reset));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_truegray[0]_i_1 
       (.I0(fifo_rd_addr[1]),
        .I1(fifo_rd_addr[0]),
        .O(rd_nextgray0));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_truegray[1]_i_1 
       (.I0(fifo_rd_addr[2]),
        .I1(fifo_rd_addr[1]),
        .O(rd_nextgray018_out));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_truegray[2]_i_1 
       (.I0(fifo_rd_addr[3]),
        .I1(fifo_rd_addr[2]),
        .O(rd_nextgray020_out));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_truegray[3]_i_1 
       (.I0(fifo_rd_addr[4]),
        .I1(fifo_rd_addr[3]),
        .O(rd_nextgray022_out));
  FDRE \rd_truegray_reg[0] 
       (.C(rd_clk),
        .CE(rd_clk_en),
        .D(rd_nextgray0),
        .Q(rd_truegray[0]),
        .R(rd_reset));
  FDRE \rd_truegray_reg[1] 
       (.C(rd_clk),
        .CE(rd_clk_en),
        .D(rd_nextgray018_out),
        .Q(rd_truegray[1]),
        .R(rd_reset));
  FDRE \rd_truegray_reg[2] 
       (.C(rd_clk),
        .CE(rd_clk_en),
        .D(rd_nextgray020_out),
        .Q(rd_truegray[2]),
        .R(rd_reset));
  FDRE \rd_truegray_reg[3] 
       (.C(rd_clk),
        .CE(rd_clk_en),
        .D(rd_nextgray022_out),
        .Q(rd_truegray[3]),
        .R(rd_reset));
  FDRE \rd_truegray_reg[4] 
       (.C(rd_clk),
        .CE(rd_clk_en),
        .D(fifo_rd_addr[4]),
        .Q(rd_truegray[4]),
        .R(rd_reset));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \status[0]_i_1 
       (.I0(wr_addr_pipe[0]),
        .I1(rag_writesync[2]),
        .I2(rag_writesync[3]),
        .I3(rag_writesync[4]),
        .I4(rag_writesync[0]),
        .I5(rag_writesync[1]),
        .O(\status[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h1DD1E22E)) 
    \status[1]_i_1 
       (.I0(rag_writesync[0]),
        .I1(wr_addr_pipe[0]),
        .I2(rag_writesync[1]),
        .I3(\status[2]_i_2_n_0 ),
        .I4(wr_addr_pipe[1]),
        .O(status0[1]));
  LUT6 #(
    .INIT(64'hA8EF10575710EFA8)) 
    \status[2]_i_1 
       (.I0(wr_addr_pipe[1]),
        .I1(wr_addr_pipe[0]),
        .I2(rag_writesync[0]),
        .I3(rag_writesync[1]),
        .I4(\status[2]_i_2_n_0 ),
        .I5(wr_addr_pipe[2]),
        .O(status0[2]));
  LUT3 #(
    .INIT(8'h69)) 
    \status[2]_i_2 
       (.I0(rag_writesync[2]),
        .I1(rag_writesync[3]),
        .I2(rag_writesync[4]),
        .O(\status[2]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \status[3]_i_1 
       (.I0(\status[4]_i_3_n_0 ),
        .I1(rag_writesync[4]),
        .I2(rag_writesync[3]),
        .I3(wr_addr_pipe[3]),
        .O(status0[3]));
  LUT1 #(
    .INIT(2'h1)) 
    \status[4]_i_1 
       (.I0(full),
        .O(fcomp_01));
  LUT5 #(
    .INIT(32'h4DB22BD4)) 
    \status[4]_i_2 
       (.I0(wr_addr_pipe[3]),
        .I1(\status[4]_i_3_n_0 ),
        .I2(rag_writesync[3]),
        .I3(wr_addr_pipe[4]),
        .I4(rag_writesync[4]),
        .O(status0[4]));
  LUT6 #(
    .INIT(64'h010005075F7F1F0F)) 
    \status[4]_i_3 
       (.I0(wr_addr_pipe[1]),
        .I1(wr_addr_pipe[0]),
        .I2(\status[2]_i_2_n_0 ),
        .I3(rag_writesync[0]),
        .I4(rag_writesync[1]),
        .I5(wr_addr_pipe[2]),
        .O(\status[4]_i_3_n_0 ));
  FDRE \status_reg[0] 
       (.C(wr_clk),
        .CE(fcomp_01),
        .D(\status[0]_i_1_n_0 ),
        .Q(status[0]),
        .R(wr_reset));
  FDRE \status_reg[1] 
       (.C(wr_clk),
        .CE(fcomp_01),
        .D(status0[1]),
        .Q(status[1]),
        .R(wr_reset));
  FDRE \status_reg[2] 
       (.C(wr_clk),
        .CE(fcomp_01),
        .D(status0[2]),
        .Q(status[2]),
        .R(wr_reset));
  FDRE \status_reg[3] 
       (.C(wr_clk),
        .CE(fcomp_01),
        .D(status0[3]),
        .Q(status[3]),
        .R(wr_reset));
  FDRE \status_reg[4] 
       (.C(wr_clk),
        .CE(fcomp_01),
        .D(status0[4]),
        .Q(status[4]),
        .R(wr_reset));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \wr_addr[0]_i_1 
       (.I0(fifo_wr_addr[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_addr[1]_i_1 
       (.I0(fifo_wr_addr[0]),
        .I1(fifo_wr_addr[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_addr[2]_i_1 
       (.I0(fifo_wr_addr[0]),
        .I1(fifo_wr_addr[1]),
        .I2(fifo_wr_addr[2]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wr_addr[3]_i_1 
       (.I0(fifo_wr_addr[1]),
        .I1(fifo_wr_addr[0]),
        .I2(fifo_wr_addr[2]),
        .I3(fifo_wr_addr[3]),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wr_addr[4]_i_2 
       (.I0(fifo_wr_addr[2]),
        .I1(fifo_wr_addr[0]),
        .I2(fifo_wr_addr[1]),
        .I3(fifo_wr_addr[3]),
        .I4(fifo_wr_addr[4]),
        .O(p_0_in__0[4]));
  FDRE \wr_addr_pipe0_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(fifo_wr_addr[0]),
        .Q(wr_addr_pipe0[0]),
        .R(wr_reset));
  FDRE \wr_addr_pipe0_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(fifo_wr_addr[1]),
        .Q(wr_addr_pipe0[1]),
        .R(wr_reset));
  FDRE \wr_addr_pipe0_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(fifo_wr_addr[2]),
        .Q(wr_addr_pipe0[2]),
        .R(wr_reset));
  FDRE \wr_addr_pipe0_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(fifo_wr_addr[3]),
        .Q(wr_addr_pipe0[3]),
        .R(wr_reset));
  FDRE \wr_addr_pipe0_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(fifo_wr_addr[4]),
        .Q(wr_addr_pipe0[4]),
        .R(wr_reset));
  FDRE \wr_addr_pipe1_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe0[0]),
        .Q(wr_addr_pipe1[0]),
        .R(wr_reset));
  FDRE \wr_addr_pipe1_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe0[1]),
        .Q(wr_addr_pipe1[1]),
        .R(wr_reset));
  FDRE \wr_addr_pipe1_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe0[2]),
        .Q(wr_addr_pipe1[2]),
        .R(wr_reset));
  FDRE \wr_addr_pipe1_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe0[3]),
        .Q(wr_addr_pipe1[3]),
        .R(wr_reset));
  FDRE \wr_addr_pipe1_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe0[4]),
        .Q(wr_addr_pipe1[4]),
        .R(wr_reset));
  FDRE \wr_addr_pipe_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe1[0]),
        .Q(wr_addr_pipe[0]),
        .R(wr_reset));
  FDRE \wr_addr_pipe_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe1[1]),
        .Q(wr_addr_pipe[1]),
        .R(wr_reset));
  FDRE \wr_addr_pipe_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe1[2]),
        .Q(wr_addr_pipe[2]),
        .R(wr_reset));
  FDRE \wr_addr_pipe_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe1[3]),
        .Q(wr_addr_pipe[3]),
        .R(wr_reset));
  FDRE \wr_addr_pipe_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe1[4]),
        .Q(wr_addr_pipe[4]),
        .R(wr_reset));
  FDRE \wr_addr_reg[0] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in__0[0]),
        .Q(fifo_wr_addr[0]),
        .R(wr_reset));
  FDRE \wr_addr_reg[1] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in__0[1]),
        .Q(fifo_wr_addr[1]),
        .R(wr_reset));
  FDRE \wr_addr_reg[2] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in__0[2]),
        .Q(fifo_wr_addr[2]),
        .R(wr_reset));
  FDRE \wr_addr_reg[3] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in__0[3]),
        .Q(fifo_wr_addr[3]),
        .R(wr_reset));
  FDRE \wr_addr_reg[4] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in__0[4]),
        .Q(fifo_wr_addr[4]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk0_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray[0]),
        .Q(wr_gray_rdclk0[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk0_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray[1]),
        .Q(wr_gray_rdclk0[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk0_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray[2]),
        .Q(wr_gray_rdclk0[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk0_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray[3]),
        .Q(wr_gray_rdclk0[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk0_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray[4]),
        .Q(wr_gray_rdclk0[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk1_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk0[0]),
        .Q(wr_gray_rdclk1[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk1_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk0[1]),
        .Q(wr_gray_rdclk1[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk1_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk0[2]),
        .Q(wr_gray_rdclk1[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk1_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk0[3]),
        .Q(wr_gray_rdclk1[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk1_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk0[4]),
        .Q(wr_gray_rdclk1[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk2_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk1[0]),
        .Q(wr_gray_rdclk2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk2_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk1[1]),
        .Q(wr_gray_rdclk2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk2_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk1[2]),
        .Q(wr_gray_rdclk2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk2_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk1[3]),
        .Q(wr_gray_rdclk2[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk2_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk1[4]),
        .Q(wr_gray_rdclk2[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk2[0]),
        .Q(wr_gray_rdclk[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk2[1]),
        .Q(wr_gray_rdclk[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk2[2]),
        .Q(wr_gray_rdclk[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk2[3]),
        .Q(wr_gray_rdclk[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk2[4]),
        .Q(wr_gray_rdclk[4]),
        .R(1'b0));
  FDSE \wr_gray_reg[0] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(\wr_nextgray_reg_n_0_[0] ),
        .Q(wr_gray[0]),
        .S(wr_reset));
  FDRE \wr_gray_reg[1] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in35_in),
        .Q(wr_gray[1]),
        .R(wr_reset));
  FDRE \wr_gray_reg[2] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in31_in),
        .Q(wr_gray[2]),
        .R(wr_reset));
  FDRE \wr_gray_reg[3] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in27_in),
        .Q(wr_gray[3]),
        .R(wr_reset));
  FDSE \wr_gray_reg[4] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in23_in),
        .Q(wr_gray[4]),
        .S(wr_reset));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_nextgray[0]_i_1 
       (.I0(fifo_wr_addr[1]),
        .I1(fifo_wr_addr[0]),
        .O(p_4_out[0]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_nextgray[1]_i_1 
       (.I0(fifo_wr_addr[2]),
        .I1(fifo_wr_addr[1]),
        .O(p_4_out[1]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_nextgray[2]_i_1 
       (.I0(fifo_wr_addr[3]),
        .I1(fifo_wr_addr[2]),
        .O(p_4_out[2]));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_nextgray[3]_i_1 
       (.I0(fifo_wr_addr[4]),
        .I1(fifo_wr_addr[3]),
        .O(p_4_out[3]));
  FDRE \wr_nextgray_reg[0] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_4_out[0]),
        .Q(\wr_nextgray_reg_n_0_[0] ),
        .R(wr_reset));
  FDRE \wr_nextgray_reg[1] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_4_out[1]),
        .Q(p_0_in35_in),
        .R(wr_reset));
  FDRE \wr_nextgray_reg[2] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_4_out[2]),
        .Q(p_0_in31_in),
        .R(wr_reset));
  FDRE \wr_nextgray_reg[3] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_4_out[3]),
        .Q(p_0_in27_in),
        .R(wr_reset));
  FDSE \wr_nextgray_reg[4] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(fifo_wr_addr[4]),
        .Q(p_0_in23_in),
        .S(wr_reset));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_baser_gen
   (out,
    tx_disable,
    core_status,
    status_vector,
    tx_prbs31_en,
    gt_slip,
    clear_rx_prbs_err_count,
    core_in_testmode,
    drp_den,
    drp_daddr,
    gt_txd,
    gt_txc,
    drp_req,
    drp_dwe,
    xgmii_rxd,
    xgmii_rxc,
    rxusrclk2,
    rxreset_rxusrclk2,
    coreclk,
    reset,
    configuration_vector,
    signal_detect,
    dclk,
    drp_drdy,
    dclk_reset,
    resetdone,
    gt_rxc,
    drp_drpdo,
    xgmii_txd,
    xgmii_txc,
    gt_rxd,
    drp_gnt);
  output [0:0]out;
  output tx_disable;
  output [0:0]core_status;
  output [40:0]status_vector;
  output tx_prbs31_en;
  output gt_slip;
  output clear_rx_prbs_err_count;
  output core_in_testmode;
  output drp_den;
  output [0:0]drp_daddr;
  output [63:0]gt_txd;
  output [1:0]gt_txc;
  output drp_req;
  output drp_dwe;
  output [63:0]xgmii_rxd;
  output [7:0]xgmii_rxc;
  input rxusrclk2;
  input rxreset_rxusrclk2;
  input coreclk;
  input reset;
  input [146:0]configuration_vector;
  input signal_detect;
  input dclk;
  input drp_drdy;
  input dclk_reset;
  input resetdone;
  input [2:0]gt_rxc;
  input [15:0]drp_drpdo;
  input [63:0]xgmii_txd;
  input [7:0]xgmii_txc;
  input [63:0]gt_rxd;
  input drp_gnt;

  wire clear_rx_prbs_err_count;
  wire [146:0]configuration_vector;
  wire core_in_testmode;
  wire [0:0]core_status;
  wire coreclk;
  wire dclk;
  wire dclk_reset;
  wire [0:0]drp_daddr;
  wire drp_den;
  wire drp_drdy;
  wire [15:0]drp_drpdo;
  wire drp_dwe;
  wire drp_gnt;
  wire drp_req;
  wire [2:0]gt_rxc;
  wire [63:0]gt_rxd;
  wire gt_slip;
  wire [1:0]gt_txc;
  wire [63:0]gt_txd;
  wire [0:0]out;
  wire reset;
  wire resetdone;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;
  wire signal_detect;
  wire [40:0]status_vector;
  wire tx_disable;
  wire tx_prbs31_en;
  wire [7:0]xgmii_rxc;
  wire [63:0]xgmii_rxd;
  wire [7:0]xgmii_txc;
  wire [63:0]xgmii_txd;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_baser_top \BASER.ten_gig_eth_pcs_pma_inst 
       (.clear_rx_prbs_err_count(clear_rx_prbs_err_count),
        .configuration_vector(configuration_vector),
        .core_in_testmode(core_in_testmode),
        .core_status(core_status),
        .coreclk(coreclk),
        .dclk(dclk),
        .dclk_reset(dclk_reset),
        .drp_daddr(drp_daddr),
        .drp_den(drp_den),
        .drp_drdy(drp_drdy),
        .drp_drpdo(drp_drpdo),
        .drp_dwe(drp_dwe),
        .drp_gnt(drp_gnt),
        .drp_req(drp_req),
        .gt_rxc(gt_rxc),
        .gt_rxd(gt_rxd),
        .gt_slip(gt_slip),
        .gt_txc(gt_txc),
        .gt_txd(gt_txd),
        .out(out),
        .reset(reset),
        .resetdone(resetdone),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2),
        .signal_detect(signal_detect),
        .status_vector(status_vector),
        .tx_disable(tx_disable),
        .tx_prbs31_en(tx_prbs31_en),
        .xgmii_rxc(xgmii_rxc),
        .xgmii_rxd(xgmii_rxd),
        .xgmii_txc(xgmii_txc),
        .xgmii_txd(xgmii_txd));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_baser_top
   (out,
    tx_disable,
    core_status,
    status_vector,
    tx_prbs31_en,
    gt_slip,
    clear_rx_prbs_err_count,
    core_in_testmode,
    drp_den,
    drp_daddr,
    gt_txd,
    gt_txc,
    drp_req,
    drp_dwe,
    xgmii_rxd,
    xgmii_rxc,
    rxusrclk2,
    rxreset_rxusrclk2,
    coreclk,
    reset,
    configuration_vector,
    signal_detect,
    dclk,
    drp_drdy,
    dclk_reset,
    resetdone,
    gt_rxc,
    drp_drpdo,
    xgmii_txd,
    xgmii_txc,
    gt_rxd,
    drp_gnt);
  output [0:0]out;
  output tx_disable;
  output [0:0]core_status;
  output [40:0]status_vector;
  output tx_prbs31_en;
  output gt_slip;
  output clear_rx_prbs_err_count;
  output core_in_testmode;
  output drp_den;
  output [0:0]drp_daddr;
  output [63:0]gt_txd;
  output [1:0]gt_txc;
  output drp_req;
  output drp_dwe;
  output [63:0]xgmii_rxd;
  output [7:0]xgmii_rxc;
  input rxusrclk2;
  input rxreset_rxusrclk2;
  input coreclk;
  input reset;
  input [146:0]configuration_vector;
  input signal_detect;
  input dclk;
  input drp_drdy;
  input dclk_reset;
  input resetdone;
  input [2:0]gt_rxc;
  input [15:0]drp_drpdo;
  input [63:0]xgmii_txd;
  input [7:0]xgmii_txc;
  input [63:0]gt_rxd;
  input drp_gnt;

  wire b_lock;
  wire ber_count_inc;
  wire clear_rx_prbs_err_count;
  wire clear_rx_prbs_err_count0;
  wire clear_test_pattern_err_count;
  wire clear_test_pattern_err_count_reg;
  wire clear_test_pattern_error_count;
  wire [146:0]configuration_vector;
  wire core_in_testmode;
  wire core_in_testmode_i_1_n_0;
  wire [0:0]core_status;
  wire coreclk;
  wire coreclk_rxusrclk2_resyncs_i_n_3;
  wire coreclk_txusrclk2_resyncs_i_n_1;
  wire coreclk_txusrclk2_resyncs_i_n_10;
  wire coreclk_txusrclk2_resyncs_i_n_11;
  wire coreclk_txusrclk2_resyncs_i_n_12;
  wire coreclk_txusrclk2_resyncs_i_n_13;
  wire coreclk_txusrclk2_resyncs_i_n_14;
  wire coreclk_txusrclk2_resyncs_i_n_15;
  wire coreclk_txusrclk2_resyncs_i_n_17;
  wire coreclk_txusrclk2_resyncs_i_n_2;
  wire coreclk_txusrclk2_resyncs_i_n_3;
  wire coreclk_txusrclk2_resyncs_i_n_4;
  wire coreclk_txusrclk2_resyncs_i_n_5;
  wire coreclk_txusrclk2_resyncs_i_n_6;
  wire coreclk_txusrclk2_resyncs_i_n_7;
  wire coreclk_txusrclk2_resyncs_i_n_8;
  wire coreclk_txusrclk2_resyncs_i_n_9;
  wire dclk;
  wire dclk_reset;
  wire [0:0]drp_daddr;
  wire drp_den;
  wire drp_drdy;
  wire [15:0]drp_drpdo;
  wire drp_dwe;
  wire drp_gnt;
  wire drp_req;
  (* RTL_KEEP = "true" *) wire eq_rxusrclk2_en156;
  wire err_block_count_inc;
  wire [2:0]gt_rxc;
  wire [63:0]gt_rxd;
  wire gt_slip;
  wire gt_slip_i_1_n_0;
  wire gt_slip_int;
  wire gt_slip_reg__0;
  wire [1:0]gt_txc;
  wire [1:1]gt_txc_mux;
  wire [63:0]gt_txd;
  wire hiber;
  wire \ieee_registers_i/common_reg_block/reg_3_0_15 ;
  wire mcp1_gt_slip_int_reg;
  wire [65:0]mcp1_rx_66_raw;
  wire [0:0]out;
  wire pcs_ber_count_control_core_int;
  wire pcs_error_block_count_control_core_int;
  wire pcs_reset_clear_core_intr;
  wire pcs_reset_core_reg;
  wire pcs_rx_link_up_core_int;
  wire pcs_rx_link_up_core_reg;
  wire pcs_rxreset;
  wire pcs_rxreset_int;
  wire pcs_test_pattern_error_count_control_core_int;
  wire pcs_top_i_n_10;
  wire pcs_top_i_n_11;
  wire pcs_top_i_n_12;
  wire pcs_top_i_n_13;
  wire pcs_top_i_n_14;
  wire pcs_top_i_n_15;
  wire pcs_top_i_n_16;
  wire pcs_top_i_n_17;
  wire pcs_top_i_n_18;
  wire pcs_top_i_n_19;
  wire pcs_top_i_n_20;
  wire pcs_top_i_n_21;
  wire pcs_top_i_n_22;
  wire pcs_top_i_n_23;
  wire pcs_top_i_n_24;
  wire pcs_top_i_n_25;
  wire pcs_top_i_n_26;
  wire pcs_top_i_n_27;
  wire pcs_top_i_n_28;
  wire pcs_top_i_n_29;
  wire pcs_top_i_n_30;
  wire pcs_top_i_n_31;
  wire pcs_top_i_n_32;
  wire pcs_top_i_n_33;
  wire pcs_top_i_n_34;
  wire pcs_top_i_n_35;
  wire pcs_top_i_n_36;
  wire pcs_top_i_n_37;
  wire pcs_top_i_n_38;
  wire pcs_top_i_n_39;
  wire pcs_top_i_n_40;
  wire pcs_top_i_n_41;
  wire pcs_top_i_n_42;
  wire pcs_top_i_n_43;
  wire pcs_top_i_n_44;
  wire pcs_top_i_n_45;
  wire pcs_top_i_n_46;
  wire pcs_top_i_n_47;
  wire pcs_top_i_n_48;
  wire pcs_top_i_n_49;
  wire pcs_top_i_n_5;
  wire pcs_top_i_n_50;
  wire pcs_top_i_n_51;
  wire pcs_top_i_n_52;
  wire pcs_top_i_n_53;
  wire pcs_top_i_n_54;
  wire pcs_top_i_n_55;
  wire pcs_top_i_n_56;
  wire pcs_top_i_n_57;
  wire pcs_top_i_n_58;
  wire pcs_top_i_n_59;
  wire pcs_top_i_n_6;
  wire pcs_top_i_n_60;
  wire pcs_top_i_n_61;
  wire pcs_top_i_n_62;
  wire pcs_top_i_n_63;
  wire pcs_top_i_n_64;
  wire pcs_top_i_n_65;
  wire pcs_top_i_n_66;
  wire pcs_top_i_n_67;
  wire pcs_top_i_n_68;
  wire pcs_top_i_n_7;
  wire pcs_top_i_n_8;
  wire pcs_top_i_n_9;
  wire pma_pmd_reset_clear_core_intr;
  wire prbs31_rx_enable_core_int;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire prbs31_rx_enable_core_rega;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire prbs31_rx_enable_core_regb;
  wire prbs31_tx_enable_core_int;
  wire prbs31_tx_enable_core_reg;
  wire reset;
  wire resetdone;
  wire [65:0]rx_gt;
  wire rx_test_mode_int;
  wire rx_test_mode_int_reg;
  wire rx_test_patt_sel_int;
  wire [7:0]rx_xgmii_ctrl_int;
  wire [63:0]rx_xgmii_data_int;
  wire rxdatavalid;
  wire rxdatavalid_reg__0;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;
  wire rxusrclk2_coreclk_resyncs_i_n_1;
  wire rxusrclk2_coreclk_resyncs_i_n_2;
  wire signal_detect;
  wire signal_detect_sync;
  wire [40:0]status_vector;
  wire synch_5_n_1;
  wire tx_disable;
  wire [1:0]\tx_pcs_i/tx_66_enc_fsm ;
  wire tx_prbs31_en;
  wire [2:0]txsequencefixed;
  wire \txsequencefixed[0]_i_1_n_0 ;
  wire \txsequencefixed[1]_i_1_n_0 ;
  wire \txsequencefixed[2]_i_1_n_0 ;
  wire [7:0]xgmii_rxc;
  wire [63:0]xgmii_rxd;
  wire [7:0]xgmii_txc;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire [7:0]xgmii_txc_reg;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire [7:0]xgmii_txc_reg2;
  wire [63:0]xgmii_txd;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire [63:0]xgmii_txd_reg;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire [63:0]xgmii_txd_reg2;

  FDRE #(
    .INIT(1'b0)) 
    clear_rx_prbs_err_count_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(clear_rx_prbs_err_count0),
        .Q(clear_rx_prbs_err_count),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    clear_test_pattern_err_count_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(clear_test_pattern_err_count),
        .Q(clear_test_pattern_err_count_reg),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hFE)) 
    core_in_testmode_i_1
       (.I0(prbs31_rx_enable_core_regb),
        .I1(configuration_vector[122]),
        .I2(configuration_vector[2]),
        .O(core_in_testmode_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    core_in_testmode_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(core_in_testmode_i_1_n_0),
        .Q(core_in_testmode),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer coreclk_rxusrclk2_resets_resyncs_i
       (.in0(pcs_reset_core_reg),
        .pcs_rxreset_int(pcs_rxreset_int),
        .rxreset(pcs_rxreset),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_resyncs_en coreclk_rxusrclk2_resyncs2_i
       (.d(clear_test_pattern_err_count_reg),
        .q(clear_test_pattern_error_count),
        .rxusrclk2(rxusrclk2));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_coherent_resyncs_en__parameterized0 coreclk_rxusrclk2_resyncs_i
       (.clear_rx_prbs_err_count0(clear_rx_prbs_err_count0),
        .clear_rx_prbs_err_count_reg({out,rx_test_mode_int,rx_test_patt_sel_int,coreclk_rxusrclk2_resyncs_i_n_3}),
        .configuration_vector(configuration_vector[122:120]),
        .out(prbs31_rx_enable_core_rega),
        .pcs_rxreset_int(pcs_rxreset_int),
        .q(clear_test_pattern_error_count),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_resyncs__parameterized0 coreclk_txusrclk2_resyncs_i
       (.D({coreclk_txusrclk2_resyncs_i_n_1,coreclk_txusrclk2_resyncs_i_n_2,coreclk_txusrclk2_resyncs_i_n_3,coreclk_txusrclk2_resyncs_i_n_4,coreclk_txusrclk2_resyncs_i_n_5,coreclk_txusrclk2_resyncs_i_n_6}),
        .Q(txsequencefixed),
        .configuration_vector({configuration_vector[123],configuration_vector[121],configuration_vector[2]}),
        .coreclk(coreclk),
        .\gt_txc_reg[0] (coreclk_txusrclk2_resyncs_i_n_12),
        .\gt_txc_reg[0]_0 (coreclk_txusrclk2_resyncs_i_n_17),
        .\gt_txc_reg[1] (gt_txc_mux),
        .\gt_txd_reg[0] (coreclk_txusrclk2_resyncs_i_n_11),
        .\gt_txd_reg[25] (coreclk_txusrclk2_resyncs_i_n_7),
        .\gt_txd_reg[2] (coreclk_txusrclk2_resyncs_i_n_14),
        .\gt_txd_reg[33] (coreclk_txusrclk2_resyncs_i_n_8),
        .\gt_txd_reg[35] (coreclk_txusrclk2_resyncs_i_n_9),
        .\gt_txd_reg[45] (coreclk_txusrclk2_resyncs_i_n_10),
        .\gt_txd_reg[4] (coreclk_txusrclk2_resyncs_i_n_15),
        .\gt_txd_reg[6] (coreclk_txusrclk2_resyncs_i_n_13),
        .in0(prbs31_tx_enable_core_reg),
        .\tx_66_enc_out_reg[10] (pcs_top_i_n_30),
        .\tx_66_enc_out_reg[1] (\tx_pcs_i/tx_66_enc_fsm ),
        .\tx_66_enc_out_reg[26] (pcs_top_i_n_16),
        .\tx_66_enc_out_reg[27] (pcs_top_i_n_59),
        .\tx_66_enc_out_reg[38] (pcs_top_i_n_60),
        .\tx_66_enc_out_reg[39] (pcs_top_i_n_61),
        .tx_prbs31_en(tx_prbs31_en),
        .\tx_test_patt_seed_sel_reg[0] (pcs_top_i_n_62));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_elastic_buffer_wrapper \ebuff_gen.rx_elastic_buffer_i 
       (.D(rx_xgmii_data_int),
        .configuration_vector(configuration_vector[2]),
        .coreclk(coreclk),
        .\mcp1_rx_ebuff_ctrl_reg[7] (rx_xgmii_ctrl_int),
        .out(eq_rxusrclk2_en156),
        .reset(reset),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2),
        .xgmii_rxc(xgmii_rxc),
        .xgmii_rxd(xgmii_rxd),
        .\xgmii_txc_reg2_reg[7] (xgmii_txc_reg2),
        .\xgmii_txd_reg2_reg[63] (xgmii_txd_reg2));
  LUT2 #(
    .INIT(4'h2)) 
    gt_slip_i_1
       (.I0(mcp1_gt_slip_int_reg),
        .I1(gt_slip_reg__0),
        .O(gt_slip_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gt_slip_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_slip_i_1_n_0),
        .Q(gt_slip),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    gt_slip_reg_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_gt_slip_int_reg),
        .Q(gt_slip_reg__0),
        .R(1'b0));
  FDSE #(
    .INIT(1'b0)) 
    \gt_txc_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(coreclk_txusrclk2_resyncs_i_n_12),
        .Q(gt_txc[0]),
        .S(coreclk_txusrclk2_resyncs_i_n_17));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txc_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(gt_txc_mux),
        .Q(gt_txc[1]),
        .R(1'b0));
  FDSE #(
    .INIT(1'b0)) 
    \gt_txd_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_64),
        .Q(gt_txd[0]),
        .S(coreclk_txusrclk2_resyncs_i_n_11));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_33),
        .Q(gt_txd[10]),
        .R(coreclk_txusrclk2_resyncs_i_n_14));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_35),
        .Q(gt_txd[11]),
        .R(coreclk_txusrclk2_resyncs_i_n_14));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_37),
        .Q(gt_txd[12]),
        .R(coreclk_txusrclk2_resyncs_i_n_15));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_39),
        .Q(gt_txd[13]),
        .R(coreclk_txusrclk2_resyncs_i_n_15));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_41),
        .Q(gt_txd[14]),
        .R(coreclk_txusrclk2_resyncs_i_n_13));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_42),
        .Q(gt_txd[15]),
        .R(coreclk_txusrclk2_resyncs_i_n_13));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[16] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_44),
        .Q(gt_txd[16]),
        .R(coreclk_txusrclk2_resyncs_i_n_8));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[17] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_45),
        .Q(gt_txd[17]),
        .R(coreclk_txusrclk2_resyncs_i_n_8));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[18] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_46),
        .Q(gt_txd[18]),
        .R(coreclk_txusrclk2_resyncs_i_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[19] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_26),
        .Q(gt_txd[19]),
        .R(coreclk_txusrclk2_resyncs_i_n_9));
  FDSE #(
    .INIT(1'b0)) 
    \gt_txd_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_54),
        .Q(gt_txd[1]),
        .S(coreclk_txusrclk2_resyncs_i_n_11));
  FDSE #(
    .INIT(1'b0)) 
    \gt_txd_reg[20] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_68),
        .Q(gt_txd[20]),
        .S(coreclk_txusrclk2_resyncs_i_n_15));
  FDSE #(
    .INIT(1'b0)) 
    \gt_txd_reg[21] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_67),
        .Q(gt_txd[21]),
        .S(coreclk_txusrclk2_resyncs_i_n_15));
  FDSE #(
    .INIT(1'b0)) 
    \gt_txd_reg[22] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_66),
        .Q(gt_txd[22]),
        .S(coreclk_txusrclk2_resyncs_i_n_13));
  FDSE #(
    .INIT(1'b0)) 
    \gt_txd_reg[23] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_65),
        .Q(gt_txd[23]),
        .S(coreclk_txusrclk2_resyncs_i_n_13));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[24] 
       (.C(coreclk),
        .CE(1'b1),
        .D(coreclk_txusrclk2_resyncs_i_n_5),
        .Q(gt_txd[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[25] 
       (.C(coreclk),
        .CE(1'b1),
        .D(coreclk_txusrclk2_resyncs_i_n_4),
        .Q(gt_txd[25]),
        .R(1'b0));
  FDSE #(
    .INIT(1'b0)) 
    \gt_txd_reg[26] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_48),
        .Q(gt_txd[26]),
        .S(coreclk_txusrclk2_resyncs_i_n_9));
  FDSE #(
    .INIT(1'b0)) 
    \gt_txd_reg[27] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_49),
        .Q(gt_txd[27]),
        .S(coreclk_txusrclk2_resyncs_i_n_9));
  FDSE #(
    .INIT(1'b0)) 
    \gt_txd_reg[28] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_50),
        .Q(gt_txd[28]),
        .S(coreclk_txusrclk2_resyncs_i_n_10));
  FDSE #(
    .INIT(1'b0)) 
    \gt_txd_reg[29] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_51),
        .Q(gt_txd[29]),
        .S(coreclk_txusrclk2_resyncs_i_n_10));
  FDSE #(
    .INIT(1'b0)) 
    \gt_txd_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_63),
        .Q(gt_txd[2]),
        .S(coreclk_txusrclk2_resyncs_i_n_14));
  FDSE #(
    .INIT(1'b0)) 
    \gt_txd_reg[30] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_52),
        .Q(gt_txd[30]),
        .S(coreclk_txusrclk2_resyncs_i_n_17));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[31] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_25),
        .Q(gt_txd[31]),
        .R(coreclk_txusrclk2_resyncs_i_n_13));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[32] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_24),
        .Q(gt_txd[32]),
        .R(coreclk_txusrclk2_resyncs_i_n_8));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[33] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_23),
        .Q(gt_txd[33]),
        .R(coreclk_txusrclk2_resyncs_i_n_8));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[34] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_22),
        .Q(gt_txd[34]),
        .R(coreclk_txusrclk2_resyncs_i_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[35] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_21),
        .Q(gt_txd[35]),
        .R(coreclk_txusrclk2_resyncs_i_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[36] 
       (.C(coreclk),
        .CE(1'b1),
        .D(coreclk_txusrclk2_resyncs_i_n_3),
        .Q(gt_txd[36]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[37] 
       (.C(coreclk),
        .CE(1'b1),
        .D(coreclk_txusrclk2_resyncs_i_n_2),
        .Q(gt_txd[37]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[38] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_20),
        .Q(gt_txd[38]),
        .R(coreclk_txusrclk2_resyncs_i_n_17));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[39] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_14),
        .Q(gt_txd[39]),
        .R(coreclk_txusrclk2_resyncs_i_n_17));
  FDSE #(
    .INIT(1'b0)) 
    \gt_txd_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_56),
        .Q(gt_txd[3]),
        .S(coreclk_txusrclk2_resyncs_i_n_14));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[40] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_53),
        .Q(gt_txd[40]),
        .R(coreclk_txusrclk2_resyncs_i_n_11));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[41] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_12),
        .Q(gt_txd[41]),
        .R(coreclk_txusrclk2_resyncs_i_n_11));
  FDSE #(
    .INIT(1'b0)) 
    \gt_txd_reg[42] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_55),
        .Q(gt_txd[42]),
        .S(coreclk_txusrclk2_resyncs_i_n_9));
  FDSE #(
    .INIT(1'b0)) 
    \gt_txd_reg[43] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_10),
        .Q(gt_txd[43]),
        .S(coreclk_txusrclk2_resyncs_i_n_9));
  FDSE #(
    .INIT(1'b0)) 
    \gt_txd_reg[44] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_57),
        .Q(gt_txd[44]),
        .S(coreclk_txusrclk2_resyncs_i_n_10));
  FDSE #(
    .INIT(1'b0)) 
    \gt_txd_reg[45] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_6),
        .Q(gt_txd[45]),
        .S(coreclk_txusrclk2_resyncs_i_n_10));
  FDSE #(
    .INIT(1'b0)) 
    \gt_txd_reg[46] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_28),
        .Q(gt_txd[46]),
        .S(coreclk_txusrclk2_resyncs_i_n_17));
  FDSE #(
    .INIT(1'b0)) 
    \gt_txd_reg[47] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_29),
        .Q(gt_txd[47]),
        .S(coreclk_txusrclk2_resyncs_i_n_17));
  FDSE #(
    .INIT(1'b0)) 
    \gt_txd_reg[48] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_32),
        .Q(gt_txd[48]),
        .S(coreclk_txusrclk2_resyncs_i_n_11));
  FDSE #(
    .INIT(1'b0)) 
    \gt_txd_reg[49] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_34),
        .Q(gt_txd[49]),
        .S(coreclk_txusrclk2_resyncs_i_n_11));
  FDSE #(
    .INIT(1'b0)) 
    \gt_txd_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_8),
        .Q(gt_txd[4]),
        .S(coreclk_txusrclk2_resyncs_i_n_15));
  FDSE #(
    .INIT(1'b0)) 
    \gt_txd_reg[50] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_36),
        .Q(gt_txd[50]),
        .S(coreclk_txusrclk2_resyncs_i_n_14));
  FDSE #(
    .INIT(1'b0)) 
    \gt_txd_reg[51] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_38),
        .Q(gt_txd[51]),
        .S(coreclk_txusrclk2_resyncs_i_n_14));
  FDSE #(
    .INIT(1'b0)) 
    \gt_txd_reg[52] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_40),
        .Q(gt_txd[52]),
        .S(coreclk_txusrclk2_resyncs_i_n_15));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[53] 
       (.C(coreclk),
        .CE(1'b1),
        .D(coreclk_txusrclk2_resyncs_i_n_1),
        .Q(gt_txd[53]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[54] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_43),
        .Q(gt_txd[54]),
        .R(coreclk_txusrclk2_resyncs_i_n_17));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[55] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_19),
        .Q(gt_txd[55]),
        .R(coreclk_txusrclk2_resyncs_i_n_17));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[56] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_7),
        .Q(gt_txd[56]),
        .R(coreclk_txusrclk2_resyncs_i_n_11));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[57] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_47),
        .Q(gt_txd[57]),
        .R(coreclk_txusrclk2_resyncs_i_n_11));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[58] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_13),
        .Q(gt_txd[58]),
        .R(coreclk_txusrclk2_resyncs_i_n_14));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[59] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_18),
        .Q(gt_txd[59]),
        .R(coreclk_txusrclk2_resyncs_i_n_14));
  FDSE #(
    .INIT(1'b0)) 
    \gt_txd_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_58),
        .Q(gt_txd[5]),
        .S(coreclk_txusrclk2_resyncs_i_n_15));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[60] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_11),
        .Q(gt_txd[60]),
        .R(coreclk_txusrclk2_resyncs_i_n_15));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[61] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_17),
        .Q(gt_txd[61]),
        .R(coreclk_txusrclk2_resyncs_i_n_15));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[62] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_9),
        .Q(gt_txd[62]),
        .R(coreclk_txusrclk2_resyncs_i_n_13));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[63] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_15),
        .Q(gt_txd[63]),
        .R(coreclk_txusrclk2_resyncs_i_n_13));
  FDSE #(
    .INIT(1'b0)) 
    \gt_txd_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_5),
        .Q(gt_txd[6]),
        .S(coreclk_txusrclk2_resyncs_i_n_13));
  FDSE #(
    .INIT(1'b0)) 
    \gt_txd_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_27),
        .Q(gt_txd[7]),
        .S(coreclk_txusrclk2_resyncs_i_n_13));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(coreclk_txusrclk2_resyncs_i_n_6),
        .Q(gt_txd[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_top_i_n_31),
        .Q(gt_txd[9]),
        .R(coreclk_txusrclk2_resyncs_i_n_11));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b1),
        .O(eq_rxusrclk2_en156));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_management_top management_inst
       (.SR(clear_test_pattern_err_count),
        .configuration_vector({configuration_vector[146:142],configuration_vector[125],configuration_vector[122],configuration_vector[3],configuration_vector[0]}),
        .core_status(core_status),
        .coreclk(coreclk),
        .dclk(dclk),
        .dclk_reset(dclk_reset),
        .drp_daddr(drp_daddr),
        .drp_den(drp_den),
        .drp_drdy(drp_drdy),
        .drp_drpdo(drp_drpdo),
        .drp_dwe(drp_dwe),
        .drp_gnt(drp_gnt),
        .drp_req(drp_req),
        .pcs_ber_count_control_core_int(pcs_ber_count_control_core_int),
        .pcs_error_block_count_control_core_int(pcs_error_block_count_control_core_int),
        .pcs_reset_clear_core_intr(pcs_reset_clear_core_intr),
        .pcs_test_pattern_error_count_control_core_int(pcs_test_pattern_error_count_control_core_int),
        .pma_pmd_reset_clear_core_intr(pma_pmd_reset_clear_core_intr),
        .prbs31_rx_enable_core_int(prbs31_rx_enable_core_int),
        .q_reg(rxusrclk2_coreclk_resyncs_i_n_1),
        .q_reg_0(rxusrclk2_coreclk_resyncs_i_n_2),
        .q_reg_1(synch_5_n_1),
        .reg_3_0_15(\ieee_registers_i/common_reg_block/reg_3_0_15 ),
        .reset(reset),
        .resetdone(resetdone),
        .rxdatavalid_reg(rxdatavalid_reg__0),
        .signal_detect_sync(signal_detect_sync),
        .status_vector(status_vector));
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    mcp1_gt_slip_int_reg_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_slip_int),
        .Q(mcp1_gt_slip_int_reg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[0]),
        .Q(mcp1_rx_66_raw[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[10] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[10]),
        .Q(mcp1_rx_66_raw[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[11] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[11]),
        .Q(mcp1_rx_66_raw[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[12] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[12]),
        .Q(mcp1_rx_66_raw[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[13] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[13]),
        .Q(mcp1_rx_66_raw[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[14] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[14]),
        .Q(mcp1_rx_66_raw[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[15] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[15]),
        .Q(mcp1_rx_66_raw[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[16] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[16]),
        .Q(mcp1_rx_66_raw[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[17] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[17]),
        .Q(mcp1_rx_66_raw[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[18] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[18]),
        .Q(mcp1_rx_66_raw[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[19] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[19]),
        .Q(mcp1_rx_66_raw[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[1]),
        .Q(mcp1_rx_66_raw[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[20] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[20]),
        .Q(mcp1_rx_66_raw[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[21] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[21]),
        .Q(mcp1_rx_66_raw[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[22] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[22]),
        .Q(mcp1_rx_66_raw[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[23] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[23]),
        .Q(mcp1_rx_66_raw[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[24] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[24]),
        .Q(mcp1_rx_66_raw[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[25] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[25]),
        .Q(mcp1_rx_66_raw[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[26] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[26]),
        .Q(mcp1_rx_66_raw[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[27] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[27]),
        .Q(mcp1_rx_66_raw[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[28] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[28]),
        .Q(mcp1_rx_66_raw[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[29] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[29]),
        .Q(mcp1_rx_66_raw[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[2] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[2]),
        .Q(mcp1_rx_66_raw[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[30] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[30]),
        .Q(mcp1_rx_66_raw[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[31] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[31]),
        .Q(mcp1_rx_66_raw[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[32] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[32]),
        .Q(mcp1_rx_66_raw[32]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[33] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[33]),
        .Q(mcp1_rx_66_raw[33]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[34] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[34]),
        .Q(mcp1_rx_66_raw[34]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[35] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[35]),
        .Q(mcp1_rx_66_raw[35]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[36] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[36]),
        .Q(mcp1_rx_66_raw[36]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[37] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[37]),
        .Q(mcp1_rx_66_raw[37]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[38] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[38]),
        .Q(mcp1_rx_66_raw[38]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[39] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[39]),
        .Q(mcp1_rx_66_raw[39]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[3] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[3]),
        .Q(mcp1_rx_66_raw[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[40] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[40]),
        .Q(mcp1_rx_66_raw[40]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[41] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[41]),
        .Q(mcp1_rx_66_raw[41]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[42] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[42]),
        .Q(mcp1_rx_66_raw[42]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[43] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[43]),
        .Q(mcp1_rx_66_raw[43]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[44] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[44]),
        .Q(mcp1_rx_66_raw[44]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[45] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[45]),
        .Q(mcp1_rx_66_raw[45]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[46] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[46]),
        .Q(mcp1_rx_66_raw[46]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[47] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[47]),
        .Q(mcp1_rx_66_raw[47]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[48] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[48]),
        .Q(mcp1_rx_66_raw[48]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[49] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[49]),
        .Q(mcp1_rx_66_raw[49]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[4] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[4]),
        .Q(mcp1_rx_66_raw[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[50] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[50]),
        .Q(mcp1_rx_66_raw[50]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[51] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[51]),
        .Q(mcp1_rx_66_raw[51]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[52] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[52]),
        .Q(mcp1_rx_66_raw[52]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[53] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[53]),
        .Q(mcp1_rx_66_raw[53]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[54] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[54]),
        .Q(mcp1_rx_66_raw[54]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[55] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[55]),
        .Q(mcp1_rx_66_raw[55]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[56] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[56]),
        .Q(mcp1_rx_66_raw[56]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[57] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[57]),
        .Q(mcp1_rx_66_raw[57]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[58] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[58]),
        .Q(mcp1_rx_66_raw[58]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[59] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[59]),
        .Q(mcp1_rx_66_raw[59]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[5] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[5]),
        .Q(mcp1_rx_66_raw[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[60] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[60]),
        .Q(mcp1_rx_66_raw[60]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[61] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[61]),
        .Q(mcp1_rx_66_raw[61]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[62] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[62]),
        .Q(mcp1_rx_66_raw[62]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[63] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[63]),
        .Q(mcp1_rx_66_raw[63]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[64] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[64]),
        .Q(mcp1_rx_66_raw[64]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[65] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[65]),
        .Q(mcp1_rx_66_raw[65]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[6] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[6]),
        .Q(mcp1_rx_66_raw[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[7] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[7]),
        .Q(mcp1_rx_66_raw[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[8] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[8]),
        .Q(mcp1_rx_66_raw[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[9] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_gt[9]),
        .Q(mcp1_rx_66_raw[9]),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_rxusrclk2_coreclk_counter_resync norm_err_block_counter_i
       (.coreclk(coreclk),
        .err_block_count_inc(err_block_count_inc),
        .pcs_error_block_count_control_core_int(pcs_error_block_count_control_core_int),
        .rx_test_mode_int_reg(rx_test_mode_int_reg),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_rxusrclk2_coreclk_counter_resync_50 pcs_ber_counter_i
       (.ber_count_inc(ber_count_inc),
        .coreclk(coreclk),
        .pcs_ber_count_control_core_int(pcs_ber_count_control_core_int),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2));
  FDRE #(
    .INIT(1'b0)) 
    pcs_reset_clear_core_intr_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(rxdatavalid_reg__0),
        .Q(pcs_reset_clear_core_intr),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    pcs_reset_core_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(status_vector[3]),
        .Q(pcs_reset_core_reg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    pcs_rx_link_up_core_reg_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(pcs_rx_link_up_core_int),
        .Q(pcs_rx_link_up_core_reg),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_pcs_top pcs_top_i
       (.D(xgmii_txc_reg),
        .Q(mcp1_rx_66_raw),
        .b_lock(b_lock),
        .ber_count_inc(ber_count_inc),
        .configuration_vector({configuration_vector[141:126],configuration_vector[123],configuration_vector[121:4]}),
        .coreclk(coreclk),
        .err_block_count_inc(err_block_count_inc),
        .gt_slip_int(gt_slip_int),
        .\gt_txc_reg[1] (\tx_pcs_i/tx_66_enc_fsm ),
        .\gt_txd_reg[0] (pcs_top_i_n_64),
        .\gt_txd_reg[10] (pcs_top_i_n_33),
        .\gt_txd_reg[11] (pcs_top_i_n_35),
        .\gt_txd_reg[12] (pcs_top_i_n_37),
        .\gt_txd_reg[13] (pcs_top_i_n_39),
        .\gt_txd_reg[14] (pcs_top_i_n_41),
        .\gt_txd_reg[15] (pcs_top_i_n_42),
        .\gt_txd_reg[16] (pcs_top_i_n_44),
        .\gt_txd_reg[17] (pcs_top_i_n_45),
        .\gt_txd_reg[18] (pcs_top_i_n_46),
        .\gt_txd_reg[19] (pcs_top_i_n_26),
        .\gt_txd_reg[1] (pcs_top_i_n_54),
        .\gt_txd_reg[20] (pcs_top_i_n_68),
        .\gt_txd_reg[21] (pcs_top_i_n_67),
        .\gt_txd_reg[22] (pcs_top_i_n_66),
        .\gt_txd_reg[23] (pcs_top_i_n_65),
        .\gt_txd_reg[26] (pcs_top_i_n_48),
        .\gt_txd_reg[27] (pcs_top_i_n_49),
        .\gt_txd_reg[28] (pcs_top_i_n_50),
        .\gt_txd_reg[29] (pcs_top_i_n_51),
        .\gt_txd_reg[2] (pcs_top_i_n_63),
        .\gt_txd_reg[30] (pcs_top_i_n_52),
        .\gt_txd_reg[31] (pcs_top_i_n_25),
        .\gt_txd_reg[32] (pcs_top_i_n_24),
        .\gt_txd_reg[33] (pcs_top_i_n_23),
        .\gt_txd_reg[34] (pcs_top_i_n_22),
        .\gt_txd_reg[35] (pcs_top_i_n_21),
        .\gt_txd_reg[38] (pcs_top_i_n_20),
        .\gt_txd_reg[39] (pcs_top_i_n_14),
        .\gt_txd_reg[3] (pcs_top_i_n_56),
        .\gt_txd_reg[40] (pcs_top_i_n_53),
        .\gt_txd_reg[41] (pcs_top_i_n_12),
        .\gt_txd_reg[42] (pcs_top_i_n_55),
        .\gt_txd_reg[43] (pcs_top_i_n_10),
        .\gt_txd_reg[44] (pcs_top_i_n_57),
        .\gt_txd_reg[45] (pcs_top_i_n_6),
        .\gt_txd_reg[46] (pcs_top_i_n_28),
        .\gt_txd_reg[47] (pcs_top_i_n_29),
        .\gt_txd_reg[48] (pcs_top_i_n_32),
        .\gt_txd_reg[49] (pcs_top_i_n_34),
        .\gt_txd_reg[4] (pcs_top_i_n_8),
        .\gt_txd_reg[50] (pcs_top_i_n_36),
        .\gt_txd_reg[51] (pcs_top_i_n_38),
        .\gt_txd_reg[52] (pcs_top_i_n_40),
        .\gt_txd_reg[54] (pcs_top_i_n_43),
        .\gt_txd_reg[55] (pcs_top_i_n_19),
        .\gt_txd_reg[56] (pcs_top_i_n_7),
        .\gt_txd_reg[57] (pcs_top_i_n_47),
        .\gt_txd_reg[58] (pcs_top_i_n_13),
        .\gt_txd_reg[59] (pcs_top_i_n_18),
        .\gt_txd_reg[5] (pcs_top_i_n_58),
        .\gt_txd_reg[60] (pcs_top_i_n_11),
        .\gt_txd_reg[61] (pcs_top_i_n_17),
        .\gt_txd_reg[62] (pcs_top_i_n_9),
        .\gt_txd_reg[63] (pcs_top_i_n_15),
        .\gt_txd_reg[6] (pcs_top_i_n_5),
        .\gt_txd_reg[7] (pcs_top_i_n_27),
        .\gt_txd_reg[9] (pcs_top_i_n_31),
        .hiber(hiber),
        .\mcp1_ctrl_pipe_reg[7] (rx_xgmii_ctrl_int),
        .\mcp1_data_pipe_reg[63] (rx_xgmii_data_int),
        .out(xgmii_txd_reg),
        .\outreg_reg[2] ({rx_test_mode_int,rx_test_patt_sel_int,coreclk_rxusrclk2_resyncs_i_n_3}),
        .pcs_rx_link_up_core_int(pcs_rx_link_up_core_int),
        .q_reg(coreclk_txusrclk2_resyncs_i_n_7),
        .reg_3_0_15(\ieee_registers_i/common_reg_block/reg_3_0_15 ),
        .reset(reset),
        .rxreset(pcs_rxreset),
        .rxusrclk2(rxusrclk2),
        .\scr_reg_reg[10] (pcs_top_i_n_62),
        .\scr_reg_reg[26] (pcs_top_i_n_61),
        .\scr_reg_reg[27] (pcs_top_i_n_60),
        .\scr_reg_reg[38] (pcs_top_i_n_59),
        .\scr_reg_reg[39] (pcs_top_i_n_16),
        .\scr_reg_reg[55] (pcs_top_i_n_30),
        .signal_detect(signal_detect));
  FDRE #(
    .INIT(1'b0)) 
    pma_pmd_reset_clear_core_intr_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(resetdone),
        .Q(pma_pmd_reset_clear_core_intr),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    prbs31_rx_enable_core_rega_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(prbs31_rx_enable_core_int),
        .Q(prbs31_rx_enable_core_rega),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    prbs31_rx_enable_core_regb_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(prbs31_rx_enable_core_int),
        .Q(prbs31_rx_enable_core_regb),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    prbs31_tx_enable_core_reg_i_1
       (.I0(configuration_vector[124]),
        .I1(configuration_vector[123]),
        .O(prbs31_tx_enable_core_int));
  FDRE #(
    .INIT(1'b0)) 
    prbs31_tx_enable_core_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(prbs31_tx_enable_core_int),
        .Q(prbs31_tx_enable_core_reg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxc[0]),
        .Q(rx_gt[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[10] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[8]),
        .Q(rx_gt[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[11] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[9]),
        .Q(rx_gt[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[12] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[10]),
        .Q(rx_gt[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[13] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[11]),
        .Q(rx_gt[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[14] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[12]),
        .Q(rx_gt[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[15] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[13]),
        .Q(rx_gt[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[16] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[14]),
        .Q(rx_gt[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[17] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[15]),
        .Q(rx_gt[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[18] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[16]),
        .Q(rx_gt[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[19] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[17]),
        .Q(rx_gt[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxc[1]),
        .Q(rx_gt[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[20] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[18]),
        .Q(rx_gt[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[21] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[19]),
        .Q(rx_gt[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[22] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[20]),
        .Q(rx_gt[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[23] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[21]),
        .Q(rx_gt[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[24] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[22]),
        .Q(rx_gt[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[25] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[23]),
        .Q(rx_gt[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[26] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[24]),
        .Q(rx_gt[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[27] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[25]),
        .Q(rx_gt[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[28] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[26]),
        .Q(rx_gt[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[29] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[27]),
        .Q(rx_gt[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[2] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[0]),
        .Q(rx_gt[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[30] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[28]),
        .Q(rx_gt[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[31] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[29]),
        .Q(rx_gt[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[32] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[30]),
        .Q(rx_gt[32]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[33] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[31]),
        .Q(rx_gt[33]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[34] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[32]),
        .Q(rx_gt[34]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[35] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[33]),
        .Q(rx_gt[35]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[36] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[34]),
        .Q(rx_gt[36]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[37] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[35]),
        .Q(rx_gt[37]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[38] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[36]),
        .Q(rx_gt[38]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[39] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[37]),
        .Q(rx_gt[39]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[3] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[1]),
        .Q(rx_gt[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[40] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[38]),
        .Q(rx_gt[40]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[41] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[39]),
        .Q(rx_gt[41]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[42] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[40]),
        .Q(rx_gt[42]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[43] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[41]),
        .Q(rx_gt[43]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[44] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[42]),
        .Q(rx_gt[44]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[45] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[43]),
        .Q(rx_gt[45]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[46] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[44]),
        .Q(rx_gt[46]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[47] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[45]),
        .Q(rx_gt[47]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[48] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[46]),
        .Q(rx_gt[48]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[49] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[47]),
        .Q(rx_gt[49]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[4] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[2]),
        .Q(rx_gt[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[50] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[48]),
        .Q(rx_gt[50]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[51] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[49]),
        .Q(rx_gt[51]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[52] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[50]),
        .Q(rx_gt[52]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[53] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[51]),
        .Q(rx_gt[53]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[54] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[52]),
        .Q(rx_gt[54]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[55] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[53]),
        .Q(rx_gt[55]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[56] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[54]),
        .Q(rx_gt[56]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[57] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[55]),
        .Q(rx_gt[57]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[58] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[56]),
        .Q(rx_gt[58]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[59] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[57]),
        .Q(rx_gt[59]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[5] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[3]),
        .Q(rx_gt[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[60] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[58]),
        .Q(rx_gt[60]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[61] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[59]),
        .Q(rx_gt[61]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[62] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[60]),
        .Q(rx_gt[62]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[63] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[61]),
        .Q(rx_gt[63]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[64] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[62]),
        .Q(rx_gt[64]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[65] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[63]),
        .Q(rx_gt[65]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[6] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[4]),
        .Q(rx_gt[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[7] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[5]),
        .Q(rx_gt[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[8] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[6]),
        .Q(rx_gt[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[9] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[7]),
        .Q(rx_gt[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    rx_test_mode_int_reg_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_test_mode_int),
        .Q(rx_test_mode_int_reg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    rxdatavalid_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxc[2]),
        .Q(rxdatavalid),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_resyncs rxusrclk2_coreclk_resyncs_i
       (.b_lock(b_lock),
        .core_status(core_status),
        .coreclk(coreclk),
        .hiber(hiber),
        .in0(pcs_rx_link_up_core_reg),
        .\q_reg[0] (rxusrclk2_coreclk_resyncs_i_n_1),
        .\q_reg[0]_0 (rxusrclk2_coreclk_resyncs_i_n_2));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_51 synch_1
       (.coreclk(coreclk),
        .in0(rxdatavalid),
        .rxdatavalid_reg(rxdatavalid_reg__0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_52 synch_4
       (.configuration_vector(configuration_vector[1]),
        .coreclk(coreclk),
        .tx_disable(tx_disable));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_53 synch_5
       (.coreclk(coreclk),
        .\q_reg[0] (synch_5_n_1),
        .reset(reset),
        .signal_detect(signal_detect),
        .signal_detect_sync(signal_detect_sync),
        .status_vector(status_vector[0]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_rxusrclk2_coreclk_counter_resync_54 test_err_block_counter_i
       (.coreclk(coreclk),
        .err_block_count_inc(err_block_count_inc),
        .\outreg_reg[3] (out),
        .pcs_test_pattern_error_count_control_core_int(pcs_test_pattern_error_count_control_core_int),
        .rx_test_mode_int_reg(rx_test_mode_int_reg),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2));
  LUT1 #(
    .INIT(2'h1)) 
    \txsequencefixed[0]_i_1 
       (.I0(txsequencefixed[0]),
        .O(\txsequencefixed[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair334" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \txsequencefixed[1]_i_1 
       (.I0(txsequencefixed[0]),
        .I1(txsequencefixed[1]),
        .O(\txsequencefixed[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair334" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \txsequencefixed[2]_i_1 
       (.I0(txsequencefixed[2]),
        .I1(txsequencefixed[1]),
        .I2(txsequencefixed[0]),
        .O(\txsequencefixed[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \txsequencefixed_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\txsequencefixed[0]_i_1_n_0 ),
        .Q(txsequencefixed[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txsequencefixed_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\txsequencefixed[1]_i_1_n_0 ),
        .Q(txsequencefixed[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txsequencefixed_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\txsequencefixed[2]_i_1_n_0 ),
        .Q(txsequencefixed[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg2_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[0]),
        .Q(xgmii_txc_reg2[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg2_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[1]),
        .Q(xgmii_txc_reg2[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg2_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[2]),
        .Q(xgmii_txc_reg2[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg2_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[3]),
        .Q(xgmii_txc_reg2[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg2_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[4]),
        .Q(xgmii_txc_reg2[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg2_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[5]),
        .Q(xgmii_txc_reg2[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg2_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[6]),
        .Q(xgmii_txc_reg2[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg2_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[7]),
        .Q(xgmii_txc_reg2[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[0]),
        .Q(xgmii_txc_reg[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[1]),
        .Q(xgmii_txc_reg[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[2]),
        .Q(xgmii_txc_reg[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[3]),
        .Q(xgmii_txc_reg[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[4]),
        .Q(xgmii_txc_reg[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[5]),
        .Q(xgmii_txc_reg[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[6]),
        .Q(xgmii_txc_reg[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[7]),
        .Q(xgmii_txc_reg[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[0]),
        .Q(xgmii_txd_reg2[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[10]),
        .Q(xgmii_txd_reg2[10]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[11]),
        .Q(xgmii_txd_reg2[11]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[12]),
        .Q(xgmii_txd_reg2[12]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[13]),
        .Q(xgmii_txd_reg2[13]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[14]),
        .Q(xgmii_txd_reg2[14]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[15]),
        .Q(xgmii_txd_reg2[15]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[16] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[16]),
        .Q(xgmii_txd_reg2[16]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[17] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[17]),
        .Q(xgmii_txd_reg2[17]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[18] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[18]),
        .Q(xgmii_txd_reg2[18]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[19] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[19]),
        .Q(xgmii_txd_reg2[19]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[1]),
        .Q(xgmii_txd_reg2[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[20] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[20]),
        .Q(xgmii_txd_reg2[20]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[21] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[21]),
        .Q(xgmii_txd_reg2[21]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[22] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[22]),
        .Q(xgmii_txd_reg2[22]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[23] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[23]),
        .Q(xgmii_txd_reg2[23]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[24] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[24]),
        .Q(xgmii_txd_reg2[24]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[25] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[25]),
        .Q(xgmii_txd_reg2[25]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[26] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[26]),
        .Q(xgmii_txd_reg2[26]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[27] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[27]),
        .Q(xgmii_txd_reg2[27]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[28] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[28]),
        .Q(xgmii_txd_reg2[28]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[29] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[29]),
        .Q(xgmii_txd_reg2[29]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[2]),
        .Q(xgmii_txd_reg2[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[30] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[30]),
        .Q(xgmii_txd_reg2[30]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[31] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[31]),
        .Q(xgmii_txd_reg2[31]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[32] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[32]),
        .Q(xgmii_txd_reg2[32]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[33] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[33]),
        .Q(xgmii_txd_reg2[33]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[34] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[34]),
        .Q(xgmii_txd_reg2[34]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[35] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[35]),
        .Q(xgmii_txd_reg2[35]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[36] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[36]),
        .Q(xgmii_txd_reg2[36]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[37] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[37]),
        .Q(xgmii_txd_reg2[37]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[38] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[38]),
        .Q(xgmii_txd_reg2[38]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[39] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[39]),
        .Q(xgmii_txd_reg2[39]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[3]),
        .Q(xgmii_txd_reg2[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[40] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[40]),
        .Q(xgmii_txd_reg2[40]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[41] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[41]),
        .Q(xgmii_txd_reg2[41]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[42] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[42]),
        .Q(xgmii_txd_reg2[42]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[43] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[43]),
        .Q(xgmii_txd_reg2[43]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[44] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[44]),
        .Q(xgmii_txd_reg2[44]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[45] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[45]),
        .Q(xgmii_txd_reg2[45]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[46] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[46]),
        .Q(xgmii_txd_reg2[46]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[47] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[47]),
        .Q(xgmii_txd_reg2[47]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[48] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[48]),
        .Q(xgmii_txd_reg2[48]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[49] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[49]),
        .Q(xgmii_txd_reg2[49]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[4]),
        .Q(xgmii_txd_reg2[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[50] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[50]),
        .Q(xgmii_txd_reg2[50]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[51] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[51]),
        .Q(xgmii_txd_reg2[51]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[52] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[52]),
        .Q(xgmii_txd_reg2[52]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[53] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[53]),
        .Q(xgmii_txd_reg2[53]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[54] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[54]),
        .Q(xgmii_txd_reg2[54]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[55] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[55]),
        .Q(xgmii_txd_reg2[55]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[56] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[56]),
        .Q(xgmii_txd_reg2[56]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[57] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[57]),
        .Q(xgmii_txd_reg2[57]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[58] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[58]),
        .Q(xgmii_txd_reg2[58]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[59] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[59]),
        .Q(xgmii_txd_reg2[59]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[5]),
        .Q(xgmii_txd_reg2[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[60] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[60]),
        .Q(xgmii_txd_reg2[60]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[61] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[61]),
        .Q(xgmii_txd_reg2[61]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[62] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[62]),
        .Q(xgmii_txd_reg2[62]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[63] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[63]),
        .Q(xgmii_txd_reg2[63]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[6]),
        .Q(xgmii_txd_reg2[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[7]),
        .Q(xgmii_txd_reg2[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[8]),
        .Q(xgmii_txd_reg2[8]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[9]),
        .Q(xgmii_txd_reg2[9]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[0]),
        .Q(xgmii_txd_reg[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[10]),
        .Q(xgmii_txd_reg[10]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[11]),
        .Q(xgmii_txd_reg[11]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[12]),
        .Q(xgmii_txd_reg[12]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[13]),
        .Q(xgmii_txd_reg[13]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[14]),
        .Q(xgmii_txd_reg[14]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[15]),
        .Q(xgmii_txd_reg[15]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[16] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[16]),
        .Q(xgmii_txd_reg[16]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[17] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[17]),
        .Q(xgmii_txd_reg[17]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[18] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[18]),
        .Q(xgmii_txd_reg[18]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[19] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[19]),
        .Q(xgmii_txd_reg[19]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[1]),
        .Q(xgmii_txd_reg[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[20] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[20]),
        .Q(xgmii_txd_reg[20]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[21] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[21]),
        .Q(xgmii_txd_reg[21]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[22] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[22]),
        .Q(xgmii_txd_reg[22]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[23] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[23]),
        .Q(xgmii_txd_reg[23]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[24] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[24]),
        .Q(xgmii_txd_reg[24]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[25] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[25]),
        .Q(xgmii_txd_reg[25]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[26] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[26]),
        .Q(xgmii_txd_reg[26]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[27] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[27]),
        .Q(xgmii_txd_reg[27]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[28] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[28]),
        .Q(xgmii_txd_reg[28]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[29] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[29]),
        .Q(xgmii_txd_reg[29]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[2]),
        .Q(xgmii_txd_reg[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[30] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[30]),
        .Q(xgmii_txd_reg[30]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[31] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[31]),
        .Q(xgmii_txd_reg[31]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[32] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[32]),
        .Q(xgmii_txd_reg[32]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[33] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[33]),
        .Q(xgmii_txd_reg[33]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[34] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[34]),
        .Q(xgmii_txd_reg[34]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[35] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[35]),
        .Q(xgmii_txd_reg[35]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[36] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[36]),
        .Q(xgmii_txd_reg[36]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[37] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[37]),
        .Q(xgmii_txd_reg[37]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[38] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[38]),
        .Q(xgmii_txd_reg[38]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[39] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[39]),
        .Q(xgmii_txd_reg[39]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[3]),
        .Q(xgmii_txd_reg[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[40] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[40]),
        .Q(xgmii_txd_reg[40]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[41] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[41]),
        .Q(xgmii_txd_reg[41]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[42] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[42]),
        .Q(xgmii_txd_reg[42]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[43] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[43]),
        .Q(xgmii_txd_reg[43]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[44] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[44]),
        .Q(xgmii_txd_reg[44]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[45] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[45]),
        .Q(xgmii_txd_reg[45]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[46] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[46]),
        .Q(xgmii_txd_reg[46]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[47] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[47]),
        .Q(xgmii_txd_reg[47]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[48] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[48]),
        .Q(xgmii_txd_reg[48]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[49] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[49]),
        .Q(xgmii_txd_reg[49]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[4]),
        .Q(xgmii_txd_reg[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[50] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[50]),
        .Q(xgmii_txd_reg[50]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[51] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[51]),
        .Q(xgmii_txd_reg[51]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[52] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[52]),
        .Q(xgmii_txd_reg[52]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[53] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[53]),
        .Q(xgmii_txd_reg[53]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[54] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[54]),
        .Q(xgmii_txd_reg[54]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[55] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[55]),
        .Q(xgmii_txd_reg[55]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[56] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[56]),
        .Q(xgmii_txd_reg[56]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[57] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[57]),
        .Q(xgmii_txd_reg[57]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[58] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[58]),
        .Q(xgmii_txd_reg[58]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[59] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[59]),
        .Q(xgmii_txd_reg[59]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[5]),
        .Q(xgmii_txd_reg[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[60] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[60]),
        .Q(xgmii_txd_reg[60]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[61] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[61]),
        .Q(xgmii_txd_reg[61]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[62] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[62]),
        .Q(xgmii_txd_reg[62]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[63] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[63]),
        .Q(xgmii_txd_reg[63]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[6]),
        .Q(xgmii_txd_reg[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[7]),
        .Q(xgmii_txd_reg[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[8]),
        .Q(xgmii_txd_reg[8]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[9]),
        .Q(xgmii_txd_reg[9]),
        .R(1'b0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_coherent_resyncs_en
   (out,
    rxusrclk2,
    configuration_vector);
  output [15:0]out;
  input rxusrclk2;
  input [15:0]configuration_vector;

  wire [1:0]comp_res;
  wire \comp_res[0]_i_2_n_0 ;
  wire \comp_res[0]_i_3_n_0 ;
  wire \comp_res[0]_i_4_n_0 ;
  wire \comp_res[0]_i_5_n_0 ;
  wire \comp_res[0]_i_6_n_0 ;
  wire \comp_res[0]_i_7_n_0 ;
  wire [15:0]configuration_vector;
  (* RTL_KEEP = "true" *) wire [15:0]d4;
  (* RTL_KEEP = "true" *) wire [15:0]d5;
  (* RTL_KEEP = "true" *) wire [15:0]outreg;
  wire \outreg[15]_i_1_n_0 ;
  wire rxusrclk2;
  wire stable;

  assign out[15:0] = outreg;
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \comp_res[0]_i_1 
       (.I0(\comp_res[0]_i_2_n_0 ),
        .I1(\comp_res[0]_i_3_n_0 ),
        .I2(\comp_res[0]_i_4_n_0 ),
        .I3(\comp_res[0]_i_5_n_0 ),
        .I4(\comp_res[0]_i_6_n_0 ),
        .I5(\comp_res[0]_i_7_n_0 ),
        .O(stable));
  LUT2 #(
    .INIT(4'h6)) 
    \comp_res[0]_i_2 
       (.I0(d4[15]),
        .I1(d5[15]),
        .O(\comp_res[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \comp_res[0]_i_3 
       (.I0(d5[6]),
        .I1(d4[6]),
        .I2(d4[7]),
        .I3(d5[7]),
        .I4(d4[8]),
        .I5(d5[8]),
        .O(\comp_res[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \comp_res[0]_i_4 
       (.I0(d5[9]),
        .I1(d4[9]),
        .I2(d4[10]),
        .I3(d5[10]),
        .I4(d4[11]),
        .I5(d5[11]),
        .O(\comp_res[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \comp_res[0]_i_5 
       (.I0(d5[0]),
        .I1(d4[0]),
        .I2(d4[1]),
        .I3(d5[1]),
        .I4(d4[2]),
        .I5(d5[2]),
        .O(\comp_res[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \comp_res[0]_i_6 
       (.I0(d5[3]),
        .I1(d4[3]),
        .I2(d4[4]),
        .I3(d5[4]),
        .I4(d4[5]),
        .I5(d5[5]),
        .O(\comp_res[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \comp_res[0]_i_7 
       (.I0(d5[12]),
        .I1(d4[12]),
        .I2(d4[14]),
        .I3(d5[14]),
        .I4(d4[13]),
        .I5(d5[13]),
        .O(\comp_res[0]_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \comp_res_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(stable),
        .Q(comp_res[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \comp_res_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(comp_res[0]),
        .Q(comp_res[1]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d4[0]),
        .Q(d5[0]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[10] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d4[10]),
        .Q(d5[10]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[11] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d4[11]),
        .Q(d5[11]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[12] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d4[12]),
        .Q(d5[12]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[13] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d4[13]),
        .Q(d5[13]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[14] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d4[14]),
        .Q(d5[14]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[15] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d4[15]),
        .Q(d5[15]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d4[1]),
        .Q(d5[1]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[2] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d4[2]),
        .Q(d5[2]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[3] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d4[3]),
        .Q(d5[3]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[4] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d4[4]),
        .Q(d5[4]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[5] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d4[5]),
        .Q(d5[5]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[6] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d4[6]),
        .Q(d5[6]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[7] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d4[7]),
        .Q(d5[7]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[8] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d4[8]),
        .Q(d5[8]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[9] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d4[9]),
        .Q(d5[9]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    \outreg[15]_i_1 
       (.I0(comp_res[1]),
        .I1(comp_res[0]),
        .O(\outreg[15]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[0] 
       (.C(rxusrclk2),
        .CE(\outreg[15]_i_1_n_0 ),
        .D(d5[0]),
        .Q(outreg[0]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[10] 
       (.C(rxusrclk2),
        .CE(\outreg[15]_i_1_n_0 ),
        .D(d5[10]),
        .Q(outreg[10]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[11] 
       (.C(rxusrclk2),
        .CE(\outreg[15]_i_1_n_0 ),
        .D(d5[11]),
        .Q(outreg[11]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[12] 
       (.C(rxusrclk2),
        .CE(\outreg[15]_i_1_n_0 ),
        .D(d5[12]),
        .Q(outreg[12]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[13] 
       (.C(rxusrclk2),
        .CE(\outreg[15]_i_1_n_0 ),
        .D(d5[13]),
        .Q(outreg[13]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[14] 
       (.C(rxusrclk2),
        .CE(\outreg[15]_i_1_n_0 ),
        .D(d5[14]),
        .Q(outreg[14]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[15] 
       (.C(rxusrclk2),
        .CE(\outreg[15]_i_1_n_0 ),
        .D(d5[15]),
        .Q(outreg[15]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[1] 
       (.C(rxusrclk2),
        .CE(\outreg[15]_i_1_n_0 ),
        .D(d5[1]),
        .Q(outreg[1]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[2] 
       (.C(rxusrclk2),
        .CE(\outreg[15]_i_1_n_0 ),
        .D(d5[2]),
        .Q(outreg[2]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[3] 
       (.C(rxusrclk2),
        .CE(\outreg[15]_i_1_n_0 ),
        .D(d5[3]),
        .Q(outreg[3]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[4] 
       (.C(rxusrclk2),
        .CE(\outreg[15]_i_1_n_0 ),
        .D(d5[4]),
        .Q(outreg[4]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[5] 
       (.C(rxusrclk2),
        .CE(\outreg[15]_i_1_n_0 ),
        .D(d5[5]),
        .Q(outreg[5]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[6] 
       (.C(rxusrclk2),
        .CE(\outreg[15]_i_1_n_0 ),
        .D(d5[6]),
        .Q(outreg[6]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[7] 
       (.C(rxusrclk2),
        .CE(\outreg[15]_i_1_n_0 ),
        .D(d5[7]),
        .Q(outreg[7]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[8] 
       (.C(rxusrclk2),
        .CE(\outreg[15]_i_1_n_0 ),
        .D(d5[8]),
        .Q(outreg[8]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[9] 
       (.C(rxusrclk2),
        .CE(\outreg[15]_i_1_n_0 ),
        .D(d5[9]),
        .Q(outreg[9]),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__2 \resynch[0].synchc_inst 
       (.clk(rxusrclk2),
        .d(configuration_vector[0]),
        .en(1'b1),
        .q(d4[0]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__12 \resynch[10].synchc_inst 
       (.clk(rxusrclk2),
        .d(configuration_vector[10]),
        .en(1'b1),
        .q(d4[10]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__13 \resynch[11].synchc_inst 
       (.clk(rxusrclk2),
        .d(configuration_vector[11]),
        .en(1'b1),
        .q(d4[11]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__14 \resynch[12].synchc_inst 
       (.clk(rxusrclk2),
        .d(configuration_vector[12]),
        .en(1'b1),
        .q(d4[12]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__15 \resynch[13].synchc_inst 
       (.clk(rxusrclk2),
        .d(configuration_vector[13]),
        .en(1'b1),
        .q(d4[13]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__16 \resynch[14].synchc_inst 
       (.clk(rxusrclk2),
        .d(configuration_vector[14]),
        .en(1'b1),
        .q(d4[14]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__17 \resynch[15].synchc_inst 
       (.clk(rxusrclk2),
        .d(configuration_vector[15]),
        .en(1'b1),
        .q(d4[15]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__3 \resynch[1].synchc_inst 
       (.clk(rxusrclk2),
        .d(configuration_vector[1]),
        .en(1'b1),
        .q(d4[1]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__4 \resynch[2].synchc_inst 
       (.clk(rxusrclk2),
        .d(configuration_vector[2]),
        .en(1'b1),
        .q(d4[2]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__5 \resynch[3].synchc_inst 
       (.clk(rxusrclk2),
        .d(configuration_vector[3]),
        .en(1'b1),
        .q(d4[3]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__6 \resynch[4].synchc_inst 
       (.clk(rxusrclk2),
        .d(configuration_vector[4]),
        .en(1'b1),
        .q(d4[4]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__7 \resynch[5].synchc_inst 
       (.clk(rxusrclk2),
        .d(configuration_vector[5]),
        .en(1'b1),
        .q(d4[5]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__8 \resynch[6].synchc_inst 
       (.clk(rxusrclk2),
        .d(configuration_vector[6]),
        .en(1'b1),
        .q(d4[6]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__9 \resynch[7].synchc_inst 
       (.clk(rxusrclk2),
        .d(configuration_vector[7]),
        .en(1'b1),
        .q(d4[7]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__10 \resynch[8].synchc_inst 
       (.clk(rxusrclk2),
        .d(configuration_vector[8]),
        .en(1'b1),
        .q(d4[8]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__11 \resynch[9].synchc_inst 
       (.clk(rxusrclk2),
        .d(configuration_vector[9]),
        .en(1'b1),
        .q(d4[9]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_coherent_resyncs_en" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_coherent_resyncs_en__parameterized0
   (clear_rx_prbs_err_count_reg,
    clear_rx_prbs_err_count0,
    rxusrclk2,
    configuration_vector,
    out,
    pcs_rxreset_int,
    rxreset_rxusrclk2,
    q);
  output [3:0]clear_rx_prbs_err_count_reg;
  output clear_rx_prbs_err_count0;
  input rxusrclk2;
  input [2:0]configuration_vector;
  input out;
  input pcs_rxreset_int;
  input rxreset_rxusrclk2;
  input q;

  wire clear_rx_prbs_err_count0;
  wire [1:0]comp_res;
  wire \comp_res[0]_i_2__0_n_0 ;
  wire [2:0]configuration_vector;
  (* RTL_KEEP = "true" *) wire [3:0]d4;
  (* RTL_KEEP = "true" *) wire [3:0]d5;
  wire out;
  (* RTL_KEEP = "true" *) wire [3:0]outreg;
  wire \outreg[3]_i_1_n_0 ;
  wire pcs_rxreset_int;
  wire q;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;
  wire stable;

  assign clear_rx_prbs_err_count_reg[3:0] = outreg;
  LUT5 #(
    .INIT(32'h00100000)) 
    clear_rx_prbs_err_count_i_1
       (.I0(pcs_rxreset_int),
        .I1(rxreset_rxusrclk2),
        .I2(q),
        .I3(outreg[2]),
        .I4(outreg[3]),
        .O(clear_rx_prbs_err_count0));
  LUT5 #(
    .INIT(32'h00009009)) 
    \comp_res[0]_i_1__0 
       (.I0(d5[0]),
        .I1(d4[0]),
        .I2(d5[1]),
        .I3(d4[1]),
        .I4(\comp_res[0]_i_2__0_n_0 ),
        .O(stable));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \comp_res[0]_i_2__0 
       (.I0(d4[2]),
        .I1(d5[2]),
        .I2(d4[3]),
        .I3(d5[3]),
        .O(\comp_res[0]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \comp_res_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(stable),
        .Q(comp_res[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \comp_res_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(comp_res[0]),
        .Q(comp_res[1]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d4[0]),
        .Q(d5[0]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d4[1]),
        .Q(d5[1]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[2] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d4[2]),
        .Q(d5[2]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[3] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d4[3]),
        .Q(d5[3]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    \outreg[3]_i_1 
       (.I0(comp_res[1]),
        .I1(comp_res[0]),
        .O(\outreg[3]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[0] 
       (.C(rxusrclk2),
        .CE(\outreg[3]_i_1_n_0 ),
        .D(d5[0]),
        .Q(outreg[0]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[1] 
       (.C(rxusrclk2),
        .CE(\outreg[3]_i_1_n_0 ),
        .D(d5[1]),
        .Q(outreg[1]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[2] 
       (.C(rxusrclk2),
        .CE(\outreg[3]_i_1_n_0 ),
        .D(d5[2]),
        .Q(outreg[2]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[3] 
       (.C(rxusrclk2),
        .CE(\outreg[3]_i_1_n_0 ),
        .D(d5[3]),
        .Q(outreg[3]),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__18 \resynch[0].synchc_inst 
       (.clk(rxusrclk2),
        .d(configuration_vector[0]),
        .en(1'b1),
        .q(d4[0]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__19 \resynch[1].synchc_inst 
       (.clk(rxusrclk2),
        .d(configuration_vector[1]),
        .en(1'b1),
        .q(d4[1]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__20 \resynch[2].synchc_inst 
       (.clk(rxusrclk2),
        .d(configuration_vector[2]),
        .en(1'b1),
        .q(d4[2]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__21 \resynch[3].synchc_inst 
       (.clk(rxusrclk2),
        .d(out),
        .en(1'b1),
        .q(d4[3]));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_common_ieee_registers
   (status_vector,
    reset_local_reg,
    SR,
    \pcs_test_pattern_error_count_reg[15] ,
    core_status,
    coreclk,
    q_reg,
    q_reg_0,
    configuration_vector,
    q_reg_1,
    pma_pmd_reset_clear_core_intr,
    resetdone,
    pcs_reset_clear_core_intr,
    rxdatavalid_reg,
    signal_detect_sync,
    reset,
    D,
    \pcs_ber_count_reg[5] ,
    Q);
  output [40:0]status_vector;
  output reset_local_reg;
  output [0:0]SR;
  output [0:0]\pcs_test_pattern_error_count_reg[15] ;
  input [0:0]core_status;
  input coreclk;
  input q_reg;
  input q_reg_0;
  input [6:0]configuration_vector;
  input q_reg_1;
  input pma_pmd_reset_clear_core_intr;
  input resetdone;
  input pcs_reset_clear_core_intr;
  input rxdatavalid_reg;
  input signal_detect_sync;
  input reset;
  input [7:0]D;
  input [5:0]\pcs_ber_count_reg[5] ;
  input [15:0]Q;

  wire [7:0]D;
  wire [15:0]Q;
  wire [0:0]SR;
  wire [6:0]configuration_vector;
  wire [0:0]core_status;
  wire coreclk;
  wire [5:0]\pcs_ber_count_reg[5] ;
  wire pcs_reset_clear_core_intr;
  wire [0:0]\pcs_test_pattern_error_count_reg[15] ;
  wire pma_pmd_reset_clear_core_intr;
  wire q_reg;
  wire q_reg_0;
  wire q_reg_1;
  wire re_prev;
  wire re_prev_0;
  wire re_prev_1;
  wire reg_3_0_15_n_1;
  wire reg_3_0_15_n_4;
  wire reg_3_0_15_n_5;
  wire reg_3_32_1_n_1;
  wire reset;
  wire reset_local_reg;
  wire resetdone;
  wire rxdatavalid_reg;
  wire signal_detect_sync;
  wire [40:0]status_vector;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_register reg_1_0_15
       (.configuration_vector(configuration_vector[0]),
        .coreclk(coreclk),
        .pma_pmd_reset_clear_core_intr(pma_pmd_reset_clear_core_intr),
        .resetdone(resetdone),
        .status_vector(status_vector[0]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_register__parameterized11 reg_1_10_0
       (.coreclk(coreclk),
        .q_reg(q_reg_1),
        .status_vector(status_vector[2]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_register__parameterized0 reg_1_1_2
       (.configuration_vector(configuration_vector[2]),
        .coreclk(coreclk),
        .\q_reg[0]_0 (status_vector[0]),
        .reset(reset),
        .signal_detect_sync(signal_detect_sync),
        .status_vector(status_vector[1]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_register_67 reg_3_0_15
       (.SR(SR),
        .configuration_vector({configuration_vector[6:4],configuration_vector[1]}),
        .coreclk(coreclk),
        .pcs_reset_clear_core_intr(pcs_reset_clear_core_intr),
        .\pcs_test_pattern_error_count_reg[15] (\pcs_test_pattern_error_count_reg[15] ),
        .q_reg(q_reg_0),
        .\q_reg[0]_0 (reg_3_0_15_n_1),
        .\q_reg[0]_1 (reg_3_0_15_n_4),
        .\q_reg[15] (reg_3_0_15_n_5),
        .re_prev(re_prev_1),
        .re_prev_0(re_prev),
        .re_prev_1(re_prev_0),
        .reset(reset),
        .reset_local_reg(reset_local_reg),
        .rxdatavalid_reg(rxdatavalid_reg),
        .status_vector(status_vector[5]),
        .\status_vector[223] (status_vector[3]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_register__parameterized3 reg_3_1_2
       (.configuration_vector(configuration_vector[3]),
        .coreclk(coreclk),
        .\q_reg[0]_0 (status_vector[8]),
        .\q_reg[0]_1 (reset_local_reg),
        .reset(reset),
        .status_vector(status_vector[4]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_register__parameterized14 reg_3_32_0
       (.core_status(core_status),
        .coreclk(coreclk),
        .data_out_reg(status_vector[3]),
        .status_vector(status_vector[6]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_register__parameterized13 reg_3_32_1
       (.configuration_vector(configuration_vector[5]),
        .coreclk(coreclk),
        .data_out_reg(status_vector[3]),
        .q_reg(q_reg),
        .\q_reg[0]_0 (reg_3_32_1_n_1),
        .\q_reg[0]_1 (reset_local_reg),
        .\q_reg[0]_2 (status_vector[23]),
        .re_prev(re_prev),
        .reset(reset),
        .status_vector(status_vector[7]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_register__parameterized12 reg_3_32_12
       (.coreclk(coreclk),
        .data_out_reg(status_vector[3]),
        .q_reg(q_reg_0),
        .status_vector(status_vector[8]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_register__parameterized8 reg_3_33_13_8
       (.SR(reg_3_0_15_n_4),
        .coreclk(coreclk),
        .\pcs_ber_count_reg[5] (\pcs_ber_count_reg[5] ),
        .status_vector(status_vector[22:17]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_register__parameterized7 reg_3_33_14
       (.coreclk(coreclk),
        .\q_reg[0]_0 (reg_3_32_1_n_1),
        .status_vector(status_vector[23]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_register__parameterized6 reg_3_33_15
       (.configuration_vector(configuration_vector[5]),
        .coreclk(coreclk),
        .\q_reg[0]_0 (status_vector[6]),
        .\q_reg[0]_1 (reset_local_reg),
        .re_prev(re_prev),
        .reset(reset),
        .status_vector(status_vector[24]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_register__parameterized9 reg_3_33_7_0
       (.D(D),
        .SR(reg_3_0_15_n_4),
        .coreclk(coreclk),
        .status_vector(status_vector[16:9]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_register__parameterized10 reg_3_43_all
       (.Q(Q),
        .SR(reg_3_0_15_n_5),
        .configuration_vector(configuration_vector[6]),
        .coreclk(coreclk),
        .re_prev(re_prev_0),
        .status_vector(status_vector[40:25]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_register__parameterized5 reg_3_8_10
       (.coreclk(coreclk),
        .q_reg(reg_3_0_15_n_1),
        .status_vector(status_vector[5]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_register__parameterized4 reg_3_8_11
       (.configuration_vector(configuration_vector[4]),
        .coreclk(coreclk),
        .re_prev(re_prev_1));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_cs_ipif_access
   (read_addr,
    prbs31_rx_enable_core_int,
    out,
    D,
    \FSM_sequential_state_reg[1]_0 ,
    reset,
    coreclk,
    drp_ack,
    configuration_vector,
    Q,
    \pcs_test_pattern_error_count_reg[15] );
  output [0:0]read_addr;
  output prbs31_rx_enable_core_int;
  output [1:0]out;
  output [15:0]D;
  output [0:0]\FSM_sequential_state_reg[1]_0 ;
  input reset;
  input coreclk;
  input drp_ack;
  input [1:0]configuration_vector;
  input [15:0]Q;
  input [15:0]\pcs_test_pattern_error_count_reg[15] ;

  wire [15:0]D;
  wire \FSM_sequential_state[0]_i_1_n_0 ;
  wire [0:0]\FSM_sequential_state_reg[1]_0 ;
  wire [15:0]Q;
  wire [1:0]configuration_vector;
  wire coreclk;
  wire drp_ack;
  wire [15:0]mgmt_rddata;
  (* RTL_KEEP = "yes" *) wire [1:0]out;
  wire [15:0]\pcs_test_pattern_error_count_reg[15] ;
  wire [15:0]prbs31_err_count;
  wire \prbs31_err_count[15]_i_1_n_0 ;
  wire prbs31_rx_enable_core_int;
  wire [0:0]read_addr;
  wire reset;

  LUT4 #(
    .INIT(16'h00E2)) 
    \FSM_sequential_state[0]_i_1 
       (.I0(read_addr),
        .I1(out[1]),
        .I2(drp_ack),
        .I3(out[0]),
        .O(\FSM_sequential_state[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_state[1]_i_1 
       (.I0(out[0]),
        .I1(out[1]),
        .O(\FSM_sequential_state_reg[1]_0 ));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_state_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\FSM_sequential_state[0]_i_1_n_0 ),
        .Q(out[0]),
        .R(reset));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_state_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\FSM_sequential_state_reg[1]_0 ),
        .Q(out[1]),
        .R(reset));
  LUT3 #(
    .INIT(8'h60)) 
    \prbs31_err_count[0]_i_1 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(Q[0]),
        .O(mgmt_rddata[0]));
  LUT3 #(
    .INIT(8'h60)) 
    \prbs31_err_count[10]_i_1 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(Q[10]),
        .O(mgmt_rddata[10]));
  LUT3 #(
    .INIT(8'h60)) 
    \prbs31_err_count[11]_i_1 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(Q[11]),
        .O(mgmt_rddata[11]));
  LUT3 #(
    .INIT(8'h60)) 
    \prbs31_err_count[12]_i_1 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(Q[12]),
        .O(mgmt_rddata[12]));
  LUT3 #(
    .INIT(8'h60)) 
    \prbs31_err_count[13]_i_1 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(Q[13]),
        .O(mgmt_rddata[13]));
  LUT3 #(
    .INIT(8'h60)) 
    \prbs31_err_count[14]_i_1 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(Q[14]),
        .O(mgmt_rddata[14]));
  LUT6 #(
    .INIT(64'h0000080008000000)) 
    \prbs31_err_count[15]_i_1 
       (.I0(drp_ack),
        .I1(configuration_vector[1]),
        .I2(configuration_vector[0]),
        .I3(read_addr),
        .I4(out[0]),
        .I5(out[1]),
        .O(\prbs31_err_count[15]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h60)) 
    \prbs31_err_count[15]_i_2 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(Q[15]),
        .O(mgmt_rddata[15]));
  LUT3 #(
    .INIT(8'h60)) 
    \prbs31_err_count[1]_i_1 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(Q[1]),
        .O(mgmt_rddata[1]));
  LUT3 #(
    .INIT(8'h60)) 
    \prbs31_err_count[2]_i_1 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(Q[2]),
        .O(mgmt_rddata[2]));
  LUT3 #(
    .INIT(8'h60)) 
    \prbs31_err_count[3]_i_1 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(Q[3]),
        .O(mgmt_rddata[3]));
  LUT3 #(
    .INIT(8'h60)) 
    \prbs31_err_count[4]_i_1 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(Q[4]),
        .O(mgmt_rddata[4]));
  LUT3 #(
    .INIT(8'h60)) 
    \prbs31_err_count[5]_i_1 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(Q[5]),
        .O(mgmt_rddata[5]));
  LUT3 #(
    .INIT(8'h60)) 
    \prbs31_err_count[6]_i_1 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(Q[6]),
        .O(mgmt_rddata[6]));
  LUT3 #(
    .INIT(8'h60)) 
    \prbs31_err_count[7]_i_1 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(Q[7]),
        .O(mgmt_rddata[7]));
  LUT3 #(
    .INIT(8'h60)) 
    \prbs31_err_count[8]_i_1 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(Q[8]),
        .O(mgmt_rddata[8]));
  LUT3 #(
    .INIT(8'h60)) 
    \prbs31_err_count[9]_i_1 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(Q[9]),
        .O(mgmt_rddata[9]));
  FDRE \prbs31_err_count_reg[0] 
       (.C(coreclk),
        .CE(\prbs31_err_count[15]_i_1_n_0 ),
        .D(mgmt_rddata[0]),
        .Q(prbs31_err_count[0]),
        .R(reset));
  FDRE \prbs31_err_count_reg[10] 
       (.C(coreclk),
        .CE(\prbs31_err_count[15]_i_1_n_0 ),
        .D(mgmt_rddata[10]),
        .Q(prbs31_err_count[10]),
        .R(reset));
  FDRE \prbs31_err_count_reg[11] 
       (.C(coreclk),
        .CE(\prbs31_err_count[15]_i_1_n_0 ),
        .D(mgmt_rddata[11]),
        .Q(prbs31_err_count[11]),
        .R(reset));
  FDRE \prbs31_err_count_reg[12] 
       (.C(coreclk),
        .CE(\prbs31_err_count[15]_i_1_n_0 ),
        .D(mgmt_rddata[12]),
        .Q(prbs31_err_count[12]),
        .R(reset));
  FDRE \prbs31_err_count_reg[13] 
       (.C(coreclk),
        .CE(\prbs31_err_count[15]_i_1_n_0 ),
        .D(mgmt_rddata[13]),
        .Q(prbs31_err_count[13]),
        .R(reset));
  FDRE \prbs31_err_count_reg[14] 
       (.C(coreclk),
        .CE(\prbs31_err_count[15]_i_1_n_0 ),
        .D(mgmt_rddata[14]),
        .Q(prbs31_err_count[14]),
        .R(reset));
  FDRE \prbs31_err_count_reg[15] 
       (.C(coreclk),
        .CE(\prbs31_err_count[15]_i_1_n_0 ),
        .D(mgmt_rddata[15]),
        .Q(prbs31_err_count[15]),
        .R(reset));
  FDRE \prbs31_err_count_reg[1] 
       (.C(coreclk),
        .CE(\prbs31_err_count[15]_i_1_n_0 ),
        .D(mgmt_rddata[1]),
        .Q(prbs31_err_count[1]),
        .R(reset));
  FDRE \prbs31_err_count_reg[2] 
       (.C(coreclk),
        .CE(\prbs31_err_count[15]_i_1_n_0 ),
        .D(mgmt_rddata[2]),
        .Q(prbs31_err_count[2]),
        .R(reset));
  FDRE \prbs31_err_count_reg[3] 
       (.C(coreclk),
        .CE(\prbs31_err_count[15]_i_1_n_0 ),
        .D(mgmt_rddata[3]),
        .Q(prbs31_err_count[3]),
        .R(reset));
  FDRE \prbs31_err_count_reg[4] 
       (.C(coreclk),
        .CE(\prbs31_err_count[15]_i_1_n_0 ),
        .D(mgmt_rddata[4]),
        .Q(prbs31_err_count[4]),
        .R(reset));
  FDRE \prbs31_err_count_reg[5] 
       (.C(coreclk),
        .CE(\prbs31_err_count[15]_i_1_n_0 ),
        .D(mgmt_rddata[5]),
        .Q(prbs31_err_count[5]),
        .R(reset));
  FDRE \prbs31_err_count_reg[6] 
       (.C(coreclk),
        .CE(\prbs31_err_count[15]_i_1_n_0 ),
        .D(mgmt_rddata[6]),
        .Q(prbs31_err_count[6]),
        .R(reset));
  FDRE \prbs31_err_count_reg[7] 
       (.C(coreclk),
        .CE(\prbs31_err_count[15]_i_1_n_0 ),
        .D(mgmt_rddata[7]),
        .Q(prbs31_err_count[7]),
        .R(reset));
  FDRE \prbs31_err_count_reg[8] 
       (.C(coreclk),
        .CE(\prbs31_err_count[15]_i_1_n_0 ),
        .D(mgmt_rddata[8]),
        .Q(prbs31_err_count[8]),
        .R(reset));
  FDRE \prbs31_err_count_reg[9] 
       (.C(coreclk),
        .CE(\prbs31_err_count[15]_i_1_n_0 ),
        .D(mgmt_rddata[9]),
        .Q(prbs31_err_count[9]),
        .R(reset));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT2 #(
    .INIT(4'h2)) 
    prbs31_rx_enable_core_regb_i_1
       (.I0(configuration_vector[1]),
        .I1(configuration_vector[0]),
        .O(prbs31_rx_enable_core_int));
  LUT4 #(
    .INIT(16'hFB08)) 
    \prbs_err_count[0]_i_1 
       (.I0(prbs31_err_count[0]),
        .I1(configuration_vector[1]),
        .I2(configuration_vector[0]),
        .I3(\pcs_test_pattern_error_count_reg[15] [0]),
        .O(D[0]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \prbs_err_count[10]_i_1 
       (.I0(prbs31_err_count[10]),
        .I1(configuration_vector[1]),
        .I2(configuration_vector[0]),
        .I3(\pcs_test_pattern_error_count_reg[15] [10]),
        .O(D[10]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \prbs_err_count[11]_i_1 
       (.I0(prbs31_err_count[11]),
        .I1(configuration_vector[1]),
        .I2(configuration_vector[0]),
        .I3(\pcs_test_pattern_error_count_reg[15] [11]),
        .O(D[11]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \prbs_err_count[12]_i_1 
       (.I0(prbs31_err_count[12]),
        .I1(configuration_vector[1]),
        .I2(configuration_vector[0]),
        .I3(\pcs_test_pattern_error_count_reg[15] [12]),
        .O(D[12]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \prbs_err_count[13]_i_1 
       (.I0(prbs31_err_count[13]),
        .I1(configuration_vector[1]),
        .I2(configuration_vector[0]),
        .I3(\pcs_test_pattern_error_count_reg[15] [13]),
        .O(D[13]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \prbs_err_count[14]_i_1 
       (.I0(prbs31_err_count[14]),
        .I1(configuration_vector[1]),
        .I2(configuration_vector[0]),
        .I3(\pcs_test_pattern_error_count_reg[15] [14]),
        .O(D[14]));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \prbs_err_count[15]_i_1 
       (.I0(prbs31_err_count[15]),
        .I1(configuration_vector[1]),
        .I2(configuration_vector[0]),
        .I3(\pcs_test_pattern_error_count_reg[15] [15]),
        .O(D[15]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \prbs_err_count[1]_i_1 
       (.I0(prbs31_err_count[1]),
        .I1(configuration_vector[1]),
        .I2(configuration_vector[0]),
        .I3(\pcs_test_pattern_error_count_reg[15] [1]),
        .O(D[1]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \prbs_err_count[2]_i_1 
       (.I0(prbs31_err_count[2]),
        .I1(configuration_vector[1]),
        .I2(configuration_vector[0]),
        .I3(\pcs_test_pattern_error_count_reg[15] [2]),
        .O(D[2]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \prbs_err_count[3]_i_1 
       (.I0(prbs31_err_count[3]),
        .I1(configuration_vector[1]),
        .I2(configuration_vector[0]),
        .I3(\pcs_test_pattern_error_count_reg[15] [3]),
        .O(D[3]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \prbs_err_count[4]_i_1 
       (.I0(prbs31_err_count[4]),
        .I1(configuration_vector[1]),
        .I2(configuration_vector[0]),
        .I3(\pcs_test_pattern_error_count_reg[15] [4]),
        .O(D[4]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \prbs_err_count[5]_i_1 
       (.I0(prbs31_err_count[5]),
        .I1(configuration_vector[1]),
        .I2(configuration_vector[0]),
        .I3(\pcs_test_pattern_error_count_reg[15] [5]),
        .O(D[5]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \prbs_err_count[6]_i_1 
       (.I0(prbs31_err_count[6]),
        .I1(configuration_vector[1]),
        .I2(configuration_vector[0]),
        .I3(\pcs_test_pattern_error_count_reg[15] [6]),
        .O(D[6]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \prbs_err_count[7]_i_1 
       (.I0(prbs31_err_count[7]),
        .I1(configuration_vector[1]),
        .I2(configuration_vector[0]),
        .I3(\pcs_test_pattern_error_count_reg[15] [7]),
        .O(D[7]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \prbs_err_count[8]_i_1 
       (.I0(prbs31_err_count[8]),
        .I1(configuration_vector[1]),
        .I2(configuration_vector[0]),
        .I3(\pcs_test_pattern_error_count_reg[15] [8]),
        .O(D[8]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \prbs_err_count[9]_i_1 
       (.I0(prbs31_err_count[9]),
        .I1(configuration_vector[1]),
        .I2(configuration_vector[0]),
        .I3(\pcs_test_pattern_error_count_reg[15] [9]),
        .O(D[9]));
  FDRE \read_addr_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(prbs31_rx_enable_core_int),
        .Q(read_addr),
        .R(reset));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_dp_ram
   (E,
    rd_data,
    wr_clk_en,
    full_int_reg,
    wr_en,
    rd_en,
    rd_clk_en,
    empty_int_reg,
    wr_clk,
    wr_data,
    Q,
    \wr_addr_reg[4] ,
    rd_clk);
  output [0:0]E;
  output [73:0]rd_data;
  input wr_clk_en;
  input full_int_reg;
  input wr_en;
  input rd_en;
  input rd_clk_en;
  input empty_int_reg;
  input wr_clk;
  input [73:0]wr_data;
  input [4:0]Q;
  input [4:0]\wr_addr_reg[4] ;
  input rd_clk;

  wire [0:0]E;
  wire [4:0]Q;
  wire empty_int_reg;
  wire full_int_reg;
  wire rd_clk;
  wire rd_clk_en;
  wire [73:0]rd_data;
  wire \rd_data[73]_i_1_n_0 ;
  wire [73:0]rd_data_unreg;
  wire rd_en;
  wire [4:0]\wr_addr_reg[4] ;
  wire wr_clk;
  wire wr_clk_en;
  wire [73:0]wr_data;
  wire wr_en;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_0_5_DOH_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_12_17_DOH_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_18_23_DOH_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_24_29_DOH_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_30_35_DOC_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_30_35_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_30_35_DOE_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_30_35_DOF_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_30_35_DOG_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_30_35_DOH_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_6_11_DOH_UNCONNECTED;

  LUT3 #(
    .INIT(8'h08)) 
    \rd_data[73]_i_1 
       (.I0(rd_en),
        .I1(rd_clk_en),
        .I2(empty_int_reg),
        .O(\rd_data[73]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[0] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[0]),
        .Q(rd_data[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[10] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[10]),
        .Q(rd_data[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[11] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[11]),
        .Q(rd_data[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[12] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[12]),
        .Q(rd_data[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[13] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[13]),
        .Q(rd_data[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[14] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[14]),
        .Q(rd_data[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[15] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[15]),
        .Q(rd_data[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[16] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[16]),
        .Q(rd_data[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[17] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[17]),
        .Q(rd_data[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[18] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[18]),
        .Q(rd_data[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[19] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[19]),
        .Q(rd_data[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[1] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[1]),
        .Q(rd_data[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[20] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[20]),
        .Q(rd_data[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[21] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[21]),
        .Q(rd_data[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[22] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[22]),
        .Q(rd_data[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[23] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[23]),
        .Q(rd_data[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[24] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[24]),
        .Q(rd_data[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[25] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[25]),
        .Q(rd_data[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[26] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[26]),
        .Q(rd_data[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[27] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[27]),
        .Q(rd_data[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[28] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[28]),
        .Q(rd_data[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[29] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[29]),
        .Q(rd_data[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[2] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[2]),
        .Q(rd_data[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[30] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[30]),
        .Q(rd_data[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[31] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[31]),
        .Q(rd_data[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[32] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[32]),
        .Q(rd_data[32]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[33] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[33]),
        .Q(rd_data[33]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[34] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[34]),
        .Q(rd_data[34]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[35] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[35]),
        .Q(rd_data[35]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[36] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[36]),
        .Q(rd_data[36]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[37] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[37]),
        .Q(rd_data[37]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[38] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[38]),
        .Q(rd_data[38]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[39] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[39]),
        .Q(rd_data[39]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[3] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[3]),
        .Q(rd_data[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[40] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[40]),
        .Q(rd_data[40]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[41] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[41]),
        .Q(rd_data[41]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[42] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[42]),
        .Q(rd_data[42]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[43] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[43]),
        .Q(rd_data[43]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[44] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[44]),
        .Q(rd_data[44]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[45] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[45]),
        .Q(rd_data[45]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[46] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[46]),
        .Q(rd_data[46]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[47] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[47]),
        .Q(rd_data[47]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[48] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[48]),
        .Q(rd_data[48]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[49] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[49]),
        .Q(rd_data[49]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[4] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[4]),
        .Q(rd_data[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[50] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[50]),
        .Q(rd_data[50]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[51] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[51]),
        .Q(rd_data[51]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[52] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[52]),
        .Q(rd_data[52]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[53] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[53]),
        .Q(rd_data[53]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[54] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[54]),
        .Q(rd_data[54]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[55] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[55]),
        .Q(rd_data[55]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[56] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[56]),
        .Q(rd_data[56]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[57] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[57]),
        .Q(rd_data[57]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[58] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[58]),
        .Q(rd_data[58]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[59] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[59]),
        .Q(rd_data[59]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[5] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[5]),
        .Q(rd_data[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[60] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[60]),
        .Q(rd_data[60]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[61] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[61]),
        .Q(rd_data[61]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[62] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[62]),
        .Q(rd_data[62]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[63] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[63]),
        .Q(rd_data[63]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[64] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[64]),
        .Q(rd_data[64]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[65] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[65]),
        .Q(rd_data[65]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[66] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[66]),
        .Q(rd_data[66]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[67] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[67]),
        .Q(rd_data[67]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[68] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[68]),
        .Q(rd_data[68]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[69] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[69]),
        .Q(rd_data[69]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[6] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[6]),
        .Q(rd_data[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[70] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[70]),
        .Q(rd_data[70]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[71] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[71]),
        .Q(rd_data[71]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[72] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[72]),
        .Q(rd_data[72]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[73] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[73]),
        .Q(rd_data[73]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[7] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[7]),
        .Q(rd_data[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[8] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[8]),
        .Q(rd_data[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[9] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[9]),
        .Q(rd_data[9]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M16 ten_gig_disti_ram_reg_0_31_0_5
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(Q),
        .ADDRE(Q),
        .ADDRF(Q),
        .ADDRG(Q),
        .ADDRH(\wr_addr_reg[4] ),
        .DIA(wr_data[1:0]),
        .DIB(wr_data[3:2]),
        .DIC(wr_data[5:4]),
        .DID(wr_data[7:6]),
        .DIE(wr_data[9:8]),
        .DIF(wr_data[11:10]),
        .DIG(wr_data[13:12]),
        .DIH({1'b0,1'b0}),
        .DOA(rd_data_unreg[1:0]),
        .DOB(rd_data_unreg[3:2]),
        .DOC(rd_data_unreg[5:4]),
        .DOD(rd_data_unreg[7:6]),
        .DOE(rd_data_unreg[9:8]),
        .DOF(rd_data_unreg[11:10]),
        .DOG(rd_data_unreg[13:12]),
        .DOH(NLW_ten_gig_disti_ram_reg_0_31_0_5_DOH_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M16 ten_gig_disti_ram_reg_0_31_12_17
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(Q),
        .ADDRE(Q),
        .ADDRF(Q),
        .ADDRG(Q),
        .ADDRH(\wr_addr_reg[4] ),
        .DIA(wr_data[29:28]),
        .DIB(wr_data[31:30]),
        .DIC(wr_data[33:32]),
        .DID(wr_data[35:34]),
        .DIE(wr_data[37:36]),
        .DIF(wr_data[39:38]),
        .DIG(wr_data[41:40]),
        .DIH({1'b0,1'b0}),
        .DOA(rd_data_unreg[29:28]),
        .DOB(rd_data_unreg[31:30]),
        .DOC(rd_data_unreg[33:32]),
        .DOD(rd_data_unreg[35:34]),
        .DOE(rd_data_unreg[37:36]),
        .DOF(rd_data_unreg[39:38]),
        .DOG(rd_data_unreg[41:40]),
        .DOH(NLW_ten_gig_disti_ram_reg_0_31_12_17_DOH_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M16 ten_gig_disti_ram_reg_0_31_18_23
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(Q),
        .ADDRE(Q),
        .ADDRF(Q),
        .ADDRG(Q),
        .ADDRH(\wr_addr_reg[4] ),
        .DIA(wr_data[43:42]),
        .DIB(wr_data[45:44]),
        .DIC(wr_data[47:46]),
        .DID(wr_data[49:48]),
        .DIE(wr_data[51:50]),
        .DIF(wr_data[53:52]),
        .DIG(wr_data[55:54]),
        .DIH({1'b0,1'b0}),
        .DOA(rd_data_unreg[43:42]),
        .DOB(rd_data_unreg[45:44]),
        .DOC(rd_data_unreg[47:46]),
        .DOD(rd_data_unreg[49:48]),
        .DOE(rd_data_unreg[51:50]),
        .DOF(rd_data_unreg[53:52]),
        .DOG(rd_data_unreg[55:54]),
        .DOH(NLW_ten_gig_disti_ram_reg_0_31_18_23_DOH_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M16 ten_gig_disti_ram_reg_0_31_24_29
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(Q),
        .ADDRE(Q),
        .ADDRF(Q),
        .ADDRG(Q),
        .ADDRH(\wr_addr_reg[4] ),
        .DIA(wr_data[57:56]),
        .DIB(wr_data[59:58]),
        .DIC(wr_data[61:60]),
        .DID(wr_data[63:62]),
        .DIE(wr_data[65:64]),
        .DIF(wr_data[67:66]),
        .DIG(wr_data[69:68]),
        .DIH({1'b0,1'b0}),
        .DOA(rd_data_unreg[57:56]),
        .DOB(rd_data_unreg[59:58]),
        .DOC(rd_data_unreg[61:60]),
        .DOD(rd_data_unreg[63:62]),
        .DOE(rd_data_unreg[65:64]),
        .DOF(rd_data_unreg[67:66]),
        .DOG(rd_data_unreg[69:68]),
        .DOH(NLW_ten_gig_disti_ram_reg_0_31_24_29_DOH_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M16 ten_gig_disti_ram_reg_0_31_30_35
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(Q),
        .ADDRE(Q),
        .ADDRF(Q),
        .ADDRG(Q),
        .ADDRH(\wr_addr_reg[4] ),
        .DIA(wr_data[71:70]),
        .DIB(wr_data[73:72]),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DIE({1'b0,1'b0}),
        .DIF({1'b0,1'b0}),
        .DIG({1'b0,1'b0}),
        .DIH({1'b0,1'b0}),
        .DOA(rd_data_unreg[71:70]),
        .DOB(rd_data_unreg[73:72]),
        .DOC(NLW_ten_gig_disti_ram_reg_0_31_30_35_DOC_UNCONNECTED[1:0]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_30_35_DOD_UNCONNECTED[1:0]),
        .DOE(NLW_ten_gig_disti_ram_reg_0_31_30_35_DOE_UNCONNECTED[1:0]),
        .DOF(NLW_ten_gig_disti_ram_reg_0_31_30_35_DOF_UNCONNECTED[1:0]),
        .DOG(NLW_ten_gig_disti_ram_reg_0_31_30_35_DOG_UNCONNECTED[1:0]),
        .DOH(NLW_ten_gig_disti_ram_reg_0_31_30_35_DOH_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M16 ten_gig_disti_ram_reg_0_31_6_11
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(Q),
        .ADDRE(Q),
        .ADDRF(Q),
        .ADDRG(Q),
        .ADDRH(\wr_addr_reg[4] ),
        .DIA(wr_data[15:14]),
        .DIB(wr_data[17:16]),
        .DIC(wr_data[19:18]),
        .DID(wr_data[21:20]),
        .DIE(wr_data[23:22]),
        .DIF(wr_data[25:24]),
        .DIG(wr_data[27:26]),
        .DIH({1'b0,1'b0}),
        .DOA(rd_data_unreg[15:14]),
        .DOB(rd_data_unreg[17:16]),
        .DOC(rd_data_unreg[19:18]),
        .DOD(rd_data_unreg[21:20]),
        .DOE(rd_data_unreg[23:22]),
        .DOF(rd_data_unreg[25:24]),
        .DOG(rd_data_unreg[27:26]),
        .DOH(NLW_ten_gig_disti_ram_reg_0_31_6_11_DOH_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  LUT3 #(
    .INIT(8'h20)) 
    \wr_addr[4]_i_1 
       (.I0(wr_clk_en),
        .I1(full_int_reg),
        .I2(wr_en),
        .O(E));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_drp_ipif
   (drp_ack,
    drp_den,
    drp_daddr,
    Q,
    drp_req,
    drp_dwe,
    dclk,
    D,
    coreclk,
    drp_drdy,
    dclk_reset,
    mgmt_addr,
    out,
    drp_drpdo,
    drp_gnt);
  output drp_ack;
  output drp_den;
  output [0:0]drp_daddr;
  output [15:0]Q;
  output drp_req;
  output drp_dwe;
  input dclk;
  input [0:0]D;
  input coreclk;
  input drp_drdy;
  input dclk_reset;
  input [0:0]mgmt_addr;
  input [1:0]out;
  input [15:0]drp_drpdo;
  input drp_gnt;

  wire [0:0]D;
  wire [15:0]Q;
  wire coreclk;
  wire dclk;
  wire dclk_reset;
  wire drp_ack;
  wire [0:0]drp_daddr;
  wire drp_den;
  wire drp_drdy;
  wire [15:0]drp_drpdo;
  wire drp_dwe;
  wire drp_gnt;
  wire drp_req;
  wire [8:8]ipif_addr_dclk;
  wire ipif_cs_dclk;
  wire ipif_cs_dclk_reg;
  wire [15:0]ipif_rddata_dclk;
  wire ipif_rddata_dclk0;
  wire ipif_rnw_dclk;
  wire [0:0]mgmt_addr;
  wire [1:0]out;
  wire [8:8]p_1_in;
  wire [1:0]state;
  wire \state[0]_i_1_n_0 ;
  wire \state[1]_i_1_n_0 ;
  wire synch_1_n_1;
  wire synch_1_n_2;

  LUT2 #(
    .INIT(4'h8)) 
    \drp_daddr[8]_INST_0 
       (.I0(state[1]),
        .I1(ipif_addr_dclk),
        .O(drp_daddr));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'h2)) 
    drp_den_INST_0
       (.I0(state[1]),
        .I1(state[0]),
        .O(drp_den));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT3 #(
    .INIT(8'h04)) 
    drp_dwe_INST_0
       (.I0(state[0]),
        .I1(state[1]),
        .I2(ipif_rnw_dclk),
        .O(drp_dwe));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT2 #(
    .INIT(4'hE)) 
    drp_req_INST_0
       (.I0(state[0]),
        .I1(state[1]),
        .O(drp_req));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_addr_dclk_reg[8] 
       (.C(dclk),
        .CE(synch_1_n_1),
        .D(p_1_in),
        .Q(ipif_addr_dclk),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    ipif_cs_dclk_reg_reg
       (.C(dclk),
        .CE(1'b1),
        .D(ipif_cs_dclk),
        .Q(ipif_cs_dclk_reg),
        .R(dclk_reset));
  LUT2 #(
    .INIT(4'h8)) 
    \ipif_rddata_dclk[15]_i_1 
       (.I0(drp_drdy),
        .I1(ipif_rnw_dclk),
        .O(ipif_rddata_dclk0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[0] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[0]),
        .Q(ipif_rddata_dclk[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[10] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[10]),
        .Q(ipif_rddata_dclk[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[11] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[11]),
        .Q(ipif_rddata_dclk[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[12] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[12]),
        .Q(ipif_rddata_dclk[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[13] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[13]),
        .Q(ipif_rddata_dclk[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[14] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[14]),
        .Q(ipif_rddata_dclk[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[15] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[15]),
        .Q(ipif_rddata_dclk[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[1] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[1]),
        .Q(ipif_rddata_dclk[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[2] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[2]),
        .Q(ipif_rddata_dclk[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[3] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[3]),
        .Q(ipif_rddata_dclk[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[4] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[4]),
        .Q(ipif_rddata_dclk[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[5] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[5]),
        .Q(ipif_rddata_dclk[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[6] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[6]),
        .Q(ipif_rddata_dclk[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[7] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[7]),
        .Q(ipif_rddata_dclk[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[8] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[8]),
        .Q(ipif_rddata_dclk[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[9] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[9]),
        .Q(ipif_rddata_dclk[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    ipif_rnw_dclk_reg
       (.C(dclk),
        .CE(synch_1_n_1),
        .D(synch_1_n_2),
        .Q(ipif_rnw_dclk),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h5F5F5F5F30303F30)) 
    \state[0]_i_1 
       (.I0(drp_drdy),
        .I1(drp_gnt),
        .I2(state[0]),
        .I3(ipif_cs_dclk),
        .I4(ipif_cs_dclk_reg),
        .I5(state[1]),
        .O(\state[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT4 #(
    .INIT(16'h74CC)) 
    \state[1]_i_1 
       (.I0(drp_drdy),
        .I1(state[1]),
        .I2(drp_gnt),
        .I3(state[0]),
        .O(\state[1]_i_1_n_0 ));
  FDRE \state_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .D(\state[0]_i_1_n_0 ),
        .Q(state[0]),
        .R(dclk_reset));
  FDRE \state_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .D(\state[1]_i_1_n_0 ),
        .Q(state[1]),
        .R(dclk_reset));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_toggle_synchronizer synch_1
       (.D(D),
        .Q({synch_1_n_2,p_1_in}),
        .coreclk(coreclk),
        .dclk(dclk),
        .\ipif_addr_dclk_reg[8] (synch_1_n_1),
        .ipif_cs_dclk(ipif_cs_dclk),
        .ipif_cs_dclk_reg(ipif_cs_dclk_reg),
        .mgmt_addr(mgmt_addr),
        .out(out));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_toggle_synchronizer__parameterized0 synch_2
       (.Q(ipif_rddata_dclk),
        .coreclk(coreclk),
        .dclk(dclk),
        .drp_ack(drp_ack),
        .drp_drdy(drp_drdy),
        .\prbs31_err_count_reg[15] (Q));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_elastic_buffer
   (xgmii_rxd,
    xgmii_rxc,
    D,
    rxusrclk2,
    out,
    rxreset_rxusrclk2,
    coreclk,
    reset,
    \xgmii_txd_reg2_reg[63] ,
    configuration_vector,
    \xgmii_txc_reg2_reg[7] ,
    \mcp1_rx_ebuff_ctrl_reg[7] );
  output [63:0]xgmii_rxd;
  output [7:0]xgmii_rxc;
  input [63:0]D;
  input rxusrclk2;
  input out;
  input rxreset_rxusrclk2;
  input coreclk;
  input reset;
  input [63:0]\xgmii_txd_reg2_reg[63] ;
  input [0:0]configuration_vector;
  input [7:0]\xgmii_txc_reg2_reg[7] ;
  input [7:0]\mcp1_rx_ebuff_ctrl_reg[7] ;

  wire [63:0]D;
  wire asynch_fifo_i_n_76;
  wire asynch_fifo_i_n_77;
  wire asynch_fifo_i_n_78;
  wire asynch_fifo_i_n_79;
  wire asynch_fifo_i_n_80;
  wire asynch_fifo_i_n_81;
  wire asynch_fifo_i_n_82;
  wire asynch_fifo_i_n_83;
  wire asynch_fifo_i_n_84;
  wire asynch_fifo_i_n_85;
  wire can_insert;
  wire can_insert_rd;
  wire can_insert_synch_n_0;
  wire can_insert_wra;
  wire can_insert_wra2;
  wire can_insert_wra_comb;
  wire can_insert_wra_comb_i_1_n_0;
  wire [0:0]configuration_vector;
  wire coreclk;
  wire empty;
  wire [73:0]fifo_rd_data;
  wire [4:4]fifo_status;
  wire [73:0]fifo_wr_data;
  wire idle_delete_i_n_0;
  wire idle_insert_i_n_0;
  wire [7:0]\mcp1_rx_ebuff_ctrl_reg[7] ;
  wire out;
  wire reset;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;
  wire [7:0]xgmii_rxc;
  wire [63:0]xgmii_rxd;
  wire [7:0]\xgmii_txc_reg2_reg[7] ;
  wire [63:0]\xgmii_txd_reg2_reg[63] ;
  wire NLW_asynch_fifo_i_full_UNCONNECTED;
  wire [3:0]NLW_asynch_fifo_i_status_UNCONNECTED;

  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* WIDTH = "74" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_asynch_fifo asynch_fifo_i
       (.empty(empty),
        .fifo_rd_addr({asynch_fifo_i_n_81,asynch_fifo_i_n_82,asynch_fifo_i_n_83,asynch_fifo_i_n_84,asynch_fifo_i_n_85}),
        .fifo_wr_addr({asynch_fifo_i_n_76,asynch_fifo_i_n_77,asynch_fifo_i_n_78,asynch_fifo_i_n_79,asynch_fifo_i_n_80}),
        .full(NLW_asynch_fifo_i_full_UNCONNECTED),
        .rd_clk(coreclk),
        .rd_clk_en(1'b1),
        .rd_data(fifo_rd_data),
        .rd_en(idle_insert_i_n_0),
        .rd_reset(reset),
        .status({fifo_status,NLW_asynch_fifo_i_status_UNCONNECTED[3:0]}),
        .wr_clk(rxusrclk2),
        .wr_clk_en(out),
        .wr_data(fifo_wr_data),
        .wr_en(idle_delete_i_n_0),
        .wr_reset(rxreset_rxusrclk2));
  FDRE can_insert_rd_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(can_insert_synch_n_0),
        .Q(can_insert_rd),
        .R(reset));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_70 can_insert_synch
       (.can_insert_rd_reg(can_insert_synch_n_0),
        .coreclk(coreclk),
        .in0(can_insert_wra_comb));
  FDRE can_insert_wra2_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(can_insert_wra),
        .Q(can_insert_wra2),
        .R(rxreset_rxusrclk2));
  LUT2 #(
    .INIT(4'hE)) 
    can_insert_wra_comb_i_1
       (.I0(can_insert_wra),
        .I1(can_insert_wra2),
        .O(can_insert_wra_comb_i_1_n_0));
  FDRE can_insert_wra_comb_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(can_insert_wra_comb_i_1_n_0),
        .Q(can_insert_wra_comb),
        .R(rxreset_rxusrclk2));
  LUT1 #(
    .INIT(2'h1)) 
    can_insert_wra_i_1
       (.I0(fifo_status),
        .O(can_insert));
  FDRE can_insert_wra_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(can_insert),
        .Q(can_insert_wra),
        .R(rxreset_rxusrclk2));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_idle_delete idle_delete_i
       (.D(D),
        .\mcp1_rx_ebuff_ctrl_reg[7] (\mcp1_rx_ebuff_ctrl_reg[7] ),
        .out(out),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2),
        .status(fifo_status),
        .wr_data(fifo_wr_data),
        .wr_en(idle_delete_i_n_0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_idle_insert idle_insert_i
       (.can_insert_rd(can_insert_rd),
        .configuration_vector(configuration_vector),
        .coreclk(coreclk),
        .empty(empty),
        .rd_data(fifo_rd_data),
        .rd_en(idle_insert_i_n_0),
        .reset(reset),
        .xgmii_rxc(xgmii_rxc),
        .xgmii_rxd(xgmii_rxd),
        .\xgmii_txc_reg2_reg[7] (\xgmii_txc_reg2_reg[7] ),
        .\xgmii_txd_reg2_reg[63] (\xgmii_txd_reg2_reg[63] ));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_elastic_buffer_wrapper
   (xgmii_rxd,
    xgmii_rxc,
    D,
    rxusrclk2,
    out,
    rxreset_rxusrclk2,
    coreclk,
    reset,
    \xgmii_txd_reg2_reg[63] ,
    configuration_vector,
    \xgmii_txc_reg2_reg[7] ,
    \mcp1_rx_ebuff_ctrl_reg[7] );
  output [63:0]xgmii_rxd;
  output [7:0]xgmii_rxc;
  input [63:0]D;
  input rxusrclk2;
  input out;
  input rxreset_rxusrclk2;
  input coreclk;
  input reset;
  input [63:0]\xgmii_txd_reg2_reg[63] ;
  input [0:0]configuration_vector;
  input [7:0]\xgmii_txc_reg2_reg[7] ;
  input [7:0]\mcp1_rx_ebuff_ctrl_reg[7] ;

  wire [63:0]D;
  wire [0:0]configuration_vector;
  wire coreclk;
  wire [7:0]\mcp1_rx_ebuff_ctrl_reg[7] ;
  wire out;
  wire reset;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;
  wire [7:0]xgmii_rxc;
  wire [63:0]xgmii_rxd;
  wire [7:0]\xgmii_txc_reg2_reg[7] ;
  wire [63:0]\xgmii_txd_reg2_reg[63] ;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_elastic_buffer rx_elastic_buffer_i
       (.D(D),
        .configuration_vector(configuration_vector),
        .coreclk(coreclk),
        .\mcp1_rx_ebuff_ctrl_reg[7] (\mcp1_rx_ebuff_ctrl_reg[7] ),
        .out(out),
        .reset(reset),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2),
        .xgmii_rxc(xgmii_rxc),
        .xgmii_rxd(xgmii_rxd),
        .\xgmii_txc_reg2_reg[7] (\xgmii_txc_reg2_reg[7] ),
        .\xgmii_txd_reg2_reg[63] (\xgmii_txd_reg2_reg[63] ));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_register
   (status_vector,
    coreclk,
    configuration_vector,
    pma_pmd_reset_clear_core_intr,
    resetdone);
  output [0:0]status_vector;
  input coreclk;
  input [0:0]configuration_vector;
  input pma_pmd_reset_clear_core_intr;
  input resetdone;

  wire [0:0]configuration_vector;
  wire coreclk;
  wire pma_pmd_reset_clear_core_intr;
  wire \q[0]_i_1_n_0 ;
  wire resetdone;
  wire [0:0]status_vector;

  LUT4 #(
    .INIT(16'hECEE)) 
    \q[0]_i_1 
       (.I0(status_vector),
        .I1(configuration_vector),
        .I2(pma_pmd_reset_clear_core_intr),
        .I3(resetdone),
        .O(\q[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q[0]_i_1_n_0 ),
        .Q(status_vector),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_g_register" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_register_67
   (reset_local_reg,
    \q_reg[0]_0 ,
    SR,
    \pcs_test_pattern_error_count_reg[15] ,
    \q_reg[0]_1 ,
    \q_reg[15] ,
    \status_vector[223] ,
    coreclk,
    configuration_vector,
    pcs_reset_clear_core_intr,
    rxdatavalid_reg,
    q_reg,
    reset,
    status_vector,
    re_prev,
    re_prev_0,
    re_prev_1);
  output reset_local_reg;
  output \q_reg[0]_0 ;
  output [0:0]SR;
  output [0:0]\pcs_test_pattern_error_count_reg[15] ;
  output [0:0]\q_reg[0]_1 ;
  output [0:0]\q_reg[15] ;
  output \status_vector[223] ;
  input coreclk;
  input [3:0]configuration_vector;
  input pcs_reset_clear_core_intr;
  input rxdatavalid_reg;
  input q_reg;
  input reset;
  input [0:0]status_vector;
  input re_prev;
  input re_prev_0;
  input re_prev_1;

  wire [0:0]SR;
  wire [3:0]configuration_vector;
  wire coreclk;
  wire pcs_reset_clear_core_intr;
  wire [0:0]\pcs_test_pattern_error_count_reg[15] ;
  wire \q[0]_i_1__0_n_0 ;
  wire q_reg;
  wire \q_reg[0]_0 ;
  wire [0:0]\q_reg[0]_1 ;
  wire [0:0]\q_reg[15] ;
  wire re_prev;
  wire re_prev_0;
  wire re_prev_1;
  wire reset;
  wire reset_local_reg;
  wire rxdatavalid_reg;
  wire [0:0]status_vector;
  wire \status_vector[223] ;

  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    clear_test_pattern_err_count_reg_i_1
       (.I0(configuration_vector[3]),
        .I1(reset_local_reg),
        .I2(reset),
        .O(\pcs_test_pattern_error_count_reg[15] ));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \pcs_ber_count[5]_i_1 
       (.I0(configuration_vector[2]),
        .I1(reset_local_reg),
        .I2(reset),
        .O(SR));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT4 #(
    .INIT(16'hECEE)) 
    \q[0]_i_1__0 
       (.I0(reset_local_reg),
        .I1(configuration_vector[0]),
        .I2(pcs_reset_clear_core_intr),
        .I3(rxdatavalid_reg),
        .O(\q[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0301030155550301)) 
    \q[0]_i_1__4 
       (.I0(q_reg),
        .I1(reset_local_reg),
        .I2(reset),
        .I3(status_vector),
        .I4(configuration_vector[1]),
        .I5(re_prev),
        .O(\q_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT4 #(
    .INIT(16'hEFEE)) 
    \q[15]_i_1 
       (.I0(reset_local_reg),
        .I1(reset),
        .I2(re_prev_1),
        .I3(configuration_vector[3]),
        .O(\q_reg[15] ));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT4 #(
    .INIT(16'hEFEE)) 
    \q[5]_i_1 
       (.I0(reset_local_reg),
        .I1(reset),
        .I2(re_prev_0),
        .I3(configuration_vector[2]),
        .O(\q_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q[0]_i_1__0_n_0 ),
        .Q(reset_local_reg),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \status_vector[223]_INST_0 
       (.I0(reset),
        .I1(reset_local_reg),
        .O(\status_vector[223] ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_g_register" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_register__parameterized0
   (status_vector,
    configuration_vector,
    coreclk,
    signal_detect_sync,
    \q_reg[0]_0 ,
    reset);
  output [0:0]status_vector;
  input [0:0]configuration_vector;
  input coreclk;
  input signal_detect_sync;
  input [0:0]\q_reg[0]_0 ;
  input reset;

  wire [0:0]configuration_vector;
  wire coreclk;
  wire \q[0]_i_1__1_n_0 ;
  wire [0:0]\q_reg[0]_0 ;
  wire re_prev;
  wire reset;
  wire signal_detect_sync;
  wire [0:0]status_vector;

  LUT6 #(
    .INIT(64'h0202AA020000AA00)) 
    \q[0]_i_1__1 
       (.I0(signal_detect_sync),
        .I1(\q_reg[0]_0 ),
        .I2(reset),
        .I3(configuration_vector),
        .I4(re_prev),
        .I5(status_vector),
        .O(\q[0]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q[0]_i_1__1_n_0 ),
        .Q(status_vector),
        .R(1'b0));
  FDRE re_prev_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(configuration_vector),
        .Q(re_prev),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_g_register" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_register__parameterized10
   (re_prev,
    status_vector,
    configuration_vector,
    coreclk,
    SR,
    Q);
  output re_prev;
  output [15:0]status_vector;
  input [0:0]configuration_vector;
  input coreclk;
  input [0:0]SR;
  input [15:0]Q;

  wire [15:0]Q;
  wire [0:0]SR;
  wire [0:0]configuration_vector;
  wire coreclk;
  wire re_prev;
  wire [15:0]status_vector;

  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(status_vector[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(Q[10]),
        .Q(status_vector[10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(Q[11]),
        .Q(status_vector[11]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(Q[12]),
        .Q(status_vector[12]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(Q[13]),
        .Q(status_vector[13]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(Q[14]),
        .Q(status_vector[14]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(Q[15]),
        .Q(status_vector[15]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(status_vector[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(status_vector[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(status_vector[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(status_vector[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(Q[5]),
        .Q(status_vector[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(Q[6]),
        .Q(status_vector[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(Q[7]),
        .Q(status_vector[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(Q[8]),
        .Q(status_vector[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(Q[9]),
        .Q(status_vector[9]),
        .R(SR));
  FDRE re_prev_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(configuration_vector),
        .Q(re_prev),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_g_register" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_register__parameterized11
   (status_vector,
    q_reg,
    coreclk);
  output [0:0]status_vector;
  input q_reg;
  input coreclk;

  wire coreclk;
  wire q_reg;
  wire [0:0]status_vector;

  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(q_reg),
        .Q(status_vector),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_g_register" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_register__parameterized12
   (status_vector,
    data_out_reg,
    q_reg,
    coreclk);
  output [0:0]status_vector;
  input data_out_reg;
  input q_reg;
  input coreclk;

  wire coreclk;
  wire data_out_reg;
  wire q_reg;
  wire [0:0]status_vector;

  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(q_reg),
        .Q(status_vector),
        .R(data_out_reg));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_g_register" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_register__parameterized13
   (status_vector,
    \q_reg[0]_0 ,
    data_out_reg,
    q_reg,
    coreclk,
    configuration_vector,
    re_prev,
    reset,
    \q_reg[0]_1 ,
    \q_reg[0]_2 );
  output [0:0]status_vector;
  output \q_reg[0]_0 ;
  input data_out_reg;
  input q_reg;
  input coreclk;
  input [0:0]configuration_vector;
  input re_prev;
  input reset;
  input \q_reg[0]_1 ;
  input [0:0]\q_reg[0]_2 ;

  wire [0:0]configuration_vector;
  wire coreclk;
  wire data_out_reg;
  wire q_reg;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire [0:0]\q_reg[0]_2 ;
  wire re_prev;
  wire reset;
  wire [0:0]status_vector;

  LUT6 #(
    .INIT(64'h080808FB080808AA)) 
    \q[0]_i_1__5 
       (.I0(status_vector),
        .I1(configuration_vector),
        .I2(re_prev),
        .I3(reset),
        .I4(\q_reg[0]_1 ),
        .I5(\q_reg[0]_2 ),
        .O(\q_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(q_reg),
        .Q(status_vector),
        .R(data_out_reg));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_g_register" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_register__parameterized14
   (status_vector,
    data_out_reg,
    core_status,
    coreclk);
  output [0:0]status_vector;
  input data_out_reg;
  input [0:0]core_status;
  input coreclk;

  wire [0:0]core_status;
  wire coreclk;
  wire data_out_reg;
  wire [0:0]status_vector;

  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(core_status),
        .Q(status_vector),
        .R(data_out_reg));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_g_register" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_register__parameterized3
   (status_vector,
    configuration_vector,
    coreclk,
    \q_reg[0]_0 ,
    \q_reg[0]_1 ,
    reset);
  output [0:0]status_vector;
  input [0:0]configuration_vector;
  input coreclk;
  input [0:0]\q_reg[0]_0 ;
  input \q_reg[0]_1 ;
  input reset;

  wire [0:0]configuration_vector;
  wire coreclk;
  wire \q[0]_i_1__3_n_0 ;
  wire [0:0]\q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire re_prev;
  wire reset;
  wire [0:0]status_vector;

  LUT6 #(
    .INIT(64'h0202AA020000AA00)) 
    \q[0]_i_1__3 
       (.I0(\q_reg[0]_0 ),
        .I1(\q_reg[0]_1 ),
        .I2(reset),
        .I3(configuration_vector),
        .I4(re_prev),
        .I5(status_vector),
        .O(\q[0]_i_1__3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q[0]_i_1__3_n_0 ),
        .Q(status_vector),
        .R(1'b0));
  FDRE re_prev_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(configuration_vector),
        .Q(re_prev),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_g_register" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_register__parameterized4
   (re_prev,
    configuration_vector,
    coreclk);
  output re_prev;
  input [0:0]configuration_vector;
  input coreclk;

  wire [0:0]configuration_vector;
  wire coreclk;
  wire re_prev;

  FDRE re_prev_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(configuration_vector),
        .Q(re_prev),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_g_register" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_register__parameterized5
   (status_vector,
    q_reg,
    coreclk);
  output [0:0]status_vector;
  input q_reg;
  input coreclk;

  wire coreclk;
  wire q_reg;
  wire [0:0]status_vector;

  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(q_reg),
        .Q(status_vector),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_g_register" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_register__parameterized6
   (re_prev,
    status_vector,
    configuration_vector,
    coreclk,
    \q_reg[0]_0 ,
    reset,
    \q_reg[0]_1 );
  output re_prev;
  output [0:0]status_vector;
  input [0:0]configuration_vector;
  input coreclk;
  input [0:0]\q_reg[0]_0 ;
  input reset;
  input \q_reg[0]_1 ;

  wire [0:0]configuration_vector;
  wire coreclk;
  wire \q[0]_i_1__6_n_0 ;
  wire [0:0]\q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire re_prev;
  wire reset;
  wire [0:0]status_vector;

  LUT6 #(
    .INIT(64'h00A000A000A088A8)) 
    \q[0]_i_1__6 
       (.I0(\q_reg[0]_0 ),
        .I1(status_vector),
        .I2(configuration_vector),
        .I3(re_prev),
        .I4(reset),
        .I5(\q_reg[0]_1 ),
        .O(\q[0]_i_1__6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q[0]_i_1__6_n_0 ),
        .Q(status_vector),
        .R(1'b0));
  FDRE re_prev_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(configuration_vector),
        .Q(re_prev),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_g_register" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_register__parameterized7
   (status_vector,
    \q_reg[0]_0 ,
    coreclk);
  output [0:0]status_vector;
  input \q_reg[0]_0 ;
  input coreclk;

  wire coreclk;
  wire \q_reg[0]_0 ;
  wire [0:0]status_vector;

  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[0]_0 ),
        .Q(status_vector),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_g_register" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_register__parameterized8
   (status_vector,
    SR,
    \pcs_ber_count_reg[5] ,
    coreclk);
  output [5:0]status_vector;
  input [0:0]SR;
  input [5:0]\pcs_ber_count_reg[5] ;
  input coreclk;

  wire [0:0]SR;
  wire coreclk;
  wire [5:0]\pcs_ber_count_reg[5] ;
  wire [5:0]status_vector;

  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\pcs_ber_count_reg[5] [0]),
        .Q(status_vector[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\pcs_ber_count_reg[5] [1]),
        .Q(status_vector[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\pcs_ber_count_reg[5] [2]),
        .Q(status_vector[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\pcs_ber_count_reg[5] [3]),
        .Q(status_vector[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\pcs_ber_count_reg[5] [4]),
        .Q(status_vector[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\pcs_ber_count_reg[5] [5]),
        .Q(status_vector[5]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_g_register" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_register__parameterized9
   (status_vector,
    SR,
    D,
    coreclk);
  output [7:0]status_vector;
  input [0:0]SR;
  input [7:0]D;
  input coreclk;

  wire [7:0]D;
  wire [0:0]SR;
  wire coreclk;
  wire [7:0]status_vector;

  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[0]),
        .Q(status_vector[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[1]),
        .Q(status_vector[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[2]),
        .Q(status_vector[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[3]),
        .Q(status_vector[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[4]),
        .Q(status_vector[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[5]),
        .Q(status_vector[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[6]),
        .Q(status_vector[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[7]),
        .Q(status_vector[7]),
        .R(SR));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_resyncs
   (core_status,
    \q_reg[0] ,
    \q_reg[0]_0 ,
    b_lock,
    hiber,
    in0,
    coreclk);
  output [0:0]core_status;
  output \q_reg[0] ;
  output \q_reg[0]_0 ;
  input b_lock;
  input hiber;
  input in0;
  input coreclk;

  wire b_lock;
  wire [0:0]core_status;
  wire coreclk;
  wire hiber;
  wire in0;
  wire \q_reg[0] ;
  wire \q_reg[0]_0 ;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_57 \resynch[0].synch_inst 
       (.b_lock(b_lock),
        .core_status(core_status),
        .coreclk(coreclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_58 \resynch[1].synch_inst 
       (.coreclk(coreclk),
        .hiber(hiber),
        .\q_reg[0] (\q_reg[0] ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_59 \resynch[2].synch_inst 
       (.coreclk(coreclk),
        .in0(in0),
        .\q_reg[0] (\q_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_g_resyncs" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_resyncs__parameterized0
   (tx_prbs31_en,
    D,
    \gt_txd_reg[25] ,
    \gt_txd_reg[33] ,
    \gt_txd_reg[35] ,
    \gt_txd_reg[45] ,
    \gt_txd_reg[0] ,
    \gt_txc_reg[0] ,
    \gt_txd_reg[6] ,
    \gt_txd_reg[2] ,
    \gt_txd_reg[4] ,
    \gt_txc_reg[1] ,
    \gt_txc_reg[0]_0 ,
    in0,
    configuration_vector,
    coreclk,
    Q,
    \tx_66_enc_out_reg[39] ,
    \tx_66_enc_out_reg[38] ,
    \tx_test_patt_seed_sel_reg[0] ,
    \tx_66_enc_out_reg[26] ,
    \tx_66_enc_out_reg[10] ,
    \tx_66_enc_out_reg[27] ,
    \tx_66_enc_out_reg[1] );
  output tx_prbs31_en;
  output [5:0]D;
  output \gt_txd_reg[25] ;
  output \gt_txd_reg[33] ;
  output \gt_txd_reg[35] ;
  output \gt_txd_reg[45] ;
  output \gt_txd_reg[0] ;
  output \gt_txc_reg[0] ;
  output \gt_txd_reg[6] ;
  output \gt_txd_reg[2] ;
  output \gt_txd_reg[4] ;
  output [0:0]\gt_txc_reg[1] ;
  output \gt_txc_reg[0]_0 ;
  input in0;
  input [2:0]configuration_vector;
  input coreclk;
  input [2:0]Q;
  input \tx_66_enc_out_reg[39] ;
  input \tx_66_enc_out_reg[38] ;
  input \tx_test_patt_seed_sel_reg[0] ;
  input \tx_66_enc_out_reg[26] ;
  input \tx_66_enc_out_reg[10] ;
  input \tx_66_enc_out_reg[27] ;
  input [1:0]\tx_66_enc_out_reg[1] ;

  wire [5:0]D;
  wire [2:0]Q;
  wire [2:0]configuration_vector;
  wire coreclk;
  wire \gt_txc_reg[0] ;
  wire \gt_txc_reg[0]_0 ;
  wire [0:0]\gt_txc_reg[1] ;
  wire \gt_txd_reg[0] ;
  wire \gt_txd_reg[25] ;
  wire \gt_txd_reg[2] ;
  wire \gt_txd_reg[33] ;
  wire \gt_txd_reg[35] ;
  wire \gt_txd_reg[45] ;
  wire \gt_txd_reg[4] ;
  wire \gt_txd_reg[6] ;
  wire in0;
  wire \tx_66_enc_out_reg[10] ;
  wire [1:0]\tx_66_enc_out_reg[1] ;
  wire \tx_66_enc_out_reg[26] ;
  wire \tx_66_enc_out_reg[27] ;
  wire \tx_66_enc_out_reg[38] ;
  wire \tx_66_enc_out_reg[39] ;
  wire tx_prbs31_en;
  wire \tx_test_patt_seed_sel_reg[0] ;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_73 \resynch[0].synch_inst 
       (.coreclk(coreclk),
        .in0(in0),
        .tx_prbs31_en(tx_prbs31_en));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_74 \resynch[1].synch_inst 
       (.D(D),
        .Q(Q),
        .configuration_vector(configuration_vector),
        .coreclk(coreclk),
        .\gt_txc_reg[0] (\gt_txc_reg[0] ),
        .\gt_txc_reg[0]_0 (\gt_txc_reg[0]_0 ),
        .\gt_txc_reg[1] (\gt_txc_reg[1] ),
        .\gt_txd_reg[0] (\gt_txd_reg[0] ),
        .\gt_txd_reg[25] (\gt_txd_reg[25] ),
        .\gt_txd_reg[2] (\gt_txd_reg[2] ),
        .\gt_txd_reg[33] (\gt_txd_reg[33] ),
        .\gt_txd_reg[35] (\gt_txd_reg[35] ),
        .\gt_txd_reg[45] (\gt_txd_reg[45] ),
        .\gt_txd_reg[4] (\gt_txd_reg[4] ),
        .\gt_txd_reg[6] (\gt_txd_reg[6] ),
        .\tx_66_enc_out_reg[10] (\tx_66_enc_out_reg[10] ),
        .\tx_66_enc_out_reg[1] (\tx_66_enc_out_reg[1] ),
        .\tx_66_enc_out_reg[26] (\tx_66_enc_out_reg[26] ),
        .\tx_66_enc_out_reg[27] (\tx_66_enc_out_reg[27] ),
        .\tx_66_enc_out_reg[38] (\tx_66_enc_out_reg[38] ),
        .\tx_66_enc_out_reg[39] (\tx_66_enc_out_reg[39] ),
        .\tx_test_patt_seed_sel_reg[0] (\tx_test_patt_seed_sel_reg[0] ));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_g_resyncs_en
   (q,
    rxusrclk2,
    d);
  output q;
  input rxusrclk2;
  input d;

  wire d;
  wire q;
  wire rxusrclk2;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable \resynch[0].synch_inst 
       (.clk(rxusrclk2),
        .d(d),
        .en(1'b1),
        .q(q));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_idle_delete
   (wr_en,
    wr_data,
    D,
    rxreset_rxusrclk2,
    out,
    rxusrclk2,
    status,
    \mcp1_rx_ebuff_ctrl_reg[7] );
  output wr_en;
  output [73:0]wr_data;
  input [63:0]D;
  input rxreset_rxusrclk2;
  input out;
  input rxusrclk2;
  input [0:0]status;
  input [7:0]\mcp1_rx_ebuff_ctrl_reg[7] ;

  wire [63:0]D;
  wire [1:0]input_is_idle_comb;
  wire [1:0]input_is_seq_comb;
  wire [7:4]mcp1_ctrl_delay;
  wire [7:0]mcp1_ctrl_pipe;
  wire [63:32]mcp1_data_delay;
  wire [63:0]mcp1_data_pipe;
  wire \mcp1_fifo_cc_seq_out[0]_i_1_n_0 ;
  wire \mcp1_fifo_cc_seq_out[1]_i_1_n_0 ;
  wire \mcp1_fifo_ctrl_out[0]_i_1_n_0 ;
  wire \mcp1_fifo_ctrl_out[1]_i_1_n_0 ;
  wire \mcp1_fifo_ctrl_out[2]_i_1_n_0 ;
  wire \mcp1_fifo_ctrl_out[3]_i_1_n_0 ;
  wire \mcp1_fifo_ctrl_out[4]_i_1_n_0 ;
  wire \mcp1_fifo_ctrl_out[5]_i_1_n_0 ;
  wire \mcp1_fifo_ctrl_out[6]_i_1_n_0 ;
  wire \mcp1_fifo_ctrl_out[7]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[0]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[10]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[11]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[12]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[13]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[14]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[15]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[16]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[17]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[18]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[19]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[1]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[20]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[21]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[22]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[23]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[24]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[25]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[26]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[27]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[28]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[29]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[2]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[30]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[31]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[32]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[33]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[34]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[35]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[36]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[37]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[38]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[39]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[3]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[40]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[41]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[42]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[43]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[44]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[45]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[46]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[47]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[48]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[49]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[4]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[50]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[51]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[52]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[53]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[54]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[55]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[56]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[57]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[58]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[59]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[5]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[60]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[61]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[62]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[63]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[63]_i_2_n_0 ;
  wire \mcp1_fifo_data_out[63]_i_3_n_0 ;
  wire \mcp1_fifo_data_out[6]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[7]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[8]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[9]_i_1_n_0 ;
  wire \mcp1_input_is_idle_reg_n_0_[0] ;
  wire \mcp1_input_is_idle_reg_n_0_[1] ;
  wire [1:0]mcp1_input_is_seq_or_idle;
  wire \mcp1_input_is_seq_or_idle[0]_i_1_n_0 ;
  wire \mcp1_input_is_seq_or_idle[1]_i_1_n_0 ;
  wire \mcp1_input_is_seq_reg_n_0_[0] ;
  wire \mcp1_input_is_seq_reg_n_0_[1] ;
  wire mcp1_input_was_idle;
  wire mcp1_input_was_seq;
  wire [7:0]\mcp1_rx_ebuff_ctrl_reg[7] ;
  wire [2:0]mcp1_state;
  wire \mcp1_state[0]_i_2_n_0 ;
  wire \mcp1_state[0]_i_3_n_0 ;
  wire \mcp1_state[1]_i_2_n_0 ;
  wire \mcp1_state[1]_i_3_n_0 ;
  wire \mcp1_state[1]_i_4_n_0 ;
  wire \mcp1_state[1]_i_5_n_0 ;
  wire \mcp1_state[2]_i_2_n_0 ;
  wire \mcp1_state[2]_i_3_n_0 ;
  wire [2:0]next_state;
  wire out;
  wire p_0_in;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;
  wire [0:0]status;
  wire [73:0]wr_data;
  wire wr_en;

  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT3 #(
    .INIT(8'hF9)) 
    asynch_fifo_i_i_1
       (.I0(mcp1_state[1]),
        .I1(mcp1_state[0]),
        .I2(mcp1_state[2]),
        .O(wr_en));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_idle_detect idle_detect_i0
       (.D(input_is_idle_comb[0]),
        .\mcp1_rx_ebuff_ctrl_reg[3] (\mcp1_rx_ebuff_ctrl_reg[7] [3:0]),
        .\mcp1_rx_ebuff_data_reg[31] (D[31:0]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_idle_detect_71 idle_detect_i1
       (.D(input_is_idle_comb[1]),
        .\mcp1_rx_ebuff_ctrl_reg[7] (\mcp1_rx_ebuff_ctrl_reg[7] [7:4]),
        .\mcp1_rx_ebuff_data_reg[63] (D[63:32]));
  FDSE \mcp1_ctrl_delay_reg[4] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_ctrl_pipe[4]),
        .Q(mcp1_ctrl_delay[4]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_ctrl_delay_reg[5] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_ctrl_pipe[5]),
        .Q(mcp1_ctrl_delay[5]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_ctrl_delay_reg[6] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_ctrl_pipe[6]),
        .Q(mcp1_ctrl_delay[6]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_ctrl_delay_reg[7] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_ctrl_pipe[7]),
        .Q(mcp1_ctrl_delay[7]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_ctrl_pipe_reg[0] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_rx_ebuff_ctrl_reg[7] [0]),
        .Q(mcp1_ctrl_pipe[0]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_ctrl_pipe_reg[1] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_rx_ebuff_ctrl_reg[7] [1]),
        .Q(mcp1_ctrl_pipe[1]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_ctrl_pipe_reg[2] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_rx_ebuff_ctrl_reg[7] [2]),
        .Q(mcp1_ctrl_pipe[2]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_ctrl_pipe_reg[3] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_rx_ebuff_ctrl_reg[7] [3]),
        .Q(mcp1_ctrl_pipe[3]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_ctrl_pipe_reg[4] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_rx_ebuff_ctrl_reg[7] [4]),
        .Q(mcp1_ctrl_pipe[4]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_ctrl_pipe_reg[5] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_rx_ebuff_ctrl_reg[7] [5]),
        .Q(mcp1_ctrl_pipe[5]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_ctrl_pipe_reg[6] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_rx_ebuff_ctrl_reg[7] [6]),
        .Q(mcp1_ctrl_pipe[6]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_ctrl_pipe_reg[7] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_rx_ebuff_ctrl_reg[7] [7]),
        .Q(mcp1_ctrl_pipe[7]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[32] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[32]),
        .Q(mcp1_data_delay[32]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[33] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[33]),
        .Q(mcp1_data_delay[33]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_data_delay_reg[34] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[34]),
        .Q(mcp1_data_delay[34]),
        .S(rxreset_rxusrclk2));
  FDSE \mcp1_data_delay_reg[35] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[35]),
        .Q(mcp1_data_delay[35]),
        .S(rxreset_rxusrclk2));
  FDSE \mcp1_data_delay_reg[36] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[36]),
        .Q(mcp1_data_delay[36]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[37] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[37]),
        .Q(mcp1_data_delay[37]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[38] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[38]),
        .Q(mcp1_data_delay[38]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_data_delay_reg[39] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[39]),
        .Q(mcp1_data_delay[39]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[40] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[40]),
        .Q(mcp1_data_delay[40]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[41] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[41]),
        .Q(mcp1_data_delay[41]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[42] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[42]),
        .Q(mcp1_data_delay[42]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[43] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[43]),
        .Q(mcp1_data_delay[43]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[44] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[44]),
        .Q(mcp1_data_delay[44]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[45] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[45]),
        .Q(mcp1_data_delay[45]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[46] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[46]),
        .Q(mcp1_data_delay[46]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[47] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[47]),
        .Q(mcp1_data_delay[47]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[48] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[48]),
        .Q(mcp1_data_delay[48]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[49] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[49]),
        .Q(mcp1_data_delay[49]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[50] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[50]),
        .Q(mcp1_data_delay[50]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[51] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[51]),
        .Q(mcp1_data_delay[51]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[52] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[52]),
        .Q(mcp1_data_delay[52]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[53] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[53]),
        .Q(mcp1_data_delay[53]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[54] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[54]),
        .Q(mcp1_data_delay[54]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[55] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[55]),
        .Q(mcp1_data_delay[55]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_data_delay_reg[56] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[56]),
        .Q(mcp1_data_delay[56]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[57] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[57]),
        .Q(mcp1_data_delay[57]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[58] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[58]),
        .Q(mcp1_data_delay[58]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[59] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[59]),
        .Q(mcp1_data_delay[59]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[60] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[60]),
        .Q(mcp1_data_delay[60]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[61] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[61]),
        .Q(mcp1_data_delay[61]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[62] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[62]),
        .Q(mcp1_data_delay[62]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[63] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_data_pipe[63]),
        .Q(mcp1_data_delay[63]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[0] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[0]),
        .Q(mcp1_data_pipe[0]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[10] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[10]),
        .Q(mcp1_data_pipe[10]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[11] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[11]),
        .Q(mcp1_data_pipe[11]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[12] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[12]),
        .Q(mcp1_data_pipe[12]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[13] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[13]),
        .Q(mcp1_data_pipe[13]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[14] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[14]),
        .Q(mcp1_data_pipe[14]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[15] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[15]),
        .Q(mcp1_data_pipe[15]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[16] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[16]),
        .Q(mcp1_data_pipe[16]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[17] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[17]),
        .Q(mcp1_data_pipe[17]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[18] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[18]),
        .Q(mcp1_data_pipe[18]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[19] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[19]),
        .Q(mcp1_data_pipe[19]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[1] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[1]),
        .Q(mcp1_data_pipe[1]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[20] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[20]),
        .Q(mcp1_data_pipe[20]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[21] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[21]),
        .Q(mcp1_data_pipe[21]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[22] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[22]),
        .Q(mcp1_data_pipe[22]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[23] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[23]),
        .Q(mcp1_data_pipe[23]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_data_pipe_reg[24] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[24]),
        .Q(mcp1_data_pipe[24]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[25] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[25]),
        .Q(mcp1_data_pipe[25]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[26] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[26]),
        .Q(mcp1_data_pipe[26]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[27] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[27]),
        .Q(mcp1_data_pipe[27]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[28] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[28]),
        .Q(mcp1_data_pipe[28]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[29] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[29]),
        .Q(mcp1_data_pipe[29]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_data_pipe_reg[2] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[2]),
        .Q(mcp1_data_pipe[2]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[30] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[30]),
        .Q(mcp1_data_pipe[30]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[31] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[31]),
        .Q(mcp1_data_pipe[31]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[32] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[32]),
        .Q(mcp1_data_pipe[32]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[33] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[33]),
        .Q(mcp1_data_pipe[33]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_data_pipe_reg[34] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[34]),
        .Q(mcp1_data_pipe[34]),
        .S(rxreset_rxusrclk2));
  FDSE \mcp1_data_pipe_reg[35] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[35]),
        .Q(mcp1_data_pipe[35]),
        .S(rxreset_rxusrclk2));
  FDSE \mcp1_data_pipe_reg[36] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[36]),
        .Q(mcp1_data_pipe[36]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[37] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[37]),
        .Q(mcp1_data_pipe[37]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[38] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[38]),
        .Q(mcp1_data_pipe[38]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_data_pipe_reg[39] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[39]),
        .Q(mcp1_data_pipe[39]),
        .S(rxreset_rxusrclk2));
  FDSE \mcp1_data_pipe_reg[3] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[3]),
        .Q(mcp1_data_pipe[3]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[40] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[40]),
        .Q(mcp1_data_pipe[40]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[41] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[41]),
        .Q(mcp1_data_pipe[41]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[42] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[42]),
        .Q(mcp1_data_pipe[42]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[43] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[43]),
        .Q(mcp1_data_pipe[43]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[44] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[44]),
        .Q(mcp1_data_pipe[44]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[45] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[45]),
        .Q(mcp1_data_pipe[45]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[46] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[46]),
        .Q(mcp1_data_pipe[46]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[47] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[47]),
        .Q(mcp1_data_pipe[47]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[48] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[48]),
        .Q(mcp1_data_pipe[48]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[49] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[49]),
        .Q(mcp1_data_pipe[49]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_data_pipe_reg[4] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[4]),
        .Q(mcp1_data_pipe[4]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[50] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[50]),
        .Q(mcp1_data_pipe[50]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[51] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[51]),
        .Q(mcp1_data_pipe[51]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[52] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[52]),
        .Q(mcp1_data_pipe[52]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[53] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[53]),
        .Q(mcp1_data_pipe[53]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[54] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[54]),
        .Q(mcp1_data_pipe[54]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[55] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[55]),
        .Q(mcp1_data_pipe[55]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_data_pipe_reg[56] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[56]),
        .Q(mcp1_data_pipe[56]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[57] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[57]),
        .Q(mcp1_data_pipe[57]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[58] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[58]),
        .Q(mcp1_data_pipe[58]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[59] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[59]),
        .Q(mcp1_data_pipe[59]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[5] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[5]),
        .Q(mcp1_data_pipe[5]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[60] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[60]),
        .Q(mcp1_data_pipe[60]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[61] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[61]),
        .Q(mcp1_data_pipe[61]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[62] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[62]),
        .Q(mcp1_data_pipe[62]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[63] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[63]),
        .Q(mcp1_data_pipe[63]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[6] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[6]),
        .Q(mcp1_data_pipe[6]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_data_pipe_reg[7] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[7]),
        .Q(mcp1_data_pipe[7]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[8] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[8]),
        .Q(mcp1_data_pipe[8]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[9] 
       (.C(rxusrclk2),
        .CE(out),
        .D(D[9]),
        .Q(mcp1_data_pipe[9]),
        .R(rxreset_rxusrclk2));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_cc_seq_out[0]_i_1 
       (.I0(p_0_in),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_input_is_seq_or_idle[0]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_cc_seq_out[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_cc_seq_out[1]_i_1 
       (.I0(mcp1_input_is_seq_or_idle[0]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_input_is_seq_or_idle[1]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_cc_seq_out[1]_i_1_n_0 ));
  FDRE \mcp1_fifo_cc_seq_out_reg[0] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_cc_seq_out[0]_i_1_n_0 ),
        .Q(wr_data[72]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_cc_seq_out_reg[1] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_cc_seq_out[1]_i_1_n_0 ),
        .Q(wr_data[73]),
        .R(rxreset_rxusrclk2));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_ctrl_out[0]_i_1 
       (.I0(mcp1_ctrl_delay[4]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_ctrl_pipe[0]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_ctrl_out[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_ctrl_out[1]_i_1 
       (.I0(mcp1_ctrl_delay[5]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_ctrl_pipe[1]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_ctrl_out[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_ctrl_out[2]_i_1 
       (.I0(mcp1_ctrl_delay[6]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_ctrl_pipe[2]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_ctrl_out[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_ctrl_out[3]_i_1 
       (.I0(mcp1_ctrl_delay[7]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_ctrl_pipe[3]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_ctrl_out[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_ctrl_out[4]_i_1 
       (.I0(mcp1_ctrl_pipe[0]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_ctrl_pipe[4]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_ctrl_out[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_ctrl_out[5]_i_1 
       (.I0(mcp1_ctrl_pipe[1]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_ctrl_pipe[5]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_ctrl_out[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_ctrl_out[6]_i_1 
       (.I0(mcp1_ctrl_pipe[2]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_ctrl_pipe[6]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_ctrl_out[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_ctrl_out[7]_i_1 
       (.I0(mcp1_ctrl_pipe[3]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_ctrl_pipe[7]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_ctrl_out[7]_i_1_n_0 ));
  FDSE \mcp1_fifo_ctrl_out_reg[0] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_ctrl_out[0]_i_1_n_0 ),
        .Q(wr_data[64]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_ctrl_out_reg[1] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_ctrl_out[1]_i_1_n_0 ),
        .Q(wr_data[65]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_ctrl_out_reg[2] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_ctrl_out[2]_i_1_n_0 ),
        .Q(wr_data[66]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_ctrl_out_reg[3] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_ctrl_out[3]_i_1_n_0 ),
        .Q(wr_data[67]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_fifo_ctrl_out_reg[4] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_ctrl_out[4]_i_1_n_0 ),
        .Q(wr_data[68]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_ctrl_out_reg[5] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_ctrl_out[5]_i_1_n_0 ),
        .Q(wr_data[69]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_ctrl_out_reg[6] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_ctrl_out[6]_i_1_n_0 ),
        .Q(wr_data[70]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_ctrl_out_reg[7] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_ctrl_out[7]_i_1_n_0 ),
        .Q(wr_data[71]),
        .R(rxreset_rxusrclk2));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[0]_i_1 
       (.I0(mcp1_data_delay[32]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[0]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[10]_i_1 
       (.I0(mcp1_data_delay[42]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[10]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[11]_i_1 
       (.I0(mcp1_data_delay[43]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[11]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[12]_i_1 
       (.I0(mcp1_data_delay[44]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[12]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[13]_i_1 
       (.I0(mcp1_data_delay[45]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[13]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[14]_i_1 
       (.I0(mcp1_data_delay[46]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[14]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[15]_i_1 
       (.I0(mcp1_data_delay[47]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[15]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[16]_i_1 
       (.I0(mcp1_data_delay[48]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[16]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[16]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[17]_i_1 
       (.I0(mcp1_data_delay[49]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[17]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[17]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[18]_i_1 
       (.I0(mcp1_data_delay[50]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[18]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[18]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[19]_i_1 
       (.I0(mcp1_data_delay[51]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[19]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[19]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[1]_i_1 
       (.I0(mcp1_data_delay[33]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[1]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[20]_i_1 
       (.I0(mcp1_data_delay[52]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[20]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[20]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[21]_i_1 
       (.I0(mcp1_data_delay[53]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[21]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[21]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[22]_i_1 
       (.I0(mcp1_data_delay[54]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[22]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[22]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[23]_i_1 
       (.I0(mcp1_data_delay[55]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[23]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[23]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[24]_i_1 
       (.I0(mcp1_data_delay[56]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[24]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[24]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[25]_i_1 
       (.I0(mcp1_data_delay[57]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[25]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[25]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[26]_i_1 
       (.I0(mcp1_data_delay[58]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[26]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[26]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[27]_i_1 
       (.I0(mcp1_data_delay[59]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[27]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[27]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[28]_i_1 
       (.I0(mcp1_data_delay[60]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[28]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[28]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[29]_i_1 
       (.I0(mcp1_data_delay[61]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[29]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[29]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[2]_i_1 
       (.I0(mcp1_data_delay[34]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[2]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[30]_i_1 
       (.I0(mcp1_data_delay[62]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[30]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[30]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[31]_i_1 
       (.I0(mcp1_data_delay[63]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[31]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[31]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[32]_i_1 
       (.I0(mcp1_data_pipe[0]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[32]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[32]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[33]_i_1 
       (.I0(mcp1_data_pipe[1]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[33]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[33]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[34]_i_1 
       (.I0(mcp1_data_pipe[2]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[34]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[34]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[35]_i_1 
       (.I0(mcp1_data_pipe[3]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[35]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[35]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[36]_i_1 
       (.I0(mcp1_data_pipe[4]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[36]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[36]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[37]_i_1 
       (.I0(mcp1_data_pipe[5]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[37]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[37]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[38]_i_1 
       (.I0(mcp1_data_pipe[6]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[38]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[38]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[39]_i_1 
       (.I0(mcp1_data_pipe[7]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[39]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[39]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[3]_i_1 
       (.I0(mcp1_data_delay[35]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[3]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[40]_i_1 
       (.I0(mcp1_data_pipe[8]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[40]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[40]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[41]_i_1 
       (.I0(mcp1_data_pipe[9]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[41]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[41]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[42]_i_1 
       (.I0(mcp1_data_pipe[10]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[42]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[42]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[43]_i_1 
       (.I0(mcp1_data_pipe[11]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[43]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[43]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[44]_i_1 
       (.I0(mcp1_data_pipe[12]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[44]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[44]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[45]_i_1 
       (.I0(mcp1_data_pipe[13]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[45]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[45]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[46]_i_1 
       (.I0(mcp1_data_pipe[14]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[46]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[46]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[47]_i_1 
       (.I0(mcp1_data_pipe[15]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[47]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[47]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[48]_i_1 
       (.I0(mcp1_data_pipe[16]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[48]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[48]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[49]_i_1 
       (.I0(mcp1_data_pipe[17]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[49]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[49]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[4]_i_1 
       (.I0(mcp1_data_delay[36]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[4]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[50]_i_1 
       (.I0(mcp1_data_pipe[18]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[50]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[50]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[51]_i_1 
       (.I0(mcp1_data_pipe[19]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[51]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[51]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[52]_i_1 
       (.I0(mcp1_data_pipe[20]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[52]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[52]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[53]_i_1 
       (.I0(mcp1_data_pipe[21]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[53]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[53]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[54]_i_1 
       (.I0(mcp1_data_pipe[22]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[54]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[54]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[55]_i_1 
       (.I0(mcp1_data_pipe[23]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[55]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[55]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[56]_i_1 
       (.I0(mcp1_data_pipe[24]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[56]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[56]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[57]_i_1 
       (.I0(mcp1_data_pipe[25]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[57]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[57]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[58]_i_1 
       (.I0(mcp1_data_pipe[26]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[58]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[58]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[59]_i_1 
       (.I0(mcp1_data_pipe[27]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[59]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[59]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[5]_i_1 
       (.I0(mcp1_data_delay[37]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[5]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[60]_i_1 
       (.I0(mcp1_data_pipe[28]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[60]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[60]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[61]_i_1 
       (.I0(mcp1_data_pipe[29]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[61]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[61]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[62]_i_1 
       (.I0(mcp1_data_pipe[30]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[62]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[62]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[63]_i_1 
       (.I0(mcp1_data_pipe[31]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[63]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[63]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h073C0F3C033C033C)) 
    \mcp1_fifo_data_out[63]_i_2 
       (.I0(mcp1_input_was_seq),
        .I1(mcp1_state[1]),
        .I2(mcp1_state[2]),
        .I3(mcp1_state[0]),
        .I4(\mcp1_input_is_seq_reg_n_0_[0] ),
        .I5(\mcp1_state[1]_i_5_n_0 ),
        .O(\mcp1_fifo_data_out[63]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFCC3DCC3DCC3DCC3)) 
    \mcp1_fifo_data_out[63]_i_3 
       (.I0(\mcp1_state[1]_i_5_n_0 ),
        .I1(mcp1_state[2]),
        .I2(mcp1_state[1]),
        .I3(mcp1_state[0]),
        .I4(\mcp1_input_is_seq_reg_n_0_[0] ),
        .I5(mcp1_input_was_seq),
        .O(\mcp1_fifo_data_out[63]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[6]_i_1 
       (.I0(mcp1_data_delay[38]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[6]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[7]_i_1 
       (.I0(mcp1_data_delay[39]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[7]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[8]_i_1 
       (.I0(mcp1_data_delay[40]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[8]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \mcp1_fifo_data_out[9]_i_1 
       (.I0(mcp1_data_delay[41]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[9]),
        .I3(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .O(\mcp1_fifo_data_out[9]_i_1_n_0 ));
  FDRE \mcp1_fifo_data_out_reg[0] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[0]_i_1_n_0 ),
        .Q(wr_data[0]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[10] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[10]_i_1_n_0 ),
        .Q(wr_data[10]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[11] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[11]_i_1_n_0 ),
        .Q(wr_data[11]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[12] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[12]_i_1_n_0 ),
        .Q(wr_data[12]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[13] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[13]_i_1_n_0 ),
        .Q(wr_data[13]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[14] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[14]_i_1_n_0 ),
        .Q(wr_data[14]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[15] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[15]_i_1_n_0 ),
        .Q(wr_data[15]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[16] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[16]_i_1_n_0 ),
        .Q(wr_data[16]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[17] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[17]_i_1_n_0 ),
        .Q(wr_data[17]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[18] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[18]_i_1_n_0 ),
        .Q(wr_data[18]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[19] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[19]_i_1_n_0 ),
        .Q(wr_data[19]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[1] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[1]_i_1_n_0 ),
        .Q(wr_data[1]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[20] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[20]_i_1_n_0 ),
        .Q(wr_data[20]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[21] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[21]_i_1_n_0 ),
        .Q(wr_data[21]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[22] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[22]_i_1_n_0 ),
        .Q(wr_data[22]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[23] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[23]_i_1_n_0 ),
        .Q(wr_data[23]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_fifo_data_out_reg[24] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[24]_i_1_n_0 ),
        .Q(wr_data[24]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[25] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[25]_i_1_n_0 ),
        .Q(wr_data[25]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[26] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[26]_i_1_n_0 ),
        .Q(wr_data[26]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[27] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[27]_i_1_n_0 ),
        .Q(wr_data[27]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[28] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[28]_i_1_n_0 ),
        .Q(wr_data[28]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[29] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[29]_i_1_n_0 ),
        .Q(wr_data[29]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_fifo_data_out_reg[2] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[2]_i_1_n_0 ),
        .Q(wr_data[2]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[30] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[30]_i_1_n_0 ),
        .Q(wr_data[30]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[31] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[31]_i_1_n_0 ),
        .Q(wr_data[31]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[32] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[32]_i_1_n_0 ),
        .Q(wr_data[32]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[33] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[33]_i_1_n_0 ),
        .Q(wr_data[33]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_fifo_data_out_reg[34] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[34]_i_1_n_0 ),
        .Q(wr_data[34]),
        .S(rxreset_rxusrclk2));
  FDSE \mcp1_fifo_data_out_reg[35] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[35]_i_1_n_0 ),
        .Q(wr_data[35]),
        .S(rxreset_rxusrclk2));
  FDSE \mcp1_fifo_data_out_reg[36] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[36]_i_1_n_0 ),
        .Q(wr_data[36]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[37] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[37]_i_1_n_0 ),
        .Q(wr_data[37]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[38] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[38]_i_1_n_0 ),
        .Q(wr_data[38]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_fifo_data_out_reg[39] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[39]_i_1_n_0 ),
        .Q(wr_data[39]),
        .S(rxreset_rxusrclk2));
  FDSE \mcp1_fifo_data_out_reg[3] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[3]_i_1_n_0 ),
        .Q(wr_data[3]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[40] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[40]_i_1_n_0 ),
        .Q(wr_data[40]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[41] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[41]_i_1_n_0 ),
        .Q(wr_data[41]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[42] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[42]_i_1_n_0 ),
        .Q(wr_data[42]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[43] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[43]_i_1_n_0 ),
        .Q(wr_data[43]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[44] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[44]_i_1_n_0 ),
        .Q(wr_data[44]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[45] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[45]_i_1_n_0 ),
        .Q(wr_data[45]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[46] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[46]_i_1_n_0 ),
        .Q(wr_data[46]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[47] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[47]_i_1_n_0 ),
        .Q(wr_data[47]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[48] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[48]_i_1_n_0 ),
        .Q(wr_data[48]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[49] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[49]_i_1_n_0 ),
        .Q(wr_data[49]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_fifo_data_out_reg[4] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[4]_i_1_n_0 ),
        .Q(wr_data[4]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[50] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[50]_i_1_n_0 ),
        .Q(wr_data[50]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[51] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[51]_i_1_n_0 ),
        .Q(wr_data[51]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[52] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[52]_i_1_n_0 ),
        .Q(wr_data[52]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[53] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[53]_i_1_n_0 ),
        .Q(wr_data[53]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[54] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[54]_i_1_n_0 ),
        .Q(wr_data[54]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[55] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[55]_i_1_n_0 ),
        .Q(wr_data[55]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_fifo_data_out_reg[56] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[56]_i_1_n_0 ),
        .Q(wr_data[56]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[57] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[57]_i_1_n_0 ),
        .Q(wr_data[57]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[58] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[58]_i_1_n_0 ),
        .Q(wr_data[58]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[59] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[59]_i_1_n_0 ),
        .Q(wr_data[59]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[5] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[5]_i_1_n_0 ),
        .Q(wr_data[5]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[60] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[60]_i_1_n_0 ),
        .Q(wr_data[60]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[61] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[61]_i_1_n_0 ),
        .Q(wr_data[61]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[62] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[62]_i_1_n_0 ),
        .Q(wr_data[62]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[63] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[63]_i_1_n_0 ),
        .Q(wr_data[63]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[6] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[6]_i_1_n_0 ),
        .Q(wr_data[6]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_fifo_data_out_reg[7] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[7]_i_1_n_0 ),
        .Q(wr_data[7]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[8] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[8]_i_1_n_0 ),
        .Q(wr_data[8]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[9] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_fifo_data_out[9]_i_1_n_0 ),
        .Q(wr_data[9]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_input_is_idle_reg[0] 
       (.C(rxusrclk2),
        .CE(out),
        .D(input_is_idle_comb[0]),
        .Q(\mcp1_input_is_idle_reg_n_0_[0] ),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_input_is_idle_reg[1] 
       (.C(rxusrclk2),
        .CE(out),
        .D(input_is_idle_comb[1]),
        .Q(\mcp1_input_is_idle_reg_n_0_[1] ),
        .R(rxreset_rxusrclk2));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_input_is_seq_or_idle[0]_i_1 
       (.I0(input_is_idle_comb[0]),
        .I1(input_is_seq_comb[0]),
        .O(\mcp1_input_is_seq_or_idle[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_input_is_seq_or_idle[1]_i_1 
       (.I0(input_is_idle_comb[1]),
        .I1(input_is_seq_comb[1]),
        .O(\mcp1_input_is_seq_or_idle[1]_i_1_n_0 ));
  FDRE \mcp1_input_is_seq_or_idle_reg[0] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_input_is_seq_or_idle[0]_i_1_n_0 ),
        .Q(mcp1_input_is_seq_or_idle[0]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_input_is_seq_or_idle_reg[1] 
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_input_is_seq_or_idle[1]_i_1_n_0 ),
        .Q(mcp1_input_is_seq_or_idle[1]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_input_is_seq_reg[0] 
       (.C(rxusrclk2),
        .CE(out),
        .D(input_is_seq_comb[0]),
        .Q(\mcp1_input_is_seq_reg_n_0_[0] ),
        .S(rxreset_rxusrclk2));
  FDSE \mcp1_input_is_seq_reg[1] 
       (.C(rxusrclk2),
        .CE(out),
        .D(input_is_seq_comb[1]),
        .Q(\mcp1_input_is_seq_reg_n_0_[1] ),
        .S(rxreset_rxusrclk2));
  FDRE mcp1_input_was_idle_reg
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_input_is_idle_reg_n_0_[1] ),
        .Q(mcp1_input_was_idle),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_input_was_seq_or_idle_reg[1] 
       (.C(rxusrclk2),
        .CE(out),
        .D(mcp1_input_is_seq_or_idle[1]),
        .Q(p_0_in),
        .R(rxreset_rxusrclk2));
  FDRE mcp1_input_was_seq_reg
       (.C(rxusrclk2),
        .CE(out),
        .D(\mcp1_input_is_seq_reg_n_0_[1] ),
        .Q(mcp1_input_was_seq),
        .R(rxreset_rxusrclk2));
  LUT6 #(
    .INIT(64'hCCCC0501CCCC0400)) 
    \mcp1_state[0]_i_1 
       (.I0(\mcp1_state[0]_i_2_n_0 ),
        .I1(mcp1_state[2]),
        .I2(mcp1_state[1]),
        .I3(\mcp1_state[1]_i_2_n_0 ),
        .I4(mcp1_state[0]),
        .I5(\mcp1_state[0]_i_3_n_0 ),
        .O(next_state[0]));
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_state[0]_i_2 
       (.I0(status),
        .I1(out),
        .O(\mcp1_state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000020203F202020)) 
    \mcp1_state[0]_i_3 
       (.I0(\mcp1_input_is_seq_reg_n_0_[1] ),
        .I1(mcp1_input_was_seq),
        .I2(\mcp1_input_is_seq_reg_n_0_[0] ),
        .I3(\mcp1_input_is_idle_reg_n_0_[1] ),
        .I4(\mcp1_input_is_idle_reg_n_0_[0] ),
        .I5(mcp1_input_was_idle),
        .O(\mcp1_state[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF000022220333)) 
    \mcp1_state[1]_i_1 
       (.I0(\mcp1_state[1]_i_2_n_0 ),
        .I1(\mcp1_state[1]_i_3_n_0 ),
        .I2(\mcp1_state[1]_i_4_n_0 ),
        .I3(\mcp1_state[1]_i_5_n_0 ),
        .I4(mcp1_state[2]),
        .I5(mcp1_state[1]),
        .O(next_state[1]));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \mcp1_state[1]_i_2 
       (.I0(\mcp1_input_is_seq_reg_n_0_[0] ),
        .I1(\mcp1_input_is_seq_reg_n_0_[1] ),
        .I2(\mcp1_input_is_idle_reg_n_0_[0] ),
        .I3(\mcp1_input_is_idle_reg_n_0_[1] ),
        .O(\mcp1_state[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT3 #(
    .INIT(8'hF7)) 
    \mcp1_state[1]_i_3 
       (.I0(out),
        .I1(status),
        .I2(mcp1_state[0]),
        .O(\mcp1_state[1]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_state[1]_i_4 
       (.I0(mcp1_input_was_seq),
        .I1(\mcp1_input_is_seq_reg_n_0_[0] ),
        .O(\mcp1_state[1]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_state[1]_i_5 
       (.I0(mcp1_input_was_idle),
        .I1(\mcp1_input_is_idle_reg_n_0_[0] ),
        .O(\mcp1_state[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFEFEFEFEEEFEFEFE)) 
    \mcp1_state[2]_i_1 
       (.I0(\mcp1_state[2]_i_2_n_0 ),
        .I1(\mcp1_state[2]_i_3_n_0 ),
        .I2(mcp1_state[2]),
        .I3(out),
        .I4(status),
        .I5(mcp1_state[0]),
        .O(next_state[2]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT5 #(
    .INIT(32'h666E6E6E)) 
    \mcp1_state[2]_i_2 
       (.I0(mcp1_state[1]),
        .I1(mcp1_state[0]),
        .I2(mcp1_input_was_seq),
        .I3(\mcp1_input_is_idle_reg_n_0_[0] ),
        .I4(mcp1_input_was_idle),
        .O(\mcp1_state[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h080808080808FF08)) 
    \mcp1_state[2]_i_3 
       (.I0(\mcp1_state[1]_i_5_n_0 ),
        .I1(mcp1_state[0]),
        .I2(\mcp1_input_is_seq_reg_n_0_[0] ),
        .I3(mcp1_state[2]),
        .I4(\mcp1_input_is_seq_reg_n_0_[1] ),
        .I5(\mcp1_input_is_idle_reg_n_0_[1] ),
        .O(\mcp1_state[2]_i_3_n_0 ));
  FDRE \mcp1_state_reg[0] 
       (.C(rxusrclk2),
        .CE(out),
        .D(next_state[0]),
        .Q(mcp1_state[0]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_state_reg[1] 
       (.C(rxusrclk2),
        .CE(out),
        .D(next_state[1]),
        .Q(mcp1_state[1]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_state_reg[2] 
       (.C(rxusrclk2),
        .CE(out),
        .D(next_state[2]),
        .Q(mcp1_state[2]),
        .R(rxreset_rxusrclk2));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_seq_detect seq_detect_i0
       (.D(input_is_seq_comb[0]),
        .\mcp1_rx_ebuff_ctrl_reg[3] (\mcp1_rx_ebuff_ctrl_reg[7] [3:0]),
        .\mcp1_rx_ebuff_data_reg[7] (D[7:0]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_seq_detect_72 seq_detect_i1
       (.D(input_is_seq_comb[1]),
        .\mcp1_rx_ebuff_ctrl_reg[7] (\mcp1_rx_ebuff_ctrl_reg[7] [7:4]),
        .\mcp1_rx_ebuff_data_reg[39] (D[39:32]));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_idle_detect
   (D,
    \mcp1_rx_ebuff_data_reg[31] ,
    \mcp1_rx_ebuff_ctrl_reg[3] );
  output [0:0]D;
  input [31:0]\mcp1_rx_ebuff_data_reg[31] ;
  input [3:0]\mcp1_rx_ebuff_ctrl_reg[3] ;

  wire [0:0]D;
  wire comp_0__0;
  wire comp_1__0;
  wire comp_2__0;
  wire comp_3__0;
  wire comp_4__0;
  wire comp_5__0;
  wire comp_6__0;
  wire comp_7__0;
  wire comp_8__0;
  wire [3:0]\mcp1_rx_ebuff_ctrl_reg[3] ;
  wire [31:0]\mcp1_rx_ebuff_data_reg[31] ;
  wire muxcyo_0;
  wire muxcyo_1;
  wire muxcyo_2;
  wire muxcyo_4;
  wire muxcyo_5;
  wire muxcyo_6;
  wire muxcyo_7;
  wire [3:3]NLW_muxcy_i0_CARRY4_CARRY8_CO_UNCONNECTED;
  wire [7:0]NLW_muxcy_i0_CARRY4_CARRY8_O_UNCONNECTED;
  wire [7:1]NLW_muxcy_i8_CARRY4_CARRY8_CO_UNCONNECTED;
  wire [7:1]NLW_muxcy_i8_CARRY4_CARRY8_DI_UNCONNECTED;
  wire [7:0]NLW_muxcy_i8_CARRY4_CARRY8_O_UNCONNECTED;
  wire [7:1]NLW_muxcy_i8_CARRY4_CARRY8_S_UNCONNECTED;

  LUT4 #(
    .INIT(16'h2000)) 
    comp_0
       (.I0(\mcp1_rx_ebuff_data_reg[31] [2]),
        .I1(\mcp1_rx_ebuff_data_reg[31] [3]),
        .I2(\mcp1_rx_ebuff_data_reg[31] [0]),
        .I3(\mcp1_rx_ebuff_data_reg[31] [1]),
        .O(comp_0__0));
  LUT4 #(
    .INIT(16'h0001)) 
    comp_1
       (.I0(\mcp1_rx_ebuff_data_reg[31] [7]),
        .I1(\mcp1_rx_ebuff_data_reg[31] [6]),
        .I2(\mcp1_rx_ebuff_data_reg[31] [4]),
        .I3(\mcp1_rx_ebuff_data_reg[31] [5]),
        .O(comp_1__0));
  LUT4 #(
    .INIT(16'h2000)) 
    comp_2
       (.I0(\mcp1_rx_ebuff_data_reg[31] [10]),
        .I1(\mcp1_rx_ebuff_data_reg[31] [11]),
        .I2(\mcp1_rx_ebuff_data_reg[31] [8]),
        .I3(\mcp1_rx_ebuff_data_reg[31] [9]),
        .O(comp_2__0));
  LUT4 #(
    .INIT(16'h0001)) 
    comp_3
       (.I0(\mcp1_rx_ebuff_data_reg[31] [15]),
        .I1(\mcp1_rx_ebuff_data_reg[31] [14]),
        .I2(\mcp1_rx_ebuff_data_reg[31] [12]),
        .I3(\mcp1_rx_ebuff_data_reg[31] [13]),
        .O(comp_3__0));
  LUT4 #(
    .INIT(16'h2000)) 
    comp_4
       (.I0(\mcp1_rx_ebuff_data_reg[31] [18]),
        .I1(\mcp1_rx_ebuff_data_reg[31] [19]),
        .I2(\mcp1_rx_ebuff_data_reg[31] [16]),
        .I3(\mcp1_rx_ebuff_data_reg[31] [17]),
        .O(comp_4__0));
  LUT4 #(
    .INIT(16'h0001)) 
    comp_5
       (.I0(\mcp1_rx_ebuff_data_reg[31] [23]),
        .I1(\mcp1_rx_ebuff_data_reg[31] [22]),
        .I2(\mcp1_rx_ebuff_data_reg[31] [20]),
        .I3(\mcp1_rx_ebuff_data_reg[31] [21]),
        .O(comp_5__0));
  LUT4 #(
    .INIT(16'h2000)) 
    comp_6
       (.I0(\mcp1_rx_ebuff_data_reg[31] [26]),
        .I1(\mcp1_rx_ebuff_data_reg[31] [27]),
        .I2(\mcp1_rx_ebuff_data_reg[31] [24]),
        .I3(\mcp1_rx_ebuff_data_reg[31] [25]),
        .O(comp_6__0));
  LUT4 #(
    .INIT(16'h0001)) 
    comp_7
       (.I0(\mcp1_rx_ebuff_data_reg[31] [31]),
        .I1(\mcp1_rx_ebuff_data_reg[31] [30]),
        .I2(\mcp1_rx_ebuff_data_reg[31] [28]),
        .I3(\mcp1_rx_ebuff_data_reg[31] [29]),
        .O(comp_7__0));
  LUT4 #(
    .INIT(16'h8000)) 
    comp_8
       (.I0(\mcp1_rx_ebuff_ctrl_reg[3] [3]),
        .I1(\mcp1_rx_ebuff_ctrl_reg[3] [2]),
        .I2(\mcp1_rx_ebuff_ctrl_reg[3] [0]),
        .I3(\mcp1_rx_ebuff_ctrl_reg[3] [1]),
        .O(comp_8__0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "(CARRY4)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY8 muxcy_i0_CARRY4_CARRY8
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({muxcyo_7,muxcyo_6,muxcyo_5,muxcyo_4,NLW_muxcy_i0_CARRY4_CARRY8_CO_UNCONNECTED[3],muxcyo_2,muxcyo_1,muxcyo_0}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_muxcy_i0_CARRY4_CARRY8_O_UNCONNECTED[7:0]),
        .S({comp_7__0,comp_6__0,comp_5__0,comp_4__0,comp_3__0,comp_2__0,comp_1__0,comp_0__0}));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "(CARRY4)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY8 muxcy_i8_CARRY4_CARRY8
       (.CI(muxcyo_7),
        .CI_TOP(1'b0),
        .CO({NLW_muxcy_i8_CARRY4_CARRY8_CO_UNCONNECTED[7:1],D}),
        .DI({NLW_muxcy_i8_CARRY4_CARRY8_DI_UNCONNECTED[7:1],1'b0}),
        .O(NLW_muxcy_i8_CARRY4_CARRY8_O_UNCONNECTED[7:0]),
        .S({NLW_muxcy_i8_CARRY4_CARRY8_S_UNCONNECTED[7:1],comp_8__0}));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_idle_detect" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_idle_detect_71
   (D,
    \mcp1_rx_ebuff_data_reg[63] ,
    \mcp1_rx_ebuff_ctrl_reg[7] );
  output [0:0]D;
  input [31:0]\mcp1_rx_ebuff_data_reg[63] ;
  input [3:0]\mcp1_rx_ebuff_ctrl_reg[7] ;

  wire [0:0]D;
  wire comp_0__0;
  wire comp_1__0;
  wire comp_2__0;
  wire comp_3__0;
  wire comp_4__0;
  wire comp_5__0;
  wire comp_6__0;
  wire comp_7__0;
  wire comp_8__0;
  wire [3:0]\mcp1_rx_ebuff_ctrl_reg[7] ;
  wire [31:0]\mcp1_rx_ebuff_data_reg[63] ;
  wire muxcyo_0;
  wire muxcyo_1;
  wire muxcyo_2;
  wire muxcyo_4;
  wire muxcyo_5;
  wire muxcyo_6;
  wire muxcyo_7;
  wire [3:3]NLW_muxcy_i0_CARRY4_CARRY8_CO_UNCONNECTED;
  wire [7:0]NLW_muxcy_i0_CARRY4_CARRY8_O_UNCONNECTED;
  wire [7:1]NLW_muxcy_i8_CARRY4_CARRY8_CO_UNCONNECTED;
  wire [7:1]NLW_muxcy_i8_CARRY4_CARRY8_DI_UNCONNECTED;
  wire [7:0]NLW_muxcy_i8_CARRY4_CARRY8_O_UNCONNECTED;
  wire [7:1]NLW_muxcy_i8_CARRY4_CARRY8_S_UNCONNECTED;

  LUT4 #(
    .INIT(16'h2000)) 
    comp_0
       (.I0(\mcp1_rx_ebuff_data_reg[63] [2]),
        .I1(\mcp1_rx_ebuff_data_reg[63] [3]),
        .I2(\mcp1_rx_ebuff_data_reg[63] [0]),
        .I3(\mcp1_rx_ebuff_data_reg[63] [1]),
        .O(comp_0__0));
  LUT4 #(
    .INIT(16'h0001)) 
    comp_1
       (.I0(\mcp1_rx_ebuff_data_reg[63] [7]),
        .I1(\mcp1_rx_ebuff_data_reg[63] [6]),
        .I2(\mcp1_rx_ebuff_data_reg[63] [4]),
        .I3(\mcp1_rx_ebuff_data_reg[63] [5]),
        .O(comp_1__0));
  LUT4 #(
    .INIT(16'h2000)) 
    comp_2
       (.I0(\mcp1_rx_ebuff_data_reg[63] [10]),
        .I1(\mcp1_rx_ebuff_data_reg[63] [11]),
        .I2(\mcp1_rx_ebuff_data_reg[63] [8]),
        .I3(\mcp1_rx_ebuff_data_reg[63] [9]),
        .O(comp_2__0));
  LUT4 #(
    .INIT(16'h0001)) 
    comp_3
       (.I0(\mcp1_rx_ebuff_data_reg[63] [15]),
        .I1(\mcp1_rx_ebuff_data_reg[63] [14]),
        .I2(\mcp1_rx_ebuff_data_reg[63] [12]),
        .I3(\mcp1_rx_ebuff_data_reg[63] [13]),
        .O(comp_3__0));
  LUT4 #(
    .INIT(16'h2000)) 
    comp_4
       (.I0(\mcp1_rx_ebuff_data_reg[63] [18]),
        .I1(\mcp1_rx_ebuff_data_reg[63] [19]),
        .I2(\mcp1_rx_ebuff_data_reg[63] [16]),
        .I3(\mcp1_rx_ebuff_data_reg[63] [17]),
        .O(comp_4__0));
  LUT4 #(
    .INIT(16'h0001)) 
    comp_5
       (.I0(\mcp1_rx_ebuff_data_reg[63] [23]),
        .I1(\mcp1_rx_ebuff_data_reg[63] [22]),
        .I2(\mcp1_rx_ebuff_data_reg[63] [20]),
        .I3(\mcp1_rx_ebuff_data_reg[63] [21]),
        .O(comp_5__0));
  LUT4 #(
    .INIT(16'h2000)) 
    comp_6
       (.I0(\mcp1_rx_ebuff_data_reg[63] [26]),
        .I1(\mcp1_rx_ebuff_data_reg[63] [27]),
        .I2(\mcp1_rx_ebuff_data_reg[63] [24]),
        .I3(\mcp1_rx_ebuff_data_reg[63] [25]),
        .O(comp_6__0));
  LUT4 #(
    .INIT(16'h0001)) 
    comp_7
       (.I0(\mcp1_rx_ebuff_data_reg[63] [31]),
        .I1(\mcp1_rx_ebuff_data_reg[63] [30]),
        .I2(\mcp1_rx_ebuff_data_reg[63] [28]),
        .I3(\mcp1_rx_ebuff_data_reg[63] [29]),
        .O(comp_7__0));
  LUT4 #(
    .INIT(16'h8000)) 
    comp_8
       (.I0(\mcp1_rx_ebuff_ctrl_reg[7] [3]),
        .I1(\mcp1_rx_ebuff_ctrl_reg[7] [2]),
        .I2(\mcp1_rx_ebuff_ctrl_reg[7] [0]),
        .I3(\mcp1_rx_ebuff_ctrl_reg[7] [1]),
        .O(comp_8__0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "(CARRY4)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY8 muxcy_i0_CARRY4_CARRY8
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({muxcyo_7,muxcyo_6,muxcyo_5,muxcyo_4,NLW_muxcy_i0_CARRY4_CARRY8_CO_UNCONNECTED[3],muxcyo_2,muxcyo_1,muxcyo_0}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_muxcy_i0_CARRY4_CARRY8_O_UNCONNECTED[7:0]),
        .S({comp_7__0,comp_6__0,comp_5__0,comp_4__0,comp_3__0,comp_2__0,comp_1__0,comp_0__0}));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "(CARRY4)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY8 muxcy_i8_CARRY4_CARRY8
       (.CI(muxcyo_7),
        .CI_TOP(1'b0),
        .CO({NLW_muxcy_i8_CARRY4_CARRY8_CO_UNCONNECTED[7:1],D}),
        .DI({NLW_muxcy_i8_CARRY4_CARRY8_DI_UNCONNECTED[7:1],1'b0}),
        .O(NLW_muxcy_i8_CARRY4_CARRY8_O_UNCONNECTED[7:0]),
        .S({NLW_muxcy_i8_CARRY4_CARRY8_S_UNCONNECTED[7:1],comp_8__0}));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_idle_insert
   (rd_en,
    xgmii_rxd,
    xgmii_rxc,
    rd_data,
    empty,
    reset,
    can_insert_rd,
    \xgmii_txd_reg2_reg[63] ,
    configuration_vector,
    \xgmii_txc_reg2_reg[7] ,
    coreclk);
  output rd_en;
  output [63:0]xgmii_rxd;
  output [7:0]xgmii_rxc;
  input [73:0]rd_data;
  input empty;
  input reset;
  input can_insert_rd;
  input [63:0]\xgmii_txd_reg2_reg[63] ;
  input [0:0]configuration_vector;
  input [7:0]\xgmii_txc_reg2_reg[7] ;
  input coreclk;

  wire asynch_fifo_i_i_3_n_0;
  wire asynch_fifo_i_i_4_n_0;
  wire can_insert_rd;
  wire [0:0]configuration_vector;
  wire coreclk;
  wire [7:0]ctrl_out;
  wire \ctrl_out[0]_i_1_n_0 ;
  wire \ctrl_out[1]_i_1_n_0 ;
  wire \ctrl_out[2]_i_1_n_0 ;
  wire \ctrl_out[3]_i_1_n_0 ;
  wire \ctrl_out[4]_i_1_n_0 ;
  wire \ctrl_out[5]_i_1_n_0 ;
  wire \ctrl_out[6]_i_1_n_0 ;
  wire \ctrl_out[7]_i_1_n_0 ;
  wire [63:0]data_out;
  wire \data_out[0]_i_1_n_0 ;
  wire \data_out[10]_i_1_n_0 ;
  wire \data_out[11]_i_1_n_0 ;
  wire \data_out[12]_i_1_n_0 ;
  wire \data_out[13]_i_1_n_0 ;
  wire \data_out[14]_i_1_n_0 ;
  wire \data_out[15]_i_1_n_0 ;
  wire \data_out[16]_i_1_n_0 ;
  wire \data_out[17]_i_1_n_0 ;
  wire \data_out[18]_i_1_n_0 ;
  wire \data_out[19]_i_1_n_0 ;
  wire \data_out[1]_i_1_n_0 ;
  wire \data_out[20]_i_1_n_0 ;
  wire \data_out[21]_i_1_n_0 ;
  wire \data_out[22]_i_1_n_0 ;
  wire \data_out[23]_i_1_n_0 ;
  wire \data_out[24]_i_1_n_0 ;
  wire \data_out[24]_i_2_n_0 ;
  wire \data_out[25]_i_1_n_0 ;
  wire \data_out[26]_i_1_n_0 ;
  wire \data_out[27]_i_1_n_0 ;
  wire \data_out[28]_i_1_n_0 ;
  wire \data_out[29]_i_1_n_0 ;
  wire \data_out[2]_i_1_n_0 ;
  wire \data_out[2]_i_2_n_0 ;
  wire \data_out[30]_i_1_n_0 ;
  wire \data_out[31]_i_1_n_0 ;
  wire \data_out[31]_i_2_n_0 ;
  wire \data_out[32]_i_1_n_0 ;
  wire \data_out[33]_i_1_n_0 ;
  wire \data_out[34]_i_1_n_0 ;
  wire \data_out[35]_i_1_n_0 ;
  wire \data_out[36]_i_1_n_0 ;
  wire \data_out[37]_i_1_n_0 ;
  wire \data_out[38]_i_1_n_0 ;
  wire \data_out[39]_i_1_n_0 ;
  wire \data_out[3]_i_1_n_0 ;
  wire \data_out[40]_i_1_n_0 ;
  wire \data_out[41]_i_1_n_0 ;
  wire \data_out[42]_i_1_n_0 ;
  wire \data_out[43]_i_1_n_0 ;
  wire \data_out[44]_i_1_n_0 ;
  wire \data_out[45]_i_1_n_0 ;
  wire \data_out[46]_i_1_n_0 ;
  wire \data_out[47]_i_1_n_0 ;
  wire \data_out[48]_i_1_n_0 ;
  wire \data_out[49]_i_1_n_0 ;
  wire \data_out[4]_i_1_n_0 ;
  wire \data_out[50]_i_1_n_0 ;
  wire \data_out[51]_i_1_n_0 ;
  wire \data_out[52]_i_1_n_0 ;
  wire \data_out[53]_i_1_n_0 ;
  wire \data_out[54]_i_1_n_0 ;
  wire \data_out[55]_i_1_n_0 ;
  wire \data_out[56]_i_1_n_0 ;
  wire \data_out[56]_i_2_n_0 ;
  wire \data_out[56]_i_3_n_0 ;
  wire \data_out[56]_i_4_n_0 ;
  wire \data_out[57]_i_1_n_0 ;
  wire \data_out[58]_i_1_n_0 ;
  wire \data_out[58]_i_2_n_0 ;
  wire \data_out[59]_i_1_n_0 ;
  wire \data_out[5]_i_1_n_0 ;
  wire \data_out[60]_i_1_n_0 ;
  wire \data_out[61]_i_1_n_0 ;
  wire \data_out[62]_i_1_n_0 ;
  wire \data_out[63]_i_1_n_0 ;
  wire \data_out[63]_i_2_n_0 ;
  wire \data_out[6]_i_1_n_0 ;
  wire \data_out[7]_i_1_n_0 ;
  wire \data_out[8]_i_1_n_0 ;
  wire \data_out[9]_i_1_n_0 ;
  wire empty;
  wire [7:4]fifo_ctrl_delay;
  wire [63:32]fifo_data_delay;
  wire local_fault;
  wire local_fault_i_1_n_0;
  wire [2:0]next_state;
  wire [73:0]rd_data;
  wire rd_en;
  wire reset;
  wire [2:0]state;
  wire [7:0]xgmii_rxc;
  wire [63:0]xgmii_rxd;
  wire [7:0]\xgmii_txc_reg2_reg[7] ;
  wire [63:0]\xgmii_txd_reg2_reg[63] ;

  LUT6 #(
    .INIT(64'h0F0D0F0F0F0F000F)) 
    asynch_fifo_i_i_2
       (.I0(asynch_fifo_i_i_3_n_0),
        .I1(asynch_fifo_i_i_4_n_0),
        .I2(local_fault),
        .I3(state[1]),
        .I4(state[0]),
        .I5(state[2]),
        .O(rd_en));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT4 #(
    .INIT(16'h4440)) 
    asynch_fifo_i_i_3
       (.I0(state[1]),
        .I1(can_insert_rd),
        .I2(rd_data[72]),
        .I3(rd_data[73]),
        .O(asynch_fifo_i_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    asynch_fifo_i_i_4
       (.I0(rd_data[72]),
        .I1(can_insert_rd),
        .I2(rd_data[73]),
        .I3(state[2]),
        .O(asynch_fifo_i_i_4_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFDFDFDFFFD)) 
    \ctrl_out[0]_i_1 
       (.I0(\data_out[2]_i_2_n_0 ),
        .I1(reset),
        .I2(local_fault),
        .I3(rd_data[64]),
        .I4(\data_out[56]_i_2_n_0 ),
        .I5(fifo_ctrl_delay[4]),
        .O(\ctrl_out[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hE2FF)) 
    \ctrl_out[1]_i_1 
       (.I0(rd_data[65]),
        .I1(\data_out[56]_i_2_n_0 ),
        .I2(fifo_ctrl_delay[5]),
        .I3(\data_out[2]_i_2_n_0 ),
        .O(\ctrl_out[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hE2FF)) 
    \ctrl_out[2]_i_1 
       (.I0(rd_data[66]),
        .I1(\data_out[56]_i_2_n_0 ),
        .I2(fifo_ctrl_delay[6]),
        .I3(\data_out[2]_i_2_n_0 ),
        .O(\ctrl_out[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hE2FF)) 
    \ctrl_out[3]_i_1 
       (.I0(rd_data[67]),
        .I1(\data_out[56]_i_2_n_0 ),
        .I2(fifo_ctrl_delay[7]),
        .I3(\data_out[2]_i_2_n_0 ),
        .O(\ctrl_out[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFF7F7F7FFF7)) 
    \ctrl_out[4]_i_1 
       (.I0(\data_out[56]_i_4_n_0 ),
        .I1(\data_out[56]_i_3_n_0 ),
        .I2(empty),
        .I3(rd_data[68]),
        .I4(\data_out[56]_i_2_n_0 ),
        .I5(rd_data[64]),
        .O(\ctrl_out[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFABABABFFAB)) 
    \ctrl_out[5]_i_1 
       (.I0(empty),
        .I1(\data_out[56]_i_4_n_0 ),
        .I2(local_fault),
        .I3(rd_data[69]),
        .I4(\data_out[56]_i_2_n_0 ),
        .I5(rd_data[65]),
        .O(\ctrl_out[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFABABABFFAB)) 
    \ctrl_out[6]_i_1 
       (.I0(empty),
        .I1(\data_out[56]_i_4_n_0 ),
        .I2(local_fault),
        .I3(rd_data[70]),
        .I4(\data_out[56]_i_2_n_0 ),
        .I5(rd_data[66]),
        .O(\ctrl_out[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFABABABFFAB)) 
    \ctrl_out[7]_i_1 
       (.I0(empty),
        .I1(\data_out[56]_i_4_n_0 ),
        .I2(local_fault),
        .I3(rd_data[71]),
        .I4(\data_out[56]_i_2_n_0 ),
        .I5(rd_data[67]),
        .O(\ctrl_out[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ctrl_out_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\ctrl_out[0]_i_1_n_0 ),
        .Q(ctrl_out[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ctrl_out_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\ctrl_out[1]_i_1_n_0 ),
        .Q(ctrl_out[1]),
        .R(\data_out[58]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ctrl_out_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\ctrl_out[2]_i_1_n_0 ),
        .Q(ctrl_out[2]),
        .R(\data_out[58]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ctrl_out_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\ctrl_out[3]_i_1_n_0 ),
        .Q(ctrl_out[3]),
        .R(\data_out[58]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ctrl_out_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\ctrl_out[4]_i_1_n_0 ),
        .Q(ctrl_out[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ctrl_out_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\ctrl_out[5]_i_1_n_0 ),
        .Q(ctrl_out[5]),
        .R(\data_out[58]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ctrl_out_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\ctrl_out[6]_i_1_n_0 ),
        .Q(ctrl_out[6]),
        .R(\data_out[58]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ctrl_out_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\ctrl_out[7]_i_1_n_0 ),
        .Q(ctrl_out[7]),
        .R(\data_out[58]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00E2FFFF)) 
    \data_out[0]_i_1 
       (.I0(rd_data[0]),
        .I1(\data_out[56]_i_2_n_0 ),
        .I2(fifo_data_delay[32]),
        .I3(empty),
        .I4(\data_out[24]_i_2_n_0 ),
        .O(\data_out[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hE2FF)) 
    \data_out[10]_i_1 
       (.I0(rd_data[10]),
        .I1(\data_out[56]_i_2_n_0 ),
        .I2(fifo_data_delay[42]),
        .I3(\data_out[2]_i_2_n_0 ),
        .O(\data_out[10]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[11]_i_1 
       (.I0(empty),
        .I1(rd_data[11]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(fifo_data_delay[43]),
        .O(\data_out[11]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[12]_i_1 
       (.I0(empty),
        .I1(rd_data[12]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(fifo_data_delay[44]),
        .O(\data_out[12]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[13]_i_1 
       (.I0(empty),
        .I1(rd_data[13]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(fifo_data_delay[45]),
        .O(\data_out[13]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[14]_i_1 
       (.I0(empty),
        .I1(rd_data[14]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(fifo_data_delay[46]),
        .O(\data_out[14]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[15]_i_1 
       (.I0(empty),
        .I1(rd_data[15]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(fifo_data_delay[47]),
        .O(\data_out[15]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00E2FFFF)) 
    \data_out[16]_i_1 
       (.I0(rd_data[16]),
        .I1(\data_out[56]_i_2_n_0 ),
        .I2(fifo_data_delay[48]),
        .I3(empty),
        .I4(\data_out[24]_i_2_n_0 ),
        .O(\data_out[16]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hE2FF)) 
    \data_out[17]_i_1 
       (.I0(rd_data[17]),
        .I1(\data_out[56]_i_2_n_0 ),
        .I2(fifo_data_delay[49]),
        .I3(\data_out[2]_i_2_n_0 ),
        .O(\data_out[17]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hE2FF)) 
    \data_out[18]_i_1 
       (.I0(rd_data[18]),
        .I1(\data_out[56]_i_2_n_0 ),
        .I2(fifo_data_delay[50]),
        .I3(\data_out[2]_i_2_n_0 ),
        .O(\data_out[18]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[19]_i_1 
       (.I0(empty),
        .I1(rd_data[19]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(fifo_data_delay[51]),
        .O(\data_out[19]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hE2FF)) 
    \data_out[1]_i_1 
       (.I0(rd_data[1]),
        .I1(\data_out[56]_i_2_n_0 ),
        .I2(fifo_data_delay[33]),
        .I3(\data_out[2]_i_2_n_0 ),
        .O(\data_out[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[20]_i_1 
       (.I0(empty),
        .I1(rd_data[20]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(fifo_data_delay[52]),
        .O(\data_out[20]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[21]_i_1 
       (.I0(empty),
        .I1(rd_data[21]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(fifo_data_delay[53]),
        .O(\data_out[21]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[22]_i_1 
       (.I0(empty),
        .I1(rd_data[22]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(fifo_data_delay[54]),
        .O(\data_out[22]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[23]_i_1 
       (.I0(empty),
        .I1(rd_data[23]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(fifo_data_delay[55]),
        .O(\data_out[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h77777777FFF777F7)) 
    \data_out[24]_i_1 
       (.I0(\data_out[24]_i_2_n_0 ),
        .I1(\data_out[56]_i_3_n_0 ),
        .I2(rd_data[24]),
        .I3(\data_out[56]_i_2_n_0 ),
        .I4(fifo_data_delay[56]),
        .I5(empty),
        .O(\data_out[24]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT4 #(
    .INIT(16'hFEEF)) 
    \data_out[24]_i_2 
       (.I0(local_fault),
        .I1(state[1]),
        .I2(state[0]),
        .I3(state[2]),
        .O(\data_out[24]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hE2FF)) 
    \data_out[25]_i_1 
       (.I0(rd_data[25]),
        .I1(\data_out[56]_i_2_n_0 ),
        .I2(fifo_data_delay[57]),
        .I3(\data_out[2]_i_2_n_0 ),
        .O(\data_out[25]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hE2FF)) 
    \data_out[26]_i_1 
       (.I0(rd_data[26]),
        .I1(\data_out[56]_i_2_n_0 ),
        .I2(fifo_data_delay[58]),
        .I3(\data_out[2]_i_2_n_0 ),
        .O(\data_out[26]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[27]_i_1 
       (.I0(empty),
        .I1(rd_data[27]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(fifo_data_delay[59]),
        .O(\data_out[27]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[28]_i_1 
       (.I0(empty),
        .I1(rd_data[28]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(fifo_data_delay[60]),
        .O(\data_out[28]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[29]_i_1 
       (.I0(empty),
        .I1(rd_data[29]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(fifo_data_delay[61]),
        .O(\data_out[29]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFDFDFDFFFD)) 
    \data_out[2]_i_1 
       (.I0(\data_out[2]_i_2_n_0 ),
        .I1(reset),
        .I2(local_fault),
        .I3(rd_data[2]),
        .I4(\data_out[56]_i_2_n_0 ),
        .I5(fifo_data_delay[34]),
        .O(\data_out[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT5 #(
    .INIT(32'h0000FFF9)) 
    \data_out[2]_i_2 
       (.I0(state[2]),
        .I1(state[0]),
        .I2(state[1]),
        .I3(local_fault),
        .I4(empty),
        .O(\data_out[2]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[30]_i_1 
       (.I0(empty),
        .I1(rd_data[30]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(fifo_data_delay[62]),
        .O(\data_out[30]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFABBA)) 
    \data_out[31]_i_1 
       (.I0(local_fault),
        .I1(state[1]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(reset),
        .O(\data_out[31]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[31]_i_2 
       (.I0(empty),
        .I1(rd_data[31]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(fifo_data_delay[63]),
        .O(\data_out[31]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00B8FFFF)) 
    \data_out[32]_i_1 
       (.I0(rd_data[0]),
        .I1(\data_out[56]_i_2_n_0 ),
        .I2(rd_data[32]),
        .I3(empty),
        .I4(\data_out[56]_i_4_n_0 ),
        .O(\data_out[32]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFABABABFFAB)) 
    \data_out[33]_i_1 
       (.I0(empty),
        .I1(\data_out[56]_i_4_n_0 ),
        .I2(local_fault),
        .I3(rd_data[33]),
        .I4(\data_out[56]_i_2_n_0 ),
        .I5(rd_data[1]),
        .O(\data_out[33]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFF7F7F7FFF7)) 
    \data_out[34]_i_1 
       (.I0(\data_out[56]_i_4_n_0 ),
        .I1(\data_out[56]_i_3_n_0 ),
        .I2(empty),
        .I3(rd_data[34]),
        .I4(\data_out[56]_i_2_n_0 ),
        .I5(rd_data[2]),
        .O(\data_out[34]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFEAE0000FFFFFFFF)) 
    \data_out[35]_i_1 
       (.I0(empty),
        .I1(rd_data[35]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(rd_data[3]),
        .I4(\data_out[56]_i_4_n_0 ),
        .I5(\data_out[56]_i_3_n_0 ),
        .O(\data_out[35]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFEAE0000FFFFFFFF)) 
    \data_out[36]_i_1 
       (.I0(empty),
        .I1(rd_data[36]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(rd_data[4]),
        .I4(\data_out[56]_i_4_n_0 ),
        .I5(\data_out[56]_i_3_n_0 ),
        .O(\data_out[36]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[37]_i_1 
       (.I0(empty),
        .I1(rd_data[37]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(rd_data[5]),
        .O(\data_out[37]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[38]_i_1 
       (.I0(empty),
        .I1(rd_data[38]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(rd_data[6]),
        .O(\data_out[38]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFEAE0000FFFFFFFF)) 
    \data_out[39]_i_1 
       (.I0(empty),
        .I1(rd_data[39]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(rd_data[7]),
        .I4(\data_out[56]_i_4_n_0 ),
        .I5(\data_out[56]_i_3_n_0 ),
        .O(\data_out[39]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFEAE0000FFFFFFFF)) 
    \data_out[3]_i_1 
       (.I0(empty),
        .I1(rd_data[3]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(fifo_data_delay[35]),
        .I4(\data_out[24]_i_2_n_0 ),
        .I5(\data_out[56]_i_3_n_0 ),
        .O(\data_out[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00B8FFFF)) 
    \data_out[40]_i_1 
       (.I0(rd_data[8]),
        .I1(\data_out[56]_i_2_n_0 ),
        .I2(rd_data[40]),
        .I3(empty),
        .I4(\data_out[56]_i_4_n_0 ),
        .O(\data_out[40]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFABABABFFAB)) 
    \data_out[41]_i_1 
       (.I0(empty),
        .I1(\data_out[56]_i_4_n_0 ),
        .I2(local_fault),
        .I3(rd_data[41]),
        .I4(\data_out[56]_i_2_n_0 ),
        .I5(rd_data[9]),
        .O(\data_out[41]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFABABABFFAB)) 
    \data_out[42]_i_1 
       (.I0(empty),
        .I1(\data_out[56]_i_4_n_0 ),
        .I2(local_fault),
        .I3(rd_data[42]),
        .I4(\data_out[56]_i_2_n_0 ),
        .I5(rd_data[10]),
        .O(\data_out[42]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[43]_i_1 
       (.I0(empty),
        .I1(rd_data[43]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(rd_data[11]),
        .O(\data_out[43]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[44]_i_1 
       (.I0(empty),
        .I1(rd_data[44]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(rd_data[12]),
        .O(\data_out[44]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[45]_i_1 
       (.I0(empty),
        .I1(rd_data[45]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(rd_data[13]),
        .O(\data_out[45]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[46]_i_1 
       (.I0(empty),
        .I1(rd_data[46]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(rd_data[14]),
        .O(\data_out[46]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[47]_i_1 
       (.I0(empty),
        .I1(rd_data[47]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(rd_data[15]),
        .O(\data_out[47]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00B8FFFF)) 
    \data_out[48]_i_1 
       (.I0(rd_data[16]),
        .I1(\data_out[56]_i_2_n_0 ),
        .I2(rd_data[48]),
        .I3(empty),
        .I4(\data_out[56]_i_4_n_0 ),
        .O(\data_out[48]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFABABABFFAB)) 
    \data_out[49]_i_1 
       (.I0(empty),
        .I1(\data_out[56]_i_4_n_0 ),
        .I2(local_fault),
        .I3(rd_data[49]),
        .I4(\data_out[56]_i_2_n_0 ),
        .I5(rd_data[17]),
        .O(\data_out[49]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFEAE0000FFFFFFFF)) 
    \data_out[4]_i_1 
       (.I0(empty),
        .I1(rd_data[4]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(fifo_data_delay[36]),
        .I4(\data_out[24]_i_2_n_0 ),
        .I5(\data_out[56]_i_3_n_0 ),
        .O(\data_out[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFABABABFFAB)) 
    \data_out[50]_i_1 
       (.I0(empty),
        .I1(\data_out[56]_i_4_n_0 ),
        .I2(local_fault),
        .I3(rd_data[50]),
        .I4(\data_out[56]_i_2_n_0 ),
        .I5(rd_data[18]),
        .O(\data_out[50]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[51]_i_1 
       (.I0(empty),
        .I1(rd_data[51]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(rd_data[19]),
        .O(\data_out[51]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[52]_i_1 
       (.I0(empty),
        .I1(rd_data[52]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(rd_data[20]),
        .O(\data_out[52]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[53]_i_1 
       (.I0(empty),
        .I1(rd_data[53]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(rd_data[21]),
        .O(\data_out[53]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[54]_i_1 
       (.I0(empty),
        .I1(rd_data[54]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(rd_data[22]),
        .O(\data_out[54]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[55]_i_1 
       (.I0(empty),
        .I1(rd_data[55]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(rd_data[23]),
        .O(\data_out[55]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFFFFFFFFFF)) 
    \data_out[56]_i_1 
       (.I0(rd_data[24]),
        .I1(\data_out[56]_i_2_n_0 ),
        .I2(rd_data[56]),
        .I3(empty),
        .I4(\data_out[56]_i_3_n_0 ),
        .I5(\data_out[56]_i_4_n_0 ),
        .O(\data_out[56]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0074)) 
    \data_out[56]_i_2 
       (.I0(state[2]),
        .I1(state[1]),
        .I2(state[0]),
        .I3(local_fault),
        .O(\data_out[56]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \data_out[56]_i_3 
       (.I0(reset),
        .I1(local_fault),
        .O(\data_out[56]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFF15)) 
    \data_out[56]_i_4 
       (.I0(state[1]),
        .I1(can_insert_rd),
        .I2(rd_data[72]),
        .I3(state[2]),
        .I4(state[0]),
        .O(\data_out[56]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFABABABFFAB)) 
    \data_out[57]_i_1 
       (.I0(empty),
        .I1(\data_out[56]_i_4_n_0 ),
        .I2(local_fault),
        .I3(rd_data[57]),
        .I4(\data_out[56]_i_2_n_0 ),
        .I5(rd_data[25]),
        .O(\data_out[57]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \data_out[58]_i_1 
       (.I0(local_fault),
        .I1(reset),
        .O(\data_out[58]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFABABABFFAB)) 
    \data_out[58]_i_2 
       (.I0(empty),
        .I1(\data_out[56]_i_4_n_0 ),
        .I2(local_fault),
        .I3(rd_data[58]),
        .I4(\data_out[56]_i_2_n_0 ),
        .I5(rd_data[26]),
        .O(\data_out[58]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[59]_i_1 
       (.I0(empty),
        .I1(rd_data[59]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(rd_data[27]),
        .O(\data_out[59]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[5]_i_1 
       (.I0(empty),
        .I1(rd_data[5]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(fifo_data_delay[37]),
        .O(\data_out[5]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[60]_i_1 
       (.I0(empty),
        .I1(rd_data[60]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(rd_data[28]),
        .O(\data_out[60]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[61]_i_1 
       (.I0(empty),
        .I1(rd_data[61]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(rd_data[29]),
        .O(\data_out[61]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[62]_i_1 
       (.I0(empty),
        .I1(rd_data[62]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(rd_data[30]),
        .O(\data_out[62]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h555555555555FDDD)) 
    \data_out[63]_i_1 
       (.I0(\data_out[56]_i_3_n_0 ),
        .I1(state[1]),
        .I2(can_insert_rd),
        .I3(rd_data[72]),
        .I4(state[2]),
        .I5(state[0]),
        .O(\data_out[63]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[63]_i_2 
       (.I0(empty),
        .I1(rd_data[63]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(rd_data[31]),
        .O(\data_out[63]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \data_out[6]_i_1 
       (.I0(empty),
        .I1(rd_data[6]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(fifo_data_delay[38]),
        .O(\data_out[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFEAE0000FFFFFFFF)) 
    \data_out[7]_i_1 
       (.I0(empty),
        .I1(rd_data[7]),
        .I2(\data_out[56]_i_2_n_0 ),
        .I3(fifo_data_delay[39]),
        .I4(\data_out[24]_i_2_n_0 ),
        .I5(\data_out[56]_i_3_n_0 ),
        .O(\data_out[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00E2FFFF)) 
    \data_out[8]_i_1 
       (.I0(rd_data[8]),
        .I1(\data_out[56]_i_2_n_0 ),
        .I2(fifo_data_delay[40]),
        .I3(empty),
        .I4(\data_out[24]_i_2_n_0 ),
        .O(\data_out[8]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hE2FF)) 
    \data_out[9]_i_1 
       (.I0(rd_data[9]),
        .I1(\data_out[56]_i_2_n_0 ),
        .I2(fifo_data_delay[41]),
        .I3(\data_out[2]_i_2_n_0 ),
        .O(\data_out[9]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[0]_i_1_n_0 ),
        .Q(data_out[0]),
        .R(\data_out[58]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[10]_i_1_n_0 ),
        .Q(data_out[10]),
        .R(\data_out[58]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[11]_i_1_n_0 ),
        .Q(data_out[11]),
        .R(\data_out[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[12]_i_1_n_0 ),
        .Q(data_out[12]),
        .R(\data_out[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[13]_i_1_n_0 ),
        .Q(data_out[13]),
        .R(\data_out[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[14]_i_1_n_0 ),
        .Q(data_out[14]),
        .R(\data_out[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[15]_i_1_n_0 ),
        .Q(data_out[15]),
        .R(\data_out[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[16] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[16]_i_1_n_0 ),
        .Q(data_out[16]),
        .R(\data_out[58]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[17] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[17]_i_1_n_0 ),
        .Q(data_out[17]),
        .R(\data_out[58]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[18] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[18]_i_1_n_0 ),
        .Q(data_out[18]),
        .R(\data_out[58]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[19] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[19]_i_1_n_0 ),
        .Q(data_out[19]),
        .R(\data_out[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[1]_i_1_n_0 ),
        .Q(data_out[1]),
        .R(\data_out[58]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[20] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[20]_i_1_n_0 ),
        .Q(data_out[20]),
        .R(\data_out[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[21] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[21]_i_1_n_0 ),
        .Q(data_out[21]),
        .R(\data_out[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[22] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[22]_i_1_n_0 ),
        .Q(data_out[22]),
        .R(\data_out[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[23] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[23]_i_1_n_0 ),
        .Q(data_out[23]),
        .R(\data_out[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[24] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[24]_i_1_n_0 ),
        .Q(data_out[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[25] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[25]_i_1_n_0 ),
        .Q(data_out[25]),
        .R(\data_out[58]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[26] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[26]_i_1_n_0 ),
        .Q(data_out[26]),
        .R(\data_out[58]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[27] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[27]_i_1_n_0 ),
        .Q(data_out[27]),
        .R(\data_out[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[28] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[28]_i_1_n_0 ),
        .Q(data_out[28]),
        .R(\data_out[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[29] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[29]_i_1_n_0 ),
        .Q(data_out[29]),
        .R(\data_out[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[2]_i_1_n_0 ),
        .Q(data_out[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[30] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[30]_i_1_n_0 ),
        .Q(data_out[30]),
        .R(\data_out[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[31] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[31]_i_2_n_0 ),
        .Q(data_out[31]),
        .R(\data_out[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[32] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[32]_i_1_n_0 ),
        .Q(data_out[32]),
        .R(\data_out[58]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[33] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[33]_i_1_n_0 ),
        .Q(data_out[33]),
        .R(\data_out[58]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[34] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[34]_i_1_n_0 ),
        .Q(data_out[34]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[35] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[35]_i_1_n_0 ),
        .Q(data_out[35]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[36] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[36]_i_1_n_0 ),
        .Q(data_out[36]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[37] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[37]_i_1_n_0 ),
        .Q(data_out[37]),
        .R(\data_out[63]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[38] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[38]_i_1_n_0 ),
        .Q(data_out[38]),
        .R(\data_out[63]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[39] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[39]_i_1_n_0 ),
        .Q(data_out[39]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[3]_i_1_n_0 ),
        .Q(data_out[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[40] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[40]_i_1_n_0 ),
        .Q(data_out[40]),
        .R(\data_out[58]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[41] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[41]_i_1_n_0 ),
        .Q(data_out[41]),
        .R(\data_out[58]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[42] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[42]_i_1_n_0 ),
        .Q(data_out[42]),
        .R(\data_out[58]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[43] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[43]_i_1_n_0 ),
        .Q(data_out[43]),
        .R(\data_out[63]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[44] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[44]_i_1_n_0 ),
        .Q(data_out[44]),
        .R(\data_out[63]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[45] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[45]_i_1_n_0 ),
        .Q(data_out[45]),
        .R(\data_out[63]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[46] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[46]_i_1_n_0 ),
        .Q(data_out[46]),
        .R(\data_out[63]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[47] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[47]_i_1_n_0 ),
        .Q(data_out[47]),
        .R(\data_out[63]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[48] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[48]_i_1_n_0 ),
        .Q(data_out[48]),
        .R(\data_out[58]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[49] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[49]_i_1_n_0 ),
        .Q(data_out[49]),
        .R(\data_out[58]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[4]_i_1_n_0 ),
        .Q(data_out[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[50] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[50]_i_1_n_0 ),
        .Q(data_out[50]),
        .R(\data_out[58]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[51] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[51]_i_1_n_0 ),
        .Q(data_out[51]),
        .R(\data_out[63]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[52] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[52]_i_1_n_0 ),
        .Q(data_out[52]),
        .R(\data_out[63]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[53] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[53]_i_1_n_0 ),
        .Q(data_out[53]),
        .R(\data_out[63]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[54] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[54]_i_1_n_0 ),
        .Q(data_out[54]),
        .R(\data_out[63]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[55] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[55]_i_1_n_0 ),
        .Q(data_out[55]),
        .R(\data_out[63]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[56] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[56]_i_1_n_0 ),
        .Q(data_out[56]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[57] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[57]_i_1_n_0 ),
        .Q(data_out[57]),
        .R(\data_out[58]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[58] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[58]_i_2_n_0 ),
        .Q(data_out[58]),
        .R(\data_out[58]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[59] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[59]_i_1_n_0 ),
        .Q(data_out[59]),
        .R(\data_out[63]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[5]_i_1_n_0 ),
        .Q(data_out[5]),
        .R(\data_out[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[60] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[60]_i_1_n_0 ),
        .Q(data_out[60]),
        .R(\data_out[63]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[61] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[61]_i_1_n_0 ),
        .Q(data_out[61]),
        .R(\data_out[63]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[62] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[62]_i_1_n_0 ),
        .Q(data_out[62]),
        .R(\data_out[63]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[63] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[63]_i_2_n_0 ),
        .Q(data_out[63]),
        .R(\data_out[63]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[6]_i_1_n_0 ),
        .Q(data_out[6]),
        .R(\data_out[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[7]_i_1_n_0 ),
        .Q(data_out[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[8]_i_1_n_0 ),
        .Q(data_out[8]),
        .R(\data_out[58]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[9]_i_1_n_0 ),
        .Q(data_out[9]),
        .R(\data_out[58]_i_1_n_0 ));
  FDSE \fifo_ctrl_delay_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[68]),
        .Q(fifo_ctrl_delay[4]),
        .S(reset));
  FDRE \fifo_ctrl_delay_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[69]),
        .Q(fifo_ctrl_delay[5]),
        .R(reset));
  FDRE \fifo_ctrl_delay_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[70]),
        .Q(fifo_ctrl_delay[6]),
        .R(reset));
  FDRE \fifo_ctrl_delay_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[71]),
        .Q(fifo_ctrl_delay[7]),
        .R(reset));
  FDRE \fifo_data_delay_reg[32] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[32]),
        .Q(fifo_data_delay[32]),
        .R(reset));
  FDRE \fifo_data_delay_reg[33] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[33]),
        .Q(fifo_data_delay[33]),
        .R(reset));
  FDSE \fifo_data_delay_reg[34] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[34]),
        .Q(fifo_data_delay[34]),
        .S(reset));
  FDSE \fifo_data_delay_reg[35] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[35]),
        .Q(fifo_data_delay[35]),
        .S(reset));
  FDSE \fifo_data_delay_reg[36] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[36]),
        .Q(fifo_data_delay[36]),
        .S(reset));
  FDRE \fifo_data_delay_reg[37] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[37]),
        .Q(fifo_data_delay[37]),
        .R(reset));
  FDRE \fifo_data_delay_reg[38] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[38]),
        .Q(fifo_data_delay[38]),
        .R(reset));
  FDSE \fifo_data_delay_reg[39] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[39]),
        .Q(fifo_data_delay[39]),
        .S(reset));
  FDRE \fifo_data_delay_reg[40] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[40]),
        .Q(fifo_data_delay[40]),
        .R(reset));
  FDRE \fifo_data_delay_reg[41] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[41]),
        .Q(fifo_data_delay[41]),
        .R(reset));
  FDRE \fifo_data_delay_reg[42] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[42]),
        .Q(fifo_data_delay[42]),
        .R(reset));
  FDRE \fifo_data_delay_reg[43] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[43]),
        .Q(fifo_data_delay[43]),
        .R(reset));
  FDRE \fifo_data_delay_reg[44] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[44]),
        .Q(fifo_data_delay[44]),
        .R(reset));
  FDRE \fifo_data_delay_reg[45] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[45]),
        .Q(fifo_data_delay[45]),
        .R(reset));
  FDRE \fifo_data_delay_reg[46] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[46]),
        .Q(fifo_data_delay[46]),
        .R(reset));
  FDRE \fifo_data_delay_reg[47] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[47]),
        .Q(fifo_data_delay[47]),
        .R(reset));
  FDRE \fifo_data_delay_reg[48] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[48]),
        .Q(fifo_data_delay[48]),
        .R(reset));
  FDRE \fifo_data_delay_reg[49] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[49]),
        .Q(fifo_data_delay[49]),
        .R(reset));
  FDRE \fifo_data_delay_reg[50] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[50]),
        .Q(fifo_data_delay[50]),
        .R(reset));
  FDRE \fifo_data_delay_reg[51] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[51]),
        .Q(fifo_data_delay[51]),
        .R(reset));
  FDRE \fifo_data_delay_reg[52] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[52]),
        .Q(fifo_data_delay[52]),
        .R(reset));
  FDRE \fifo_data_delay_reg[53] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[53]),
        .Q(fifo_data_delay[53]),
        .R(reset));
  FDRE \fifo_data_delay_reg[54] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[54]),
        .Q(fifo_data_delay[54]),
        .R(reset));
  FDRE \fifo_data_delay_reg[55] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[55]),
        .Q(fifo_data_delay[55]),
        .R(reset));
  FDSE \fifo_data_delay_reg[56] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[56]),
        .Q(fifo_data_delay[56]),
        .S(reset));
  FDRE \fifo_data_delay_reg[57] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[57]),
        .Q(fifo_data_delay[57]),
        .R(reset));
  FDRE \fifo_data_delay_reg[58] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[58]),
        .Q(fifo_data_delay[58]),
        .R(reset));
  FDRE \fifo_data_delay_reg[59] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[59]),
        .Q(fifo_data_delay[59]),
        .R(reset));
  FDRE \fifo_data_delay_reg[60] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[60]),
        .Q(fifo_data_delay[60]),
        .R(reset));
  FDRE \fifo_data_delay_reg[61] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[61]),
        .Q(fifo_data_delay[61]),
        .R(reset));
  FDRE \fifo_data_delay_reg[62] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[62]),
        .Q(fifo_data_delay[62]),
        .R(reset));
  FDRE \fifo_data_delay_reg[63] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[63]),
        .Q(fifo_data_delay[63]),
        .R(reset));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT4 #(
    .INIT(16'hFFF8)) 
    local_fault_i_1
       (.I0(local_fault),
        .I1(can_insert_rd),
        .I2(reset),
        .I3(empty),
        .O(local_fault_i_1_n_0));
  FDRE local_fault_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(local_fault_i_1_n_0),
        .Q(local_fault),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hDFDFDFFF10101000)) 
    \state[0]_i_1 
       (.I0(state[2]),
        .I1(state[1]),
        .I2(can_insert_rd),
        .I3(rd_data[72]),
        .I4(rd_data[73]),
        .I5(state[0]),
        .O(next_state[0]));
  LUT6 #(
    .INIT(64'hF0F0F0F040080008)) 
    \state[1]_i_1 
       (.I0(rd_data[72]),
        .I1(can_insert_rd),
        .I2(state[2]),
        .I3(state[0]),
        .I4(rd_data[73]),
        .I5(state[1]),
        .O(next_state[1]));
  LUT6 #(
    .INIT(64'hEEEEEEEEAAAA2AAA)) 
    \state[2]_i_1 
       (.I0(state[0]),
        .I1(state[2]),
        .I2(rd_data[73]),
        .I3(can_insert_rd),
        .I4(rd_data[72]),
        .I5(state[1]),
        .O(next_state[2]));
  FDRE \state_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(next_state[0]),
        .Q(state[0]),
        .R(reset));
  FDRE \state_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(next_state[1]),
        .Q(state[1]),
        .R(reset));
  FDRE \state_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(next_state[2]),
        .Q(state[2]),
        .R(reset));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxc[0]_INST_0 
       (.I0(\xgmii_txc_reg2_reg[7] [0]),
        .I1(configuration_vector),
        .I2(ctrl_out[0]),
        .O(xgmii_rxc[0]));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxc[1]_INST_0 
       (.I0(\xgmii_txc_reg2_reg[7] [1]),
        .I1(configuration_vector),
        .I2(ctrl_out[1]),
        .O(xgmii_rxc[1]));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxc[2]_INST_0 
       (.I0(\xgmii_txc_reg2_reg[7] [2]),
        .I1(configuration_vector),
        .I2(ctrl_out[2]),
        .O(xgmii_rxc[2]));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxc[3]_INST_0 
       (.I0(\xgmii_txc_reg2_reg[7] [3]),
        .I1(configuration_vector),
        .I2(ctrl_out[3]),
        .O(xgmii_rxc[3]));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxc[4]_INST_0 
       (.I0(\xgmii_txc_reg2_reg[7] [4]),
        .I1(configuration_vector),
        .I2(ctrl_out[4]),
        .O(xgmii_rxc[4]));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxc[5]_INST_0 
       (.I0(\xgmii_txc_reg2_reg[7] [5]),
        .I1(configuration_vector),
        .I2(ctrl_out[5]),
        .O(xgmii_rxc[5]));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxc[6]_INST_0 
       (.I0(\xgmii_txc_reg2_reg[7] [6]),
        .I1(configuration_vector),
        .I2(ctrl_out[6]),
        .O(xgmii_rxc[6]));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxc[7]_INST_0 
       (.I0(\xgmii_txc_reg2_reg[7] [7]),
        .I1(configuration_vector),
        .I2(ctrl_out[7]),
        .O(xgmii_rxc[7]));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[0]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [0]),
        .I1(configuration_vector),
        .I2(data_out[0]),
        .O(xgmii_rxd[0]));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[10]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [10]),
        .I1(configuration_vector),
        .I2(data_out[10]),
        .O(xgmii_rxd[10]));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[11]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [11]),
        .I1(configuration_vector),
        .I2(data_out[11]),
        .O(xgmii_rxd[11]));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[12]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [12]),
        .I1(configuration_vector),
        .I2(data_out[12]),
        .O(xgmii_rxd[12]));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[13]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [13]),
        .I1(configuration_vector),
        .I2(data_out[13]),
        .O(xgmii_rxd[13]));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[14]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [14]),
        .I1(configuration_vector),
        .I2(data_out[14]),
        .O(xgmii_rxd[14]));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[15]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [15]),
        .I1(configuration_vector),
        .I2(data_out[15]),
        .O(xgmii_rxd[15]));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[16]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [16]),
        .I1(configuration_vector),
        .I2(data_out[16]),
        .O(xgmii_rxd[16]));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[17]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [17]),
        .I1(configuration_vector),
        .I2(data_out[17]),
        .O(xgmii_rxd[17]));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[18]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [18]),
        .I1(configuration_vector),
        .I2(data_out[18]),
        .O(xgmii_rxd[18]));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[19]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [19]),
        .I1(configuration_vector),
        .I2(data_out[19]),
        .O(xgmii_rxd[19]));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[1]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [1]),
        .I1(configuration_vector),
        .I2(data_out[1]),
        .O(xgmii_rxd[1]));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[20]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [20]),
        .I1(configuration_vector),
        .I2(data_out[20]),
        .O(xgmii_rxd[20]));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[21]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [21]),
        .I1(configuration_vector),
        .I2(data_out[21]),
        .O(xgmii_rxd[21]));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[22]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [22]),
        .I1(configuration_vector),
        .I2(data_out[22]),
        .O(xgmii_rxd[22]));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[23]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [23]),
        .I1(configuration_vector),
        .I2(data_out[23]),
        .O(xgmii_rxd[23]));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[24]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [24]),
        .I1(configuration_vector),
        .I2(data_out[24]),
        .O(xgmii_rxd[24]));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[25]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [25]),
        .I1(configuration_vector),
        .I2(data_out[25]),
        .O(xgmii_rxd[25]));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[26]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [26]),
        .I1(configuration_vector),
        .I2(data_out[26]),
        .O(xgmii_rxd[26]));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[27]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [27]),
        .I1(configuration_vector),
        .I2(data_out[27]),
        .O(xgmii_rxd[27]));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[28]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [28]),
        .I1(configuration_vector),
        .I2(data_out[28]),
        .O(xgmii_rxd[28]));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[29]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [29]),
        .I1(configuration_vector),
        .I2(data_out[29]),
        .O(xgmii_rxd[29]));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[2]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [2]),
        .I1(configuration_vector),
        .I2(data_out[2]),
        .O(xgmii_rxd[2]));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[30]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [30]),
        .I1(configuration_vector),
        .I2(data_out[30]),
        .O(xgmii_rxd[30]));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[31]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [31]),
        .I1(configuration_vector),
        .I2(data_out[31]),
        .O(xgmii_rxd[31]));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[32]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [32]),
        .I1(configuration_vector),
        .I2(data_out[32]),
        .O(xgmii_rxd[32]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[33]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [33]),
        .I1(configuration_vector),
        .I2(data_out[33]),
        .O(xgmii_rxd[33]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[34]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [34]),
        .I1(configuration_vector),
        .I2(data_out[34]),
        .O(xgmii_rxd[34]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[35]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [35]),
        .I1(configuration_vector),
        .I2(data_out[35]),
        .O(xgmii_rxd[35]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[36]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [36]),
        .I1(configuration_vector),
        .I2(data_out[36]),
        .O(xgmii_rxd[36]));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[37]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [37]),
        .I1(configuration_vector),
        .I2(data_out[37]),
        .O(xgmii_rxd[37]));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[38]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [38]),
        .I1(configuration_vector),
        .I2(data_out[38]),
        .O(xgmii_rxd[38]));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[39]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [39]),
        .I1(configuration_vector),
        .I2(data_out[39]),
        .O(xgmii_rxd[39]));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[3]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [3]),
        .I1(configuration_vector),
        .I2(data_out[3]),
        .O(xgmii_rxd[3]));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[40]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [40]),
        .I1(configuration_vector),
        .I2(data_out[40]),
        .O(xgmii_rxd[40]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[41]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [41]),
        .I1(configuration_vector),
        .I2(data_out[41]),
        .O(xgmii_rxd[41]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[42]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [42]),
        .I1(configuration_vector),
        .I2(data_out[42]),
        .O(xgmii_rxd[42]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[43]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [43]),
        .I1(configuration_vector),
        .I2(data_out[43]),
        .O(xgmii_rxd[43]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[44]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [44]),
        .I1(configuration_vector),
        .I2(data_out[44]),
        .O(xgmii_rxd[44]));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[45]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [45]),
        .I1(configuration_vector),
        .I2(data_out[45]),
        .O(xgmii_rxd[45]));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[46]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [46]),
        .I1(configuration_vector),
        .I2(data_out[46]),
        .O(xgmii_rxd[46]));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[47]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [47]),
        .I1(configuration_vector),
        .I2(data_out[47]),
        .O(xgmii_rxd[47]));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[48]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [48]),
        .I1(configuration_vector),
        .I2(data_out[48]),
        .O(xgmii_rxd[48]));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[49]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [49]),
        .I1(configuration_vector),
        .I2(data_out[49]),
        .O(xgmii_rxd[49]));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[4]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [4]),
        .I1(configuration_vector),
        .I2(data_out[4]),
        .O(xgmii_rxd[4]));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[50]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [50]),
        .I1(configuration_vector),
        .I2(data_out[50]),
        .O(xgmii_rxd[50]));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[51]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [51]),
        .I1(configuration_vector),
        .I2(data_out[51]),
        .O(xgmii_rxd[51]));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[52]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [52]),
        .I1(configuration_vector),
        .I2(data_out[52]),
        .O(xgmii_rxd[52]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[53]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [53]),
        .I1(configuration_vector),
        .I2(data_out[53]),
        .O(xgmii_rxd[53]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[54]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [54]),
        .I1(configuration_vector),
        .I2(data_out[54]),
        .O(xgmii_rxd[54]));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[55]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [55]),
        .I1(configuration_vector),
        .I2(data_out[55]),
        .O(xgmii_rxd[55]));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[56]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [56]),
        .I1(configuration_vector),
        .I2(data_out[56]),
        .O(xgmii_rxd[56]));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[57]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [57]),
        .I1(configuration_vector),
        .I2(data_out[57]),
        .O(xgmii_rxd[57]));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[58]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [58]),
        .I1(configuration_vector),
        .I2(data_out[58]),
        .O(xgmii_rxd[58]));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[59]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [59]),
        .I1(configuration_vector),
        .I2(data_out[59]),
        .O(xgmii_rxd[59]));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[5]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [5]),
        .I1(configuration_vector),
        .I2(data_out[5]),
        .O(xgmii_rxd[5]));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[60]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [60]),
        .I1(configuration_vector),
        .I2(data_out[60]),
        .O(xgmii_rxd[60]));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[61]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [61]),
        .I1(configuration_vector),
        .I2(data_out[61]),
        .O(xgmii_rxd[61]));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[62]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [62]),
        .I1(configuration_vector),
        .I2(data_out[62]),
        .O(xgmii_rxd[62]));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[63]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [63]),
        .I1(configuration_vector),
        .I2(data_out[63]),
        .O(xgmii_rxd[63]));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[6]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [6]),
        .I1(configuration_vector),
        .I2(data_out[6]),
        .O(xgmii_rxd[6]));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[7]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [7]),
        .I1(configuration_vector),
        .I2(data_out[7]),
        .O(xgmii_rxd[7]));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[8]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [8]),
        .I1(configuration_vector),
        .I2(data_out[8]),
        .O(xgmii_rxd[8]));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \xgmii_rxd[9]_INST_0 
       (.I0(\xgmii_txd_reg2_reg[63] [9]),
        .I1(configuration_vector),
        .I2(data_out[9]),
        .O(xgmii_rxd[9]));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_ieee_counters
   (Q,
    \q_reg[5] ,
    \q_reg[7] ,
    pcs_ber_count_control_core_int,
    pcs_error_block_count_control_core_int,
    pcs_test_pattern_error_count_control_core_int,
    SR,
    coreclk,
    \q_reg[0] );
  output [15:0]Q;
  output [5:0]\q_reg[5] ;
  output [7:0]\q_reg[7] ;
  input pcs_ber_count_control_core_int;
  input pcs_error_block_count_control_core_int;
  input pcs_test_pattern_error_count_control_core_int;
  input [0:0]SR;
  input coreclk;
  input [0:0]\q_reg[0] ;

  wire [15:0]Q;
  wire [0:0]SR;
  wire coreclk;
  wire [5:0]p_0_in__0;
  wire [7:0]p_0_in__1;
  wire [15:0]p_0_in__2;
  wire pcs_ber_count0;
  wire \pcs_ber_count[5]_i_4_n_0 ;
  wire pcs_ber_count_control_core_int;
  wire pcs_error_block_count0;
  wire \pcs_error_block_count[7]_i_3_n_0 ;
  wire pcs_error_block_count_control_core_int;
  wire pcs_test_pattern_error_count0;
  wire pcs_test_pattern_error_count0_carry__0_i_1_n_0;
  wire pcs_test_pattern_error_count0_carry__0_i_2_n_0;
  wire pcs_test_pattern_error_count0_carry__0_i_3_n_0;
  wire pcs_test_pattern_error_count0_carry__0_i_4_n_0;
  wire pcs_test_pattern_error_count0_carry__0_i_5_n_0;
  wire pcs_test_pattern_error_count0_carry__0_i_6_n_0;
  wire pcs_test_pattern_error_count0_carry__0_i_7_n_0;
  wire pcs_test_pattern_error_count0_carry__0_n_2;
  wire pcs_test_pattern_error_count0_carry__0_n_3;
  wire pcs_test_pattern_error_count0_carry__0_n_5;
  wire pcs_test_pattern_error_count0_carry__0_n_6;
  wire pcs_test_pattern_error_count0_carry__0_n_7;
  wire pcs_test_pattern_error_count0_carry_i_1_n_0;
  wire pcs_test_pattern_error_count0_carry_i_2_n_0;
  wire pcs_test_pattern_error_count0_carry_i_3_n_0;
  wire pcs_test_pattern_error_count0_carry_i_4_n_0;
  wire pcs_test_pattern_error_count0_carry_i_5_n_0;
  wire pcs_test_pattern_error_count0_carry_i_6_n_0;
  wire pcs_test_pattern_error_count0_carry_i_7_n_0;
  wire pcs_test_pattern_error_count0_carry_i_8_n_0;
  wire pcs_test_pattern_error_count0_carry_n_0;
  wire pcs_test_pattern_error_count0_carry_n_1;
  wire pcs_test_pattern_error_count0_carry_n_2;
  wire pcs_test_pattern_error_count0_carry_n_3;
  wire pcs_test_pattern_error_count0_carry_n_5;
  wire pcs_test_pattern_error_count0_carry_n_6;
  wire pcs_test_pattern_error_count0_carry_n_7;
  wire \pcs_test_pattern_error_count[15]_i_2_n_0 ;
  wire \pcs_test_pattern_error_count[15]_i_3_n_0 ;
  wire \pcs_test_pattern_error_count[15]_i_4_n_0 ;
  wire \pcs_test_pattern_error_count[15]_i_5_n_0 ;
  wire pcs_test_pattern_error_count_control_core_int;
  wire [0:0]\q_reg[0] ;
  wire [5:0]\q_reg[5] ;
  wire [7:0]\q_reg[7] ;
  wire [3:3]NLW_pcs_test_pattern_error_count0_carry_CO_UNCONNECTED;
  wire [7:3]NLW_pcs_test_pattern_error_count0_carry__0_CO_UNCONNECTED;
  wire [7:7]NLW_pcs_test_pattern_error_count0_carry__0_DI_UNCONNECTED;
  wire [7:7]NLW_pcs_test_pattern_error_count0_carry__0_O_UNCONNECTED;
  wire [7:7]NLW_pcs_test_pattern_error_count0_carry__0_S_UNCONNECTED;

  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \pcs_ber_count[0]_i_1 
       (.I0(\q_reg[5] [0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \pcs_ber_count[1]_i_1 
       (.I0(\q_reg[5] [0]),
        .I1(\q_reg[5] [1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \pcs_ber_count[2]_i_1 
       (.I0(\q_reg[5] [2]),
        .I1(\q_reg[5] [1]),
        .I2(\q_reg[5] [0]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \pcs_ber_count[3]_i_1 
       (.I0(\q_reg[5] [3]),
        .I1(\q_reg[5] [0]),
        .I2(\q_reg[5] [1]),
        .I3(\q_reg[5] [2]),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \pcs_ber_count[4]_i_1 
       (.I0(\q_reg[5] [4]),
        .I1(\q_reg[5] [2]),
        .I2(\q_reg[5] [1]),
        .I3(\q_reg[5] [0]),
        .I4(\q_reg[5] [3]),
        .O(p_0_in__0[4]));
  LUT3 #(
    .INIT(8'h2A)) 
    \pcs_ber_count[5]_i_2 
       (.I0(pcs_ber_count_control_core_int),
        .I1(\pcs_ber_count[5]_i_4_n_0 ),
        .I2(\q_reg[5] [5]),
        .O(pcs_ber_count0));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \pcs_ber_count[5]_i_3 
       (.I0(\q_reg[5] [5]),
        .I1(\q_reg[5] [3]),
        .I2(\q_reg[5] [0]),
        .I3(\q_reg[5] [1]),
        .I4(\q_reg[5] [2]),
        .I5(\q_reg[5] [4]),
        .O(p_0_in__0[5]));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \pcs_ber_count[5]_i_4 
       (.I0(\q_reg[5] [4]),
        .I1(\q_reg[5] [2]),
        .I2(\q_reg[5] [1]),
        .I3(\q_reg[5] [0]),
        .I4(\q_reg[5] [3]),
        .O(\pcs_ber_count[5]_i_4_n_0 ));
  FDRE \pcs_ber_count_reg[0] 
       (.C(coreclk),
        .CE(pcs_ber_count0),
        .D(p_0_in__0[0]),
        .Q(\q_reg[5] [0]),
        .R(SR));
  FDRE \pcs_ber_count_reg[1] 
       (.C(coreclk),
        .CE(pcs_ber_count0),
        .D(p_0_in__0[1]),
        .Q(\q_reg[5] [1]),
        .R(SR));
  FDRE \pcs_ber_count_reg[2] 
       (.C(coreclk),
        .CE(pcs_ber_count0),
        .D(p_0_in__0[2]),
        .Q(\q_reg[5] [2]),
        .R(SR));
  FDRE \pcs_ber_count_reg[3] 
       (.C(coreclk),
        .CE(pcs_ber_count0),
        .D(p_0_in__0[3]),
        .Q(\q_reg[5] [3]),
        .R(SR));
  FDRE \pcs_ber_count_reg[4] 
       (.C(coreclk),
        .CE(pcs_ber_count0),
        .D(p_0_in__0[4]),
        .Q(\q_reg[5] [4]),
        .R(SR));
  FDRE \pcs_ber_count_reg[5] 
       (.C(coreclk),
        .CE(pcs_ber_count0),
        .D(p_0_in__0[5]),
        .Q(\q_reg[5] [5]),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \pcs_error_block_count[0]_i_1 
       (.I0(\q_reg[7] [0]),
        .O(p_0_in__1[0]));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \pcs_error_block_count[1]_i_1 
       (.I0(\q_reg[7] [0]),
        .I1(\q_reg[7] [1]),
        .O(p_0_in__1[1]));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \pcs_error_block_count[2]_i_1 
       (.I0(\q_reg[7] [2]),
        .I1(\q_reg[7] [0]),
        .I2(\q_reg[7] [1]),
        .O(p_0_in__1[2]));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \pcs_error_block_count[3]_i_1 
       (.I0(\q_reg[7] [3]),
        .I1(\q_reg[7] [1]),
        .I2(\q_reg[7] [0]),
        .I3(\q_reg[7] [2]),
        .O(p_0_in__1[3]));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \pcs_error_block_count[4]_i_1 
       (.I0(\q_reg[7] [4]),
        .I1(\q_reg[7] [2]),
        .I2(\q_reg[7] [0]),
        .I3(\q_reg[7] [1]),
        .I4(\q_reg[7] [3]),
        .O(p_0_in__1[4]));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \pcs_error_block_count[5]_i_1 
       (.I0(\q_reg[7] [5]),
        .I1(\q_reg[7] [3]),
        .I2(\q_reg[7] [1]),
        .I3(\q_reg[7] [0]),
        .I4(\q_reg[7] [2]),
        .I5(\q_reg[7] [4]),
        .O(p_0_in__1[5]));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \pcs_error_block_count[6]_i_1 
       (.I0(\pcs_error_block_count[7]_i_3_n_0 ),
        .I1(\q_reg[7] [6]),
        .O(p_0_in__1[6]));
  LUT4 #(
    .INIT(16'hA2AA)) 
    \pcs_error_block_count[7]_i_1 
       (.I0(pcs_error_block_count_control_core_int),
        .I1(\q_reg[7] [6]),
        .I2(\pcs_error_block_count[7]_i_3_n_0 ),
        .I3(\q_reg[7] [7]),
        .O(pcs_error_block_count0));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT3 #(
    .INIT(8'h9A)) 
    \pcs_error_block_count[7]_i_2 
       (.I0(\q_reg[7] [7]),
        .I1(\pcs_error_block_count[7]_i_3_n_0 ),
        .I2(\q_reg[7] [6]),
        .O(p_0_in__1[7]));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \pcs_error_block_count[7]_i_3 
       (.I0(\q_reg[7] [4]),
        .I1(\q_reg[7] [2]),
        .I2(\q_reg[7] [0]),
        .I3(\q_reg[7] [1]),
        .I4(\q_reg[7] [3]),
        .I5(\q_reg[7] [5]),
        .O(\pcs_error_block_count[7]_i_3_n_0 ));
  FDRE \pcs_error_block_count_reg[0] 
       (.C(coreclk),
        .CE(pcs_error_block_count0),
        .D(p_0_in__1[0]),
        .Q(\q_reg[7] [0]),
        .R(SR));
  FDRE \pcs_error_block_count_reg[1] 
       (.C(coreclk),
        .CE(pcs_error_block_count0),
        .D(p_0_in__1[1]),
        .Q(\q_reg[7] [1]),
        .R(SR));
  FDRE \pcs_error_block_count_reg[2] 
       (.C(coreclk),
        .CE(pcs_error_block_count0),
        .D(p_0_in__1[2]),
        .Q(\q_reg[7] [2]),
        .R(SR));
  FDRE \pcs_error_block_count_reg[3] 
       (.C(coreclk),
        .CE(pcs_error_block_count0),
        .D(p_0_in__1[3]),
        .Q(\q_reg[7] [3]),
        .R(SR));
  FDRE \pcs_error_block_count_reg[4] 
       (.C(coreclk),
        .CE(pcs_error_block_count0),
        .D(p_0_in__1[4]),
        .Q(\q_reg[7] [4]),
        .R(SR));
  FDRE \pcs_error_block_count_reg[5] 
       (.C(coreclk),
        .CE(pcs_error_block_count0),
        .D(p_0_in__1[5]),
        .Q(\q_reg[7] [5]),
        .R(SR));
  FDRE \pcs_error_block_count_reg[6] 
       (.C(coreclk),
        .CE(pcs_error_block_count0),
        .D(p_0_in__1[6]),
        .Q(\q_reg[7] [6]),
        .R(SR));
  FDRE \pcs_error_block_count_reg[7] 
       (.C(coreclk),
        .CE(pcs_error_block_count0),
        .D(p_0_in__1[7]),
        .Q(\q_reg[7] [7]),
        .R(SR));
  CARRY8 pcs_test_pattern_error_count0_carry
       (.CI(Q[0]),
        .CI_TOP(1'b0),
        .CO({pcs_test_pattern_error_count0_carry_n_0,pcs_test_pattern_error_count0_carry_n_1,pcs_test_pattern_error_count0_carry_n_2,pcs_test_pattern_error_count0_carry_n_3,NLW_pcs_test_pattern_error_count0_carry_CO_UNCONNECTED[3],pcs_test_pattern_error_count0_carry_n_5,pcs_test_pattern_error_count0_carry_n_6,pcs_test_pattern_error_count0_carry_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(p_0_in__2[8:1]),
        .S({pcs_test_pattern_error_count0_carry_i_1_n_0,pcs_test_pattern_error_count0_carry_i_2_n_0,pcs_test_pattern_error_count0_carry_i_3_n_0,pcs_test_pattern_error_count0_carry_i_4_n_0,pcs_test_pattern_error_count0_carry_i_5_n_0,pcs_test_pattern_error_count0_carry_i_6_n_0,pcs_test_pattern_error_count0_carry_i_7_n_0,pcs_test_pattern_error_count0_carry_i_8_n_0}));
  CARRY8 pcs_test_pattern_error_count0_carry__0
       (.CI(pcs_test_pattern_error_count0_carry_n_0),
        .CI_TOP(1'b0),
        .CO({NLW_pcs_test_pattern_error_count0_carry__0_CO_UNCONNECTED[7:6],pcs_test_pattern_error_count0_carry__0_n_2,pcs_test_pattern_error_count0_carry__0_n_3,NLW_pcs_test_pattern_error_count0_carry__0_CO_UNCONNECTED[3],pcs_test_pattern_error_count0_carry__0_n_5,pcs_test_pattern_error_count0_carry__0_n_6,pcs_test_pattern_error_count0_carry__0_n_7}),
        .DI({NLW_pcs_test_pattern_error_count0_carry__0_DI_UNCONNECTED[7],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_pcs_test_pattern_error_count0_carry__0_O_UNCONNECTED[7],p_0_in__2[15:9]}),
        .S({NLW_pcs_test_pattern_error_count0_carry__0_S_UNCONNECTED[7],pcs_test_pattern_error_count0_carry__0_i_1_n_0,pcs_test_pattern_error_count0_carry__0_i_2_n_0,pcs_test_pattern_error_count0_carry__0_i_3_n_0,pcs_test_pattern_error_count0_carry__0_i_4_n_0,pcs_test_pattern_error_count0_carry__0_i_5_n_0,pcs_test_pattern_error_count0_carry__0_i_6_n_0,pcs_test_pattern_error_count0_carry__0_i_7_n_0}));
  LUT1 #(
    .INIT(2'h2)) 
    pcs_test_pattern_error_count0_carry__0_i_1
       (.I0(Q[15]),
        .O(pcs_test_pattern_error_count0_carry__0_i_1_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    pcs_test_pattern_error_count0_carry__0_i_2
       (.I0(Q[14]),
        .O(pcs_test_pattern_error_count0_carry__0_i_2_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    pcs_test_pattern_error_count0_carry__0_i_3
       (.I0(Q[13]),
        .O(pcs_test_pattern_error_count0_carry__0_i_3_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    pcs_test_pattern_error_count0_carry__0_i_4
       (.I0(Q[12]),
        .O(pcs_test_pattern_error_count0_carry__0_i_4_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    pcs_test_pattern_error_count0_carry__0_i_5
       (.I0(Q[11]),
        .O(pcs_test_pattern_error_count0_carry__0_i_5_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    pcs_test_pattern_error_count0_carry__0_i_6
       (.I0(Q[10]),
        .O(pcs_test_pattern_error_count0_carry__0_i_6_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    pcs_test_pattern_error_count0_carry__0_i_7
       (.I0(Q[9]),
        .O(pcs_test_pattern_error_count0_carry__0_i_7_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    pcs_test_pattern_error_count0_carry_i_1
       (.I0(Q[8]),
        .O(pcs_test_pattern_error_count0_carry_i_1_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    pcs_test_pattern_error_count0_carry_i_2
       (.I0(Q[7]),
        .O(pcs_test_pattern_error_count0_carry_i_2_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    pcs_test_pattern_error_count0_carry_i_3
       (.I0(Q[6]),
        .O(pcs_test_pattern_error_count0_carry_i_3_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    pcs_test_pattern_error_count0_carry_i_4
       (.I0(Q[5]),
        .O(pcs_test_pattern_error_count0_carry_i_4_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    pcs_test_pattern_error_count0_carry_i_5
       (.I0(Q[4]),
        .O(pcs_test_pattern_error_count0_carry_i_5_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    pcs_test_pattern_error_count0_carry_i_6
       (.I0(Q[3]),
        .O(pcs_test_pattern_error_count0_carry_i_6_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    pcs_test_pattern_error_count0_carry_i_7
       (.I0(Q[2]),
        .O(pcs_test_pattern_error_count0_carry_i_7_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    pcs_test_pattern_error_count0_carry_i_8
       (.I0(Q[1]),
        .O(pcs_test_pattern_error_count0_carry_i_8_n_0));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \pcs_test_pattern_error_count[0]_i_1 
       (.I0(Q[0]),
        .O(p_0_in__2[0]));
  LUT5 #(
    .INIT(32'hAAAAA8AA)) 
    \pcs_test_pattern_error_count[15]_i_1 
       (.I0(pcs_test_pattern_error_count_control_core_int),
        .I1(\pcs_test_pattern_error_count[15]_i_2_n_0 ),
        .I2(\pcs_test_pattern_error_count[15]_i_3_n_0 ),
        .I3(\pcs_test_pattern_error_count[15]_i_4_n_0 ),
        .I4(\pcs_test_pattern_error_count[15]_i_5_n_0 ),
        .O(pcs_test_pattern_error_count0));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \pcs_test_pattern_error_count[15]_i_2 
       (.I0(Q[11]),
        .I1(Q[1]),
        .I2(Q[7]),
        .I3(Q[3]),
        .O(\pcs_test_pattern_error_count[15]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \pcs_test_pattern_error_count[15]_i_3 
       (.I0(Q[13]),
        .I1(Q[8]),
        .I2(Q[10]),
        .I3(Q[2]),
        .O(\pcs_test_pattern_error_count[15]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \pcs_test_pattern_error_count[15]_i_4 
       (.I0(Q[12]),
        .I1(Q[5]),
        .I2(Q[9]),
        .I3(Q[4]),
        .O(\pcs_test_pattern_error_count[15]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \pcs_test_pattern_error_count[15]_i_5 
       (.I0(Q[14]),
        .I1(Q[15]),
        .I2(Q[6]),
        .I3(Q[0]),
        .O(\pcs_test_pattern_error_count[15]_i_5_n_0 ));
  FDRE \pcs_test_pattern_error_count_reg[0] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(p_0_in__2[0]),
        .Q(Q[0]),
        .R(\q_reg[0] ));
  FDRE \pcs_test_pattern_error_count_reg[10] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(p_0_in__2[10]),
        .Q(Q[10]),
        .R(\q_reg[0] ));
  FDRE \pcs_test_pattern_error_count_reg[11] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(p_0_in__2[11]),
        .Q(Q[11]),
        .R(\q_reg[0] ));
  FDRE \pcs_test_pattern_error_count_reg[12] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(p_0_in__2[12]),
        .Q(Q[12]),
        .R(\q_reg[0] ));
  FDRE \pcs_test_pattern_error_count_reg[13] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(p_0_in__2[13]),
        .Q(Q[13]),
        .R(\q_reg[0] ));
  FDRE \pcs_test_pattern_error_count_reg[14] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(p_0_in__2[14]),
        .Q(Q[14]),
        .R(\q_reg[0] ));
  FDRE \pcs_test_pattern_error_count_reg[15] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(p_0_in__2[15]),
        .Q(Q[15]),
        .R(\q_reg[0] ));
  FDRE \pcs_test_pattern_error_count_reg[1] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(p_0_in__2[1]),
        .Q(Q[1]),
        .R(\q_reg[0] ));
  FDRE \pcs_test_pattern_error_count_reg[2] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(p_0_in__2[2]),
        .Q(Q[2]),
        .R(\q_reg[0] ));
  FDRE \pcs_test_pattern_error_count_reg[3] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(p_0_in__2[3]),
        .Q(Q[3]),
        .R(\q_reg[0] ));
  FDRE \pcs_test_pattern_error_count_reg[4] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(p_0_in__2[4]),
        .Q(Q[4]),
        .R(\q_reg[0] ));
  FDRE \pcs_test_pattern_error_count_reg[5] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(p_0_in__2[5]),
        .Q(Q[5]),
        .R(\q_reg[0] ));
  FDRE \pcs_test_pattern_error_count_reg[6] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(p_0_in__2[6]),
        .Q(Q[6]),
        .R(\q_reg[0] ));
  FDRE \pcs_test_pattern_error_count_reg[7] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(p_0_in__2[7]),
        .Q(Q[7]),
        .R(\q_reg[0] ));
  FDRE \pcs_test_pattern_error_count_reg[8] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(p_0_in__2[8]),
        .Q(Q[8]),
        .R(\q_reg[0] ));
  FDRE \pcs_test_pattern_error_count_reg[9] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(p_0_in__2[9]),
        .Q(Q[9]),
        .R(\q_reg[0] ));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_ieee_registers
   (status_vector,
    reset_local_reg,
    SR,
    \pcs_test_pattern_error_count_reg[15] ,
    core_status,
    coreclk,
    q_reg,
    q_reg_0,
    configuration_vector,
    q_reg_1,
    pma_pmd_reset_clear_core_intr,
    resetdone,
    pcs_reset_clear_core_intr,
    rxdatavalid_reg,
    signal_detect_sync,
    reset,
    D,
    \pcs_ber_count_reg[5] ,
    Q);
  output [40:0]status_vector;
  output reset_local_reg;
  output [0:0]SR;
  output [0:0]\pcs_test_pattern_error_count_reg[15] ;
  input [0:0]core_status;
  input coreclk;
  input q_reg;
  input q_reg_0;
  input [6:0]configuration_vector;
  input q_reg_1;
  input pma_pmd_reset_clear_core_intr;
  input resetdone;
  input pcs_reset_clear_core_intr;
  input rxdatavalid_reg;
  input signal_detect_sync;
  input reset;
  input [7:0]D;
  input [5:0]\pcs_ber_count_reg[5] ;
  input [15:0]Q;

  wire [7:0]D;
  wire [15:0]Q;
  wire [0:0]SR;
  wire [6:0]configuration_vector;
  wire [0:0]core_status;
  wire coreclk;
  wire [5:0]\pcs_ber_count_reg[5] ;
  wire pcs_reset_clear_core_intr;
  wire [0:0]\pcs_test_pattern_error_count_reg[15] ;
  wire pma_pmd_reset_clear_core_intr;
  wire q_reg;
  wire q_reg_0;
  wire q_reg_1;
  wire reset;
  wire reset_local_reg;
  wire resetdone;
  wire rxdatavalid_reg;
  wire signal_detect_sync;
  wire [40:0]status_vector;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_common_ieee_registers common_reg_block
       (.D(D),
        .Q(Q),
        .SR(SR),
        .configuration_vector(configuration_vector),
        .core_status(core_status),
        .coreclk(coreclk),
        .\pcs_ber_count_reg[5] (\pcs_ber_count_reg[5] ),
        .pcs_reset_clear_core_intr(pcs_reset_clear_core_intr),
        .\pcs_test_pattern_error_count_reg[15] (\pcs_test_pattern_error_count_reg[15] ),
        .pma_pmd_reset_clear_core_intr(pma_pmd_reset_clear_core_intr),
        .q_reg(q_reg),
        .q_reg_0(q_reg_0),
        .q_reg_1(q_reg_1),
        .reset(reset),
        .reset_local_reg(reset_local_reg),
        .resetdone(resetdone),
        .rxdatavalid_reg(rxdatavalid_reg),
        .signal_detect_sync(signal_detect_sync),
        .status_vector(status_vector));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_management_cs
   (prbs31_rx_enable_core_int,
    out,
    D,
    \FSM_sequential_state_reg[1] ,
    mgmt_addr,
    reset,
    coreclk,
    drp_ack,
    configuration_vector,
    Q,
    \pcs_test_pattern_error_count_reg[15] );
  output prbs31_rx_enable_core_int;
  output [1:0]out;
  output [15:0]D;
  output [0:0]\FSM_sequential_state_reg[1] ;
  output [0:0]mgmt_addr;
  input reset;
  input coreclk;
  input drp_ack;
  input [1:0]configuration_vector;
  input [15:0]Q;
  input [15:0]\pcs_test_pattern_error_count_reg[15] ;

  wire [15:0]D;
  wire [0:0]\FSM_sequential_state_reg[1] ;
  wire [15:0]Q;
  wire [1:0]configuration_vector;
  wire coreclk;
  wire drp_ack;
  wire [0:0]mgmt_addr;
  wire [1:0]out;
  wire [15:0]\pcs_test_pattern_error_count_reg[15] ;
  wire prbs31_rx_enable_core_int;
  wire [8:8]read_addr;
  wire reset;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_cs_ipif_access ipif_access_inst
       (.D(D),
        .\FSM_sequential_state_reg[1]_0 (\FSM_sequential_state_reg[1] ),
        .Q(Q),
        .configuration_vector(configuration_vector),
        .coreclk(coreclk),
        .drp_ack(drp_ack),
        .out(out),
        .\pcs_test_pattern_error_count_reg[15] (\pcs_test_pattern_error_count_reg[15] ),
        .prbs31_rx_enable_core_int(prbs31_rx_enable_core_int),
        .read_addr(read_addr),
        .reset(reset));
  LUT3 #(
    .INIT(8'hA8)) 
    \ipif_access_inst/ 
       (.I0(read_addr),
        .I1(out[0]),
        .I2(out[1]),
        .O(mgmt_addr));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_management_top
   (status_vector,
    prbs31_rx_enable_core_int,
    reg_3_0_15,
    drp_den,
    drp_daddr,
    SR,
    drp_req,
    drp_dwe,
    core_status,
    coreclk,
    q_reg,
    q_reg_0,
    configuration_vector,
    dclk,
    drp_drdy,
    dclk_reset,
    reset,
    q_reg_1,
    pma_pmd_reset_clear_core_intr,
    resetdone,
    pcs_reset_clear_core_intr,
    rxdatavalid_reg,
    signal_detect_sync,
    pcs_ber_count_control_core_int,
    pcs_error_block_count_control_core_int,
    pcs_test_pattern_error_count_control_core_int,
    drp_drpdo,
    drp_gnt);
  output [40:0]status_vector;
  output prbs31_rx_enable_core_int;
  output reg_3_0_15;
  output drp_den;
  output [0:0]drp_daddr;
  output [0:0]SR;
  output drp_req;
  output drp_dwe;
  input [0:0]core_status;
  input coreclk;
  input q_reg;
  input q_reg_0;
  input [8:0]configuration_vector;
  input dclk;
  input drp_drdy;
  input dclk_reset;
  input reset;
  input q_reg_1;
  input pma_pmd_reset_clear_core_intr;
  input resetdone;
  input pcs_reset_clear_core_intr;
  input rxdatavalid_reg;
  input signal_detect_sync;
  input pcs_ber_count_control_core_int;
  input pcs_error_block_count_control_core_int;
  input pcs_test_pattern_error_count_control_core_int;
  input [15:0]drp_drpdo;
  input drp_gnt;

  wire [0:0]SR;
  wire [8:0]configuration_vector;
  wire [0:0]core_status;
  wire coreclk;
  wire dclk;
  wire dclk_reset;
  wire drp_ack;
  wire [0:0]drp_daddr;
  wire drp_den;
  wire drp_drdy;
  wire [15:0]drp_drpdo;
  wire drp_dwe;
  wire drp_gnt;
  wire drp_ipif_i_n_10;
  wire drp_ipif_i_n_11;
  wire drp_ipif_i_n_12;
  wire drp_ipif_i_n_13;
  wire drp_ipif_i_n_14;
  wire drp_ipif_i_n_15;
  wire drp_ipif_i_n_16;
  wire drp_ipif_i_n_17;
  wire drp_ipif_i_n_18;
  wire drp_ipif_i_n_3;
  wire drp_ipif_i_n_4;
  wire drp_ipif_i_n_5;
  wire drp_ipif_i_n_6;
  wire drp_ipif_i_n_7;
  wire drp_ipif_i_n_8;
  wire drp_ipif_i_n_9;
  wire drp_req;
  wire ieee_registers_i_n_42;
  wire management_cs_i_n_1;
  wire management_cs_i_n_10;
  wire management_cs_i_n_11;
  wire management_cs_i_n_12;
  wire management_cs_i_n_13;
  wire management_cs_i_n_14;
  wire management_cs_i_n_15;
  wire management_cs_i_n_16;
  wire management_cs_i_n_17;
  wire management_cs_i_n_18;
  wire management_cs_i_n_2;
  wire management_cs_i_n_3;
  wire management_cs_i_n_4;
  wire management_cs_i_n_5;
  wire management_cs_i_n_6;
  wire management_cs_i_n_7;
  wire management_cs_i_n_8;
  wire management_cs_i_n_9;
  wire [8:8]mgmt_addr;
  wire mgmt_drp_cs;
  wire [5:0]pcs_ber_count;
  wire pcs_ber_count_control_core_int;
  wire [7:0]pcs_error_block_count;
  wire pcs_error_block_count_control_core_int;
  wire pcs_reset_clear_core_intr;
  wire [15:0]pcs_test_pattern_error_count;
  wire pcs_test_pattern_error_count_control_core_int;
  wire pma_pmd_reset_clear_core_intr;
  wire prbs31_rx_enable_core_int;
  wire [15:0]prbs_err_count;
  wire q_reg;
  wire q_reg_0;
  wire q_reg_1;
  wire reg_3_0_15;
  wire reset;
  wire resetdone;
  wire rxdatavalid_reg;
  wire signal_detect_sync;
  wire [40:0]status_vector;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_drp_ipif drp_ipif_i
       (.D(mgmt_drp_cs),
        .Q({drp_ipif_i_n_3,drp_ipif_i_n_4,drp_ipif_i_n_5,drp_ipif_i_n_6,drp_ipif_i_n_7,drp_ipif_i_n_8,drp_ipif_i_n_9,drp_ipif_i_n_10,drp_ipif_i_n_11,drp_ipif_i_n_12,drp_ipif_i_n_13,drp_ipif_i_n_14,drp_ipif_i_n_15,drp_ipif_i_n_16,drp_ipif_i_n_17,drp_ipif_i_n_18}),
        .coreclk(coreclk),
        .dclk(dclk),
        .dclk_reset(dclk_reset),
        .drp_ack(drp_ack),
        .drp_daddr(drp_daddr),
        .drp_den(drp_den),
        .drp_drdy(drp_drdy),
        .drp_drpdo(drp_drpdo),
        .drp_dwe(drp_dwe),
        .drp_gnt(drp_gnt),
        .drp_req(drp_req),
        .mgmt_addr(mgmt_addr),
        .out({management_cs_i_n_1,management_cs_i_n_2}));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_ieee_counters ieee_counters_i
       (.Q(pcs_test_pattern_error_count),
        .SR(ieee_registers_i_n_42),
        .coreclk(coreclk),
        .pcs_ber_count_control_core_int(pcs_ber_count_control_core_int),
        .pcs_error_block_count_control_core_int(pcs_error_block_count_control_core_int),
        .pcs_test_pattern_error_count_control_core_int(pcs_test_pattern_error_count_control_core_int),
        .\q_reg[0] (SR),
        .\q_reg[5] (pcs_ber_count),
        .\q_reg[7] (pcs_error_block_count));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_ieee_registers ieee_registers_i
       (.D(pcs_error_block_count),
        .Q(prbs_err_count),
        .SR(ieee_registers_i_n_42),
        .configuration_vector({configuration_vector[8:4],configuration_vector[1:0]}),
        .core_status(core_status),
        .coreclk(coreclk),
        .\pcs_ber_count_reg[5] (pcs_ber_count),
        .pcs_reset_clear_core_intr(pcs_reset_clear_core_intr),
        .\pcs_test_pattern_error_count_reg[15] (SR),
        .pma_pmd_reset_clear_core_intr(pma_pmd_reset_clear_core_intr),
        .q_reg(q_reg),
        .q_reg_0(q_reg_0),
        .q_reg_1(q_reg_1),
        .reset(reset),
        .reset_local_reg(reg_3_0_15),
        .resetdone(resetdone),
        .rxdatavalid_reg(rxdatavalid_reg),
        .signal_detect_sync(signal_detect_sync),
        .status_vector(status_vector));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_management_cs management_cs_i
       (.D({management_cs_i_n_3,management_cs_i_n_4,management_cs_i_n_5,management_cs_i_n_6,management_cs_i_n_7,management_cs_i_n_8,management_cs_i_n_9,management_cs_i_n_10,management_cs_i_n_11,management_cs_i_n_12,management_cs_i_n_13,management_cs_i_n_14,management_cs_i_n_15,management_cs_i_n_16,management_cs_i_n_17,management_cs_i_n_18}),
        .\FSM_sequential_state_reg[1] (mgmt_drp_cs),
        .Q({drp_ipif_i_n_3,drp_ipif_i_n_4,drp_ipif_i_n_5,drp_ipif_i_n_6,drp_ipif_i_n_7,drp_ipif_i_n_8,drp_ipif_i_n_9,drp_ipif_i_n_10,drp_ipif_i_n_11,drp_ipif_i_n_12,drp_ipif_i_n_13,drp_ipif_i_n_14,drp_ipif_i_n_15,drp_ipif_i_n_16,drp_ipif_i_n_17,drp_ipif_i_n_18}),
        .configuration_vector(configuration_vector[3:2]),
        .coreclk(coreclk),
        .drp_ack(drp_ack),
        .mgmt_addr(mgmt_addr),
        .out({management_cs_i_n_1,management_cs_i_n_2}),
        .\pcs_test_pattern_error_count_reg[15] (pcs_test_pattern_error_count),
        .prbs31_rx_enable_core_int(prbs31_rx_enable_core_int),
        .reset(reset));
  FDRE \prbs_err_count_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(management_cs_i_n_18),
        .Q(prbs_err_count[0]),
        .R(reset));
  FDRE \prbs_err_count_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(management_cs_i_n_8),
        .Q(prbs_err_count[10]),
        .R(reset));
  FDRE \prbs_err_count_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(management_cs_i_n_7),
        .Q(prbs_err_count[11]),
        .R(reset));
  FDRE \prbs_err_count_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(management_cs_i_n_6),
        .Q(prbs_err_count[12]),
        .R(reset));
  FDRE \prbs_err_count_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(management_cs_i_n_5),
        .Q(prbs_err_count[13]),
        .R(reset));
  FDRE \prbs_err_count_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(management_cs_i_n_4),
        .Q(prbs_err_count[14]),
        .R(reset));
  FDRE \prbs_err_count_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(management_cs_i_n_3),
        .Q(prbs_err_count[15]),
        .R(reset));
  FDRE \prbs_err_count_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(management_cs_i_n_17),
        .Q(prbs_err_count[1]),
        .R(reset));
  FDRE \prbs_err_count_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(management_cs_i_n_16),
        .Q(prbs_err_count[2]),
        .R(reset));
  FDRE \prbs_err_count_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(management_cs_i_n_15),
        .Q(prbs_err_count[3]),
        .R(reset));
  FDRE \prbs_err_count_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(management_cs_i_n_14),
        .Q(prbs_err_count[4]),
        .R(reset));
  FDRE \prbs_err_count_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(management_cs_i_n_13),
        .Q(prbs_err_count[5]),
        .R(reset));
  FDRE \prbs_err_count_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(management_cs_i_n_12),
        .Q(prbs_err_count[6]),
        .R(reset));
  FDRE \prbs_err_count_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(management_cs_i_n_11),
        .Q(prbs_err_count[7]),
        .R(reset));
  FDRE \prbs_err_count_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(management_cs_i_n_10),
        .Q(prbs_err_count[8]),
        .R(reset));
  FDRE \prbs_err_count_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(management_cs_i_n_9),
        .Q(prbs_err_count[9]),
        .R(reset));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_pcs_descramble
   (rx_66_enc,
    Q,
    out,
    rxusrclk2);
  output [57:0]rx_66_enc;
  input [63:0]Q;
  input out;
  input rxusrclk2;

  wire [63:0]Q;
  wire \mcp1_descr_reg_reg_n_0_[0] ;
  wire out;
  wire p_0_in;
  wire p_0_in102_in;
  wire p_0_in105_in;
  wire p_0_in108_in;
  wire p_0_in111_in;
  wire p_0_in114_in;
  wire p_0_in117_in;
  wire p_0_in120_in;
  wire p_0_in123_in;
  wire p_0_in126_in;
  wire p_0_in12_in;
  wire p_0_in16_in;
  wire p_0_in1_in;
  wire p_0_in20_in;
  wire p_0_in24_in;
  wire p_0_in28_in;
  wire p_0_in32_in;
  wire p_0_in36_in;
  wire p_0_in40_in;
  wire p_0_in44_in;
  wire p_0_in48_in;
  wire p_0_in4_in;
  wire p_0_in52_in;
  wire p_0_in56_in;
  wire p_0_in60_in;
  wire p_0_in64_in;
  wire p_0_in68_in;
  wire p_0_in72_in;
  wire p_0_in75_in;
  wire p_0_in78_in;
  wire p_0_in81_in;
  wire p_0_in84_in;
  wire p_0_in87_in;
  wire p_0_in8_in;
  wire p_0_in90_in;
  wire p_0_in93_in;
  wire p_0_in96_in;
  wire p_0_in99_in;
  wire p_2_in;
  wire p_2_in13_in;
  wire p_2_in17_in;
  wire p_2_in21_in;
  wire p_2_in25_in;
  wire p_2_in29_in;
  wire p_2_in2_in;
  wire p_2_in33_in;
  wire p_2_in37_in;
  wire p_2_in41_in;
  wire p_2_in45_in;
  wire p_2_in49_in;
  wire p_2_in53_in;
  wire p_2_in57_in;
  wire p_2_in5_in;
  wire p_2_in61_in;
  wire p_2_in65_in;
  wire p_2_in69_in;
  wire p_2_in9_in;
  wire [57:0]rx_66_enc;
  wire rxusrclk2;

  FDRE \mcp1_descr_reg_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[63]),
        .Q(\mcp1_descr_reg_reg_n_0_[0] ),
        .R(out));
  FDRE \mcp1_descr_reg_reg[10] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[53]),
        .Q(p_0_in99_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[11] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[52]),
        .Q(p_0_in96_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[12] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[51]),
        .Q(p_0_in93_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[13] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[50]),
        .Q(p_0_in90_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[14] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[49]),
        .Q(p_0_in87_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[15] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[48]),
        .Q(p_0_in84_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[16] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[47]),
        .Q(p_0_in81_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[17] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[46]),
        .Q(p_0_in78_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[18] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[45]),
        .Q(p_0_in75_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[19] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[44]),
        .Q(p_0_in72_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[62]),
        .Q(p_0_in126_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[20] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[43]),
        .Q(p_0_in68_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[21] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[42]),
        .Q(p_0_in64_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[22] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[41]),
        .Q(p_0_in60_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[23] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[40]),
        .Q(p_0_in56_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[24] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[39]),
        .Q(p_0_in52_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[25] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[38]),
        .Q(p_0_in48_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[26] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[37]),
        .Q(p_0_in44_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[27] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[36]),
        .Q(p_0_in40_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[28] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[35]),
        .Q(p_0_in36_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[29] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[34]),
        .Q(p_0_in32_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[2] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[61]),
        .Q(p_0_in123_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[30] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[33]),
        .Q(p_0_in28_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[31] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[32]),
        .Q(p_0_in24_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[32] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[31]),
        .Q(p_0_in20_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[33] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[30]),
        .Q(p_0_in16_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[34] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[29]),
        .Q(p_0_in12_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[35] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[28]),
        .Q(p_0_in8_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[36] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[27]),
        .Q(p_0_in4_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[37] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[26]),
        .Q(p_0_in1_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[38] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[25]),
        .Q(p_0_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[39] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[24]),
        .Q(p_2_in69_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[3] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[60]),
        .Q(p_0_in120_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[40] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[23]),
        .Q(p_2_in65_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[41] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[22]),
        .Q(p_2_in61_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[42] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[21]),
        .Q(p_2_in57_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[43] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[20]),
        .Q(p_2_in53_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[44] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[19]),
        .Q(p_2_in49_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[45] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[18]),
        .Q(p_2_in45_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[46] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[17]),
        .Q(p_2_in41_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[47] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[16]),
        .Q(p_2_in37_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[48] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[15]),
        .Q(p_2_in33_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[49] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[14]),
        .Q(p_2_in29_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[4] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[59]),
        .Q(p_0_in117_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[50] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[13]),
        .Q(p_2_in25_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[51] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[12]),
        .Q(p_2_in21_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[52] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[11]),
        .Q(p_2_in17_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[53] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[10]),
        .Q(p_2_in13_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[54] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[9]),
        .Q(p_2_in9_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[55] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[8]),
        .Q(p_2_in5_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[56] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[7]),
        .Q(p_2_in2_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[57] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[6]),
        .Q(p_2_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[5] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[58]),
        .Q(p_0_in114_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[6] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[57]),
        .Q(p_0_in111_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[7] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[56]),
        .Q(p_0_in108_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[8] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[55]),
        .Q(p_0_in105_in),
        .R(out));
  FDRE \mcp1_descr_reg_reg[9] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[54]),
        .Q(p_0_in102_in),
        .R(out));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[10]_i_1 
       (.I0(Q[8]),
        .I1(p_0_in28_in),
        .I2(p_2_in29_in),
        .O(rx_66_enc[8]));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[11]_i_1 
       (.I0(Q[9]),
        .I1(p_0_in32_in),
        .I2(p_2_in33_in),
        .O(rx_66_enc[9]));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[12]_i_1 
       (.I0(Q[10]),
        .I1(p_0_in36_in),
        .I2(p_2_in37_in),
        .O(rx_66_enc[10]));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[13]_i_1 
       (.I0(Q[11]),
        .I1(p_0_in40_in),
        .I2(p_2_in41_in),
        .O(rx_66_enc[11]));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[14]_i_1 
       (.I0(Q[12]),
        .I1(p_0_in44_in),
        .I2(p_2_in45_in),
        .O(rx_66_enc[12]));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[15]_i_1 
       (.I0(Q[13]),
        .I1(p_0_in48_in),
        .I2(p_2_in49_in),
        .O(rx_66_enc[13]));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[16]_i_1 
       (.I0(Q[14]),
        .I1(p_0_in52_in),
        .I2(p_2_in53_in),
        .O(rx_66_enc[14]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[17]_i_1 
       (.I0(Q[15]),
        .I1(p_0_in56_in),
        .I2(p_2_in57_in),
        .O(rx_66_enc[15]));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[18]_i_1 
       (.I0(Q[16]),
        .I1(p_0_in60_in),
        .I2(p_2_in61_in),
        .O(rx_66_enc[16]));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[19]_i_1 
       (.I0(Q[17]),
        .I1(p_0_in64_in),
        .I2(p_2_in65_in),
        .O(rx_66_enc[17]));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[20]_i_1 
       (.I0(Q[18]),
        .I1(p_0_in68_in),
        .I2(p_2_in69_in),
        .O(rx_66_enc[18]));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[21]_i_1 
       (.I0(Q[19]),
        .I1(p_0_in72_in),
        .I2(p_0_in),
        .O(rx_66_enc[19]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[22]_i_1 
       (.I0(Q[20]),
        .I1(p_0_in75_in),
        .I2(p_0_in1_in),
        .O(rx_66_enc[20]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[23]_i_1 
       (.I0(Q[21]),
        .I1(p_0_in78_in),
        .I2(p_0_in4_in),
        .O(rx_66_enc[21]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[24]_i_1 
       (.I0(Q[22]),
        .I1(p_0_in81_in),
        .I2(p_0_in8_in),
        .O(rx_66_enc[22]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[25]_i_1 
       (.I0(Q[23]),
        .I1(p_0_in84_in),
        .I2(p_0_in12_in),
        .O(rx_66_enc[23]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[26]_i_1 
       (.I0(Q[24]),
        .I1(p_0_in87_in),
        .I2(p_0_in16_in),
        .O(rx_66_enc[24]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[27]_i_1 
       (.I0(Q[25]),
        .I1(p_0_in90_in),
        .I2(p_0_in20_in),
        .O(rx_66_enc[25]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[28]_i_1 
       (.I0(Q[26]),
        .I1(p_0_in93_in),
        .I2(p_0_in24_in),
        .O(rx_66_enc[26]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[29]_i_1 
       (.I0(Q[27]),
        .I1(p_0_in96_in),
        .I2(p_0_in28_in),
        .O(rx_66_enc[27]));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[2]_i_1 
       (.I0(Q[0]),
        .I1(p_0_in),
        .I2(p_2_in),
        .O(rx_66_enc[0]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[30]_i_1 
       (.I0(Q[28]),
        .I1(p_0_in99_in),
        .I2(p_0_in32_in),
        .O(rx_66_enc[28]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[31]_i_1 
       (.I0(Q[29]),
        .I1(p_0_in102_in),
        .I2(p_0_in36_in),
        .O(rx_66_enc[29]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[32]_i_1 
       (.I0(Q[30]),
        .I1(p_0_in105_in),
        .I2(p_0_in40_in),
        .O(rx_66_enc[30]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[33]_i_1 
       (.I0(Q[31]),
        .I1(p_0_in108_in),
        .I2(p_0_in44_in),
        .O(rx_66_enc[31]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[34]_i_1 
       (.I0(Q[32]),
        .I1(p_0_in111_in),
        .I2(p_0_in48_in),
        .O(rx_66_enc[32]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[35]_i_1 
       (.I0(Q[33]),
        .I1(p_0_in114_in),
        .I2(p_0_in52_in),
        .O(rx_66_enc[33]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[36]_i_1 
       (.I0(Q[34]),
        .I1(p_0_in117_in),
        .I2(p_0_in56_in),
        .O(rx_66_enc[34]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[37]_i_1 
       (.I0(Q[35]),
        .I1(p_0_in120_in),
        .I2(p_0_in60_in),
        .O(rx_66_enc[35]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[38]_i_1 
       (.I0(Q[36]),
        .I1(p_0_in123_in),
        .I2(p_0_in64_in),
        .O(rx_66_enc[36]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[39]_i_1 
       (.I0(Q[37]),
        .I1(p_0_in126_in),
        .I2(p_0_in68_in),
        .O(rx_66_enc[37]));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[3]_i_1 
       (.I0(Q[1]),
        .I1(p_0_in1_in),
        .I2(p_2_in2_in),
        .O(rx_66_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[40]_i_1 
       (.I0(Q[38]),
        .I1(\mcp1_descr_reg_reg_n_0_[0] ),
        .I2(p_0_in72_in),
        .O(rx_66_enc[38]));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[41]_i_1 
       (.I0(Q[39]),
        .I1(Q[0]),
        .I2(p_0_in75_in),
        .O(rx_66_enc[39]));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[42]_i_1 
       (.I0(Q[40]),
        .I1(Q[1]),
        .I2(p_0_in78_in),
        .O(rx_66_enc[40]));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[43]_i_1 
       (.I0(Q[41]),
        .I1(Q[2]),
        .I2(p_0_in81_in),
        .O(rx_66_enc[41]));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[44]_i_1 
       (.I0(Q[42]),
        .I1(Q[3]),
        .I2(p_0_in84_in),
        .O(rx_66_enc[42]));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[45]_i_1 
       (.I0(Q[43]),
        .I1(Q[4]),
        .I2(p_0_in87_in),
        .O(rx_66_enc[43]));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[46]_i_1 
       (.I0(Q[44]),
        .I1(Q[5]),
        .I2(p_0_in90_in),
        .O(rx_66_enc[44]));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[47]_i_1 
       (.I0(Q[45]),
        .I1(Q[6]),
        .I2(p_0_in93_in),
        .O(rx_66_enc[45]));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[48]_i_1 
       (.I0(Q[46]),
        .I1(Q[7]),
        .I2(p_0_in96_in),
        .O(rx_66_enc[46]));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[49]_i_1 
       (.I0(Q[47]),
        .I1(Q[8]),
        .I2(p_0_in99_in),
        .O(rx_66_enc[47]));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[4]_i_1 
       (.I0(Q[2]),
        .I1(p_0_in4_in),
        .I2(p_2_in5_in),
        .O(rx_66_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[50]_i_1 
       (.I0(Q[48]),
        .I1(Q[9]),
        .I2(p_0_in102_in),
        .O(rx_66_enc[48]));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[51]_i_1 
       (.I0(Q[49]),
        .I1(Q[10]),
        .I2(p_0_in105_in),
        .O(rx_66_enc[49]));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[52]_i_1 
       (.I0(Q[50]),
        .I1(Q[11]),
        .I2(p_0_in108_in),
        .O(rx_66_enc[50]));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[53]_i_1 
       (.I0(Q[51]),
        .I1(Q[12]),
        .I2(p_0_in111_in),
        .O(rx_66_enc[51]));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[54]_i_1 
       (.I0(Q[52]),
        .I1(Q[13]),
        .I2(p_0_in114_in),
        .O(rx_66_enc[52]));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[55]_i_1 
       (.I0(Q[53]),
        .I1(Q[14]),
        .I2(p_0_in117_in),
        .O(rx_66_enc[53]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[56]_i_1 
       (.I0(Q[54]),
        .I1(Q[15]),
        .I2(p_0_in120_in),
        .O(rx_66_enc[54]));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[57]_i_1 
       (.I0(Q[55]),
        .I1(Q[16]),
        .I2(p_0_in123_in),
        .O(rx_66_enc[55]));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[58]_i_1 
       (.I0(Q[56]),
        .I1(Q[17]),
        .I2(p_0_in126_in),
        .O(rx_66_enc[56]));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[59]_i_1 
       (.I0(Q[57]),
        .I1(Q[18]),
        .I2(\mcp1_descr_reg_reg_n_0_[0] ),
        .O(rx_66_enc[57]));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[5]_i_1 
       (.I0(Q[3]),
        .I1(p_0_in8_in),
        .I2(p_2_in9_in),
        .O(rx_66_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[6]_i_1 
       (.I0(Q[4]),
        .I1(p_0_in12_in),
        .I2(p_2_in13_in),
        .O(rx_66_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[7]_i_1 
       (.I0(Q[5]),
        .I1(p_0_in16_in),
        .I2(p_2_in17_in),
        .O(rx_66_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[8]_i_1 
       (.I0(Q[6]),
        .I1(p_0_in20_in),
        .I2(p_2_in21_in),
        .O(rx_66_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[9]_i_1 
       (.I0(Q[7]),
        .I1(p_0_in24_in),
        .I2(p_2_in25_in),
        .O(rx_66_enc[7]));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_pcs_scramble
   (\gt_txd_reg[6] ,
    \gt_txd_reg[45] ,
    \gt_txd_reg[56] ,
    \gt_txd_reg[4] ,
    \gt_txd_reg[62] ,
    \gt_txd_reg[43] ,
    \gt_txd_reg[60] ,
    \gt_txd_reg[41] ,
    \gt_txd_reg[58] ,
    \gt_txd_reg[39] ,
    \gt_txd_reg[63] ,
    \scr_reg_reg[39]_0 ,
    \gt_txd_reg[61] ,
    \gt_txd_reg[59] ,
    \gt_txd_reg[55] ,
    \gt_txd_reg[38] ,
    \gt_txd_reg[35] ,
    \gt_txd_reg[34] ,
    \gt_txd_reg[33] ,
    \gt_txd_reg[32] ,
    \gt_txd_reg[31] ,
    \gt_txd_reg[19] ,
    \gt_txd_reg[7] ,
    \gt_txd_reg[46] ,
    \gt_txd_reg[47] ,
    \scr_reg_reg[55]_0 ,
    \gt_txd_reg[9] ,
    \gt_txd_reg[48] ,
    \gt_txd_reg[10] ,
    \gt_txd_reg[49] ,
    \gt_txd_reg[11] ,
    \gt_txd_reg[50] ,
    \gt_txd_reg[12] ,
    \gt_txd_reg[51] ,
    \gt_txd_reg[13] ,
    \gt_txd_reg[52] ,
    \gt_txd_reg[14] ,
    \gt_txd_reg[15] ,
    \gt_txd_reg[54] ,
    \gt_txd_reg[16] ,
    \gt_txd_reg[17] ,
    \gt_txd_reg[18] ,
    \gt_txd_reg[57] ,
    \gt_txd_reg[26] ,
    \gt_txd_reg[27] ,
    \gt_txd_reg[28] ,
    \gt_txd_reg[29] ,
    \gt_txd_reg[30] ,
    \gt_txd_reg[40] ,
    \gt_txd_reg[1] ,
    \gt_txd_reg[42] ,
    \gt_txd_reg[3] ,
    \gt_txd_reg[44] ,
    \gt_txd_reg[5] ,
    \scr_reg_reg[38]_0 ,
    \scr_reg_reg[27]_0 ,
    \scr_reg_reg[26]_0 ,
    \scr_reg_reg[10]_0 ,
    \gt_txd_reg[2] ,
    \gt_txd_reg[0] ,
    \gt_txd_reg[23] ,
    \gt_txd_reg[22] ,
    \gt_txd_reg[21] ,
    \gt_txd_reg[20] ,
    coreclk,
    configuration_vector,
    Q,
    q_reg,
    SR);
  output \gt_txd_reg[6] ;
  output \gt_txd_reg[45] ;
  output \gt_txd_reg[56] ;
  output \gt_txd_reg[4] ;
  output \gt_txd_reg[62] ;
  output \gt_txd_reg[43] ;
  output \gt_txd_reg[60] ;
  output \gt_txd_reg[41] ;
  output \gt_txd_reg[58] ;
  output \gt_txd_reg[39] ;
  output \gt_txd_reg[63] ;
  output \scr_reg_reg[39]_0 ;
  output \gt_txd_reg[61] ;
  output \gt_txd_reg[59] ;
  output \gt_txd_reg[55] ;
  output \gt_txd_reg[38] ;
  output \gt_txd_reg[35] ;
  output \gt_txd_reg[34] ;
  output \gt_txd_reg[33] ;
  output \gt_txd_reg[32] ;
  output \gt_txd_reg[31] ;
  output \gt_txd_reg[19] ;
  output \gt_txd_reg[7] ;
  output \gt_txd_reg[46] ;
  output \gt_txd_reg[47] ;
  output \scr_reg_reg[55]_0 ;
  output \gt_txd_reg[9] ;
  output \gt_txd_reg[48] ;
  output \gt_txd_reg[10] ;
  output \gt_txd_reg[49] ;
  output \gt_txd_reg[11] ;
  output \gt_txd_reg[50] ;
  output \gt_txd_reg[12] ;
  output \gt_txd_reg[51] ;
  output \gt_txd_reg[13] ;
  output \gt_txd_reg[52] ;
  output \gt_txd_reg[14] ;
  output \gt_txd_reg[15] ;
  output \gt_txd_reg[54] ;
  output \gt_txd_reg[16] ;
  output \gt_txd_reg[17] ;
  output \gt_txd_reg[18] ;
  output \gt_txd_reg[57] ;
  output \gt_txd_reg[26] ;
  output \gt_txd_reg[27] ;
  output \gt_txd_reg[28] ;
  output \gt_txd_reg[29] ;
  output \gt_txd_reg[30] ;
  output \gt_txd_reg[40] ;
  output \gt_txd_reg[1] ;
  output \gt_txd_reg[42] ;
  output \gt_txd_reg[3] ;
  output \gt_txd_reg[44] ;
  output \gt_txd_reg[5] ;
  output \scr_reg_reg[38]_0 ;
  output \scr_reg_reg[27]_0 ;
  output \scr_reg_reg[26]_0 ;
  output \scr_reg_reg[10]_0 ;
  output \gt_txd_reg[2] ;
  output \gt_txd_reg[0] ;
  output \gt_txd_reg[23] ;
  output \gt_txd_reg[22] ;
  output \gt_txd_reg[21] ;
  output \gt_txd_reg[20] ;
  input coreclk;
  input [118:0]configuration_vector;
  input [63:0]Q;
  input q_reg;
  input [0:0]SR;

  wire [63:0]Q;
  wire [0:0]SR;
  wire \block_count[4]_i_1_n_0 ;
  wire [6:0]block_count_reg__0;
  wire [118:0]configuration_vector;
  wire coreclk;
  wire \gt_txd[45]_i_3_n_0 ;
  wire \gt_txd[46]_i_2_n_0 ;
  wire \gt_txd[48]_i_2_n_0 ;
  wire \gt_txd[49]_i_2_n_0 ;
  wire \gt_txd[50]_i_2_n_0 ;
  wire \gt_txd[51]_i_2_n_0 ;
  wire \gt_txd[52]_i_2_n_0 ;
  wire \gt_txd[54]_i_2_n_0 ;
  wire \gt_txd[55]_i_3_n_0 ;
  wire \gt_txd[56]_i_2_n_0 ;
  wire \gt_txd[56]_i_3_n_0 ;
  wire \gt_txd[57]_i_3_n_0 ;
  wire \gt_txd[57]_i_4_n_0 ;
  wire \gt_txd[58]_i_2_n_0 ;
  wire \gt_txd[58]_i_3_n_0 ;
  wire \gt_txd[59]_i_3_n_0 ;
  wire \gt_txd[59]_i_4_n_0 ;
  wire \gt_txd[60]_i_2_n_0 ;
  wire \gt_txd[60]_i_3_n_0 ;
  wire \gt_txd[61]_i_3_n_0 ;
  wire \gt_txd[61]_i_4_n_0 ;
  wire \gt_txd[62]_i_2_n_0 ;
  wire \gt_txd[62]_i_3_n_0 ;
  wire \gt_txd[63]_i_4_n_0 ;
  wire \gt_txd[63]_i_5_n_0 ;
  wire \gt_txd_reg[0] ;
  wire \gt_txd_reg[10] ;
  wire \gt_txd_reg[11] ;
  wire \gt_txd_reg[12] ;
  wire \gt_txd_reg[13] ;
  wire \gt_txd_reg[14] ;
  wire \gt_txd_reg[15] ;
  wire \gt_txd_reg[16] ;
  wire \gt_txd_reg[17] ;
  wire \gt_txd_reg[18] ;
  wire \gt_txd_reg[19] ;
  wire \gt_txd_reg[1] ;
  wire \gt_txd_reg[20] ;
  wire \gt_txd_reg[21] ;
  wire \gt_txd_reg[22] ;
  wire \gt_txd_reg[23] ;
  wire \gt_txd_reg[26] ;
  wire \gt_txd_reg[27] ;
  wire \gt_txd_reg[28] ;
  wire \gt_txd_reg[29] ;
  wire \gt_txd_reg[2] ;
  wire \gt_txd_reg[30] ;
  wire \gt_txd_reg[31] ;
  wire \gt_txd_reg[32] ;
  wire \gt_txd_reg[33] ;
  wire \gt_txd_reg[34] ;
  wire \gt_txd_reg[35] ;
  wire \gt_txd_reg[38] ;
  wire \gt_txd_reg[39] ;
  wire \gt_txd_reg[3] ;
  wire \gt_txd_reg[40] ;
  wire \gt_txd_reg[41] ;
  wire \gt_txd_reg[42] ;
  wire \gt_txd_reg[43] ;
  wire \gt_txd_reg[44] ;
  wire \gt_txd_reg[45] ;
  wire \gt_txd_reg[46] ;
  wire \gt_txd_reg[47] ;
  wire \gt_txd_reg[48] ;
  wire \gt_txd_reg[49] ;
  wire \gt_txd_reg[4] ;
  wire \gt_txd_reg[50] ;
  wire \gt_txd_reg[51] ;
  wire \gt_txd_reg[52] ;
  wire \gt_txd_reg[54] ;
  wire \gt_txd_reg[55] ;
  wire \gt_txd_reg[56] ;
  wire \gt_txd_reg[57] ;
  wire \gt_txd_reg[58] ;
  wire \gt_txd_reg[59] ;
  wire \gt_txd_reg[5] ;
  wire \gt_txd_reg[60] ;
  wire \gt_txd_reg[61] ;
  wire \gt_txd_reg[62] ;
  wire \gt_txd_reg[63] ;
  wire \gt_txd_reg[6] ;
  wire \gt_txd_reg[7] ;
  wire \gt_txd_reg[9] ;
  wire new_tx_test_seed;
  wire new_tx_test_seed_i_1_n_0;
  wire [6:0]p_0_in;
  wire p_0_in0_in;
  wire p_0_in12_in;
  wire p_0_in151_in;
  wire p_0_in160_in;
  wire p_0_in16_in;
  wire p_0_in170_in;
  wire p_0_in180_in;
  wire p_0_in190_in;
  wire p_0_in200_in;
  wire p_0_in20_in;
  wire p_0_in24_in;
  wire p_0_in28_in;
  wire p_0_in32_in;
  wire p_0_in36_in;
  wire p_0_in40_in;
  wire p_0_in44_in;
  wire p_0_in4_in;
  wire p_0_in8_in;
  wire p_0_in_0;
  wire p_2_in;
  wire p_2_in103_in;
  wire p_2_in109_in;
  wire p_2_in115_in;
  wire p_2_in121_in;
  wire p_2_in127_in;
  wire p_2_in133_in;
  wire p_2_in139_in;
  wire p_2_in13_in;
  wire p_2_in145_in;
  wire p_2_in152_in;
  wire p_2_in161_in;
  wire p_2_in171_in;
  wire p_2_in17_in;
  wire p_2_in181_in;
  wire p_2_in191_in;
  wire p_2_in1_in;
  wire p_2_in201_in;
  wire p_2_in21_in;
  wire p_2_in25_in;
  wire p_2_in29_in;
  wire p_2_in33_in;
  wire p_2_in37_in;
  wire p_2_in41_in;
  wire p_2_in45_in;
  wire p_2_in48_in;
  wire p_2_in52_in;
  wire p_2_in56_in;
  wire p_2_in5_in;
  wire p_2_in60_in;
  wire p_2_in64_in;
  wire p_2_in68_in;
  wire p_2_in74_in;
  wire p_2_in79_in;
  wire p_2_in85_in;
  wire p_2_in91_in;
  wire p_2_in97_in;
  wire p_2_in9_in;
  wire q_reg;
  wire \scr_reg[0]_i_1_n_0 ;
  wire \scr_reg[0]_i_2_n_0 ;
  wire \scr_reg[10]_i_1_n_0 ;
  wire \scr_reg[11]_i_1_n_0 ;
  wire \scr_reg[11]_i_2_n_0 ;
  wire \scr_reg[12]_i_1_n_0 ;
  wire \scr_reg[12]_i_2_n_0 ;
  wire \scr_reg[13]_i_1_n_0 ;
  wire \scr_reg[13]_i_2_n_0 ;
  wire \scr_reg[14]_i_1_n_0 ;
  wire \scr_reg[14]_i_2_n_0 ;
  wire \scr_reg[15]_i_1_n_0 ;
  wire \scr_reg[15]_i_2_n_0 ;
  wire \scr_reg[16]_i_1_n_0 ;
  wire \scr_reg[16]_i_2_n_0 ;
  wire \scr_reg[17]_i_1_n_0 ;
  wire \scr_reg[17]_i_2_n_0 ;
  wire \scr_reg[18]_i_1_n_0 ;
  wire \scr_reg[18]_i_2_n_0 ;
  wire \scr_reg[19]_i_1_n_0 ;
  wire \scr_reg[19]_i_2_n_0 ;
  wire \scr_reg[1]_i_1_n_0 ;
  wire \scr_reg[1]_i_2_n_0 ;
  wire \scr_reg[20]_i_1_n_0 ;
  wire \scr_reg[20]_i_2_n_0 ;
  wire \scr_reg[21]_i_1_n_0 ;
  wire \scr_reg[21]_i_2_n_0 ;
  wire \scr_reg[22]_i_1_n_0 ;
  wire \scr_reg[22]_i_2_n_0 ;
  wire \scr_reg[23]_i_1_n_0 ;
  wire \scr_reg[23]_i_2_n_0 ;
  wire \scr_reg[24]_i_1_n_0 ;
  wire \scr_reg[24]_i_2_n_0 ;
  wire \scr_reg[25]_i_1_n_0 ;
  wire \scr_reg[25]_i_2_n_0 ;
  wire \scr_reg[26]_i_1_n_0 ;
  wire \scr_reg[27]_i_1_n_0 ;
  wire \scr_reg[28]_i_1_n_0 ;
  wire \scr_reg[28]_i_2_n_0 ;
  wire \scr_reg[29]_i_1_n_0 ;
  wire \scr_reg[29]_i_2_n_0 ;
  wire \scr_reg[2]_i_1_n_0 ;
  wire \scr_reg[2]_i_2_n_0 ;
  wire \scr_reg[30]_i_1_n_0 ;
  wire \scr_reg[30]_i_2_n_0 ;
  wire \scr_reg[31]_i_1_n_0 ;
  wire \scr_reg[31]_i_2_n_0 ;
  wire \scr_reg[32]_i_1_n_0 ;
  wire \scr_reg[32]_i_2_n_0 ;
  wire \scr_reg[33]_i_1_n_0 ;
  wire \scr_reg[33]_i_2_n_0 ;
  wire \scr_reg[34]_i_1_n_0 ;
  wire \scr_reg[34]_i_2_n_0 ;
  wire \scr_reg[35]_i_1_n_0 ;
  wire \scr_reg[35]_i_2_n_0 ;
  wire \scr_reg[36]_i_1_n_0 ;
  wire \scr_reg[36]_i_2_n_0 ;
  wire \scr_reg[37]_i_1_n_0 ;
  wire \scr_reg[37]_i_2_n_0 ;
  wire \scr_reg[38]_i_1_n_0 ;
  wire \scr_reg[39]_i_1_n_0 ;
  wire \scr_reg[3]_i_1_n_0 ;
  wire \scr_reg[3]_i_2_n_0 ;
  wire \scr_reg[40]_i_1_n_0 ;
  wire \scr_reg[41]_i_1_n_0 ;
  wire \scr_reg[42]_i_1_n_0 ;
  wire \scr_reg[43]_i_1_n_0 ;
  wire \scr_reg[44]_i_1_n_0 ;
  wire \scr_reg[45]_i_1_n_0 ;
  wire \scr_reg[46]_i_1_n_0 ;
  wire \scr_reg[47]_i_1_n_0 ;
  wire \scr_reg[48]_i_1_n_0 ;
  wire \scr_reg[49]_i_1_n_0 ;
  wire \scr_reg[49]_i_2_n_0 ;
  wire \scr_reg[4]_i_1_n_0 ;
  wire \scr_reg[4]_i_2_n_0 ;
  wire \scr_reg[50]_i_1_n_0 ;
  wire \scr_reg[51]_i_1_n_0 ;
  wire \scr_reg[52]_i_1_n_0 ;
  wire \scr_reg[53]_i_1_n_0 ;
  wire \scr_reg[54]_i_1_n_0 ;
  wire \scr_reg[55]_i_1_n_0 ;
  wire \scr_reg[56]_i_1_n_0 ;
  wire \scr_reg[57]_i_1_n_0 ;
  wire \scr_reg[57]_i_2_n_0 ;
  wire \scr_reg[5]_i_1_n_0 ;
  wire \scr_reg[5]_i_2_n_0 ;
  wire \scr_reg[6]_i_1_n_0 ;
  wire \scr_reg[6]_i_2_n_0 ;
  wire \scr_reg[7]_i_1_n_0 ;
  wire \scr_reg[7]_i_2_n_0 ;
  wire \scr_reg[8]_i_1_n_0 ;
  wire \scr_reg[8]_i_2_n_0 ;
  wire \scr_reg[9]_i_1_n_0 ;
  wire \scr_reg[9]_i_2_n_0 ;
  wire \scr_reg_reg[10]_0 ;
  wire \scr_reg_reg[26]_0 ;
  wire \scr_reg_reg[27]_0 ;
  wire \scr_reg_reg[38]_0 ;
  wire \scr_reg_reg[39]_0 ;
  wire \scr_reg_reg[55]_0 ;
  wire \scr_reg_reg_n_0_[0] ;
  wire [1:0]tx_test_patt_seed_sel;
  wire \tx_test_patt_seed_sel[0]_i_1_n_0 ;
  wire \tx_test_patt_seed_sel[1]_i_1_n_0 ;
  wire \tx_test_patt_seed_sel[1]_i_2_n_0 ;
  wire \tx_test_patt_seed_sel[1]_i_3_n_0 ;

  LUT1 #(
    .INIT(2'h1)) 
    \block_count[0]_i_1 
       (.I0(block_count_reg__0[0]),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \block_count[1]_i_1 
       (.I0(block_count_reg__0[0]),
        .I1(block_count_reg__0[1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \block_count[2]_i_1 
       (.I0(block_count_reg__0[2]),
        .I1(block_count_reg__0[0]),
        .I2(block_count_reg__0[1]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \block_count[3]_i_1 
       (.I0(block_count_reg__0[3]),
        .I1(block_count_reg__0[1]),
        .I2(block_count_reg__0[0]),
        .I3(block_count_reg__0[2]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \block_count[4]_i_1 
       (.I0(block_count_reg__0[4]),
        .I1(block_count_reg__0[3]),
        .I2(block_count_reg__0[1]),
        .I3(block_count_reg__0[0]),
        .I4(block_count_reg__0[2]),
        .O(\block_count[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \block_count[5]_i_1 
       (.I0(block_count_reg__0[5]),
        .I1(block_count_reg__0[3]),
        .I2(block_count_reg__0[1]),
        .I3(block_count_reg__0[0]),
        .I4(block_count_reg__0[2]),
        .I5(block_count_reg__0[4]),
        .O(p_0_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \block_count[6]_i_1 
       (.I0(\tx_test_patt_seed_sel[1]_i_3_n_0 ),
        .I1(block_count_reg__0[6]),
        .O(p_0_in[6]));
  FDRE \block_count_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_0_in[0]),
        .Q(block_count_reg__0[0]),
        .R(\tx_test_patt_seed_sel[1]_i_1_n_0 ));
  FDRE \block_count_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_0_in[1]),
        .Q(block_count_reg__0[1]),
        .R(\tx_test_patt_seed_sel[1]_i_1_n_0 ));
  FDRE \block_count_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_0_in[2]),
        .Q(block_count_reg__0[2]),
        .R(\tx_test_patt_seed_sel[1]_i_1_n_0 ));
  FDRE \block_count_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_0_in[3]),
        .Q(block_count_reg__0[3]),
        .R(\tx_test_patt_seed_sel[1]_i_1_n_0 ));
  FDRE \block_count_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\block_count[4]_i_1_n_0 ),
        .Q(block_count_reg__0[4]),
        .R(\tx_test_patt_seed_sel[1]_i_1_n_0 ));
  FDRE \block_count_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_0_in[5]),
        .Q(block_count_reg__0[5]),
        .R(\tx_test_patt_seed_sel[1]_i_1_n_0 ));
  FDRE \block_count_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_0_in[6]),
        .Q(block_count_reg__0[6]),
        .R(\tx_test_patt_seed_sel[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8228828282288228)) 
    \gt_txd[0]_i_1 
       (.I0(q_reg),
        .I1(p_0_in151_in),
        .I2(p_2_in152_in),
        .I3(\gt_txd[56]_i_2_n_0 ),
        .I4(configuration_vector[118]),
        .I5(Q[0]),
        .O(\gt_txd_reg[0] ));
  LUT6 #(
    .INIT(64'h96999666FFFFFFFF)) 
    \gt_txd[10]_i_1 
       (.I0(p_2_in13_in),
        .I1(p_2_in97_in),
        .I2(\gt_txd[57]_i_3_n_0 ),
        .I3(configuration_vector[118]),
        .I4(Q[10]),
        .I5(q_reg),
        .O(\gt_txd_reg[10] ));
  LUT6 #(
    .INIT(64'h96999666FFFFFFFF)) 
    \gt_txd[11]_i_1 
       (.I0(p_2_in17_in),
        .I1(p_2_in103_in),
        .I2(\gt_txd[57]_i_3_n_0 ),
        .I3(configuration_vector[118]),
        .I4(Q[11]),
        .I5(q_reg),
        .O(\gt_txd_reg[11] ));
  LUT6 #(
    .INIT(64'h96999666FFFFFFFF)) 
    \gt_txd[12]_i_1 
       (.I0(p_2_in21_in),
        .I1(p_2_in109_in),
        .I2(\gt_txd[57]_i_3_n_0 ),
        .I3(configuration_vector[118]),
        .I4(Q[12]),
        .I5(q_reg),
        .O(\gt_txd_reg[12] ));
  LUT6 #(
    .INIT(64'h96999666FFFFFFFF)) 
    \gt_txd[13]_i_1 
       (.I0(p_2_in25_in),
        .I1(p_2_in115_in),
        .I2(\gt_txd[57]_i_3_n_0 ),
        .I3(configuration_vector[118]),
        .I4(Q[13]),
        .I5(q_reg),
        .O(\gt_txd_reg[13] ));
  LUT6 #(
    .INIT(64'h96999666FFFFFFFF)) 
    \gt_txd[14]_i_1 
       (.I0(p_2_in29_in),
        .I1(p_2_in121_in),
        .I2(\gt_txd[57]_i_3_n_0 ),
        .I3(configuration_vector[118]),
        .I4(Q[14]),
        .I5(q_reg),
        .O(\gt_txd_reg[14] ));
  LUT6 #(
    .INIT(64'h96999666FFFFFFFF)) 
    \gt_txd[15]_i_1 
       (.I0(p_2_in33_in),
        .I1(p_2_in127_in),
        .I2(\gt_txd[57]_i_3_n_0 ),
        .I3(configuration_vector[118]),
        .I4(Q[15]),
        .I5(q_reg),
        .O(\gt_txd_reg[15] ));
  LUT6 #(
    .INIT(64'h96999666FFFFFFFF)) 
    \gt_txd[16]_i_1 
       (.I0(p_2_in37_in),
        .I1(p_2_in133_in),
        .I2(\gt_txd[57]_i_3_n_0 ),
        .I3(configuration_vector[118]),
        .I4(Q[16]),
        .I5(q_reg),
        .O(\gt_txd_reg[16] ));
  LUT6 #(
    .INIT(64'h96999666FFFFFFFF)) 
    \gt_txd[17]_i_1 
       (.I0(p_2_in41_in),
        .I1(p_2_in139_in),
        .I2(\gt_txd[57]_i_3_n_0 ),
        .I3(configuration_vector[118]),
        .I4(Q[17]),
        .I5(q_reg),
        .O(\gt_txd_reg[17] ));
  LUT6 #(
    .INIT(64'h96999666FFFFFFFF)) 
    \gt_txd[18]_i_1 
       (.I0(p_2_in45_in),
        .I1(p_2_in145_in),
        .I2(\gt_txd[57]_i_3_n_0 ),
        .I3(configuration_vector[118]),
        .I4(Q[18]),
        .I5(q_reg),
        .O(\gt_txd_reg[18] ));
  LUT6 #(
    .INIT(64'h69996969FFFFFFFF)) 
    \gt_txd[19]_i_1 
       (.I0(p_2_in48_in),
        .I1(p_0_in151_in),
        .I2(\gt_txd[63]_i_5_n_0 ),
        .I3(configuration_vector[118]),
        .I4(Q[19]),
        .I5(q_reg),
        .O(\gt_txd_reg[19] ));
  LUT6 #(
    .INIT(64'h9699966600000000)) 
    \gt_txd[1]_i_1 
       (.I0(p_0_in160_in),
        .I1(p_2_in161_in),
        .I2(\gt_txd[57]_i_3_n_0 ),
        .I3(configuration_vector[118]),
        .I4(Q[1]),
        .I5(q_reg),
        .O(\gt_txd_reg[1] ));
  LUT6 #(
    .INIT(64'h2882828228822882)) 
    \gt_txd[20]_i_1 
       (.I0(q_reg),
        .I1(p_0_in160_in),
        .I2(p_2_in52_in),
        .I3(\gt_txd[63]_i_5_n_0 ),
        .I4(configuration_vector[118]),
        .I5(Q[20]),
        .O(\gt_txd_reg[20] ));
  LUT6 #(
    .INIT(64'h2882828228822882)) 
    \gt_txd[21]_i_1 
       (.I0(q_reg),
        .I1(p_0_in170_in),
        .I2(p_2_in56_in),
        .I3(\gt_txd[63]_i_5_n_0 ),
        .I4(configuration_vector[118]),
        .I5(Q[21]),
        .O(\gt_txd_reg[21] ));
  LUT6 #(
    .INIT(64'h2882828228822882)) 
    \gt_txd[22]_i_1 
       (.I0(q_reg),
        .I1(p_0_in180_in),
        .I2(p_2_in60_in),
        .I3(\gt_txd[63]_i_5_n_0 ),
        .I4(configuration_vector[118]),
        .I5(Q[22]),
        .O(\gt_txd_reg[22] ));
  LUT6 #(
    .INIT(64'h2882828228822882)) 
    \gt_txd[23]_i_1 
       (.I0(q_reg),
        .I1(p_0_in190_in),
        .I2(p_2_in64_in),
        .I3(\gt_txd[63]_i_5_n_0 ),
        .I4(configuration_vector[118]),
        .I5(Q[23]),
        .O(\gt_txd_reg[23] ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \gt_txd[25]_i_2 
       (.I0(Q[25]),
        .I1(configuration_vector[118]),
        .I2(configuration_vector[117]),
        .I3(tx_test_patt_seed_sel[0]),
        .I4(p_0_in_0),
        .I5(p_2_in),
        .O(\scr_reg_reg[38]_0 ));
  LUT6 #(
    .INIT(64'h9699966600000000)) 
    \gt_txd[26]_i_1 
       (.I0(p_2_in1_in),
        .I1(p_0_in0_in),
        .I2(\gt_txd[57]_i_3_n_0 ),
        .I3(configuration_vector[118]),
        .I4(Q[26]),
        .I5(q_reg),
        .O(\gt_txd_reg[26] ));
  LUT6 #(
    .INIT(64'h9699966600000000)) 
    \gt_txd[27]_i_1 
       (.I0(p_2_in5_in),
        .I1(p_0_in4_in),
        .I2(\gt_txd[57]_i_3_n_0 ),
        .I3(configuration_vector[118]),
        .I4(Q[27]),
        .I5(q_reg),
        .O(\gt_txd_reg[27] ));
  LUT6 #(
    .INIT(64'h9699966600000000)) 
    \gt_txd[28]_i_1 
       (.I0(p_2_in9_in),
        .I1(p_0_in8_in),
        .I2(\gt_txd[57]_i_3_n_0 ),
        .I3(configuration_vector[118]),
        .I4(Q[28]),
        .I5(q_reg),
        .O(\gt_txd_reg[28] ));
  LUT6 #(
    .INIT(64'h9699966600000000)) 
    \gt_txd[29]_i_1 
       (.I0(p_2_in13_in),
        .I1(p_0_in12_in),
        .I2(\gt_txd[57]_i_3_n_0 ),
        .I3(configuration_vector[118]),
        .I4(Q[29]),
        .I5(q_reg),
        .O(\gt_txd_reg[29] ));
  LUT6 #(
    .INIT(64'h8228828282288228)) 
    \gt_txd[2]_i_1 
       (.I0(q_reg),
        .I1(p_0_in170_in),
        .I2(p_2_in171_in),
        .I3(\gt_txd[56]_i_2_n_0 ),
        .I4(configuration_vector[118]),
        .I5(Q[2]),
        .O(\gt_txd_reg[2] ));
  LUT6 #(
    .INIT(64'h9699966600000000)) 
    \gt_txd[30]_i_1 
       (.I0(p_2_in17_in),
        .I1(p_0_in16_in),
        .I2(\gt_txd[57]_i_3_n_0 ),
        .I3(configuration_vector[118]),
        .I4(Q[30]),
        .I5(q_reg),
        .O(\gt_txd_reg[30] ));
  LUT6 #(
    .INIT(64'h69996969FFFFFFFF)) 
    \gt_txd[31]_i_1 
       (.I0(p_2_in21_in),
        .I1(p_0_in20_in),
        .I2(\gt_txd[63]_i_5_n_0 ),
        .I3(configuration_vector[118]),
        .I4(Q[31]),
        .I5(q_reg),
        .O(\gt_txd_reg[31] ));
  LUT6 #(
    .INIT(64'h69996969FFFFFFFF)) 
    \gt_txd[32]_i_1 
       (.I0(p_2_in25_in),
        .I1(p_0_in24_in),
        .I2(\gt_txd[63]_i_5_n_0 ),
        .I3(configuration_vector[118]),
        .I4(Q[32]),
        .I5(q_reg),
        .O(\gt_txd_reg[32] ));
  LUT6 #(
    .INIT(64'h69996969FFFFFFFF)) 
    \gt_txd[33]_i_2 
       (.I0(p_2_in29_in),
        .I1(p_0_in28_in),
        .I2(\gt_txd[63]_i_5_n_0 ),
        .I3(configuration_vector[118]),
        .I4(Q[33]),
        .I5(q_reg),
        .O(\gt_txd_reg[33] ));
  LUT6 #(
    .INIT(64'h69996969FFFFFFFF)) 
    \gt_txd[34]_i_1 
       (.I0(p_2_in33_in),
        .I1(p_0_in32_in),
        .I2(\gt_txd[63]_i_5_n_0 ),
        .I3(configuration_vector[118]),
        .I4(Q[34]),
        .I5(q_reg),
        .O(\gt_txd_reg[34] ));
  LUT6 #(
    .INIT(64'h69996969FFFFFFFF)) 
    \gt_txd[35]_i_1 
       (.I0(p_2_in37_in),
        .I1(p_0_in36_in),
        .I2(\gt_txd[63]_i_5_n_0 ),
        .I3(configuration_vector[118]),
        .I4(Q[35]),
        .I5(q_reg),
        .O(\gt_txd_reg[35] ));
  LUT6 #(
    .INIT(64'hDD1D22E222E2DD1D)) 
    \gt_txd[36]_i_2 
       (.I0(Q[36]),
        .I1(configuration_vector[118]),
        .I2(tx_test_patt_seed_sel[0]),
        .I3(configuration_vector[117]),
        .I4(p_0_in40_in),
        .I5(p_2_in41_in),
        .O(\scr_reg_reg[27]_0 ));
  LUT6 #(
    .INIT(64'hDD1D22E222E2DD1D)) 
    \gt_txd[37]_i_2 
       (.I0(Q[37]),
        .I1(configuration_vector[118]),
        .I2(tx_test_patt_seed_sel[0]),
        .I3(configuration_vector[117]),
        .I4(p_0_in44_in),
        .I5(p_2_in45_in),
        .O(\scr_reg_reg[26]_0 ));
  LUT6 #(
    .INIT(64'h69996969FFFFFFFF)) 
    \gt_txd[38]_i_1 
       (.I0(p_2_in48_in),
        .I1(\scr_reg_reg_n_0_[0] ),
        .I2(\gt_txd[63]_i_5_n_0 ),
        .I3(configuration_vector[118]),
        .I4(Q[38]),
        .I5(q_reg),
        .O(\gt_txd_reg[38] ));
  LUT6 #(
    .INIT(64'h56A6A959FFFFFFFF)) 
    \gt_txd[39]_i_1 
       (.I0(p_2_in52_in),
        .I1(Q[39]),
        .I2(configuration_vector[118]),
        .I3(\gt_txd[57]_i_3_n_0 ),
        .I4(\gt_txd[58]_i_3_n_0 ),
        .I5(q_reg),
        .O(\gt_txd_reg[39] ));
  LUT6 #(
    .INIT(64'h9699966600000000)) 
    \gt_txd[3]_i_1 
       (.I0(p_0_in180_in),
        .I1(p_2_in181_in),
        .I2(\gt_txd[57]_i_3_n_0 ),
        .I3(configuration_vector[118]),
        .I4(Q[3]),
        .I5(q_reg),
        .O(\gt_txd_reg[3] ));
  LUT6 #(
    .INIT(64'hA95956A6FFFFFFFF)) 
    \gt_txd[40]_i_1 
       (.I0(p_2_in56_in),
        .I1(Q[40]),
        .I2(configuration_vector[118]),
        .I3(\gt_txd[57]_i_3_n_0 ),
        .I4(\gt_txd[59]_i_4_n_0 ),
        .I5(q_reg),
        .O(\gt_txd_reg[40] ));
  LUT6 #(
    .INIT(64'h56A6A959FFFFFFFF)) 
    \gt_txd[41]_i_1 
       (.I0(p_2_in60_in),
        .I1(Q[41]),
        .I2(configuration_vector[118]),
        .I3(\gt_txd[57]_i_3_n_0 ),
        .I4(\gt_txd[60]_i_3_n_0 ),
        .I5(q_reg),
        .O(\gt_txd_reg[41] ));
  LUT6 #(
    .INIT(64'hA95956A600000000)) 
    \gt_txd[42]_i_1 
       (.I0(p_2_in64_in),
        .I1(Q[42]),
        .I2(configuration_vector[118]),
        .I3(\gt_txd[57]_i_3_n_0 ),
        .I4(\gt_txd[61]_i_4_n_0 ),
        .I5(q_reg),
        .O(\gt_txd_reg[42] ));
  LUT6 #(
    .INIT(64'hA95956A600000000)) 
    \gt_txd[43]_i_2 
       (.I0(p_2_in68_in),
        .I1(Q[43]),
        .I2(configuration_vector[118]),
        .I3(\gt_txd[57]_i_3_n_0 ),
        .I4(\gt_txd[62]_i_3_n_0 ),
        .I5(q_reg),
        .O(\gt_txd_reg[43] ));
  LUT6 #(
    .INIT(64'hA95956A600000000)) 
    \gt_txd[44]_i_1 
       (.I0(p_0_in_0),
        .I1(Q[44]),
        .I2(configuration_vector[118]),
        .I3(\gt_txd[57]_i_3_n_0 ),
        .I4(\gt_txd[63]_i_4_n_0 ),
        .I5(q_reg),
        .O(\gt_txd_reg[44] ));
  LUT6 #(
    .INIT(64'hA95956A600000000)) 
    \gt_txd[45]_i_2 
       (.I0(p_0_in0_in),
        .I1(Q[45]),
        .I2(configuration_vector[118]),
        .I3(\gt_txd[57]_i_3_n_0 ),
        .I4(\gt_txd[45]_i_3_n_0 ),
        .I5(q_reg),
        .O(\gt_txd_reg[45] ));
  LUT5 #(
    .INIT(32'hAE5151AE)) 
    \gt_txd[45]_i_3 
       (.I0(\gt_txd[56]_i_2_n_0 ),
        .I1(Q[6]),
        .I2(configuration_vector[118]),
        .I3(p_2_in74_in),
        .I4(p_2_in),
        .O(\gt_txd[45]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hA95956A600000000)) 
    \gt_txd[46]_i_1 
       (.I0(p_0_in4_in),
        .I1(Q[46]),
        .I2(configuration_vector[118]),
        .I3(\gt_txd[57]_i_3_n_0 ),
        .I4(\gt_txd[46]_i_2_n_0 ),
        .I5(q_reg),
        .O(\gt_txd_reg[46] ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \gt_txd[46]_i_2 
       (.I0(Q[7]),
        .I1(configuration_vector[118]),
        .I2(configuration_vector[117]),
        .I3(tx_test_patt_seed_sel[0]),
        .I4(p_2_in79_in),
        .I5(p_2_in1_in),
        .O(\gt_txd[46]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA95956A600000000)) 
    \gt_txd[47]_i_1 
       (.I0(p_0_in8_in),
        .I1(Q[47]),
        .I2(configuration_vector[118]),
        .I3(\gt_txd[57]_i_3_n_0 ),
        .I4(\scr_reg_reg[55]_0 ),
        .I5(q_reg),
        .O(\gt_txd_reg[47] ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \gt_txd[47]_i_2 
       (.I0(Q[8]),
        .I1(configuration_vector[118]),
        .I2(configuration_vector[117]),
        .I3(tx_test_patt_seed_sel[0]),
        .I4(p_2_in85_in),
        .I5(p_2_in5_in),
        .O(\scr_reg_reg[55]_0 ));
  LUT6 #(
    .INIT(64'hA95956A600000000)) 
    \gt_txd[48]_i_1 
       (.I0(p_0_in12_in),
        .I1(Q[48]),
        .I2(configuration_vector[118]),
        .I3(\gt_txd[57]_i_3_n_0 ),
        .I4(\gt_txd[48]_i_2_n_0 ),
        .I5(q_reg),
        .O(\gt_txd_reg[48] ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \gt_txd[48]_i_2 
       (.I0(Q[9]),
        .I1(configuration_vector[118]),
        .I2(configuration_vector[117]),
        .I3(tx_test_patt_seed_sel[0]),
        .I4(p_2_in91_in),
        .I5(p_2_in9_in),
        .O(\gt_txd[48]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA95956A600000000)) 
    \gt_txd[49]_i_1 
       (.I0(p_0_in16_in),
        .I1(Q[49]),
        .I2(configuration_vector[118]),
        .I3(\gt_txd[57]_i_3_n_0 ),
        .I4(\gt_txd[49]_i_2_n_0 ),
        .I5(q_reg),
        .O(\gt_txd_reg[49] ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \gt_txd[49]_i_2 
       (.I0(Q[10]),
        .I1(configuration_vector[118]),
        .I2(configuration_vector[117]),
        .I3(tx_test_patt_seed_sel[0]),
        .I4(p_2_in97_in),
        .I5(p_2_in13_in),
        .O(\gt_txd[49]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9699969600000000)) 
    \gt_txd[4]_i_1 
       (.I0(p_0_in190_in),
        .I1(p_2_in191_in),
        .I2(\gt_txd[56]_i_2_n_0 ),
        .I3(configuration_vector[118]),
        .I4(Q[4]),
        .I5(q_reg),
        .O(\gt_txd_reg[4] ));
  LUT6 #(
    .INIT(64'hA95956A600000000)) 
    \gt_txd[50]_i_1 
       (.I0(p_0_in20_in),
        .I1(Q[50]),
        .I2(configuration_vector[118]),
        .I3(\gt_txd[57]_i_3_n_0 ),
        .I4(\gt_txd[50]_i_2_n_0 ),
        .I5(q_reg),
        .O(\gt_txd_reg[50] ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \gt_txd[50]_i_2 
       (.I0(Q[11]),
        .I1(configuration_vector[118]),
        .I2(configuration_vector[117]),
        .I3(tx_test_patt_seed_sel[0]),
        .I4(p_2_in103_in),
        .I5(p_2_in17_in),
        .O(\gt_txd[50]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA95956A600000000)) 
    \gt_txd[51]_i_1 
       (.I0(p_0_in24_in),
        .I1(Q[51]),
        .I2(configuration_vector[118]),
        .I3(\gt_txd[57]_i_3_n_0 ),
        .I4(\gt_txd[51]_i_2_n_0 ),
        .I5(q_reg),
        .O(\gt_txd_reg[51] ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \gt_txd[51]_i_2 
       (.I0(Q[12]),
        .I1(configuration_vector[118]),
        .I2(configuration_vector[117]),
        .I3(tx_test_patt_seed_sel[0]),
        .I4(p_2_in109_in),
        .I5(p_2_in21_in),
        .O(\gt_txd[51]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA95956A600000000)) 
    \gt_txd[52]_i_1 
       (.I0(p_0_in28_in),
        .I1(Q[52]),
        .I2(configuration_vector[118]),
        .I3(\gt_txd[57]_i_3_n_0 ),
        .I4(\gt_txd[52]_i_2_n_0 ),
        .I5(q_reg),
        .O(\gt_txd_reg[52] ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \gt_txd[52]_i_2 
       (.I0(Q[13]),
        .I1(configuration_vector[118]),
        .I2(configuration_vector[117]),
        .I3(tx_test_patt_seed_sel[0]),
        .I4(p_2_in115_in),
        .I5(p_2_in25_in),
        .O(\gt_txd[52]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \gt_txd[53]_i_2 
       (.I0(\scr_reg[49]_i_2_n_0 ),
        .I1(tx_test_patt_seed_sel[0]),
        .I2(configuration_vector[117]),
        .I3(configuration_vector[118]),
        .I4(Q[53]),
        .I5(p_0_in32_in),
        .O(\scr_reg_reg[10]_0 ));
  LUT6 #(
    .INIT(64'hA95956A6FFFFFFFF)) 
    \gt_txd[54]_i_1 
       (.I0(p_0_in36_in),
        .I1(Q[54]),
        .I2(configuration_vector[118]),
        .I3(\gt_txd[57]_i_3_n_0 ),
        .I4(\gt_txd[54]_i_2_n_0 ),
        .I5(q_reg),
        .O(\gt_txd_reg[54] ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \gt_txd[54]_i_2 
       (.I0(Q[15]),
        .I1(configuration_vector[118]),
        .I2(configuration_vector[117]),
        .I3(tx_test_patt_seed_sel[0]),
        .I4(p_2_in127_in),
        .I5(p_2_in33_in),
        .O(\gt_txd[54]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h59AAA655FFFFFFFF)) 
    \gt_txd[55]_i_2 
       (.I0(p_0_in40_in),
        .I1(Q[55]),
        .I2(configuration_vector[118]),
        .I3(\gt_txd[63]_i_5_n_0 ),
        .I4(\gt_txd[55]_i_3_n_0 ),
        .I5(q_reg),
        .O(\gt_txd_reg[55] ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \gt_txd[55]_i_3 
       (.I0(Q[16]),
        .I1(configuration_vector[118]),
        .I2(configuration_vector[117]),
        .I3(tx_test_patt_seed_sel[0]),
        .I4(p_2_in133_in),
        .I5(p_2_in37_in),
        .O(\gt_txd[55]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9A996566FFFFFFFF)) 
    \gt_txd[56]_i_1 
       (.I0(p_0_in44_in),
        .I1(\gt_txd[56]_i_2_n_0 ),
        .I2(configuration_vector[118]),
        .I3(Q[56]),
        .I4(\gt_txd[56]_i_3_n_0 ),
        .I5(q_reg),
        .O(\gt_txd_reg[56] ));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT4 #(
    .INIT(16'h4004)) 
    \gt_txd[56]_i_2 
       (.I0(configuration_vector[117]),
        .I1(configuration_vector[118]),
        .I2(configuration_vector[116]),
        .I3(tx_test_patt_seed_sel[0]),
        .O(\gt_txd[56]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \gt_txd[56]_i_3 
       (.I0(Q[17]),
        .I1(configuration_vector[118]),
        .I2(configuration_vector[117]),
        .I3(tx_test_patt_seed_sel[0]),
        .I4(p_2_in139_in),
        .I5(p_2_in41_in),
        .O(\gt_txd[56]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hA95956A6FFFFFFFF)) 
    \gt_txd[57]_i_2 
       (.I0(\scr_reg_reg_n_0_[0] ),
        .I1(Q[57]),
        .I2(configuration_vector[118]),
        .I3(\gt_txd[57]_i_3_n_0 ),
        .I4(\gt_txd[57]_i_4_n_0 ),
        .I5(q_reg),
        .O(\gt_txd_reg[57] ));
  LUT2 #(
    .INIT(4'h2)) 
    \gt_txd[57]_i_3 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[117]),
        .O(\gt_txd[57]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \gt_txd[57]_i_4 
       (.I0(Q[18]),
        .I1(configuration_vector[118]),
        .I2(configuration_vector[117]),
        .I3(tx_test_patt_seed_sel[0]),
        .I4(p_2_in145_in),
        .I5(p_2_in45_in),
        .O(\gt_txd[57]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h66A69959FFFFFFFF)) 
    \gt_txd[58]_i_1 
       (.I0(\gt_txd[58]_i_2_n_0 ),
        .I1(\gt_txd[63]_i_5_n_0 ),
        .I2(Q[58]),
        .I3(configuration_vector[118]),
        .I4(\gt_txd[58]_i_3_n_0 ),
        .I5(q_reg),
        .O(\gt_txd_reg[58] ));
  LUT6 #(
    .INIT(64'hDD1D22E222E2DD1D)) 
    \gt_txd[58]_i_2 
       (.I0(Q[19]),
        .I1(configuration_vector[118]),
        .I2(tx_test_patt_seed_sel[0]),
        .I3(configuration_vector[117]),
        .I4(p_0_in151_in),
        .I5(p_2_in48_in),
        .O(\gt_txd[58]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0DF2F20D)) 
    \gt_txd[58]_i_3 
       (.I0(Q[0]),
        .I1(configuration_vector[118]),
        .I2(\gt_txd[56]_i_2_n_0 ),
        .I3(p_2_in152_in),
        .I4(p_0_in151_in),
        .O(\gt_txd[58]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h96669696FFFFFFFF)) 
    \gt_txd[59]_i_2 
       (.I0(\gt_txd[59]_i_3_n_0 ),
        .I1(\gt_txd[59]_i_4_n_0 ),
        .I2(\gt_txd[63]_i_5_n_0 ),
        .I3(configuration_vector[118]),
        .I4(Q[59]),
        .I5(q_reg),
        .O(\gt_txd_reg[59] ));
  LUT6 #(
    .INIT(64'hDD1D22E222E2DD1D)) 
    \gt_txd[59]_i_3 
       (.I0(Q[20]),
        .I1(configuration_vector[118]),
        .I2(tx_test_patt_seed_sel[0]),
        .I3(configuration_vector[117]),
        .I4(p_2_in52_in),
        .I5(p_0_in160_in),
        .O(\gt_txd[59]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \gt_txd[59]_i_4 
       (.I0(Q[1]),
        .I1(configuration_vector[118]),
        .I2(configuration_vector[117]),
        .I3(tx_test_patt_seed_sel[0]),
        .I4(p_2_in161_in),
        .I5(p_0_in160_in),
        .O(\gt_txd[59]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9699966600000000)) 
    \gt_txd[5]_i_1 
       (.I0(p_0_in200_in),
        .I1(p_2_in201_in),
        .I2(\gt_txd[57]_i_3_n_0 ),
        .I3(configuration_vector[118]),
        .I4(Q[5]),
        .I5(q_reg),
        .O(\gt_txd_reg[5] ));
  LUT6 #(
    .INIT(64'h66A69959FFFFFFFF)) 
    \gt_txd[60]_i_1 
       (.I0(\gt_txd[60]_i_2_n_0 ),
        .I1(\gt_txd[63]_i_5_n_0 ),
        .I2(Q[60]),
        .I3(configuration_vector[118]),
        .I4(\gt_txd[60]_i_3_n_0 ),
        .I5(q_reg),
        .O(\gt_txd_reg[60] ));
  LUT6 #(
    .INIT(64'hDD1D22E222E2DD1D)) 
    \gt_txd[60]_i_2 
       (.I0(Q[21]),
        .I1(configuration_vector[118]),
        .I2(tx_test_patt_seed_sel[0]),
        .I3(configuration_vector[117]),
        .I4(p_2_in56_in),
        .I5(p_0_in170_in),
        .O(\gt_txd[60]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0DF2F20D)) 
    \gt_txd[60]_i_3 
       (.I0(Q[2]),
        .I1(configuration_vector[118]),
        .I2(\gt_txd[56]_i_2_n_0 ),
        .I3(p_2_in171_in),
        .I4(p_0_in170_in),
        .O(\gt_txd[60]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h96669696FFFFFFFF)) 
    \gt_txd[61]_i_2 
       (.I0(\gt_txd[61]_i_3_n_0 ),
        .I1(\gt_txd[61]_i_4_n_0 ),
        .I2(\gt_txd[63]_i_5_n_0 ),
        .I3(configuration_vector[118]),
        .I4(Q[61]),
        .I5(q_reg),
        .O(\gt_txd_reg[61] ));
  LUT6 #(
    .INIT(64'hDD1D22E222E2DD1D)) 
    \gt_txd[61]_i_3 
       (.I0(Q[22]),
        .I1(configuration_vector[118]),
        .I2(tx_test_patt_seed_sel[0]),
        .I3(configuration_vector[117]),
        .I4(p_2_in60_in),
        .I5(p_0_in180_in),
        .O(\gt_txd[61]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \gt_txd[61]_i_4 
       (.I0(Q[3]),
        .I1(configuration_vector[118]),
        .I2(configuration_vector[117]),
        .I3(tx_test_patt_seed_sel[0]),
        .I4(p_2_in181_in),
        .I5(p_0_in180_in),
        .O(\gt_txd[61]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hA65559AAFFFFFFFF)) 
    \gt_txd[62]_i_1 
       (.I0(\gt_txd[62]_i_2_n_0 ),
        .I1(Q[62]),
        .I2(configuration_vector[118]),
        .I3(\gt_txd[63]_i_5_n_0 ),
        .I4(\gt_txd[62]_i_3_n_0 ),
        .I5(q_reg),
        .O(\gt_txd_reg[62] ));
  LUT6 #(
    .INIT(64'hDD1D22E222E2DD1D)) 
    \gt_txd[62]_i_2 
       (.I0(Q[23]),
        .I1(configuration_vector[118]),
        .I2(tx_test_patt_seed_sel[0]),
        .I3(configuration_vector[117]),
        .I4(p_2_in64_in),
        .I5(p_0_in190_in),
        .O(\gt_txd[62]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF20D0DF2)) 
    \gt_txd[62]_i_3 
       (.I0(Q[4]),
        .I1(configuration_vector[118]),
        .I2(\gt_txd[56]_i_2_n_0 ),
        .I3(p_2_in191_in),
        .I4(p_0_in190_in),
        .O(\gt_txd[62]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h69996969FFFFFFFF)) 
    \gt_txd[63]_i_2 
       (.I0(\scr_reg_reg[39]_0 ),
        .I1(\gt_txd[63]_i_4_n_0 ),
        .I2(\gt_txd[63]_i_5_n_0 ),
        .I3(configuration_vector[118]),
        .I4(Q[63]),
        .I5(q_reg),
        .O(\gt_txd_reg[63] ));
  LUT5 #(
    .INIT(32'hF20D0DF2)) 
    \gt_txd[63]_i_3 
       (.I0(Q[24]),
        .I1(configuration_vector[118]),
        .I2(\gt_txd[56]_i_2_n_0 ),
        .I3(p_2_in68_in),
        .I4(p_0_in200_in),
        .O(\scr_reg_reg[39]_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \gt_txd[63]_i_4 
       (.I0(Q[5]),
        .I1(configuration_vector[118]),
        .I2(configuration_vector[117]),
        .I3(tx_test_patt_seed_sel[0]),
        .I4(p_2_in201_in),
        .I5(p_0_in200_in),
        .O(\gt_txd[63]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    \gt_txd[63]_i_5 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[117]),
        .I2(configuration_vector[118]),
        .O(\gt_txd[63]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9999696600000000)) 
    \gt_txd[6]_i_1 
       (.I0(p_2_in),
        .I1(p_2_in74_in),
        .I2(configuration_vector[118]),
        .I3(Q[6]),
        .I4(\gt_txd[56]_i_2_n_0 ),
        .I5(q_reg),
        .O(\gt_txd_reg[6] ));
  LUT6 #(
    .INIT(64'h9699966600000000)) 
    \gt_txd[7]_i_1 
       (.I0(p_2_in1_in),
        .I1(p_2_in79_in),
        .I2(\gt_txd[57]_i_3_n_0 ),
        .I3(configuration_vector[118]),
        .I4(Q[7]),
        .I5(q_reg),
        .O(\gt_txd_reg[7] ));
  LUT6 #(
    .INIT(64'h96999666FFFFFFFF)) 
    \gt_txd[9]_i_1 
       (.I0(p_2_in9_in),
        .I1(p_2_in91_in),
        .I2(\gt_txd[57]_i_3_n_0 ),
        .I3(configuration_vector[118]),
        .I4(Q[9]),
        .I5(q_reg),
        .O(\gt_txd_reg[9] ));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT2 #(
    .INIT(4'h2)) 
    new_tx_test_seed_i_1
       (.I0(block_count_reg__0[6]),
        .I1(\tx_test_patt_seed_sel[1]_i_3_n_0 ),
        .O(new_tx_test_seed_i_1_n_0));
  FDRE new_tx_test_seed_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(new_tx_test_seed_i_1_n_0),
        .Q(new_tx_test_seed),
        .R(\tx_test_patt_seed_sel[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1D1D1DD1D1D11DD1)) 
    \scr_reg[0]_i_1 
       (.I0(\scr_reg[0]_i_2_n_0 ),
        .I1(\scr_reg[57]_i_2_n_0 ),
        .I2(tx_test_patt_seed_sel[0]),
        .I3(configuration_vector[0]),
        .I4(tx_test_patt_seed_sel[1]),
        .I5(configuration_vector[58]),
        .O(\scr_reg[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hDD1D22E222E2DD1D)) 
    \scr_reg[0]_i_2 
       (.I0(Q[63]),
        .I1(configuration_vector[118]),
        .I2(tx_test_patt_seed_sel[0]),
        .I3(configuration_vector[117]),
        .I4(\gt_txd[63]_i_4_n_0 ),
        .I5(\scr_reg_reg[39]_0 ),
        .O(\scr_reg[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[10]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[10]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[68]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\scr_reg_reg[10]_0 ),
        .O(\scr_reg[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[11]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[11]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[69]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\scr_reg[11]_i_2_n_0 ),
        .O(\scr_reg[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[11]_i_2 
       (.I0(\gt_txd[52]_i_2_n_0 ),
        .I1(tx_test_patt_seed_sel[0]),
        .I2(configuration_vector[117]),
        .I3(configuration_vector[118]),
        .I4(Q[52]),
        .I5(p_0_in28_in),
        .O(\scr_reg[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[12]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[12]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[70]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\scr_reg[12]_i_2_n_0 ),
        .O(\scr_reg[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[12]_i_2 
       (.I0(\gt_txd[51]_i_2_n_0 ),
        .I1(tx_test_patt_seed_sel[0]),
        .I2(configuration_vector[117]),
        .I3(configuration_vector[118]),
        .I4(Q[51]),
        .I5(p_0_in24_in),
        .O(\scr_reg[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[13]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[13]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[71]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\scr_reg[13]_i_2_n_0 ),
        .O(\scr_reg[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[13]_i_2 
       (.I0(\gt_txd[50]_i_2_n_0 ),
        .I1(tx_test_patt_seed_sel[0]),
        .I2(configuration_vector[117]),
        .I3(configuration_vector[118]),
        .I4(Q[50]),
        .I5(p_0_in20_in),
        .O(\scr_reg[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[14]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[14]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[72]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\scr_reg[14]_i_2_n_0 ),
        .O(\scr_reg[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[14]_i_2 
       (.I0(\gt_txd[49]_i_2_n_0 ),
        .I1(tx_test_patt_seed_sel[0]),
        .I2(configuration_vector[117]),
        .I3(configuration_vector[118]),
        .I4(Q[49]),
        .I5(p_0_in16_in),
        .O(\scr_reg[14]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[15]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[15]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[73]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\scr_reg[15]_i_2_n_0 ),
        .O(\scr_reg[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[15]_i_2 
       (.I0(\gt_txd[48]_i_2_n_0 ),
        .I1(tx_test_patt_seed_sel[0]),
        .I2(configuration_vector[117]),
        .I3(configuration_vector[118]),
        .I4(Q[48]),
        .I5(p_0_in12_in),
        .O(\scr_reg[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[16]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[16]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[74]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\scr_reg[16]_i_2_n_0 ),
        .O(\scr_reg[16]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[16]_i_2 
       (.I0(\scr_reg_reg[55]_0 ),
        .I1(tx_test_patt_seed_sel[0]),
        .I2(configuration_vector[117]),
        .I3(configuration_vector[118]),
        .I4(Q[47]),
        .I5(p_0_in8_in),
        .O(\scr_reg[16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[17]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[17]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[75]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\scr_reg[17]_i_2_n_0 ),
        .O(\scr_reg[17]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[17]_i_2 
       (.I0(\gt_txd[46]_i_2_n_0 ),
        .I1(tx_test_patt_seed_sel[0]),
        .I2(configuration_vector[117]),
        .I3(configuration_vector[118]),
        .I4(Q[46]),
        .I5(p_0_in4_in),
        .O(\scr_reg[17]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[18]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[18]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[76]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\scr_reg[18]_i_2_n_0 ),
        .O(\scr_reg[18]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[18]_i_2 
       (.I0(\gt_txd[45]_i_3_n_0 ),
        .I1(tx_test_patt_seed_sel[0]),
        .I2(configuration_vector[117]),
        .I3(configuration_vector[118]),
        .I4(Q[45]),
        .I5(p_0_in0_in),
        .O(\scr_reg[18]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[19]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[19]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[77]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\scr_reg[19]_i_2_n_0 ),
        .O(\scr_reg[19]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[19]_i_2 
       (.I0(\gt_txd[63]_i_4_n_0 ),
        .I1(tx_test_patt_seed_sel[0]),
        .I2(configuration_vector[117]),
        .I3(configuration_vector[118]),
        .I4(Q[44]),
        .I5(p_0_in_0),
        .O(\scr_reg[19]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[1]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[1]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[59]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\scr_reg[1]_i_2_n_0 ),
        .O(\scr_reg[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h9A559AAA65AA6555)) 
    \scr_reg[1]_i_2 
       (.I0(\gt_txd[62]_i_3_n_0 ),
        .I1(configuration_vector[117]),
        .I2(tx_test_patt_seed_sel[0]),
        .I3(configuration_vector[118]),
        .I4(Q[62]),
        .I5(\gt_txd[62]_i_2_n_0 ),
        .O(\scr_reg[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[20]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[20]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[78]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\scr_reg[20]_i_2_n_0 ),
        .O(\scr_reg[20]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[20]_i_2 
       (.I0(\gt_txd[62]_i_3_n_0 ),
        .I1(tx_test_patt_seed_sel[0]),
        .I2(configuration_vector[117]),
        .I3(configuration_vector[118]),
        .I4(Q[43]),
        .I5(p_2_in68_in),
        .O(\scr_reg[20]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[21]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[21]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[79]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\scr_reg[21]_i_2_n_0 ),
        .O(\scr_reg[21]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[21]_i_2 
       (.I0(\gt_txd[61]_i_4_n_0 ),
        .I1(tx_test_patt_seed_sel[0]),
        .I2(configuration_vector[117]),
        .I3(configuration_vector[118]),
        .I4(Q[42]),
        .I5(p_2_in64_in),
        .O(\scr_reg[21]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h333CCC3C55555555)) 
    \scr_reg[22]_i_1 
       (.I0(\scr_reg[22]_i_2_n_0 ),
        .I1(tx_test_patt_seed_sel[0]),
        .I2(configuration_vector[22]),
        .I3(tx_test_patt_seed_sel[1]),
        .I4(configuration_vector[80]),
        .I5(\scr_reg[57]_i_2_n_0 ),
        .O(\scr_reg[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[22]_i_2 
       (.I0(\gt_txd[60]_i_3_n_0 ),
        .I1(tx_test_patt_seed_sel[0]),
        .I2(configuration_vector[117]),
        .I3(configuration_vector[118]),
        .I4(Q[41]),
        .I5(p_2_in60_in),
        .O(\scr_reg[22]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[23]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[23]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[81]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\scr_reg[23]_i_2_n_0 ),
        .O(\scr_reg[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[23]_i_2 
       (.I0(\gt_txd[59]_i_4_n_0 ),
        .I1(tx_test_patt_seed_sel[0]),
        .I2(configuration_vector[117]),
        .I3(configuration_vector[118]),
        .I4(Q[40]),
        .I5(p_2_in56_in),
        .O(\scr_reg[23]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h333CCC3C55555555)) 
    \scr_reg[24]_i_1 
       (.I0(\scr_reg[24]_i_2_n_0 ),
        .I1(tx_test_patt_seed_sel[0]),
        .I2(configuration_vector[24]),
        .I3(tx_test_patt_seed_sel[1]),
        .I4(configuration_vector[82]),
        .I5(\scr_reg[57]_i_2_n_0 ),
        .O(\scr_reg[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[24]_i_2 
       (.I0(\gt_txd[58]_i_3_n_0 ),
        .I1(tx_test_patt_seed_sel[0]),
        .I2(configuration_vector[117]),
        .I3(configuration_vector[118]),
        .I4(Q[39]),
        .I5(p_2_in52_in),
        .O(\scr_reg[24]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h333CCC3C55555555)) 
    \scr_reg[25]_i_1 
       (.I0(\scr_reg[25]_i_2_n_0 ),
        .I1(tx_test_patt_seed_sel[0]),
        .I2(configuration_vector[25]),
        .I3(tx_test_patt_seed_sel[1]),
        .I4(configuration_vector[83]),
        .I5(\scr_reg[57]_i_2_n_0 ),
        .O(\scr_reg[25]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hDD1D22E222E2DD1D)) 
    \scr_reg[25]_i_2 
       (.I0(Q[38]),
        .I1(configuration_vector[118]),
        .I2(tx_test_patt_seed_sel[0]),
        .I3(configuration_vector[117]),
        .I4(\scr_reg_reg_n_0_[0] ),
        .I5(p_2_in48_in),
        .O(\scr_reg[25]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A656A60000FFFF)) 
    \scr_reg[26]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[26]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[84]),
        .I4(\scr_reg_reg[26]_0 ),
        .I5(\scr_reg[57]_i_2_n_0 ),
        .O(\scr_reg[26]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h333CCC3C55555555)) 
    \scr_reg[27]_i_1 
       (.I0(\scr_reg_reg[27]_0 ),
        .I1(tx_test_patt_seed_sel[0]),
        .I2(configuration_vector[27]),
        .I3(tx_test_patt_seed_sel[1]),
        .I4(configuration_vector[85]),
        .I5(\scr_reg[57]_i_2_n_0 ),
        .O(\scr_reg[27]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h333CCC3C55555555)) 
    \scr_reg[28]_i_1 
       (.I0(\scr_reg[28]_i_2_n_0 ),
        .I1(tx_test_patt_seed_sel[0]),
        .I2(configuration_vector[28]),
        .I3(tx_test_patt_seed_sel[1]),
        .I4(configuration_vector[86]),
        .I5(\scr_reg[57]_i_2_n_0 ),
        .O(\scr_reg[28]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hDD1D22E222E2DD1D)) 
    \scr_reg[28]_i_2 
       (.I0(Q[35]),
        .I1(configuration_vector[118]),
        .I2(tx_test_patt_seed_sel[0]),
        .I3(configuration_vector[117]),
        .I4(p_0_in36_in),
        .I5(p_2_in37_in),
        .O(\scr_reg[28]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h1D1D1DD1D1D11DD1)) 
    \scr_reg[29]_i_1 
       (.I0(\scr_reg[29]_i_2_n_0 ),
        .I1(\scr_reg[57]_i_2_n_0 ),
        .I2(tx_test_patt_seed_sel[0]),
        .I3(configuration_vector[29]),
        .I4(tx_test_patt_seed_sel[1]),
        .I5(configuration_vector[87]),
        .O(\scr_reg[29]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hDD1D22E222E2DD1D)) 
    \scr_reg[29]_i_2 
       (.I0(Q[34]),
        .I1(configuration_vector[118]),
        .I2(tx_test_patt_seed_sel[0]),
        .I3(configuration_vector[117]),
        .I4(p_0_in32_in),
        .I5(p_2_in33_in),
        .O(\scr_reg[29]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[2]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[2]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[60]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\scr_reg[2]_i_2_n_0 ),
        .O(\scr_reg[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hDD1D22E222E2DD1D)) 
    \scr_reg[2]_i_2 
       (.I0(Q[61]),
        .I1(configuration_vector[118]),
        .I2(tx_test_patt_seed_sel[0]),
        .I3(configuration_vector[117]),
        .I4(\gt_txd[61]_i_4_n_0 ),
        .I5(\gt_txd[61]_i_3_n_0 ),
        .O(\scr_reg[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h1D1D1DD1D1D11DD1)) 
    \scr_reg[30]_i_1 
       (.I0(\scr_reg[30]_i_2_n_0 ),
        .I1(\scr_reg[57]_i_2_n_0 ),
        .I2(tx_test_patt_seed_sel[0]),
        .I3(configuration_vector[30]),
        .I4(tx_test_patt_seed_sel[1]),
        .I5(configuration_vector[88]),
        .O(\scr_reg[30]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hDD1D22E222E2DD1D)) 
    \scr_reg[30]_i_2 
       (.I0(Q[33]),
        .I1(configuration_vector[118]),
        .I2(tx_test_patt_seed_sel[0]),
        .I3(configuration_vector[117]),
        .I4(p_0_in28_in),
        .I5(p_2_in29_in),
        .O(\scr_reg[30]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h1D1D1DD1D1D11DD1)) 
    \scr_reg[31]_i_1 
       (.I0(\scr_reg[31]_i_2_n_0 ),
        .I1(\scr_reg[57]_i_2_n_0 ),
        .I2(tx_test_patt_seed_sel[0]),
        .I3(configuration_vector[31]),
        .I4(tx_test_patt_seed_sel[1]),
        .I5(configuration_vector[89]),
        .O(\scr_reg[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hDD1D22E222E2DD1D)) 
    \scr_reg[31]_i_2 
       (.I0(Q[32]),
        .I1(configuration_vector[118]),
        .I2(tx_test_patt_seed_sel[0]),
        .I3(configuration_vector[117]),
        .I4(p_0_in24_in),
        .I5(p_2_in25_in),
        .O(\scr_reg[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h333CCC3C55555555)) 
    \scr_reg[32]_i_1 
       (.I0(\scr_reg[32]_i_2_n_0 ),
        .I1(tx_test_patt_seed_sel[0]),
        .I2(configuration_vector[32]),
        .I3(tx_test_patt_seed_sel[1]),
        .I4(configuration_vector[90]),
        .I5(\scr_reg[57]_i_2_n_0 ),
        .O(\scr_reg[32]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hDD1D22E222E2DD1D)) 
    \scr_reg[32]_i_2 
       (.I0(Q[31]),
        .I1(configuration_vector[118]),
        .I2(tx_test_patt_seed_sel[0]),
        .I3(configuration_vector[117]),
        .I4(p_0_in20_in),
        .I5(p_2_in21_in),
        .O(\scr_reg[32]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[33]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[33]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[91]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\scr_reg[33]_i_2_n_0 ),
        .O(\scr_reg[33]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[33]_i_2 
       (.I0(Q[30]),
        .I1(configuration_vector[118]),
        .I2(configuration_vector[117]),
        .I3(tx_test_patt_seed_sel[0]),
        .I4(p_0_in16_in),
        .I5(p_2_in17_in),
        .O(\scr_reg[33]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[34]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[34]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[92]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\scr_reg[34]_i_2_n_0 ),
        .O(\scr_reg[34]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[34]_i_2 
       (.I0(Q[29]),
        .I1(configuration_vector[118]),
        .I2(configuration_vector[117]),
        .I3(tx_test_patt_seed_sel[0]),
        .I4(p_0_in12_in),
        .I5(p_2_in13_in),
        .O(\scr_reg[34]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[35]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[35]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[93]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\scr_reg[35]_i_2_n_0 ),
        .O(\scr_reg[35]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[35]_i_2 
       (.I0(Q[28]),
        .I1(configuration_vector[118]),
        .I2(configuration_vector[117]),
        .I3(tx_test_patt_seed_sel[0]),
        .I4(p_0_in8_in),
        .I5(p_2_in9_in),
        .O(\scr_reg[35]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[36]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[36]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[94]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\scr_reg[36]_i_2_n_0 ),
        .O(\scr_reg[36]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[36]_i_2 
       (.I0(Q[27]),
        .I1(configuration_vector[118]),
        .I2(configuration_vector[117]),
        .I3(tx_test_patt_seed_sel[0]),
        .I4(p_0_in4_in),
        .I5(p_2_in5_in),
        .O(\scr_reg[36]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[37]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[37]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[95]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\scr_reg[37]_i_2_n_0 ),
        .O(\scr_reg[37]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[37]_i_2 
       (.I0(Q[26]),
        .I1(configuration_vector[118]),
        .I2(configuration_vector[117]),
        .I3(tx_test_patt_seed_sel[0]),
        .I4(p_0_in0_in),
        .I5(p_2_in1_in),
        .O(\scr_reg[37]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[38]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[38]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[96]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\scr_reg_reg[38]_0 ),
        .O(\scr_reg[38]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[39]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[39]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[97]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\scr_reg_reg[39]_0 ),
        .O(\scr_reg[39]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[3]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[3]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[61]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\scr_reg[3]_i_2_n_0 ),
        .O(\scr_reg[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59A95959A656A6A6)) 
    \scr_reg[3]_i_2 
       (.I0(\gt_txd[60]_i_3_n_0 ),
        .I1(Q[60]),
        .I2(configuration_vector[118]),
        .I3(configuration_vector[117]),
        .I4(tx_test_patt_seed_sel[0]),
        .I5(\gt_txd[60]_i_2_n_0 ),
        .O(\scr_reg[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6000056A6FFFF)) 
    \scr_reg[40]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[40]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[98]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\gt_txd[62]_i_2_n_0 ),
        .O(\scr_reg[40]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1D1D1DD1D1D11DD1)) 
    \scr_reg[41]_i_1 
       (.I0(\gt_txd[61]_i_3_n_0 ),
        .I1(\scr_reg[57]_i_2_n_0 ),
        .I2(tx_test_patt_seed_sel[0]),
        .I3(configuration_vector[41]),
        .I4(tx_test_patt_seed_sel[1]),
        .I5(configuration_vector[99]),
        .O(\scr_reg[41]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A656A60000FFFF)) 
    \scr_reg[42]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[42]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[100]),
        .I4(\gt_txd[60]_i_2_n_0 ),
        .I5(\scr_reg[57]_i_2_n_0 ),
        .O(\scr_reg[42]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6000056A6FFFF)) 
    \scr_reg[43]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[43]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[101]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\gt_txd[59]_i_3_n_0 ),
        .O(\scr_reg[43]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1D1D1DD1D1D11DD1)) 
    \scr_reg[44]_i_1 
       (.I0(\gt_txd[58]_i_2_n_0 ),
        .I1(\scr_reg[57]_i_2_n_0 ),
        .I2(tx_test_patt_seed_sel[0]),
        .I3(configuration_vector[44]),
        .I4(tx_test_patt_seed_sel[1]),
        .I5(configuration_vector[102]),
        .O(\scr_reg[44]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[45]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[45]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[103]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\gt_txd[57]_i_4_n_0 ),
        .O(\scr_reg[45]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[46]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[46]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[104]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\gt_txd[56]_i_3_n_0 ),
        .O(\scr_reg[46]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[47]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[47]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[105]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\gt_txd[55]_i_3_n_0 ),
        .O(\scr_reg[47]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[48]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[48]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[106]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\gt_txd[54]_i_2_n_0 ),
        .O(\scr_reg[48]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[49]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[49]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[107]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\scr_reg[49]_i_2_n_0 ),
        .O(\scr_reg[49]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[49]_i_2 
       (.I0(Q[14]),
        .I1(configuration_vector[118]),
        .I2(configuration_vector[117]),
        .I3(tx_test_patt_seed_sel[0]),
        .I4(p_2_in121_in),
        .I5(p_2_in29_in),
        .O(\scr_reg[49]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[4]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[4]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[62]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\scr_reg[4]_i_2_n_0 ),
        .O(\scr_reg[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hDD1D22E222E2DD1D)) 
    \scr_reg[4]_i_2 
       (.I0(Q[59]),
        .I1(configuration_vector[118]),
        .I2(tx_test_patt_seed_sel[0]),
        .I3(configuration_vector[117]),
        .I4(\gt_txd[59]_i_4_n_0 ),
        .I5(\gt_txd[59]_i_3_n_0 ),
        .O(\scr_reg[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[50]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[50]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[108]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\gt_txd[52]_i_2_n_0 ),
        .O(\scr_reg[50]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[51]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[51]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[109]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\gt_txd[51]_i_2_n_0 ),
        .O(\scr_reg[51]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[52]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[52]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[110]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\gt_txd[50]_i_2_n_0 ),
        .O(\scr_reg[52]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[53]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[53]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[111]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\gt_txd[49]_i_2_n_0 ),
        .O(\scr_reg[53]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[54]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[54]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[112]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\gt_txd[48]_i_2_n_0 ),
        .O(\scr_reg[54]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[55]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[55]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[113]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\scr_reg_reg[55]_0 ),
        .O(\scr_reg[55]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[56]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[56]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[114]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\gt_txd[46]_i_2_n_0 ),
        .O(\scr_reg[56]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[57]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[57]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[115]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\gt_txd[45]_i_3_n_0 ),
        .O(\scr_reg[57]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \scr_reg[57]_i_2 
       (.I0(configuration_vector[118]),
        .I1(new_tx_test_seed),
        .O(\scr_reg[57]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[5]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[5]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[63]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\scr_reg[5]_i_2_n_0 ),
        .O(\scr_reg[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59A95959A656A6A6)) 
    \scr_reg[5]_i_2 
       (.I0(\gt_txd[58]_i_3_n_0 ),
        .I1(Q[58]),
        .I2(configuration_vector[118]),
        .I3(configuration_vector[117]),
        .I4(tx_test_patt_seed_sel[0]),
        .I5(\gt_txd[58]_i_2_n_0 ),
        .O(\scr_reg[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[6]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[6]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[64]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\scr_reg[6]_i_2_n_0 ),
        .O(\scr_reg[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[6]_i_2 
       (.I0(\gt_txd[57]_i_4_n_0 ),
        .I1(tx_test_patt_seed_sel[0]),
        .I2(configuration_vector[117]),
        .I3(configuration_vector[118]),
        .I4(Q[57]),
        .I5(\scr_reg_reg_n_0_[0] ),
        .O(\scr_reg[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h333CCC3C55555555)) 
    \scr_reg[7]_i_1 
       (.I0(\scr_reg[7]_i_2_n_0 ),
        .I1(tx_test_patt_seed_sel[0]),
        .I2(configuration_vector[7]),
        .I3(tx_test_patt_seed_sel[1]),
        .I4(configuration_vector[65]),
        .I5(\scr_reg[57]_i_2_n_0 ),
        .O(\scr_reg[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h55A6AA59)) 
    \scr_reg[7]_i_2 
       (.I0(\gt_txd[56]_i_3_n_0 ),
        .I1(Q[56]),
        .I2(configuration_vector[118]),
        .I3(\gt_txd[56]_i_2_n_0 ),
        .I4(p_0_in44_in),
        .O(\scr_reg[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h1D1D1DD1D1D11DD1)) 
    \scr_reg[8]_i_1 
       (.I0(\scr_reg[8]_i_2_n_0 ),
        .I1(\scr_reg[57]_i_2_n_0 ),
        .I2(tx_test_patt_seed_sel[0]),
        .I3(configuration_vector[8]),
        .I4(tx_test_patt_seed_sel[1]),
        .I5(configuration_vector[66]),
        .O(\scr_reg[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h9A559AAA65AA6555)) 
    \scr_reg[8]_i_2 
       (.I0(\gt_txd[55]_i_3_n_0 ),
        .I1(configuration_vector[117]),
        .I2(tx_test_patt_seed_sel[0]),
        .I3(configuration_vector[118]),
        .I4(Q[55]),
        .I5(p_0_in40_in),
        .O(\scr_reg[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[9]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(configuration_vector[9]),
        .I2(tx_test_patt_seed_sel[1]),
        .I3(configuration_vector[67]),
        .I4(\scr_reg[57]_i_2_n_0 ),
        .I5(\scr_reg[9]_i_2_n_0 ),
        .O(\scr_reg[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[9]_i_2 
       (.I0(\gt_txd[54]_i_2_n_0 ),
        .I1(tx_test_patt_seed_sel[0]),
        .I2(configuration_vector[117]),
        .I3(configuration_vector[118]),
        .I4(Q[54]),
        .I5(p_0_in36_in),
        .O(\scr_reg[9]_i_2_n_0 ));
  FDRE \scr_reg_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[0]_i_1_n_0 ),
        .Q(\scr_reg_reg_n_0_[0] ),
        .R(SR));
  FDRE \scr_reg_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[10]_i_1_n_0 ),
        .Q(p_0_in8_in),
        .R(SR));
  FDRE \scr_reg_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[11]_i_1_n_0 ),
        .Q(p_0_in4_in),
        .R(SR));
  FDRE \scr_reg_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[12]_i_1_n_0 ),
        .Q(p_0_in0_in),
        .R(SR));
  FDRE \scr_reg_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[13]_i_1_n_0 ),
        .Q(p_0_in_0),
        .R(SR));
  FDRE \scr_reg_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[14]_i_1_n_0 ),
        .Q(p_2_in68_in),
        .R(SR));
  FDRE \scr_reg_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[15]_i_1_n_0 ),
        .Q(p_2_in64_in),
        .R(SR));
  FDRE \scr_reg_reg[16] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[16]_i_1_n_0 ),
        .Q(p_2_in60_in),
        .R(SR));
  FDRE \scr_reg_reg[17] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[17]_i_1_n_0 ),
        .Q(p_2_in56_in),
        .R(SR));
  FDRE \scr_reg_reg[18] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[18]_i_1_n_0 ),
        .Q(p_2_in52_in),
        .R(SR));
  FDRE \scr_reg_reg[19] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[19]_i_1_n_0 ),
        .Q(p_2_in48_in),
        .R(SR));
  FDRE \scr_reg_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[1]_i_1_n_0 ),
        .Q(p_0_in44_in),
        .R(SR));
  FDRE \scr_reg_reg[20] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[20]_i_1_n_0 ),
        .Q(p_2_in45_in),
        .R(SR));
  FDRE \scr_reg_reg[21] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[21]_i_1_n_0 ),
        .Q(p_2_in41_in),
        .R(SR));
  FDRE \scr_reg_reg[22] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[22]_i_1_n_0 ),
        .Q(p_2_in37_in),
        .R(SR));
  FDRE \scr_reg_reg[23] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[23]_i_1_n_0 ),
        .Q(p_2_in33_in),
        .R(SR));
  FDRE \scr_reg_reg[24] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[24]_i_1_n_0 ),
        .Q(p_2_in29_in),
        .R(SR));
  FDRE \scr_reg_reg[25] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[25]_i_1_n_0 ),
        .Q(p_2_in25_in),
        .R(SR));
  FDRE \scr_reg_reg[26] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[26]_i_1_n_0 ),
        .Q(p_2_in21_in),
        .R(SR));
  FDRE \scr_reg_reg[27] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[27]_i_1_n_0 ),
        .Q(p_2_in17_in),
        .R(SR));
  FDRE \scr_reg_reg[28] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[28]_i_1_n_0 ),
        .Q(p_2_in13_in),
        .R(SR));
  FDRE \scr_reg_reg[29] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[29]_i_1_n_0 ),
        .Q(p_2_in9_in),
        .R(SR));
  FDRE \scr_reg_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[2]_i_1_n_0 ),
        .Q(p_0_in40_in),
        .R(SR));
  FDRE \scr_reg_reg[30] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[30]_i_1_n_0 ),
        .Q(p_2_in5_in),
        .R(SR));
  FDRE \scr_reg_reg[31] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[31]_i_1_n_0 ),
        .Q(p_2_in1_in),
        .R(SR));
  FDRE \scr_reg_reg[32] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[32]_i_1_n_0 ),
        .Q(p_2_in),
        .R(SR));
  FDRE \scr_reg_reg[33] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[33]_i_1_n_0 ),
        .Q(p_0_in200_in),
        .R(SR));
  FDRE \scr_reg_reg[34] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[34]_i_1_n_0 ),
        .Q(p_0_in190_in),
        .R(SR));
  FDRE \scr_reg_reg[35] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[35]_i_1_n_0 ),
        .Q(p_0_in180_in),
        .R(SR));
  FDRE \scr_reg_reg[36] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[36]_i_1_n_0 ),
        .Q(p_0_in170_in),
        .R(SR));
  FDRE \scr_reg_reg[37] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[37]_i_1_n_0 ),
        .Q(p_0_in160_in),
        .R(SR));
  FDRE \scr_reg_reg[38] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[38]_i_1_n_0 ),
        .Q(p_0_in151_in),
        .R(SR));
  FDRE \scr_reg_reg[39] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[39]_i_1_n_0 ),
        .Q(p_2_in145_in),
        .R(SR));
  FDRE \scr_reg_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[3]_i_1_n_0 ),
        .Q(p_0_in36_in),
        .R(SR));
  FDRE \scr_reg_reg[40] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[40]_i_1_n_0 ),
        .Q(p_2_in139_in),
        .R(SR));
  FDRE \scr_reg_reg[41] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[41]_i_1_n_0 ),
        .Q(p_2_in133_in),
        .R(SR));
  FDRE \scr_reg_reg[42] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[42]_i_1_n_0 ),
        .Q(p_2_in127_in),
        .R(SR));
  FDRE \scr_reg_reg[43] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[43]_i_1_n_0 ),
        .Q(p_2_in121_in),
        .R(SR));
  FDRE \scr_reg_reg[44] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[44]_i_1_n_0 ),
        .Q(p_2_in115_in),
        .R(SR));
  FDRE \scr_reg_reg[45] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[45]_i_1_n_0 ),
        .Q(p_2_in109_in),
        .R(SR));
  FDRE \scr_reg_reg[46] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[46]_i_1_n_0 ),
        .Q(p_2_in103_in),
        .R(SR));
  FDRE \scr_reg_reg[47] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[47]_i_1_n_0 ),
        .Q(p_2_in97_in),
        .R(SR));
  FDRE \scr_reg_reg[48] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[48]_i_1_n_0 ),
        .Q(p_2_in91_in),
        .R(SR));
  FDRE \scr_reg_reg[49] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[49]_i_1_n_0 ),
        .Q(p_2_in85_in),
        .R(SR));
  FDRE \scr_reg_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[4]_i_1_n_0 ),
        .Q(p_0_in32_in),
        .R(SR));
  FDRE \scr_reg_reg[50] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[50]_i_1_n_0 ),
        .Q(p_2_in79_in),
        .R(SR));
  FDRE \scr_reg_reg[51] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[51]_i_1_n_0 ),
        .Q(p_2_in74_in),
        .R(SR));
  FDRE \scr_reg_reg[52] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[52]_i_1_n_0 ),
        .Q(p_2_in201_in),
        .R(SR));
  FDRE \scr_reg_reg[53] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[53]_i_1_n_0 ),
        .Q(p_2_in191_in),
        .R(SR));
  FDRE \scr_reg_reg[54] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[54]_i_1_n_0 ),
        .Q(p_2_in181_in),
        .R(SR));
  FDRE \scr_reg_reg[55] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[55]_i_1_n_0 ),
        .Q(p_2_in171_in),
        .R(SR));
  FDRE \scr_reg_reg[56] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[56]_i_1_n_0 ),
        .Q(p_2_in161_in),
        .R(SR));
  FDRE \scr_reg_reg[57] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[57]_i_1_n_0 ),
        .Q(p_2_in152_in),
        .R(SR));
  FDRE \scr_reg_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[5]_i_1_n_0 ),
        .Q(p_0_in28_in),
        .R(SR));
  FDRE \scr_reg_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[6]_i_1_n_0 ),
        .Q(p_0_in24_in),
        .R(SR));
  FDRE \scr_reg_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[7]_i_1_n_0 ),
        .Q(p_0_in20_in),
        .R(SR));
  FDRE \scr_reg_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[8]_i_1_n_0 ),
        .Q(p_0_in16_in),
        .R(SR));
  FDRE \scr_reg_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[9]_i_1_n_0 ),
        .Q(p_0_in12_in),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT3 #(
    .INIT(8'h9A)) 
    \tx_test_patt_seed_sel[0]_i_1 
       (.I0(tx_test_patt_seed_sel[0]),
        .I1(\tx_test_patt_seed_sel[1]_i_3_n_0 ),
        .I2(block_count_reg__0[6]),
        .O(\tx_test_patt_seed_sel[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \tx_test_patt_seed_sel[1]_i_1 
       (.I0(SR),
        .I1(configuration_vector[118]),
        .O(\tx_test_patt_seed_sel[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT4 #(
    .INIT(16'hA6AA)) 
    \tx_test_patt_seed_sel[1]_i_2 
       (.I0(tx_test_patt_seed_sel[1]),
        .I1(block_count_reg__0[6]),
        .I2(\tx_test_patt_seed_sel[1]_i_3_n_0 ),
        .I3(tx_test_patt_seed_sel[0]),
        .O(\tx_test_patt_seed_sel[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \tx_test_patt_seed_sel[1]_i_3 
       (.I0(block_count_reg__0[4]),
        .I1(block_count_reg__0[2]),
        .I2(block_count_reg__0[0]),
        .I3(block_count_reg__0[1]),
        .I4(block_count_reg__0[3]),
        .I5(block_count_reg__0[5]),
        .O(\tx_test_patt_seed_sel[1]_i_3_n_0 ));
  FDRE \tx_test_patt_seed_sel_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_test_patt_seed_sel[0]_i_1_n_0 ),
        .Q(tx_test_patt_seed_sel[0]),
        .R(\tx_test_patt_seed_sel[1]_i_1_n_0 ));
  FDRE \tx_test_patt_seed_sel_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_test_patt_seed_sel[1]_i_2_n_0 ),
        .Q(tx_test_patt_seed_sel[1]),
        .R(\tx_test_patt_seed_sel[1]_i_1_n_0 ));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_pcs_top
   (b_lock,
    gt_slip_int,
    ber_count_inc,
    hiber,
    err_block_count_inc,
    \gt_txd_reg[6] ,
    \gt_txd_reg[45] ,
    \gt_txd_reg[56] ,
    \gt_txd_reg[4] ,
    \gt_txd_reg[62] ,
    \gt_txd_reg[43] ,
    \gt_txd_reg[60] ,
    \gt_txd_reg[41] ,
    \gt_txd_reg[58] ,
    \gt_txd_reg[39] ,
    \gt_txd_reg[63] ,
    \scr_reg_reg[39] ,
    \gt_txd_reg[61] ,
    \gt_txd_reg[59] ,
    \gt_txd_reg[55] ,
    \gt_txd_reg[38] ,
    \gt_txd_reg[35] ,
    \gt_txd_reg[34] ,
    \gt_txd_reg[33] ,
    \gt_txd_reg[32] ,
    \gt_txd_reg[31] ,
    \gt_txd_reg[19] ,
    \gt_txd_reg[7] ,
    \gt_txd_reg[46] ,
    \gt_txd_reg[47] ,
    \scr_reg_reg[55] ,
    \gt_txd_reg[9] ,
    \gt_txd_reg[48] ,
    \gt_txd_reg[10] ,
    \gt_txd_reg[49] ,
    \gt_txd_reg[11] ,
    \gt_txd_reg[50] ,
    \gt_txd_reg[12] ,
    \gt_txd_reg[51] ,
    \gt_txd_reg[13] ,
    \gt_txd_reg[52] ,
    \gt_txd_reg[14] ,
    \gt_txd_reg[15] ,
    \gt_txd_reg[54] ,
    \gt_txd_reg[16] ,
    \gt_txd_reg[17] ,
    \gt_txd_reg[18] ,
    \gt_txd_reg[57] ,
    \gt_txd_reg[26] ,
    \gt_txd_reg[27] ,
    \gt_txd_reg[28] ,
    \gt_txd_reg[29] ,
    \gt_txd_reg[30] ,
    \gt_txd_reg[40] ,
    \gt_txd_reg[1] ,
    \gt_txd_reg[42] ,
    \gt_txd_reg[3] ,
    \gt_txd_reg[44] ,
    \gt_txd_reg[5] ,
    \scr_reg_reg[38] ,
    \scr_reg_reg[27] ,
    \scr_reg_reg[26] ,
    \scr_reg_reg[10] ,
    \gt_txd_reg[2] ,
    \gt_txd_reg[0] ,
    \gt_txd_reg[23] ,
    \gt_txd_reg[22] ,
    \gt_txd_reg[21] ,
    \gt_txd_reg[20] ,
    pcs_rx_link_up_core_int,
    \gt_txc_reg[1] ,
    \mcp1_ctrl_pipe_reg[7] ,
    \mcp1_data_pipe_reg[63] ,
    rxusrclk2,
    configuration_vector,
    coreclk,
    signal_detect,
    \outreg_reg[2] ,
    q_reg,
    Q,
    D,
    out,
    rxreset,
    reset,
    reg_3_0_15);
  output b_lock;
  output gt_slip_int;
  output ber_count_inc;
  output hiber;
  output err_block_count_inc;
  output \gt_txd_reg[6] ;
  output \gt_txd_reg[45] ;
  output \gt_txd_reg[56] ;
  output \gt_txd_reg[4] ;
  output \gt_txd_reg[62] ;
  output \gt_txd_reg[43] ;
  output \gt_txd_reg[60] ;
  output \gt_txd_reg[41] ;
  output \gt_txd_reg[58] ;
  output \gt_txd_reg[39] ;
  output \gt_txd_reg[63] ;
  output \scr_reg_reg[39] ;
  output \gt_txd_reg[61] ;
  output \gt_txd_reg[59] ;
  output \gt_txd_reg[55] ;
  output \gt_txd_reg[38] ;
  output \gt_txd_reg[35] ;
  output \gt_txd_reg[34] ;
  output \gt_txd_reg[33] ;
  output \gt_txd_reg[32] ;
  output \gt_txd_reg[31] ;
  output \gt_txd_reg[19] ;
  output \gt_txd_reg[7] ;
  output \gt_txd_reg[46] ;
  output \gt_txd_reg[47] ;
  output \scr_reg_reg[55] ;
  output \gt_txd_reg[9] ;
  output \gt_txd_reg[48] ;
  output \gt_txd_reg[10] ;
  output \gt_txd_reg[49] ;
  output \gt_txd_reg[11] ;
  output \gt_txd_reg[50] ;
  output \gt_txd_reg[12] ;
  output \gt_txd_reg[51] ;
  output \gt_txd_reg[13] ;
  output \gt_txd_reg[52] ;
  output \gt_txd_reg[14] ;
  output \gt_txd_reg[15] ;
  output \gt_txd_reg[54] ;
  output \gt_txd_reg[16] ;
  output \gt_txd_reg[17] ;
  output \gt_txd_reg[18] ;
  output \gt_txd_reg[57] ;
  output \gt_txd_reg[26] ;
  output \gt_txd_reg[27] ;
  output \gt_txd_reg[28] ;
  output \gt_txd_reg[29] ;
  output \gt_txd_reg[30] ;
  output \gt_txd_reg[40] ;
  output \gt_txd_reg[1] ;
  output \gt_txd_reg[42] ;
  output \gt_txd_reg[3] ;
  output \gt_txd_reg[44] ;
  output \gt_txd_reg[5] ;
  output \scr_reg_reg[38] ;
  output \scr_reg_reg[27] ;
  output \scr_reg_reg[26] ;
  output \scr_reg_reg[10] ;
  output \gt_txd_reg[2] ;
  output \gt_txd_reg[0] ;
  output \gt_txd_reg[23] ;
  output \gt_txd_reg[22] ;
  output \gt_txd_reg[21] ;
  output \gt_txd_reg[20] ;
  output pcs_rx_link_up_core_int;
  output [1:0]\gt_txc_reg[1] ;
  output [7:0]\mcp1_ctrl_pipe_reg[7] ;
  output [63:0]\mcp1_data_pipe_reg[63] ;
  input rxusrclk2;
  input [134:0]configuration_vector;
  input coreclk;
  input signal_detect;
  input [2:0]\outreg_reg[2] ;
  input q_reg;
  input [65:0]Q;
  input [7:0]D;
  input [63:0]out;
  input rxreset;
  input reset;
  input reg_3_0_15;

  wire [7:0]D;
  wire [65:0]Q;
  wire b_lock;
  wire ber_count_inc;
  wire [134:0]configuration_vector;
  wire coreclk;
  wire err_block_count_inc;
  wire gt_slip_int;
  wire [1:0]\gt_txc_reg[1] ;
  wire \gt_txd_reg[0] ;
  wire \gt_txd_reg[10] ;
  wire \gt_txd_reg[11] ;
  wire \gt_txd_reg[12] ;
  wire \gt_txd_reg[13] ;
  wire \gt_txd_reg[14] ;
  wire \gt_txd_reg[15] ;
  wire \gt_txd_reg[16] ;
  wire \gt_txd_reg[17] ;
  wire \gt_txd_reg[18] ;
  wire \gt_txd_reg[19] ;
  wire \gt_txd_reg[1] ;
  wire \gt_txd_reg[20] ;
  wire \gt_txd_reg[21] ;
  wire \gt_txd_reg[22] ;
  wire \gt_txd_reg[23] ;
  wire \gt_txd_reg[26] ;
  wire \gt_txd_reg[27] ;
  wire \gt_txd_reg[28] ;
  wire \gt_txd_reg[29] ;
  wire \gt_txd_reg[2] ;
  wire \gt_txd_reg[30] ;
  wire \gt_txd_reg[31] ;
  wire \gt_txd_reg[32] ;
  wire \gt_txd_reg[33] ;
  wire \gt_txd_reg[34] ;
  wire \gt_txd_reg[35] ;
  wire \gt_txd_reg[38] ;
  wire \gt_txd_reg[39] ;
  wire \gt_txd_reg[3] ;
  wire \gt_txd_reg[40] ;
  wire \gt_txd_reg[41] ;
  wire \gt_txd_reg[42] ;
  wire \gt_txd_reg[43] ;
  wire \gt_txd_reg[44] ;
  wire \gt_txd_reg[45] ;
  wire \gt_txd_reg[46] ;
  wire \gt_txd_reg[47] ;
  wire \gt_txd_reg[48] ;
  wire \gt_txd_reg[49] ;
  wire \gt_txd_reg[4] ;
  wire \gt_txd_reg[50] ;
  wire \gt_txd_reg[51] ;
  wire \gt_txd_reg[52] ;
  wire \gt_txd_reg[54] ;
  wire \gt_txd_reg[55] ;
  wire \gt_txd_reg[56] ;
  wire \gt_txd_reg[57] ;
  wire \gt_txd_reg[58] ;
  wire \gt_txd_reg[59] ;
  wire \gt_txd_reg[5] ;
  wire \gt_txd_reg[60] ;
  wire \gt_txd_reg[61] ;
  wire \gt_txd_reg[62] ;
  wire \gt_txd_reg[63] ;
  wire \gt_txd_reg[6] ;
  wire \gt_txd_reg[7] ;
  wire \gt_txd_reg[9] ;
  wire hiber;
  wire [7:0]\mcp1_ctrl_pipe_reg[7] ;
  wire [63:0]\mcp1_data_pipe_reg[63] ;
  wire [15:0]mcp1_timer_125us_cycles_sync;
  wire [63:0]out;
  wire [2:0]\outreg_reg[2] ;
  wire pcs_rx_link_up_core_int;
  wire q_reg;
  wire reg_3_0_15;
  wire reset;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire reset_local;
  wire rxreset;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire rxreset_local;
  wire rxusrclk2;
  wire \scr_reg_reg[10] ;
  wire \scr_reg_reg[26] ;
  wire \scr_reg_reg[27] ;
  wire \scr_reg_reg[38] ;
  wire \scr_reg_reg[39] ;
  wire \scr_reg_reg[55] ;
  wire signal_detect;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_coherent_resyncs_en coreclk_rxusrclk2_timer_125us_resync
       (.configuration_vector(configuration_vector[134:119]),
        .out(mcp1_timer_125us_cycles_sync),
        .rxusrclk2(rxusrclk2));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE reset_local_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(reg_3_0_15),
        .Q(reset_local),
        .S(reset));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_rx_pcs rx_pcs_i
       (.Q(Q),
        .ber_count_inc(ber_count_inc),
        .d1_reg(b_lock),
        .d1_reg_0(hiber),
        .err_block_count_inc(err_block_count_inc),
        .gt_slip_int(gt_slip_int),
        .\mcp1_ctrl_pipe_reg[7] (\mcp1_ctrl_pipe_reg[7] ),
        .\mcp1_data_pipe_reg[63] (\mcp1_data_pipe_reg[63] ),
        .out(rxreset_local),
        .\outreg_reg[15] (mcp1_timer_125us_cycles_sync),
        .\outreg_reg[2] (\outreg_reg[2] ),
        .pcs_rx_link_up_core_int(pcs_rx_link_up_core_int),
        .rxusrclk2(rxusrclk2),
        .signal_detect(signal_detect));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE rxreset_local_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxreset),
        .Q(rxreset_local),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_tx_pcs tx_pcs_i
       (.D(D),
        .SR(reset_local),
        .configuration_vector(configuration_vector[118:0]),
        .coreclk(coreclk),
        .\gt_txc_reg[1] (\gt_txc_reg[1] ),
        .\gt_txd_reg[0] (\gt_txd_reg[0] ),
        .\gt_txd_reg[10] (\gt_txd_reg[10] ),
        .\gt_txd_reg[11] (\gt_txd_reg[11] ),
        .\gt_txd_reg[12] (\gt_txd_reg[12] ),
        .\gt_txd_reg[13] (\gt_txd_reg[13] ),
        .\gt_txd_reg[14] (\gt_txd_reg[14] ),
        .\gt_txd_reg[15] (\gt_txd_reg[15] ),
        .\gt_txd_reg[16] (\gt_txd_reg[16] ),
        .\gt_txd_reg[17] (\gt_txd_reg[17] ),
        .\gt_txd_reg[18] (\gt_txd_reg[18] ),
        .\gt_txd_reg[19] (\gt_txd_reg[19] ),
        .\gt_txd_reg[1] (\gt_txd_reg[1] ),
        .\gt_txd_reg[20] (\gt_txd_reg[20] ),
        .\gt_txd_reg[21] (\gt_txd_reg[21] ),
        .\gt_txd_reg[22] (\gt_txd_reg[22] ),
        .\gt_txd_reg[23] (\gt_txd_reg[23] ),
        .\gt_txd_reg[26] (\gt_txd_reg[26] ),
        .\gt_txd_reg[27] (\gt_txd_reg[27] ),
        .\gt_txd_reg[28] (\gt_txd_reg[28] ),
        .\gt_txd_reg[29] (\gt_txd_reg[29] ),
        .\gt_txd_reg[2] (\gt_txd_reg[2] ),
        .\gt_txd_reg[30] (\gt_txd_reg[30] ),
        .\gt_txd_reg[31] (\gt_txd_reg[31] ),
        .\gt_txd_reg[32] (\gt_txd_reg[32] ),
        .\gt_txd_reg[33] (\gt_txd_reg[33] ),
        .\gt_txd_reg[34] (\gt_txd_reg[34] ),
        .\gt_txd_reg[35] (\gt_txd_reg[35] ),
        .\gt_txd_reg[38] (\gt_txd_reg[38] ),
        .\gt_txd_reg[39] (\gt_txd_reg[39] ),
        .\gt_txd_reg[3] (\gt_txd_reg[3] ),
        .\gt_txd_reg[40] (\gt_txd_reg[40] ),
        .\gt_txd_reg[41] (\gt_txd_reg[41] ),
        .\gt_txd_reg[42] (\gt_txd_reg[42] ),
        .\gt_txd_reg[43] (\gt_txd_reg[43] ),
        .\gt_txd_reg[44] (\gt_txd_reg[44] ),
        .\gt_txd_reg[45] (\gt_txd_reg[45] ),
        .\gt_txd_reg[46] (\gt_txd_reg[46] ),
        .\gt_txd_reg[47] (\gt_txd_reg[47] ),
        .\gt_txd_reg[48] (\gt_txd_reg[48] ),
        .\gt_txd_reg[49] (\gt_txd_reg[49] ),
        .\gt_txd_reg[4] (\gt_txd_reg[4] ),
        .\gt_txd_reg[50] (\gt_txd_reg[50] ),
        .\gt_txd_reg[51] (\gt_txd_reg[51] ),
        .\gt_txd_reg[52] (\gt_txd_reg[52] ),
        .\gt_txd_reg[54] (\gt_txd_reg[54] ),
        .\gt_txd_reg[55] (\gt_txd_reg[55] ),
        .\gt_txd_reg[56] (\gt_txd_reg[56] ),
        .\gt_txd_reg[57] (\gt_txd_reg[57] ),
        .\gt_txd_reg[58] (\gt_txd_reg[58] ),
        .\gt_txd_reg[59] (\gt_txd_reg[59] ),
        .\gt_txd_reg[5] (\gt_txd_reg[5] ),
        .\gt_txd_reg[60] (\gt_txd_reg[60] ),
        .\gt_txd_reg[61] (\gt_txd_reg[61] ),
        .\gt_txd_reg[62] (\gt_txd_reg[62] ),
        .\gt_txd_reg[63] (\gt_txd_reg[63] ),
        .\gt_txd_reg[6] (\gt_txd_reg[6] ),
        .\gt_txd_reg[7] (\gt_txd_reg[7] ),
        .\gt_txd_reg[9] (\gt_txd_reg[9] ),
        .out(out),
        .q_reg(q_reg),
        .\scr_reg_reg[10] (\scr_reg_reg[10] ),
        .\scr_reg_reg[26] (\scr_reg_reg[26] ),
        .\scr_reg_reg[27] (\scr_reg_reg[27] ),
        .\scr_reg_reg[38] (\scr_reg_reg[38] ),
        .\scr_reg_reg[39] (\scr_reg_reg[39] ),
        .\scr_reg_reg[55] (\scr_reg_reg[55] ));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_pulse_synchronizer
   (counter_sync_1,
    mcp1_counter_1_reg,
    rxusrclk2,
    coreclk);
  output counter_sync_1;
  input mcp1_counter_1_reg;
  input rxusrclk2;
  input coreclk;

  wire coreclk;
  wire counter_sync_1;
  wire dcapture;
  wire mcp1_counter_1_reg;
  wire newedge;
  wire newedge_i_1__5_n_0;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg4;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg__0;
  wire out_comb;
  wire rxusrclk2;

  FDRE #(
    .INIT(1'b0)) 
    dcapture_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_1_reg),
        .Q(dcapture),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hF704)) 
    newedge_i_1__5
       (.I0(newedge),
        .I1(mcp1_counter_1_reg),
        .I2(dcapture),
        .I3(newedge),
        .O(newedge_i_1__5_n_0));
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(newedge_i_1__5_n_0),
        .Q(newedge),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg__0),
        .Q(newedge_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg1),
        .Q(newedge_reg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg2),
        .Q(newedge_reg3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg3),
        .Q(newedge_reg4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge),
        .Q(newedge_reg__0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    q_i_1__5
       (.I0(newedge_reg4),
        .I1(newedge_reg3),
        .O(out_comb));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(out_comb),
        .Q(counter_sync_1),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_pulse_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_pulse_synchronizer_55
   (counter_sync_2,
    counter_out0,
    mcp1_counter_2_reg,
    rxusrclk2,
    coreclk,
    counter_sync_1,
    counter_sync_3,
    counter_sync_extra);
  output counter_sync_2;
  output counter_out0;
  input mcp1_counter_2_reg;
  input rxusrclk2;
  input coreclk;
  input counter_sync_1;
  input counter_sync_3;
  input counter_sync_extra;

  wire coreclk;
  wire counter_out0;
  wire counter_sync_1;
  wire counter_sync_2;
  wire counter_sync_3;
  wire counter_sync_extra;
  wire dcapture;
  wire mcp1_counter_2_reg;
  wire newedge;
  wire newedge_i_1__6_n_0;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg4;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg__0;
  wire out_comb;
  wire rxusrclk2;

  LUT4 #(
    .INIT(16'hFFFE)) 
    counter_out_i_1__1
       (.I0(counter_sync_2),
        .I1(counter_sync_1),
        .I2(counter_sync_3),
        .I3(counter_sync_extra),
        .O(counter_out0));
  FDRE #(
    .INIT(1'b0)) 
    dcapture_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_2_reg),
        .Q(dcapture),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hF704)) 
    newedge_i_1__6
       (.I0(newedge),
        .I1(mcp1_counter_2_reg),
        .I2(dcapture),
        .I3(newedge),
        .O(newedge_i_1__6_n_0));
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(newedge_i_1__6_n_0),
        .Q(newedge),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg__0),
        .Q(newedge_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg1),
        .Q(newedge_reg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg2),
        .Q(newedge_reg3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg3),
        .Q(newedge_reg4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge),
        .Q(newedge_reg__0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    q_i_1__6
       (.I0(newedge_reg4),
        .I1(newedge_reg3),
        .O(out_comb));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(out_comb),
        .Q(counter_sync_2),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_pulse_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_pulse_synchronizer_56
   (counter_sync_3,
    mcp1_counter_3_reg,
    rxusrclk2,
    coreclk);
  output counter_sync_3;
  input mcp1_counter_3_reg;
  input rxusrclk2;
  input coreclk;

  wire coreclk;
  wire counter_sync_3;
  wire dcapture;
  wire mcp1_counter_3_reg;
  wire newedge;
  wire newedge_i_1__7_n_0;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg4;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg__0;
  wire out_comb;
  wire rxusrclk2;

  FDRE #(
    .INIT(1'b0)) 
    dcapture_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_3_reg),
        .Q(dcapture),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hF704)) 
    newedge_i_1__7
       (.I0(newedge),
        .I1(mcp1_counter_3_reg),
        .I2(dcapture),
        .I3(newedge),
        .O(newedge_i_1__7_n_0));
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(newedge_i_1__7_n_0),
        .Q(newedge),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg__0),
        .Q(newedge_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg1),
        .Q(newedge_reg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg2),
        .Q(newedge_reg3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg3),
        .Q(newedge_reg4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge),
        .Q(newedge_reg__0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    q_i_1__7
       (.I0(newedge_reg4),
        .I1(newedge_reg3),
        .O(out_comb));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(out_comb),
        .Q(counter_sync_3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_pulse_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_pulse_synchronizer_61
   (counter_sync_1,
    mcp1_counter_1_reg,
    rxusrclk2,
    coreclk);
  output counter_sync_1;
  input mcp1_counter_1_reg;
  input rxusrclk2;
  input coreclk;

  wire coreclk;
  wire counter_sync_1;
  wire dcapture;
  wire mcp1_counter_1_reg;
  wire newedge;
  wire newedge_i_1_n_0;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg4;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg__0;
  wire out_comb;
  wire rxusrclk2;

  FDRE #(
    .INIT(1'b0)) 
    dcapture_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_1_reg),
        .Q(dcapture),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hF704)) 
    newedge_i_1
       (.I0(newedge),
        .I1(mcp1_counter_1_reg),
        .I2(dcapture),
        .I3(newedge),
        .O(newedge_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(newedge_i_1_n_0),
        .Q(newedge),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg__0),
        .Q(newedge_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg1),
        .Q(newedge_reg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg2),
        .Q(newedge_reg3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg3),
        .Q(newedge_reg4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge),
        .Q(newedge_reg__0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    q_i_1
       (.I0(newedge_reg4),
        .I1(newedge_reg3),
        .O(out_comb));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(out_comb),
        .Q(counter_sync_1),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_pulse_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_pulse_synchronizer_62
   (counter_sync_2,
    counter_out0,
    mcp1_counter_2_reg,
    rxusrclk2,
    coreclk,
    counter_sync_1,
    counter_sync_3,
    counter_sync_extra);
  output counter_sync_2;
  output counter_out0;
  input mcp1_counter_2_reg;
  input rxusrclk2;
  input coreclk;
  input counter_sync_1;
  input counter_sync_3;
  input counter_sync_extra;

  wire coreclk;
  wire counter_out0;
  wire counter_sync_1;
  wire counter_sync_2;
  wire counter_sync_3;
  wire counter_sync_extra;
  wire dcapture;
  wire mcp1_counter_2_reg;
  wire newedge;
  wire newedge_i_1__0_n_0;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg4;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg__0;
  wire out_comb;
  wire rxusrclk2;

  LUT4 #(
    .INIT(16'hFFFE)) 
    counter_out_i_1
       (.I0(counter_sync_2),
        .I1(counter_sync_1),
        .I2(counter_sync_3),
        .I3(counter_sync_extra),
        .O(counter_out0));
  FDRE #(
    .INIT(1'b0)) 
    dcapture_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_2_reg),
        .Q(dcapture),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hF704)) 
    newedge_i_1__0
       (.I0(newedge),
        .I1(mcp1_counter_2_reg),
        .I2(dcapture),
        .I3(newedge),
        .O(newedge_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(newedge_i_1__0_n_0),
        .Q(newedge),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg__0),
        .Q(newedge_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg1),
        .Q(newedge_reg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg2),
        .Q(newedge_reg3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg3),
        .Q(newedge_reg4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge),
        .Q(newedge_reg__0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    q_i_1__0
       (.I0(newedge_reg4),
        .I1(newedge_reg3),
        .O(out_comb));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(out_comb),
        .Q(counter_sync_2),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_pulse_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_pulse_synchronizer_63
   (counter_sync_3,
    mcp1_counter_3_reg,
    rxusrclk2,
    coreclk);
  output counter_sync_3;
  input mcp1_counter_3_reg;
  input rxusrclk2;
  input coreclk;

  wire coreclk;
  wire counter_sync_3;
  wire dcapture;
  wire mcp1_counter_3_reg;
  wire newedge;
  wire newedge_i_1__1_n_0;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg4;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg__0;
  wire out_comb;
  wire rxusrclk2;

  FDRE #(
    .INIT(1'b0)) 
    dcapture_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_3_reg),
        .Q(dcapture),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hF704)) 
    newedge_i_1__1
       (.I0(newedge),
        .I1(mcp1_counter_3_reg),
        .I2(dcapture),
        .I3(newedge),
        .O(newedge_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(newedge_i_1__1_n_0),
        .Q(newedge),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg__0),
        .Q(newedge_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg1),
        .Q(newedge_reg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg2),
        .Q(newedge_reg3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg3),
        .Q(newedge_reg4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge),
        .Q(newedge_reg__0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    q_i_1__1
       (.I0(newedge_reg4),
        .I1(newedge_reg3),
        .O(out_comb));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(out_comb),
        .Q(counter_sync_3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_pulse_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_pulse_synchronizer_64
   (counter_sync_1,
    mcp1_counter_1_reg,
    rxusrclk2,
    coreclk);
  output counter_sync_1;
  input mcp1_counter_1_reg;
  input rxusrclk2;
  input coreclk;

  wire coreclk;
  wire counter_sync_1;
  wire dcapture;
  wire mcp1_counter_1_reg;
  wire newedge;
  wire newedge_i_1__2_n_0;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg4;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg__0;
  wire out_comb;
  wire rxusrclk2;

  FDRE #(
    .INIT(1'b0)) 
    dcapture_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_1_reg),
        .Q(dcapture),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hF704)) 
    newedge_i_1__2
       (.I0(newedge),
        .I1(mcp1_counter_1_reg),
        .I2(dcapture),
        .I3(newedge),
        .O(newedge_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(newedge_i_1__2_n_0),
        .Q(newedge),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg__0),
        .Q(newedge_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg1),
        .Q(newedge_reg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg2),
        .Q(newedge_reg3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg3),
        .Q(newedge_reg4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge),
        .Q(newedge_reg__0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    q_i_1__2
       (.I0(newedge_reg4),
        .I1(newedge_reg3),
        .O(out_comb));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(out_comb),
        .Q(counter_sync_1),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_pulse_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_pulse_synchronizer_65
   (counter_sync_2,
    counter_out0,
    mcp1_counter_2_reg,
    rxusrclk2,
    coreclk,
    counter_sync_1,
    counter_sync_3,
    counter_sync_extra);
  output counter_sync_2;
  output counter_out0;
  input mcp1_counter_2_reg;
  input rxusrclk2;
  input coreclk;
  input counter_sync_1;
  input counter_sync_3;
  input counter_sync_extra;

  wire coreclk;
  wire counter_out0;
  wire counter_sync_1;
  wire counter_sync_2;
  wire counter_sync_3;
  wire counter_sync_extra;
  wire dcapture;
  wire mcp1_counter_2_reg;
  wire newedge;
  wire newedge_i_1__3_n_0;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg4;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg__0;
  wire out_comb;
  wire rxusrclk2;

  LUT4 #(
    .INIT(16'hFFFE)) 
    counter_out_i_1__0
       (.I0(counter_sync_2),
        .I1(counter_sync_1),
        .I2(counter_sync_3),
        .I3(counter_sync_extra),
        .O(counter_out0));
  FDRE #(
    .INIT(1'b0)) 
    dcapture_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_2_reg),
        .Q(dcapture),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hF704)) 
    newedge_i_1__3
       (.I0(newedge),
        .I1(mcp1_counter_2_reg),
        .I2(dcapture),
        .I3(newedge),
        .O(newedge_i_1__3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(newedge_i_1__3_n_0),
        .Q(newedge),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg__0),
        .Q(newedge_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg1),
        .Q(newedge_reg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg2),
        .Q(newedge_reg3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg3),
        .Q(newedge_reg4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge),
        .Q(newedge_reg__0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    q_i_1__3
       (.I0(newedge_reg4),
        .I1(newedge_reg3),
        .O(out_comb));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(out_comb),
        .Q(counter_sync_2),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_pulse_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_pulse_synchronizer_66
   (counter_sync_3,
    mcp1_counter_3_reg,
    rxusrclk2,
    coreclk);
  output counter_sync_3;
  input mcp1_counter_3_reg;
  input rxusrclk2;
  input coreclk;

  wire coreclk;
  wire counter_sync_3;
  wire dcapture;
  wire mcp1_counter_3_reg;
  wire newedge;
  wire newedge_i_1__4_n_0;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg4;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire newedge_reg__0;
  wire out_comb;
  wire rxusrclk2;

  FDRE #(
    .INIT(1'b0)) 
    dcapture_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_3_reg),
        .Q(dcapture),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hF704)) 
    newedge_i_1__4
       (.I0(newedge),
        .I1(mcp1_counter_3_reg),
        .I2(dcapture),
        .I3(newedge),
        .O(newedge_i_1__4_n_0));
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(newedge_i_1__4_n_0),
        .Q(newedge),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg__0),
        .Q(newedge_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg1),
        .Q(newedge_reg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg2),
        .Q(newedge_reg3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg3),
        .Q(newedge_reg4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge),
        .Q(newedge_reg__0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    q_i_1__4
       (.I0(newedge_reg4),
        .I1(newedge_reg3),
        .O(out_comb));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(out_comb),
        .Q(counter_sync_3),
        .R(1'b0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_rx_ber_mon_fsm
   (ber_count_inc,
    d1_reg,
    out,
    rxusrclk2,
    \outreg_reg[15] ,
    Q,
    SR,
    sh_valid);
  output ber_count_inc;
  output d1_reg;
  input out;
  input rxusrclk2;
  input [15:0]\outreg_reg[15] ;
  input [1:0]Q;
  input [0:0]SR;
  input sh_valid;

  wire \FSM_sequential_mcp1_state[0]_i_1_n_0 ;
  wire \FSM_sequential_mcp1_state[0]_i_4_n_0 ;
  wire \FSM_sequential_mcp1_state[0]_i_5_n_0 ;
  wire \FSM_sequential_mcp1_state[0]_i_6_n_0 ;
  wire \FSM_sequential_mcp1_state[1]_i_1_n_0 ;
  wire \FSM_sequential_mcp1_state[2]_i_2_n_0 ;
  wire \FSM_sequential_mcp1_state[2]_i_3_n_0 ;
  wire \FSM_sequential_mcp1_state[2]_i_4_n_0 ;
  wire \FSM_sequential_mcp1_state[2]_i_5_n_0 ;
  wire \FSM_sequential_mcp1_state[2]_i_6_n_0 ;
  wire \FSM_sequential_mcp1_state[2]_i_7_n_0 ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire ber_count_inc;
  wire d1_reg;
  wire \mcp1_ber_cnt[0]_i_1_n_0 ;
  wire \mcp1_ber_cnt[1]_i_1_n_0 ;
  wire \mcp1_ber_cnt[2]_i_1_n_0 ;
  wire \mcp1_ber_cnt[3]_i_1_n_0 ;
  wire \mcp1_ber_cnt[4]_i_1_n_0 ;
  wire \mcp1_ber_cnt[4]_i_2_n_0 ;
  wire \mcp1_ber_cnt_reg_n_0_[0] ;
  wire \mcp1_ber_cnt_reg_n_0_[1] ;
  wire \mcp1_ber_cnt_reg_n_0_[2] ;
  wire \mcp1_ber_cnt_reg_n_0_[3] ;
  wire \mcp1_ber_cnt_reg_n_0_[4] ;
  wire mcp1_ber_count_inc_i_1_n_0;
  wire mcp1_ber_test_sh;
  wire mcp1_ber_test_sh_reg_n_0;
  wire mcp1_hiber_i_1_n_0;
  (* RTL_KEEP = "yes" *) wire [2:0]mcp1_state;
  wire [15:0]mcp1_timer_125us;
  wire \mcp1_timer_125us[0]_i_1_n_0 ;
  wire \mcp1_timer_125us[10]_i_1_n_0 ;
  wire \mcp1_timer_125us[10]_i_2_n_0 ;
  wire \mcp1_timer_125us[11]_i_1_n_0 ;
  wire \mcp1_timer_125us[11]_i_2_n_0 ;
  wire \mcp1_timer_125us[12]_i_1_n_0 ;
  wire \mcp1_timer_125us[12]_i_2_n_0 ;
  wire \mcp1_timer_125us[13]_i_1_n_0 ;
  wire \mcp1_timer_125us[13]_i_2_n_0 ;
  wire \mcp1_timer_125us[14]_i_1_n_0 ;
  wire \mcp1_timer_125us[14]_i_2_n_0 ;
  wire \mcp1_timer_125us[15]_i_1_n_0 ;
  wire \mcp1_timer_125us[15]_i_2_n_0 ;
  wire \mcp1_timer_125us[15]_i_3_n_0 ;
  wire \mcp1_timer_125us[15]_i_4_n_0 ;
  wire \mcp1_timer_125us[1]_i_1_n_0 ;
  wire \mcp1_timer_125us[1]_i_2_n_0 ;
  wire \mcp1_timer_125us[2]_i_1_n_0 ;
  wire \mcp1_timer_125us[2]_i_2_n_0 ;
  wire \mcp1_timer_125us[3]_i_1_n_0 ;
  wire \mcp1_timer_125us[3]_i_2_n_0 ;
  wire \mcp1_timer_125us[4]_i_1_n_0 ;
  wire \mcp1_timer_125us[4]_i_2_n_0 ;
  wire \mcp1_timer_125us[5]_i_1_n_0 ;
  wire \mcp1_timer_125us[5]_i_2_n_0 ;
  wire \mcp1_timer_125us[6]_i_1_n_0 ;
  wire \mcp1_timer_125us[6]_i_2_n_0 ;
  wire \mcp1_timer_125us[7]_i_1_n_0 ;
  wire \mcp1_timer_125us[7]_i_2_n_0 ;
  wire \mcp1_timer_125us[8]_i_1_n_0 ;
  wire \mcp1_timer_125us[8]_i_2_n_0 ;
  wire \mcp1_timer_125us[9]_i_1_n_0 ;
  wire \mcp1_timer_125us[9]_i_2_n_0 ;
  wire out;
  wire [15:0]\outreg_reg[15] ;
  wire rxusrclk2;
  wire sh_valid;
  wire timer_done;

  LUT6 #(
    .INIT(64'h00FF00FF0B00FFFF)) 
    \FSM_sequential_mcp1_state[0]_i_1 
       (.I0(timer_done),
        .I1(sh_valid),
        .I2(\FSM_sequential_mcp1_state[0]_i_4_n_0 ),
        .I3(mcp1_state[1]),
        .I4(mcp1_state[0]),
        .I5(mcp1_state[2]),
        .O(\FSM_sequential_mcp1_state[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \FSM_sequential_mcp1_state[0]_i_2__0 
       (.I0(mcp1_timer_125us[8]),
        .I1(mcp1_timer_125us[6]),
        .I2(\FSM_sequential_mcp1_state[0]_i_5_n_0 ),
        .I3(mcp1_timer_125us[7]),
        .I4(mcp1_timer_125us[9]),
        .I5(\FSM_sequential_mcp1_state[0]_i_6_n_0 ),
        .O(timer_done));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \FSM_sequential_mcp1_state[0]_i_4 
       (.I0(\mcp1_ber_cnt_reg_n_0_[3] ),
        .I1(\mcp1_ber_cnt_reg_n_0_[1] ),
        .I2(\mcp1_ber_cnt_reg_n_0_[0] ),
        .I3(\mcp1_ber_cnt_reg_n_0_[2] ),
        .O(\FSM_sequential_mcp1_state[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \FSM_sequential_mcp1_state[0]_i_5 
       (.I0(mcp1_timer_125us[5]),
        .I1(mcp1_timer_125us[3]),
        .I2(mcp1_timer_125us[1]),
        .I3(mcp1_timer_125us[0]),
        .I4(mcp1_timer_125us[2]),
        .I5(mcp1_timer_125us[4]),
        .O(\FSM_sequential_mcp1_state[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \FSM_sequential_mcp1_state[0]_i_6 
       (.I0(mcp1_timer_125us[12]),
        .I1(mcp1_timer_125us[11]),
        .I2(mcp1_timer_125us[13]),
        .I3(mcp1_timer_125us[14]),
        .I4(mcp1_timer_125us[10]),
        .I5(mcp1_timer_125us[15]),
        .O(\FSM_sequential_mcp1_state[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h1111400455554004)) 
    \FSM_sequential_mcp1_state[1]_i_1 
       (.I0(mcp1_state[2]),
        .I1(mcp1_state[1]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(mcp1_state[0]),
        .I5(\FSM_sequential_mcp1_state[2]_i_7_n_0 ),
        .O(\FSM_sequential_mcp1_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h22222222EEE2FF22)) 
    \FSM_sequential_mcp1_state[2]_i_2 
       (.I0(\FSM_sequential_mcp1_state[2]_i_4_n_0 ),
        .I1(mcp1_state[1]),
        .I2(\FSM_sequential_mcp1_state[2]_i_5_n_0 ),
        .I3(\FSM_sequential_mcp1_state[2]_i_6_n_0 ),
        .I4(mcp1_state[0]),
        .I5(mcp1_state[2]),
        .O(\FSM_sequential_mcp1_state[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h4444044000000440)) 
    \FSM_sequential_mcp1_state[2]_i_3 
       (.I0(mcp1_state[2]),
        .I1(mcp1_state[1]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(mcp1_state[0]),
        .I5(\FSM_sequential_mcp1_state[2]_i_7_n_0 ),
        .O(\FSM_sequential_mcp1_state[2]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFACF)) 
    \FSM_sequential_mcp1_state[2]_i_4 
       (.I0(mcp1_ber_test_sh_reg_n_0),
        .I1(timer_done),
        .I2(mcp1_state[2]),
        .I3(mcp1_state[0]),
        .O(\FSM_sequential_mcp1_state[2]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hEAAAAAAA)) 
    \FSM_sequential_mcp1_state[2]_i_5 
       (.I0(mcp1_ber_test_sh_reg_n_0),
        .I1(\mcp1_ber_cnt_reg_n_0_[2] ),
        .I2(\mcp1_ber_cnt_reg_n_0_[0] ),
        .I3(\mcp1_ber_cnt_reg_n_0_[1] ),
        .I4(\mcp1_ber_cnt_reg_n_0_[3] ),
        .O(\FSM_sequential_mcp1_state[2]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'hEB)) 
    \FSM_sequential_mcp1_state[2]_i_6 
       (.I0(timer_done),
        .I1(Q[1]),
        .I2(Q[0]),
        .O(\FSM_sequential_mcp1_state[2]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT5 #(
    .INIT(32'hEAAAAAAA)) 
    \FSM_sequential_mcp1_state[2]_i_7 
       (.I0(timer_done),
        .I1(\mcp1_ber_cnt_reg_n_0_[2] ),
        .I2(\mcp1_ber_cnt_reg_n_0_[0] ),
        .I3(\mcp1_ber_cnt_reg_n_0_[1] ),
        .I4(\mcp1_ber_cnt_reg_n_0_[3] ),
        .O(\FSM_sequential_mcp1_state[2]_i_7_n_0 ));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_mcp1_state_reg[0] 
       (.C(rxusrclk2),
        .CE(\FSM_sequential_mcp1_state[2]_i_2_n_0 ),
        .D(\FSM_sequential_mcp1_state[0]_i_1_n_0 ),
        .Q(mcp1_state[0]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_mcp1_state_reg[1] 
       (.C(rxusrclk2),
        .CE(\FSM_sequential_mcp1_state[2]_i_2_n_0 ),
        .D(\FSM_sequential_mcp1_state[1]_i_1_n_0 ),
        .Q(mcp1_state[1]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_mcp1_state_reg[2] 
       (.C(rxusrclk2),
        .CE(\FSM_sequential_mcp1_state[2]_i_2_n_0 ),
        .D(\FSM_sequential_mcp1_state[2]_i_3_n_0 ),
        .Q(mcp1_state[2]),
        .R(SR));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_ber_cnt[0]_i_1 
       (.I0(mcp1_state[1]),
        .I1(\mcp1_ber_cnt_reg_n_0_[0] ),
        .O(\mcp1_ber_cnt[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h60)) 
    \mcp1_ber_cnt[1]_i_1 
       (.I0(\mcp1_ber_cnt_reg_n_0_[0] ),
        .I1(\mcp1_ber_cnt_reg_n_0_[1] ),
        .I2(mcp1_state[1]),
        .O(\mcp1_ber_cnt[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7800)) 
    \mcp1_ber_cnt[2]_i_1 
       (.I0(\mcp1_ber_cnt_reg_n_0_[1] ),
        .I1(\mcp1_ber_cnt_reg_n_0_[0] ),
        .I2(\mcp1_ber_cnt_reg_n_0_[2] ),
        .I3(mcp1_state[1]),
        .O(\mcp1_ber_cnt[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7F800000)) 
    \mcp1_ber_cnt[3]_i_1 
       (.I0(\mcp1_ber_cnt_reg_n_0_[2] ),
        .I1(\mcp1_ber_cnt_reg_n_0_[0] ),
        .I2(\mcp1_ber_cnt_reg_n_0_[1] ),
        .I3(\mcp1_ber_cnt_reg_n_0_[3] ),
        .I4(mcp1_state[1]),
        .O(\mcp1_ber_cnt[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0000002A)) 
    \mcp1_ber_cnt[4]_i_1 
       (.I0(mcp1_state[0]),
        .I1(\mcp1_ber_cnt_reg_n_0_[4] ),
        .I2(mcp1_state[1]),
        .I3(mcp1_state[2]),
        .I4(out),
        .O(\mcp1_ber_cnt[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFF800000000000)) 
    \mcp1_ber_cnt[4]_i_2 
       (.I0(\mcp1_ber_cnt_reg_n_0_[3] ),
        .I1(\mcp1_ber_cnt_reg_n_0_[1] ),
        .I2(\mcp1_ber_cnt_reg_n_0_[0] ),
        .I3(\mcp1_ber_cnt_reg_n_0_[2] ),
        .I4(\mcp1_ber_cnt_reg_n_0_[4] ),
        .I5(mcp1_state[1]),
        .O(\mcp1_ber_cnt[4]_i_2_n_0 ));
  FDRE \mcp1_ber_cnt_reg[0] 
       (.C(rxusrclk2),
        .CE(\mcp1_ber_cnt[4]_i_1_n_0 ),
        .D(\mcp1_ber_cnt[0]_i_1_n_0 ),
        .Q(\mcp1_ber_cnt_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \mcp1_ber_cnt_reg[1] 
       (.C(rxusrclk2),
        .CE(\mcp1_ber_cnt[4]_i_1_n_0 ),
        .D(\mcp1_ber_cnt[1]_i_1_n_0 ),
        .Q(\mcp1_ber_cnt_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \mcp1_ber_cnt_reg[2] 
       (.C(rxusrclk2),
        .CE(\mcp1_ber_cnt[4]_i_1_n_0 ),
        .D(\mcp1_ber_cnt[2]_i_1_n_0 ),
        .Q(\mcp1_ber_cnt_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \mcp1_ber_cnt_reg[3] 
       (.C(rxusrclk2),
        .CE(\mcp1_ber_cnt[4]_i_1_n_0 ),
        .D(\mcp1_ber_cnt[3]_i_1_n_0 ),
        .Q(\mcp1_ber_cnt_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \mcp1_ber_cnt_reg[4] 
       (.C(rxusrclk2),
        .CE(\mcp1_ber_cnt[4]_i_1_n_0 ),
        .D(\mcp1_ber_cnt[4]_i_2_n_0 ),
        .Q(\mcp1_ber_cnt_reg_n_0_[4] ),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h40)) 
    mcp1_ber_count_inc_i_1
       (.I0(mcp1_state[2]),
        .I1(mcp1_state[0]),
        .I2(mcp1_state[1]),
        .O(mcp1_ber_count_inc_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    mcp1_ber_count_inc_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_ber_count_inc_i_1_n_0),
        .Q(ber_count_inc),
        .R(out));
  LUT3 #(
    .INIT(8'h5E)) 
    mcp1_ber_test_sh_i_1
       (.I0(mcp1_state[1]),
        .I1(mcp1_state[0]),
        .I2(mcp1_state[2]),
        .O(mcp1_ber_test_sh));
  FDRE mcp1_ber_test_sh_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_ber_test_sh),
        .Q(mcp1_ber_test_sh_reg_n_0),
        .R(out));
  LUT4 #(
    .INIT(16'hBE04)) 
    mcp1_hiber_i_1
       (.I0(mcp1_state[1]),
        .I1(mcp1_state[2]),
        .I2(mcp1_state[0]),
        .I3(d1_reg),
        .O(mcp1_hiber_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    mcp1_hiber_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_hiber_i_1_n_0),
        .Q(d1_reg),
        .R(out));
  LUT6 #(
    .INIT(64'hA0A0B0A0B1B1F4F5)) 
    \mcp1_timer_125us[0]_i_1 
       (.I0(out),
        .I1(mcp1_state[1]),
        .I2(\outreg_reg[15] [0]),
        .I3(mcp1_state[0]),
        .I4(mcp1_state[2]),
        .I5(mcp1_timer_125us[0]),
        .O(\mcp1_timer_125us[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hB1B1F4F5A0A0B0A0)) 
    \mcp1_timer_125us[10]_i_1 
       (.I0(out),
        .I1(mcp1_state[1]),
        .I2(\outreg_reg[15] [10]),
        .I3(mcp1_state[0]),
        .I4(mcp1_state[2]),
        .I5(\mcp1_timer_125us[10]_i_2_n_0 ),
        .O(\mcp1_timer_125us[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \mcp1_timer_125us[10]_i_2 
       (.I0(mcp1_timer_125us[9]),
        .I1(mcp1_timer_125us[7]),
        .I2(\FSM_sequential_mcp1_state[0]_i_5_n_0 ),
        .I3(mcp1_timer_125us[6]),
        .I4(mcp1_timer_125us[8]),
        .I5(mcp1_timer_125us[10]),
        .O(\mcp1_timer_125us[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hB1B1F4F5A0A0B0A0)) 
    \mcp1_timer_125us[11]_i_1 
       (.I0(out),
        .I1(mcp1_state[1]),
        .I2(\outreg_reg[15] [11]),
        .I3(mcp1_state[0]),
        .I4(mcp1_state[2]),
        .I5(\mcp1_timer_125us[11]_i_2_n_0 ),
        .O(\mcp1_timer_125us[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \mcp1_timer_125us[11]_i_2 
       (.I0(\mcp1_timer_125us[15]_i_4_n_0 ),
        .I1(mcp1_timer_125us[11]),
        .O(\mcp1_timer_125us[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hB1B1F4F5A0A0B0A0)) 
    \mcp1_timer_125us[12]_i_1 
       (.I0(out),
        .I1(mcp1_state[1]),
        .I2(\outreg_reg[15] [12]),
        .I3(mcp1_state[0]),
        .I4(mcp1_state[2]),
        .I5(\mcp1_timer_125us[12]_i_2_n_0 ),
        .O(\mcp1_timer_125us[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \mcp1_timer_125us[12]_i_2 
       (.I0(mcp1_timer_125us[12]),
        .I1(\mcp1_timer_125us[15]_i_4_n_0 ),
        .I2(mcp1_timer_125us[11]),
        .O(\mcp1_timer_125us[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hB1B1F4F5A0A0B0A0)) 
    \mcp1_timer_125us[13]_i_1 
       (.I0(out),
        .I1(mcp1_state[1]),
        .I2(\outreg_reg[15] [13]),
        .I3(mcp1_state[0]),
        .I4(mcp1_state[2]),
        .I5(\mcp1_timer_125us[13]_i_2_n_0 ),
        .O(\mcp1_timer_125us[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT4 #(
    .INIT(16'hAAA9)) 
    \mcp1_timer_125us[13]_i_2 
       (.I0(mcp1_timer_125us[13]),
        .I1(mcp1_timer_125us[12]),
        .I2(mcp1_timer_125us[11]),
        .I3(\mcp1_timer_125us[15]_i_4_n_0 ),
        .O(\mcp1_timer_125us[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hB1B1F4F5A0A0B0A0)) 
    \mcp1_timer_125us[14]_i_1 
       (.I0(out),
        .I1(mcp1_state[1]),
        .I2(\outreg_reg[15] [14]),
        .I3(mcp1_state[0]),
        .I4(mcp1_state[2]),
        .I5(\mcp1_timer_125us[14]_i_2_n_0 ),
        .O(\mcp1_timer_125us[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT5 #(
    .INIT(32'hAAAAAAA9)) 
    \mcp1_timer_125us[14]_i_2 
       (.I0(mcp1_timer_125us[14]),
        .I1(mcp1_timer_125us[13]),
        .I2(\mcp1_timer_125us[15]_i_4_n_0 ),
        .I3(mcp1_timer_125us[11]),
        .I4(mcp1_timer_125us[12]),
        .O(\mcp1_timer_125us[14]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF045F)) 
    \mcp1_timer_125us[15]_i_1 
       (.I0(mcp1_state[1]),
        .I1(mcp1_state[0]),
        .I2(mcp1_state[2]),
        .I3(timer_done),
        .I4(out),
        .O(\mcp1_timer_125us[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hB1B1F4F5A0A0B0A0)) 
    \mcp1_timer_125us[15]_i_2 
       (.I0(out),
        .I1(mcp1_state[1]),
        .I2(\outreg_reg[15] [15]),
        .I3(mcp1_state[0]),
        .I4(mcp1_state[2]),
        .I5(\mcp1_timer_125us[15]_i_3_n_0 ),
        .O(\mcp1_timer_125us[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA9)) 
    \mcp1_timer_125us[15]_i_3 
       (.I0(mcp1_timer_125us[15]),
        .I1(mcp1_timer_125us[14]),
        .I2(mcp1_timer_125us[12]),
        .I3(mcp1_timer_125us[11]),
        .I4(\mcp1_timer_125us[15]_i_4_n_0 ),
        .I5(mcp1_timer_125us[13]),
        .O(\mcp1_timer_125us[15]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \mcp1_timer_125us[15]_i_4 
       (.I0(mcp1_timer_125us[10]),
        .I1(mcp1_timer_125us[8]),
        .I2(mcp1_timer_125us[6]),
        .I3(\FSM_sequential_mcp1_state[0]_i_5_n_0 ),
        .I4(mcp1_timer_125us[7]),
        .I5(mcp1_timer_125us[9]),
        .O(\mcp1_timer_125us[15]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hB1B1F4F5A0A0B0A0)) 
    \mcp1_timer_125us[1]_i_1 
       (.I0(out),
        .I1(mcp1_state[1]),
        .I2(\outreg_reg[15] [1]),
        .I3(mcp1_state[0]),
        .I4(mcp1_state[2]),
        .I5(\mcp1_timer_125us[1]_i_2_n_0 ),
        .O(\mcp1_timer_125us[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \mcp1_timer_125us[1]_i_2 
       (.I0(mcp1_timer_125us[1]),
        .I1(mcp1_timer_125us[0]),
        .O(\mcp1_timer_125us[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hB1B1F4F5A0A0B0A0)) 
    \mcp1_timer_125us[2]_i_1 
       (.I0(out),
        .I1(mcp1_state[1]),
        .I2(\outreg_reg[15] [2]),
        .I3(mcp1_state[0]),
        .I4(mcp1_state[2]),
        .I5(\mcp1_timer_125us[2]_i_2_n_0 ),
        .O(\mcp1_timer_125us[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT3 #(
    .INIT(8'hE1)) 
    \mcp1_timer_125us[2]_i_2 
       (.I0(mcp1_timer_125us[1]),
        .I1(mcp1_timer_125us[0]),
        .I2(mcp1_timer_125us[2]),
        .O(\mcp1_timer_125us[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hB1B1F4F5A0A0B0A0)) 
    \mcp1_timer_125us[3]_i_1 
       (.I0(out),
        .I1(mcp1_state[1]),
        .I2(\outreg_reg[15] [3]),
        .I3(mcp1_state[0]),
        .I4(mcp1_state[2]),
        .I5(\mcp1_timer_125us[3]_i_2_n_0 ),
        .O(\mcp1_timer_125us[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \mcp1_timer_125us[3]_i_2 
       (.I0(mcp1_timer_125us[2]),
        .I1(mcp1_timer_125us[0]),
        .I2(mcp1_timer_125us[1]),
        .I3(mcp1_timer_125us[3]),
        .O(\mcp1_timer_125us[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hB1B1F4F5A0A0B0A0)) 
    \mcp1_timer_125us[4]_i_1 
       (.I0(out),
        .I1(mcp1_state[1]),
        .I2(\outreg_reg[15] [4]),
        .I3(mcp1_state[0]),
        .I4(mcp1_state[2]),
        .I5(\mcp1_timer_125us[4]_i_2_n_0 ),
        .O(\mcp1_timer_125us[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT5 #(
    .INIT(32'hAAAAAAA9)) 
    \mcp1_timer_125us[4]_i_2 
       (.I0(mcp1_timer_125us[4]),
        .I1(mcp1_timer_125us[2]),
        .I2(mcp1_timer_125us[0]),
        .I3(mcp1_timer_125us[1]),
        .I4(mcp1_timer_125us[3]),
        .O(\mcp1_timer_125us[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hB1B1F4F5A0A0B0A0)) 
    \mcp1_timer_125us[5]_i_1 
       (.I0(out),
        .I1(mcp1_state[1]),
        .I2(\outreg_reg[15] [5]),
        .I3(mcp1_state[0]),
        .I4(mcp1_state[2]),
        .I5(\mcp1_timer_125us[5]_i_2_n_0 ),
        .O(\mcp1_timer_125us[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \mcp1_timer_125us[5]_i_2 
       (.I0(mcp1_timer_125us[4]),
        .I1(mcp1_timer_125us[2]),
        .I2(mcp1_timer_125us[0]),
        .I3(mcp1_timer_125us[1]),
        .I4(mcp1_timer_125us[3]),
        .I5(mcp1_timer_125us[5]),
        .O(\mcp1_timer_125us[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hB1B1F4F5A0A0B0A0)) 
    \mcp1_timer_125us[6]_i_1 
       (.I0(out),
        .I1(mcp1_state[1]),
        .I2(\outreg_reg[15] [6]),
        .I3(mcp1_state[0]),
        .I4(mcp1_state[2]),
        .I5(\mcp1_timer_125us[6]_i_2_n_0 ),
        .O(\mcp1_timer_125us[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \mcp1_timer_125us[6]_i_2 
       (.I0(\FSM_sequential_mcp1_state[0]_i_5_n_0 ),
        .I1(mcp1_timer_125us[6]),
        .O(\mcp1_timer_125us[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hB1B1F4F5A0A0B0A0)) 
    \mcp1_timer_125us[7]_i_1 
       (.I0(out),
        .I1(mcp1_state[1]),
        .I2(\outreg_reg[15] [7]),
        .I3(mcp1_state[0]),
        .I4(mcp1_state[2]),
        .I5(\mcp1_timer_125us[7]_i_2_n_0 ),
        .O(\mcp1_timer_125us[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT3 #(
    .INIT(8'hE1)) 
    \mcp1_timer_125us[7]_i_2 
       (.I0(mcp1_timer_125us[6]),
        .I1(\FSM_sequential_mcp1_state[0]_i_5_n_0 ),
        .I2(mcp1_timer_125us[7]),
        .O(\mcp1_timer_125us[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hB1B1F4F5A0A0B0A0)) 
    \mcp1_timer_125us[8]_i_1 
       (.I0(out),
        .I1(mcp1_state[1]),
        .I2(\outreg_reg[15] [8]),
        .I3(mcp1_state[0]),
        .I4(mcp1_state[2]),
        .I5(\mcp1_timer_125us[8]_i_2_n_0 ),
        .O(\mcp1_timer_125us[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \mcp1_timer_125us[8]_i_2 
       (.I0(mcp1_timer_125us[7]),
        .I1(\FSM_sequential_mcp1_state[0]_i_5_n_0 ),
        .I2(mcp1_timer_125us[6]),
        .I3(mcp1_timer_125us[8]),
        .O(\mcp1_timer_125us[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hB1B1F4F5A0A0B0A0)) 
    \mcp1_timer_125us[9]_i_1 
       (.I0(out),
        .I1(mcp1_state[1]),
        .I2(\outreg_reg[15] [9]),
        .I3(mcp1_state[0]),
        .I4(mcp1_state[2]),
        .I5(\mcp1_timer_125us[9]_i_2_n_0 ),
        .O(\mcp1_timer_125us[9]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT5 #(
    .INIT(32'hAAAAAAA9)) 
    \mcp1_timer_125us[9]_i_2 
       (.I0(mcp1_timer_125us[9]),
        .I1(mcp1_timer_125us[7]),
        .I2(\FSM_sequential_mcp1_state[0]_i_5_n_0 ),
        .I3(mcp1_timer_125us[6]),
        .I4(mcp1_timer_125us[8]),
        .O(\mcp1_timer_125us[9]_i_2_n_0 ));
  FDRE \mcp1_timer_125us_reg[0] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[0]_i_1_n_0 ),
        .Q(mcp1_timer_125us[0]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[10] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[10]_i_1_n_0 ),
        .Q(mcp1_timer_125us[10]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[11] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[11]_i_1_n_0 ),
        .Q(mcp1_timer_125us[11]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[12] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[12]_i_1_n_0 ),
        .Q(mcp1_timer_125us[12]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[13] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[13]_i_1_n_0 ),
        .Q(mcp1_timer_125us[13]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[14] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[14]_i_1_n_0 ),
        .Q(mcp1_timer_125us[14]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[15] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[15]_i_2_n_0 ),
        .Q(mcp1_timer_125us[15]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[1] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[1]_i_1_n_0 ),
        .Q(mcp1_timer_125us[1]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[2] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[2]_i_1_n_0 ),
        .Q(mcp1_timer_125us[2]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[3] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[3]_i_1_n_0 ),
        .Q(mcp1_timer_125us[3]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[4] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[4]_i_1_n_0 ),
        .Q(mcp1_timer_125us[4]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[5] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[5]_i_1_n_0 ),
        .Q(mcp1_timer_125us[5]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[6] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[6]_i_1_n_0 ),
        .Q(mcp1_timer_125us[6]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[7] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[7]_i_1_n_0 ),
        .Q(mcp1_timer_125us[7]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[8] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[8]_i_1_n_0 ),
        .Q(mcp1_timer_125us[8]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[9] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[9]_i_1_n_0 ),
        .Q(mcp1_timer_125us[9]),
        .R(1'b0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_rx_block_lock_fsm
   (d1_reg,
    gt_slip_int,
    sh_valid,
    \FSM_sequential_mcp1_state_reg[2] ,
    \FSM_sequential_mcp1_state_reg[2]_0 ,
    mcp1_err_block_count_inc_out_reg,
    pcs_rx_link_up_core_int,
    SR,
    rxusrclk2,
    Q,
    signal_ok_reg,
    out,
    \outreg_reg[2] ,
    mcp1_hiber_reg,
    rxreset_6_reg,
    rxreset_2_reg);
  output d1_reg;
  output gt_slip_int;
  output sh_valid;
  output \FSM_sequential_mcp1_state_reg[2] ;
  output [0:0]\FSM_sequential_mcp1_state_reg[2]_0 ;
  output mcp1_err_block_count_inc_out_reg;
  output pcs_rx_link_up_core_int;
  input [0:0]SR;
  input rxusrclk2;
  input [1:0]Q;
  input signal_ok_reg;
  input out;
  input [0:0]\outreg_reg[2] ;
  input mcp1_hiber_reg;
  input rxreset_6_reg;
  input rxreset_2_reg;

  wire \FSM_sequential_mcp1_state_reg[2] ;
  wire [0:0]\FSM_sequential_mcp1_state_reg[2]_0 ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire d1_reg;
  wire gt_slip_int;
  wire mcp1_b_lock_i_1_n_0;
  wire mcp1_b_lock_i_2_n_0;
  wire mcp1_err_block_count_inc_out_reg;
  wire mcp1_hiber_reg;
  wire \mcp1_sh_cnt[0]_i_1_n_0 ;
  wire \mcp1_sh_cnt[1]_i_1_n_0 ;
  wire \mcp1_sh_cnt[2]_i_1_n_0 ;
  wire \mcp1_sh_cnt[3]_i_1_n_0 ;
  wire \mcp1_sh_cnt[4]_i_1_n_0 ;
  wire \mcp1_sh_cnt[5]_i_2_n_0 ;
  wire \mcp1_sh_cnt[5]_i_3_n_0 ;
  wire \mcp1_sh_cnt[5]_i_4_n_0 ;
  wire \mcp1_sh_cnt[5]_i_5_n_0 ;
  wire \mcp1_sh_cnt[5]_i_6_n_0 ;
  wire \mcp1_sh_cnt_reg_n_0_[0] ;
  wire \mcp1_sh_cnt_reg_n_0_[1] ;
  wire \mcp1_sh_cnt_reg_n_0_[2] ;
  wire \mcp1_sh_cnt_reg_n_0_[3] ;
  wire \mcp1_sh_cnt_reg_n_0_[4] ;
  wire \mcp1_sh_cnt_reg_n_0_[5] ;
  wire \mcp1_sh_invalid_cnt[0]_i_1_n_0 ;
  wire \mcp1_sh_invalid_cnt[1]_i_1_n_0 ;
  wire \mcp1_sh_invalid_cnt[2]_i_1_n_0 ;
  wire \mcp1_sh_invalid_cnt[2]_i_2_n_0 ;
  wire \mcp1_sh_invalid_cnt[3]_i_1_n_0 ;
  wire \mcp1_sh_invalid_cnt[3]_i_2_n_0 ;
  wire \mcp1_sh_invalid_cnt[3]_i_3_n_0 ;
  wire \mcp1_sh_invalid_cnt[3]_i_4_n_0 ;
  wire \mcp1_sh_invalid_cnt_reg_n_0_[0] ;
  wire \mcp1_sh_invalid_cnt_reg_n_0_[1] ;
  wire \mcp1_sh_invalid_cnt_reg_n_0_[2] ;
  wire \mcp1_sh_invalid_cnt_reg_n_0_[3] ;
  wire \mcp1_slip_done_cnt[4]_i_1_n_0 ;
  wire [4:0]mcp1_slip_done_cnt_reg__0;
  wire mcp1_slip_done_reg_n_0;
  wire \mcp1_state[1]_i_1__0_n_0 ;
  wire \mcp1_state[1]_i_2__0_n_0 ;
  wire \mcp1_state[1]_i_3__0_n_0 ;
  wire \mcp1_state_reg_n_0_[0] ;
  wire \mcp1_state_reg_n_0_[1] ;
  wire mcp1_test_sh;
  wire mcp1_test_sh_i_1_n_0;
  wire [0:0]next_state;
  wire out;
  wire [0:0]\outreg_reg[2] ;
  wire [4:0]p_0_in__3;
  wire p_1_in;
  wire pcs_rx_link_up_core_int;
  wire rxreset_2_reg;
  wire rxreset_6_reg;
  wire rxusrclk2;
  wire sh_valid;
  wire signal_ok_reg;
  wire slip_int;

  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_mcp1_state[0]_i_3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(sh_valid));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT4 #(
    .INIT(16'hFFFD)) 
    \FSM_sequential_mcp1_state[2]_i_1 
       (.I0(d1_reg),
        .I1(\outreg_reg[2] ),
        .I2(mcp1_hiber_reg),
        .I3(rxreset_6_reg),
        .O(\FSM_sequential_mcp1_state_reg[2] ));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT3 #(
    .INIT(8'hFB)) 
    \FSM_sequential_mcp1_state[2]_i_1__0 
       (.I0(rxreset_2_reg),
        .I1(d1_reg),
        .I2(\outreg_reg[2] ),
        .O(\FSM_sequential_mcp1_state_reg[2]_0 ));
  LUT6 #(
    .INIT(64'h6666656700000501)) 
    mcp1_b_lock_i_1
       (.I0(\mcp1_state_reg_n_0_[0] ),
        .I1(\mcp1_state_reg_n_0_[1] ),
        .I2(mcp1_b_lock_i_2_n_0),
        .I3(sh_valid),
        .I4(\mcp1_sh_cnt[5]_i_4_n_0 ),
        .I5(d1_reg),
        .O(mcp1_b_lock_i_1_n_0));
  LUT5 #(
    .INIT(32'hFFFFFEFF)) 
    mcp1_b_lock_i_2
       (.I0(\mcp1_sh_invalid_cnt_reg_n_0_[0] ),
        .I1(\mcp1_sh_invalid_cnt_reg_n_0_[1] ),
        .I2(\mcp1_sh_invalid_cnt_reg_n_0_[2] ),
        .I3(\mcp1_state_reg_n_0_[1] ),
        .I4(\mcp1_sh_invalid_cnt_reg_n_0_[3] ),
        .O(mcp1_b_lock_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    mcp1_b_lock_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_b_lock_i_1_n_0),
        .Q(d1_reg),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT2 #(
    .INIT(4'h7)) 
    mcp1_err_block_count_inc_out_i_3
       (.I0(d1_reg),
        .I1(\outreg_reg[2] ),
        .O(mcp1_err_block_count_inc_out_reg));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_sh_cnt[0]_i_1 
       (.I0(\mcp1_state_reg_n_0_[1] ),
        .I1(\mcp1_sh_cnt_reg_n_0_[0] ),
        .O(\mcp1_sh_cnt[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT3 #(
    .INIT(8'h60)) 
    \mcp1_sh_cnt[1]_i_1 
       (.I0(\mcp1_sh_cnt_reg_n_0_[0] ),
        .I1(\mcp1_sh_cnt_reg_n_0_[1] ),
        .I2(\mcp1_state_reg_n_0_[1] ),
        .O(\mcp1_sh_cnt[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT4 #(
    .INIT(16'h2A80)) 
    \mcp1_sh_cnt[2]_i_1 
       (.I0(\mcp1_state_reg_n_0_[1] ),
        .I1(\mcp1_sh_cnt_reg_n_0_[1] ),
        .I2(\mcp1_sh_cnt_reg_n_0_[0] ),
        .I3(\mcp1_sh_cnt_reg_n_0_[2] ),
        .O(\mcp1_sh_cnt[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT5 #(
    .INIT(32'h2AAA8000)) 
    \mcp1_sh_cnt[3]_i_1 
       (.I0(\mcp1_state_reg_n_0_[1] ),
        .I1(\mcp1_sh_cnt_reg_n_0_[0] ),
        .I2(\mcp1_sh_cnt_reg_n_0_[1] ),
        .I3(\mcp1_sh_cnt_reg_n_0_[2] ),
        .I4(\mcp1_sh_cnt_reg_n_0_[3] ),
        .O(\mcp1_sh_cnt[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2AAAAAAA80000000)) 
    \mcp1_sh_cnt[4]_i_1 
       (.I0(\mcp1_state_reg_n_0_[1] ),
        .I1(\mcp1_sh_cnt_reg_n_0_[2] ),
        .I2(\mcp1_sh_cnt_reg_n_0_[1] ),
        .I3(\mcp1_sh_cnt_reg_n_0_[0] ),
        .I4(\mcp1_sh_cnt_reg_n_0_[3] ),
        .I5(\mcp1_sh_cnt_reg_n_0_[4] ),
        .O(\mcp1_sh_cnt[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h6664666666666664)) 
    \mcp1_sh_cnt[5]_i_2 
       (.I0(\mcp1_state_reg_n_0_[1] ),
        .I1(\mcp1_state_reg_n_0_[0] ),
        .I2(\mcp1_sh_cnt[5]_i_4_n_0 ),
        .I3(\mcp1_sh_cnt[5]_i_5_n_0 ),
        .I4(Q[1]),
        .I5(Q[0]),
        .O(\mcp1_sh_cnt[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT3 #(
    .INIT(8'h60)) 
    \mcp1_sh_cnt[5]_i_3 
       (.I0(\mcp1_sh_cnt[5]_i_6_n_0 ),
        .I1(\mcp1_sh_cnt_reg_n_0_[5] ),
        .I2(\mcp1_state_reg_n_0_[1] ),
        .O(\mcp1_sh_cnt[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \mcp1_sh_cnt[5]_i_4 
       (.I0(\mcp1_sh_cnt_reg_n_0_[5] ),
        .I1(\mcp1_sh_cnt_reg_n_0_[4] ),
        .I2(\mcp1_sh_cnt_reg_n_0_[2] ),
        .I3(\mcp1_sh_cnt_reg_n_0_[1] ),
        .I4(\mcp1_sh_cnt_reg_n_0_[0] ),
        .I5(\mcp1_sh_cnt_reg_n_0_[3] ),
        .O(\mcp1_sh_cnt[5]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT5 #(
    .INIT(32'h2AAAAAAA)) 
    \mcp1_sh_cnt[5]_i_5 
       (.I0(d1_reg),
        .I1(\mcp1_sh_invalid_cnt_reg_n_0_[3] ),
        .I2(\mcp1_sh_invalid_cnt_reg_n_0_[2] ),
        .I3(\mcp1_sh_invalid_cnt_reg_n_0_[0] ),
        .I4(\mcp1_sh_invalid_cnt_reg_n_0_[1] ),
        .O(\mcp1_sh_cnt[5]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \mcp1_sh_cnt[5]_i_6 
       (.I0(\mcp1_sh_cnt_reg_n_0_[3] ),
        .I1(\mcp1_sh_cnt_reg_n_0_[0] ),
        .I2(\mcp1_sh_cnt_reg_n_0_[1] ),
        .I3(\mcp1_sh_cnt_reg_n_0_[2] ),
        .I4(\mcp1_sh_cnt_reg_n_0_[4] ),
        .O(\mcp1_sh_cnt[5]_i_6_n_0 ));
  FDRE \mcp1_sh_cnt_reg[0] 
       (.C(rxusrclk2),
        .CE(\mcp1_sh_cnt[5]_i_2_n_0 ),
        .D(\mcp1_sh_cnt[0]_i_1_n_0 ),
        .Q(\mcp1_sh_cnt_reg_n_0_[0] ),
        .R(SR));
  FDRE \mcp1_sh_cnt_reg[1] 
       (.C(rxusrclk2),
        .CE(\mcp1_sh_cnt[5]_i_2_n_0 ),
        .D(\mcp1_sh_cnt[1]_i_1_n_0 ),
        .Q(\mcp1_sh_cnt_reg_n_0_[1] ),
        .R(SR));
  FDRE \mcp1_sh_cnt_reg[2] 
       (.C(rxusrclk2),
        .CE(\mcp1_sh_cnt[5]_i_2_n_0 ),
        .D(\mcp1_sh_cnt[2]_i_1_n_0 ),
        .Q(\mcp1_sh_cnt_reg_n_0_[2] ),
        .R(SR));
  FDRE \mcp1_sh_cnt_reg[3] 
       (.C(rxusrclk2),
        .CE(\mcp1_sh_cnt[5]_i_2_n_0 ),
        .D(\mcp1_sh_cnt[3]_i_1_n_0 ),
        .Q(\mcp1_sh_cnt_reg_n_0_[3] ),
        .R(SR));
  FDRE \mcp1_sh_cnt_reg[4] 
       (.C(rxusrclk2),
        .CE(\mcp1_sh_cnt[5]_i_2_n_0 ),
        .D(\mcp1_sh_cnt[4]_i_1_n_0 ),
        .Q(\mcp1_sh_cnt_reg_n_0_[4] ),
        .R(SR));
  FDRE \mcp1_sh_cnt_reg[5] 
       (.C(rxusrclk2),
        .CE(\mcp1_sh_cnt[5]_i_2_n_0 ),
        .D(\mcp1_sh_cnt[5]_i_3_n_0 ),
        .Q(\mcp1_sh_cnt_reg_n_0_[5] ),
        .R(SR));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_sh_invalid_cnt[0]_i_1 
       (.I0(\mcp1_sh_invalid_cnt[2]_i_2_n_0 ),
        .I1(\mcp1_sh_invalid_cnt_reg_n_0_[0] ),
        .O(\mcp1_sh_invalid_cnt[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT3 #(
    .INIT(8'h28)) 
    \mcp1_sh_invalid_cnt[1]_i_1 
       (.I0(\mcp1_sh_invalid_cnt[2]_i_2_n_0 ),
        .I1(\mcp1_sh_invalid_cnt_reg_n_0_[1] ),
        .I2(\mcp1_sh_invalid_cnt_reg_n_0_[0] ),
        .O(\mcp1_sh_invalid_cnt[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT4 #(
    .INIT(16'h7800)) 
    \mcp1_sh_invalid_cnt[2]_i_1 
       (.I0(\mcp1_sh_invalid_cnt_reg_n_0_[1] ),
        .I1(\mcp1_sh_invalid_cnt_reg_n_0_[0] ),
        .I2(\mcp1_sh_invalid_cnt_reg_n_0_[2] ),
        .I3(\mcp1_sh_invalid_cnt[2]_i_2_n_0 ),
        .O(\mcp1_sh_invalid_cnt[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT5 #(
    .INIT(32'hD00D0000)) 
    \mcp1_sh_invalid_cnt[2]_i_2 
       (.I0(\mcp1_sh_cnt[5]_i_5_n_0 ),
        .I1(\mcp1_sh_cnt[5]_i_4_n_0 ),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\mcp1_state_reg_n_0_[1] ),
        .O(\mcp1_sh_invalid_cnt[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h55550028555582AA)) 
    \mcp1_sh_invalid_cnt[3]_i_1 
       (.I0(\mcp1_state_reg_n_0_[1] ),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\mcp1_sh_cnt[5]_i_4_n_0 ),
        .I4(\mcp1_state_reg_n_0_[0] ),
        .I5(\mcp1_sh_invalid_cnt[3]_i_3_n_0 ),
        .O(\mcp1_sh_invalid_cnt[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0880808080808080)) 
    \mcp1_sh_invalid_cnt[3]_i_2 
       (.I0(\mcp1_sh_invalid_cnt[3]_i_4_n_0 ),
        .I1(\mcp1_state_reg_n_0_[1] ),
        .I2(\mcp1_sh_invalid_cnt_reg_n_0_[3] ),
        .I3(\mcp1_sh_invalid_cnt_reg_n_0_[1] ),
        .I4(\mcp1_sh_invalid_cnt_reg_n_0_[0] ),
        .I5(\mcp1_sh_invalid_cnt_reg_n_0_[2] ),
        .O(\mcp1_sh_invalid_cnt[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \mcp1_sh_invalid_cnt[3]_i_3 
       (.I0(\mcp1_sh_invalid_cnt_reg_n_0_[1] ),
        .I1(\mcp1_sh_invalid_cnt_reg_n_0_[0] ),
        .I2(\mcp1_sh_invalid_cnt_reg_n_0_[2] ),
        .I3(\mcp1_sh_invalid_cnt_reg_n_0_[3] ),
        .O(\mcp1_sh_invalid_cnt[3]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT4 #(
    .INIT(16'h9099)) 
    \mcp1_sh_invalid_cnt[3]_i_4 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\mcp1_sh_cnt[5]_i_4_n_0 ),
        .I3(\mcp1_sh_cnt[5]_i_5_n_0 ),
        .O(\mcp1_sh_invalid_cnt[3]_i_4_n_0 ));
  FDRE \mcp1_sh_invalid_cnt_reg[0] 
       (.C(rxusrclk2),
        .CE(\mcp1_sh_invalid_cnt[3]_i_1_n_0 ),
        .D(\mcp1_sh_invalid_cnt[0]_i_1_n_0 ),
        .Q(\mcp1_sh_invalid_cnt_reg_n_0_[0] ),
        .R(SR));
  FDRE \mcp1_sh_invalid_cnt_reg[1] 
       (.C(rxusrclk2),
        .CE(\mcp1_sh_invalid_cnt[3]_i_1_n_0 ),
        .D(\mcp1_sh_invalid_cnt[1]_i_1_n_0 ),
        .Q(\mcp1_sh_invalid_cnt_reg_n_0_[1] ),
        .R(SR));
  FDRE \mcp1_sh_invalid_cnt_reg[2] 
       (.C(rxusrclk2),
        .CE(\mcp1_sh_invalid_cnt[3]_i_1_n_0 ),
        .D(\mcp1_sh_invalid_cnt[2]_i_1_n_0 ),
        .Q(\mcp1_sh_invalid_cnt_reg_n_0_[2] ),
        .R(SR));
  FDRE \mcp1_sh_invalid_cnt_reg[3] 
       (.C(rxusrclk2),
        .CE(\mcp1_sh_invalid_cnt[3]_i_1_n_0 ),
        .D(\mcp1_sh_invalid_cnt[3]_i_2_n_0 ),
        .Q(\mcp1_sh_invalid_cnt_reg_n_0_[3] ),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \mcp1_slip_done_cnt[0]_i_1 
       (.I0(mcp1_slip_done_cnt_reg__0[0]),
        .O(p_0_in__3[0]));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_slip_done_cnt[1]_i_1 
       (.I0(mcp1_slip_done_cnt_reg__0[0]),
        .I1(mcp1_slip_done_cnt_reg__0[1]),
        .O(p_0_in__3[1]));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \mcp1_slip_done_cnt[2]_i_1 
       (.I0(mcp1_slip_done_cnt_reg__0[2]),
        .I1(mcp1_slip_done_cnt_reg__0[1]),
        .I2(mcp1_slip_done_cnt_reg__0[0]),
        .O(p_0_in__3[2]));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \mcp1_slip_done_cnt[3]_i_1 
       (.I0(mcp1_slip_done_cnt_reg__0[3]),
        .I1(mcp1_slip_done_cnt_reg__0[0]),
        .I2(mcp1_slip_done_cnt_reg__0[1]),
        .I3(mcp1_slip_done_cnt_reg__0[2]),
        .O(p_0_in__3[3]));
  LUT5 #(
    .INIT(32'hFFFF40FF)) 
    \mcp1_slip_done_cnt[4]_i_1 
       (.I0(\mcp1_state_reg_n_0_[0] ),
        .I1(\mcp1_state_reg_n_0_[1] ),
        .I2(\mcp1_state[1]_i_3__0_n_0 ),
        .I3(signal_ok_reg),
        .I4(out),
        .O(\mcp1_slip_done_cnt[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \mcp1_slip_done_cnt[4]_i_2 
       (.I0(mcp1_slip_done_cnt_reg__0[4]),
        .I1(mcp1_slip_done_cnt_reg__0[2]),
        .I2(mcp1_slip_done_cnt_reg__0[3]),
        .I3(mcp1_slip_done_cnt_reg__0[0]),
        .I4(mcp1_slip_done_cnt_reg__0[1]),
        .O(p_0_in__3[4]));
  FDRE \mcp1_slip_done_cnt_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(p_0_in__3[0]),
        .Q(mcp1_slip_done_cnt_reg__0[0]),
        .R(\mcp1_slip_done_cnt[4]_i_1_n_0 ));
  FDRE \mcp1_slip_done_cnt_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(p_0_in__3[1]),
        .Q(mcp1_slip_done_cnt_reg__0[1]),
        .R(\mcp1_slip_done_cnt[4]_i_1_n_0 ));
  FDRE \mcp1_slip_done_cnt_reg[2] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(p_0_in__3[2]),
        .Q(mcp1_slip_done_cnt_reg__0[2]),
        .R(\mcp1_slip_done_cnt[4]_i_1_n_0 ));
  FDRE \mcp1_slip_done_cnt_reg[3] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(p_0_in__3[3]),
        .Q(mcp1_slip_done_cnt_reg__0[3]),
        .R(\mcp1_slip_done_cnt[4]_i_1_n_0 ));
  FDRE \mcp1_slip_done_cnt_reg[4] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(p_0_in__3[4]),
        .Q(mcp1_slip_done_cnt_reg__0[4]),
        .R(\mcp1_slip_done_cnt[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT5 #(
    .INIT(32'h10000000)) 
    mcp1_slip_done_i_1
       (.I0(mcp1_slip_done_cnt_reg__0[1]),
        .I1(mcp1_slip_done_cnt_reg__0[0]),
        .I2(mcp1_slip_done_cnt_reg__0[4]),
        .I3(mcp1_slip_done_cnt_reg__0[2]),
        .I4(mcp1_slip_done_cnt_reg__0[3]),
        .O(p_1_in));
  FDRE mcp1_slip_done_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(p_1_in),
        .Q(mcp1_slip_done_reg_n_0),
        .R(\mcp1_slip_done_cnt[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT5 #(
    .INIT(32'h00000900)) 
    mcp1_slip_i_1
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\mcp1_sh_cnt[5]_i_5_n_0 ),
        .I3(\mcp1_state_reg_n_0_[1] ),
        .I4(\mcp1_state_reg_n_0_[0] ),
        .O(slip_int));
  FDRE #(
    .INIT(1'b0)) 
    mcp1_slip_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(slip_int),
        .Q(gt_slip_int),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT5 #(
    .INIT(32'h9D99999D)) 
    \mcp1_state[0]_i_1__0 
       (.I0(\mcp1_state_reg_n_0_[0] ),
        .I1(\mcp1_state_reg_n_0_[1] ),
        .I2(\mcp1_sh_cnt[5]_i_5_n_0 ),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(next_state));
  LUT6 #(
    .INIT(64'hDFDFD585DFDFD5D5)) 
    \mcp1_state[1]_i_1__0 
       (.I0(\mcp1_state_reg_n_0_[0] ),
        .I1(mcp1_slip_done_reg_n_0),
        .I2(\mcp1_state_reg_n_0_[1] ),
        .I3(\mcp1_state[1]_i_3__0_n_0 ),
        .I4(mcp1_test_sh),
        .I5(\mcp1_sh_cnt[5]_i_4_n_0 ),
        .O(\mcp1_state[1]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h55AA55AA55A255AA)) 
    \mcp1_state[1]_i_2__0 
       (.I0(\mcp1_state_reg_n_0_[1] ),
        .I1(\mcp1_sh_cnt[5]_i_5_n_0 ),
        .I2(sh_valid),
        .I3(\mcp1_state_reg_n_0_[0] ),
        .I4(\mcp1_sh_cnt[5]_i_4_n_0 ),
        .I5(mcp1_test_sh),
        .O(\mcp1_state[1]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h000000008000FFFF)) 
    \mcp1_state[1]_i_3__0 
       (.I0(\mcp1_sh_invalid_cnt_reg_n_0_[1] ),
        .I1(\mcp1_sh_invalid_cnt_reg_n_0_[0] ),
        .I2(\mcp1_sh_invalid_cnt_reg_n_0_[2] ),
        .I3(\mcp1_sh_invalid_cnt_reg_n_0_[3] ),
        .I4(d1_reg),
        .I5(sh_valid),
        .O(\mcp1_state[1]_i_3__0_n_0 ));
  FDRE \mcp1_state_reg[0] 
       (.C(rxusrclk2),
        .CE(\mcp1_state[1]_i_1__0_n_0 ),
        .D(next_state),
        .Q(\mcp1_state_reg_n_0_[0] ),
        .R(SR));
  FDRE \mcp1_state_reg[1] 
       (.C(rxusrclk2),
        .CE(\mcp1_state[1]_i_1__0_n_0 ),
        .D(\mcp1_state[1]_i_2__0_n_0 ),
        .Q(\mcp1_state_reg_n_0_[1] ),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT2 #(
    .INIT(4'hE)) 
    mcp1_test_sh_i_1
       (.I0(\mcp1_state_reg_n_0_[1] ),
        .I1(\mcp1_state_reg_n_0_[0] ),
        .O(mcp1_test_sh_i_1_n_0));
  FDRE mcp1_test_sh_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_test_sh_i_1_n_0),
        .Q(mcp1_test_sh),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT2 #(
    .INIT(4'h2)) 
    pcs_rx_link_up_core_reg_i_1
       (.I0(d1_reg),
        .I1(mcp1_hiber_reg),
        .O(pcs_rx_link_up_core_int));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_rx_decoder
   (\FSM_sequential_mcp1_state_reg[1] ,
    r_type,
    \FSM_sequential_mcp1_state_reg[0] ,
    \FSM_sequential_mcp1_state_reg[1]_0 ,
    rx_ebuff_data_t,
    rx_ebuff_ctrl_t,
    \mcp1_r_type_reg_reg[2]_0 ,
    out,
    block_field,
    rxusrclk2,
    \mcp1_r_type_reg_reg[0]_0 ,
    \FSM_sequential_mcp1_state_reg[2] ,
    rx_66_enc_reg);
  output \FSM_sequential_mcp1_state_reg[1] ;
  output [2:0]r_type;
  output \FSM_sequential_mcp1_state_reg[0] ;
  output \FSM_sequential_mcp1_state_reg[1]_0 ;
  output [63:0]rx_ebuff_data_t;
  output [7:0]rx_ebuff_ctrl_t;
  output [1:0]\mcp1_r_type_reg_reg[2]_0 ;
  input out;
  input [7:0]block_field;
  input rxusrclk2;
  input \mcp1_r_type_reg_reg[0]_0 ;
  input [2:0]\FSM_sequential_mcp1_state_reg[2] ;
  input [57:0]rx_66_enc_reg;

  wire [7:1]DecodeWord;
  wire [7:0]DecodeWord0;
  wire [7:1]DecodeWord1;
  wire [7:0]DecodeWord2;
  wire [7:0]DecodeWord3;
  wire [7:1]DecodeWord4;
  wire [7:1]DecodeWord5;
  wire [7:0]DecodeWord6;
  wire \FSM_sequential_mcp1_state_reg[0] ;
  wire \FSM_sequential_mcp1_state_reg[1] ;
  wire \FSM_sequential_mcp1_state_reg[1]_0 ;
  wire [2:0]\FSM_sequential_mcp1_state_reg[2] ;
  wire [7:0]block_field;
  wire [7:0]data2;
  wire [15:8]data3;
  wire [23:16]data4;
  wire [31:24]data5;
  wire [39:32]data6;
  wire [47:40]data7;
  wire [55:48]data8;
  wire [7:0]mcp1_block_field_reg;
  wire [7:0]mcp1_dec_c0;
  wire \mcp1_dec_c0[0]_i_1_n_0 ;
  wire \mcp1_dec_c0[0]_i_2_n_0 ;
  wire \mcp1_dec_c0[3]_i_2_n_0 ;
  wire \mcp1_dec_c0[4]_i_2_n_0 ;
  wire \mcp1_dec_c0[5]_i_2_n_0 ;
  wire \mcp1_dec_c0[5]_i_3_n_0 ;
  wire \mcp1_dec_c0[5]_i_4_n_0 ;
  wire \mcp1_dec_c0[5]_i_5_n_0 ;
  wire \mcp1_dec_c0[6]_i_2_n_0 ;
  wire \mcp1_dec_c0[7]_i_3_n_0 ;
  wire \mcp1_dec_c0[7]_i_4_n_0 ;
  wire \mcp1_dec_c0[7]_i_5_n_0 ;
  wire \mcp1_dec_c0[7]_i_6_n_0 ;
  wire \mcp1_dec_c0[7]_i_7_n_0 ;
  wire mcp1_dec_c0_0;
  wire [7:0]mcp1_dec_c1;
  wire \mcp1_dec_c1[0]_i_2_n_0 ;
  wire \mcp1_dec_c1[3]_i_2_n_0 ;
  wire \mcp1_dec_c1[4]_i_2_n_0 ;
  wire \mcp1_dec_c1[4]_i_3_n_0 ;
  wire \mcp1_dec_c1[4]_i_4_n_0 ;
  wire \mcp1_dec_c1[5]_i_2_n_0 ;
  wire \mcp1_dec_c1[5]_i_3_n_0 ;
  wire \mcp1_dec_c1[6]_i_2_n_0 ;
  wire \mcp1_dec_c1[6]_i_3_n_0 ;
  wire \mcp1_dec_c1[7]_i_3_n_0 ;
  wire \mcp1_dec_c1[7]_i_4_n_0 ;
  wire \mcp1_dec_c1[7]_i_5_n_0 ;
  wire \mcp1_dec_c1[7]_i_6_n_0 ;
  wire \mcp1_dec_c1[7]_i_7_n_0 ;
  wire \mcp1_dec_c1[7]_i_8_n_0 ;
  wire mcp1_dec_c1_1;
  wire [7:0]mcp1_dec_c2;
  wire \mcp1_dec_c2[0]_i_1_n_0 ;
  wire \mcp1_dec_c2[1]_i_2_n_0 ;
  wire \mcp1_dec_c2[3]_i_2_n_0 ;
  wire \mcp1_dec_c2[4]_i_2_n_0 ;
  wire \mcp1_dec_c2[5]_i_2_n_0 ;
  wire \mcp1_dec_c2[5]_i_3_n_0 ;
  wire \mcp1_dec_c2[5]_i_4_n_0 ;
  wire \mcp1_dec_c2[6]_i_2_n_0 ;
  wire \mcp1_dec_c2[6]_i_3_n_0 ;
  wire \mcp1_dec_c2[7]_i_3_n_0 ;
  wire \mcp1_dec_c2[7]_i_4_n_0 ;
  wire \mcp1_dec_c2[7]_i_5_n_0 ;
  wire \mcp1_dec_c2[7]_i_6_n_0 ;
  wire \mcp1_dec_c2[7]_i_7_n_0 ;
  wire mcp1_dec_c2_2;
  wire [7:0]mcp1_dec_c3;
  wire \mcp1_dec_c3[3]_i_2_n_0 ;
  wire \mcp1_dec_c3[4]_i_2_n_0 ;
  wire \mcp1_dec_c3[5]_i_2_n_0 ;
  wire \mcp1_dec_c3[5]_i_3_n_0 ;
  wire \mcp1_dec_c3[5]_i_4_n_0 ;
  wire \mcp1_dec_c3[5]_i_5_n_0 ;
  wire \mcp1_dec_c3[6]_i_2_n_0 ;
  wire \mcp1_dec_c3[7]_i_3_n_0 ;
  wire \mcp1_dec_c3[7]_i_4_n_0 ;
  wire \mcp1_dec_c3[7]_i_5_n_0 ;
  wire \mcp1_dec_c3[7]_i_6_n_0 ;
  wire \mcp1_dec_c3[7]_i_7_n_0 ;
  wire mcp1_dec_c3_3;
  wire [7:0]mcp1_dec_c4;
  wire \mcp1_dec_c4[0]_i_2_n_0 ;
  wire \mcp1_dec_c4[3]_i_2_n_0 ;
  wire \mcp1_dec_c4[4]_i_2_n_0 ;
  wire \mcp1_dec_c4[5]_i_2_n_0 ;
  wire \mcp1_dec_c4[5]_i_3_n_0 ;
  wire \mcp1_dec_c4[5]_i_4_n_0 ;
  wire \mcp1_dec_c4[5]_i_5_n_0 ;
  wire \mcp1_dec_c4[6]_i_2_n_0 ;
  wire \mcp1_dec_c4[6]_i_3_n_0 ;
  wire \mcp1_dec_c4[7]_i_3_n_0 ;
  wire \mcp1_dec_c4[7]_i_4_n_0 ;
  wire \mcp1_dec_c4[7]_i_5_n_0 ;
  wire \mcp1_dec_c4[7]_i_6_n_0 ;
  wire \mcp1_dec_c4[7]_i_7_n_0 ;
  wire \mcp1_dec_c4[7]_i_8_n_0 ;
  wire mcp1_dec_c4_4;
  wire [7:0]mcp1_dec_c5;
  wire \mcp1_dec_c5[0]_i_1_n_0 ;
  wire \mcp1_dec_c5[1]_i_2_n_0 ;
  wire \mcp1_dec_c5[3]_i_2_n_0 ;
  wire \mcp1_dec_c5[4]_i_2_n_0 ;
  wire \mcp1_dec_c5[5]_i_2_n_0 ;
  wire \mcp1_dec_c5[5]_i_3_n_0 ;
  wire \mcp1_dec_c5[5]_i_4_n_0 ;
  wire \mcp1_dec_c5[6]_i_2_n_0 ;
  wire \mcp1_dec_c5[6]_i_3_n_0 ;
  wire \mcp1_dec_c5[7]_i_3_n_0 ;
  wire \mcp1_dec_c5[7]_i_4_n_0 ;
  wire \mcp1_dec_c5[7]_i_5_n_0 ;
  wire \mcp1_dec_c5[7]_i_6_n_0 ;
  wire \mcp1_dec_c5[7]_i_7_n_0 ;
  wire mcp1_dec_c5_5;
  wire [7:0]mcp1_dec_c6;
  wire \mcp1_dec_c6[0]_i_1_n_0 ;
  wire \mcp1_dec_c6[0]_i_2_n_0 ;
  wire \mcp1_dec_c6[1]_i_2_n_0 ;
  wire \mcp1_dec_c6[3]_i_2_n_0 ;
  wire \mcp1_dec_c6[4]_i_2_n_0 ;
  wire \mcp1_dec_c6[4]_i_3_n_0 ;
  wire \mcp1_dec_c6[5]_i_2_n_0 ;
  wire \mcp1_dec_c6[5]_i_3_n_0 ;
  wire \mcp1_dec_c6[6]_i_2_n_0 ;
  wire \mcp1_dec_c6[6]_i_3_n_0 ;
  wire \mcp1_dec_c6[7]_i_3_n_0 ;
  wire \mcp1_dec_c6[7]_i_4_n_0 ;
  wire \mcp1_dec_c6[7]_i_5_n_0 ;
  wire \mcp1_dec_c6[7]_i_6_n_0 ;
  wire \mcp1_dec_c6[7]_i_7_n_0 ;
  wire mcp1_dec_c6_6;
  wire [7:0]mcp1_dec_c7;
  wire \mcp1_dec_c7[0]_i_2_n_0 ;
  wire \mcp1_dec_c7[3]_i_2_n_0 ;
  wire \mcp1_dec_c7[4]_i_2_n_0 ;
  wire \mcp1_dec_c7[4]_i_3_n_0 ;
  wire \mcp1_dec_c7[4]_i_4_n_0 ;
  wire \mcp1_dec_c7[5]_i_2_n_0 ;
  wire \mcp1_dec_c7[5]_i_3_n_0 ;
  wire \mcp1_dec_c7[6]_i_2_n_0 ;
  wire \mcp1_dec_c7[7]_i_3_n_0 ;
  wire \mcp1_dec_c7[7]_i_4_n_0 ;
  wire \mcp1_dec_c7[7]_i_5_n_0 ;
  wire \mcp1_dec_c7[7]_i_6_n_0 ;
  wire \mcp1_dec_c7[7]_i_7_n_0 ;
  wire mcp1_dec_c7_7;
  wire \mcp1_r_type_next_reg[0]_i_1_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_2_n_0 ;
  wire \mcp1_r_type_next_reg[1]_i_1_n_0 ;
  wire \mcp1_r_type_next_reg[1]_i_2_n_0 ;
  wire \mcp1_r_type_next_reg[1]_i_3_n_0 ;
  wire \mcp1_r_type_next_reg[1]_i_4_n_0 ;
  wire \mcp1_r_type_next_reg[1]_i_5_n_0 ;
  wire \mcp1_r_type_next_reg[1]_i_6_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_10_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_11_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_12_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_13_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_14_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_15_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_16_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_17_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_18_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_19_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_1_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_20_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_21_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_22_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_23_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_24_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_25_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_26_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_27_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_28_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_29_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_2_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_30_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_31_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_32_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_33_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_34_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_35_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_36_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_37_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_38_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_39_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_3_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_40_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_41_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_42_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_43_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_44_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_45_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_4_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_5_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_6_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_7_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_8_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_9_n_0 ;
  wire \mcp1_r_type_reg_reg[0]_0 ;
  wire [1:0]\mcp1_r_type_reg_reg[2]_0 ;
  wire [7:1]mcp1_rx_64_ctrl_out;
  wire \mcp1_rx_64_ctrl_out[0]_i_1_n_0 ;
  wire \mcp1_rx_64_ctrl_out[0]_i_2_n_0 ;
  wire \mcp1_rx_64_ctrl_out[0]_i_3_n_0 ;
  wire \mcp1_rx_64_ctrl_out[0]_i_4_n_0 ;
  wire \mcp1_rx_64_ctrl_out[0]_i_5_n_0 ;
  wire \mcp1_rx_64_ctrl_out[1]_i_2_n_0 ;
  wire \mcp1_rx_64_ctrl_out[1]_i_3_n_0 ;
  wire \mcp1_rx_64_ctrl_out[1]_i_4_n_0 ;
  wire \mcp1_rx_64_ctrl_out[2]_i_2_n_0 ;
  wire \mcp1_rx_64_ctrl_out[3]_i_2_n_0 ;
  wire \mcp1_rx_64_ctrl_out[3]_i_3_n_0 ;
  wire \mcp1_rx_64_ctrl_out[3]_i_4_n_0 ;
  wire \mcp1_rx_64_ctrl_out[3]_i_5_n_0 ;
  wire \mcp1_rx_64_ctrl_out[4]_i_1_n_0 ;
  wire \mcp1_rx_64_ctrl_out[4]_i_2_n_0 ;
  wire \mcp1_rx_64_ctrl_out[4]_i_3_n_0 ;
  wire \mcp1_rx_64_ctrl_out[5]_i_2_n_0 ;
  wire \mcp1_rx_64_ctrl_out[5]_i_3_n_0 ;
  wire \mcp1_rx_64_ctrl_out[6]_i_2_n_0 ;
  wire \mcp1_rx_64_ctrl_out[6]_i_3_n_0 ;
  wire \mcp1_rx_64_ctrl_out[7]_i_1_n_0 ;
  wire \mcp1_rx_64_ctrl_out[7]_i_3_n_0 ;
  wire \mcp1_rx_64_ctrl_out[7]_i_4_n_0 ;
  wire \mcp1_rx_64_ctrl_out[7]_i_5_n_0 ;
  wire \mcp1_rx_64_ctrl_out[7]_i_6_n_0 ;
  wire \mcp1_rx_64_ctrl_out[7]_i_7_n_0 ;
  wire \mcp1_rx_64_ctrl_out_reg_n_0_[0] ;
  wire \mcp1_rx_64_ctrl_out_reg_n_0_[1] ;
  wire \mcp1_rx_64_ctrl_out_reg_n_0_[2] ;
  wire \mcp1_rx_64_ctrl_out_reg_n_0_[3] ;
  wire \mcp1_rx_64_ctrl_out_reg_n_0_[4] ;
  wire \mcp1_rx_64_ctrl_out_reg_n_0_[5] ;
  wire \mcp1_rx_64_ctrl_out_reg_n_0_[6] ;
  wire \mcp1_rx_64_ctrl_out_reg_n_0_[7] ;
  wire [63:0]mcp1_rx_64_data_out;
  wire \mcp1_rx_64_data_out[0]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[0]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[10]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[10]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[11]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[11]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[11]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[12]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[12]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[12]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[13]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[13]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[13]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[14]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[14]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[14]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[15]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[15]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[15]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[15]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[16]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[16]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[16]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[17]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[17]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[17]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[17]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[18]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[18]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[19]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[19]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[19]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[1]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[1]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[1]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[20]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[20]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[20]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[21]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[21]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[21]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[22]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[22]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[22]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[23]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[23]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[23]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[24]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[24]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[24]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[25]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[25]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[25]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[25]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[26]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[26]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[27]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[27]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[27]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[28]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[28]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[28]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[29]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[29]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[29]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[2]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[2]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[2]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[30]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[30]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[30]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[31]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[31]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[31]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[32]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[32]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[32]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[33]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[33]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[33]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[33]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[34]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[34]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[35]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[35]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[35]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[36]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[36]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[36]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[37]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[37]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[37]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[37]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[37]_i_5_n_0 ;
  wire \mcp1_rx_64_data_out[38]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[38]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[38]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[38]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[38]_i_5_n_0 ;
  wire \mcp1_rx_64_data_out[38]_i_6_n_0 ;
  wire \mcp1_rx_64_data_out[39]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[39]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[39]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[39]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[39]_i_5_n_0 ;
  wire \mcp1_rx_64_data_out[3]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[3]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[40]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[40]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[40]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[41]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[41]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[41]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[42]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[42]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[43]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[43]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[43]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[44]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[44]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[44]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[45]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[45]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[45]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[46]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[46]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[46]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[47]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[47]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[47]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[48]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[48]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[49]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[49]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[4]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[4]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[50]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[50]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[51]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[51]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[52]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[52]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[53]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[53]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[54]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[54]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[55]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[55]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[55]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[56]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[56]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[57]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[57]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[58]_i_10_n_0 ;
  wire \mcp1_rx_64_data_out[58]_i_11_n_0 ;
  wire \mcp1_rx_64_data_out[58]_i_12_n_0 ;
  wire \mcp1_rx_64_data_out[58]_i_13_n_0 ;
  wire \mcp1_rx_64_data_out[58]_i_14_n_0 ;
  wire \mcp1_rx_64_data_out[58]_i_15_n_0 ;
  wire \mcp1_rx_64_data_out[58]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[58]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[58]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[58]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[58]_i_5_n_0 ;
  wire \mcp1_rx_64_data_out[58]_i_6_n_0 ;
  wire \mcp1_rx_64_data_out[58]_i_7_n_0 ;
  wire \mcp1_rx_64_data_out[58]_i_8_n_0 ;
  wire \mcp1_rx_64_data_out[58]_i_9_n_0 ;
  wire \mcp1_rx_64_data_out[59]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[59]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[5]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[5]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[5]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[5]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[60]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[60]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[61]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[61]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[62]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[62]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[63]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[63]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[6]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[6]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[6]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[6]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[7]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[7]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[7]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[7]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[7]_i_5_n_0 ;
  wire \mcp1_rx_64_data_out[8]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[8]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[8]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[9]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[9]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[9]_i_3_n_0 ;
  wire \mcp1_rx_66_enc_reg_reg_n_0_[0] ;
  wire \mcp1_rx_66_enc_reg_reg_n_0_[1] ;
  wire \mcp1_rx_ebuff_ctrl[7]_i_6_n_0 ;
  wire \mcp1_rx_ebuff_ctrl[7]_i_7_n_0 ;
  wire \mcp1_rx_ebuff_ctrl[7]_i_8_n_0 ;
  wire \mcp1_rx_ebuff_ctrl[7]_i_9_n_0 ;
  wire out;
  wire [2:0]r_type;
  wire [1:1]r_type_next;
  wire [57:0]rx_66_enc_reg;
  wire [7:0]rx_ebuff_ctrl_t;
  wire [63:0]rx_ebuff_data_t;
  wire [2:0]\rx_pcs_fsm_i/next_state ;
  wire rxusrclk2;

  LUT2 #(
    .INIT(4'h1)) 
    \FSM_sequential_mcp1_state[0]_i_3__0 
       (.I0(r_type[0]),
        .I1(r_type[2]),
        .O(\FSM_sequential_mcp1_state_reg[0] ));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \FSM_sequential_mcp1_state[1]_i_2 
       (.I0(r_type[1]),
        .I1(r_type[2]),
        .I2(r_type[0]),
        .O(\FSM_sequential_mcp1_state_reg[1] ));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT3 #(
    .INIT(8'hFD)) 
    \FSM_sequential_mcp1_state[1]_i_3 
       (.I0(r_type[0]),
        .I1(r_type[2]),
        .I2(r_type[1]),
        .O(\FSM_sequential_mcp1_state_reg[1]_0 ));
  FDRE \mcp1_block_field_reg_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(block_field[0]),
        .Q(mcp1_block_field_reg[0]),
        .R(out));
  FDRE \mcp1_block_field_reg_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(block_field[1]),
        .Q(mcp1_block_field_reg[1]),
        .R(out));
  FDRE \mcp1_block_field_reg_reg[2] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(block_field[2]),
        .Q(mcp1_block_field_reg[2]),
        .R(out));
  FDRE \mcp1_block_field_reg_reg[3] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(block_field[3]),
        .Q(mcp1_block_field_reg[3]),
        .R(out));
  FDRE \mcp1_block_field_reg_reg[4] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(block_field[4]),
        .Q(mcp1_block_field_reg[4]),
        .R(out));
  FDRE \mcp1_block_field_reg_reg[5] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(block_field[5]),
        .Q(mcp1_block_field_reg[5]),
        .R(out));
  FDRE \mcp1_block_field_reg_reg[6] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(block_field[6]),
        .Q(mcp1_block_field_reg[6]),
        .R(out));
  FDRE \mcp1_block_field_reg_reg[7] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(block_field[7]),
        .Q(mcp1_block_field_reg[7]),
        .R(out));
  LUT6 #(
    .INIT(64'h2000000100000000)) 
    \mcp1_dec_c0[0]_i_1 
       (.I0(rx_66_enc_reg[8]),
        .I1(rx_66_enc_reg[2]),
        .I2(rx_66_enc_reg[5]),
        .I3(rx_66_enc_reg[6]),
        .I4(rx_66_enc_reg[7]),
        .I5(\mcp1_dec_c0[0]_i_2_n_0 ),
        .O(\mcp1_dec_c0[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \mcp1_dec_c0[0]_i_2 
       (.I0(rx_66_enc_reg[4]),
        .I1(rx_66_enc_reg[3]),
        .O(\mcp1_dec_c0[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000018000001)) 
    \mcp1_dec_c0[1]_i_1 
       (.I0(rx_66_enc_reg[3]),
        .I1(rx_66_enc_reg[4]),
        .I2(rx_66_enc_reg[7]),
        .I3(rx_66_enc_reg[5]),
        .I4(rx_66_enc_reg[6]),
        .I5(\mcp1_dec_c0[5]_i_3_n_0 ),
        .O(DecodeWord[1]));
  LUT6 #(
    .INIT(64'hABAAAAAAAAAAEAAA)) 
    \mcp1_dec_c0[3]_i_1 
       (.I0(\mcp1_dec_c0[4]_i_2_n_0 ),
        .I1(rx_66_enc_reg[7]),
        .I2(rx_66_enc_reg[8]),
        .I3(\mcp1_dec_c0[3]_i_2_n_0 ),
        .I4(rx_66_enc_reg[5]),
        .I5(rx_66_enc_reg[6]),
        .O(DecodeWord[3]));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \mcp1_dec_c0[3]_i_2 
       (.I0(rx_66_enc_reg[2]),
        .I1(rx_66_enc_reg[3]),
        .I2(rx_66_enc_reg[4]),
        .O(\mcp1_dec_c0[3]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_dec_c0[4]_i_1 
       (.I0(\mcp1_dec_c0[4]_i_2_n_0 ),
        .I1(\mcp1_dec_c0[7]_i_6_n_0 ),
        .O(DecodeWord[4]));
  LUT6 #(
    .INIT(64'h0002020020000020)) 
    \mcp1_dec_c0[4]_i_2 
       (.I0(rx_66_enc_reg[2]),
        .I1(\mcp1_dec_c0[5]_i_5_n_0 ),
        .I2(rx_66_enc_reg[4]),
        .I3(rx_66_enc_reg[7]),
        .I4(rx_66_enc_reg[5]),
        .I5(rx_66_enc_reg[3]),
        .O(\mcp1_dec_c0[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000140)) 
    \mcp1_dec_c0[5]_i_1 
       (.I0(\mcp1_dec_c0[5]_i_2_n_0 ),
        .I1(rx_66_enc_reg[4]),
        .I2(rx_66_enc_reg[3]),
        .I3(rx_66_enc_reg[7]),
        .I4(\mcp1_dec_c0[5]_i_3_n_0 ),
        .I5(\mcp1_dec_c0[5]_i_4_n_0 ),
        .O(DecodeWord[5]));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_dec_c0[5]_i_2 
       (.I0(rx_66_enc_reg[5]),
        .I1(rx_66_enc_reg[6]),
        .O(\mcp1_dec_c0[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT3 #(
    .INIT(8'hBE)) 
    \mcp1_dec_c0[5]_i_3 
       (.I0(rx_66_enc_reg[2]),
        .I1(rx_66_enc_reg[7]),
        .I2(rx_66_enc_reg[8]),
        .O(\mcp1_dec_c0[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000004420000)) 
    \mcp1_dec_c0[5]_i_4 
       (.I0(rx_66_enc_reg[4]),
        .I1(rx_66_enc_reg[3]),
        .I2(rx_66_enc_reg[7]),
        .I3(rx_66_enc_reg[5]),
        .I4(rx_66_enc_reg[2]),
        .I5(\mcp1_dec_c0[5]_i_5_n_0 ),
        .O(\mcp1_dec_c0[5]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT4 #(
    .INIT(16'hF99F)) 
    \mcp1_dec_c0[5]_i_5 
       (.I0(rx_66_enc_reg[7]),
        .I1(rx_66_enc_reg[8]),
        .I2(rx_66_enc_reg[6]),
        .I3(rx_66_enc_reg[5]),
        .O(\mcp1_dec_c0[5]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hAAAABAAA)) 
    \mcp1_dec_c0[6]_i_1 
       (.I0(\mcp1_dec_c0[7]_i_6_n_0 ),
        .I1(\mcp1_dec_c0[6]_i_2_n_0 ),
        .I2(rx_66_enc_reg[2]),
        .I3(rx_66_enc_reg[8]),
        .I4(rx_66_enc_reg[6]),
        .O(DecodeWord[6]));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT4 #(
    .INIT(16'hFBFF)) 
    \mcp1_dec_c0[6]_i_2 
       (.I0(rx_66_enc_reg[7]),
        .I1(rx_66_enc_reg[5]),
        .I2(rx_66_enc_reg[4]),
        .I3(rx_66_enc_reg[3]),
        .O(\mcp1_dec_c0[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEFF7FFFFF7FFFFE)) 
    \mcp1_dec_c0[7]_i_1 
       (.I0(\mcp1_dec_c0[7]_i_3_n_0 ),
        .I1(\mcp1_dec_c0[7]_i_4_n_0 ),
        .I2(rx_66_enc_reg[2]),
        .I3(rx_66_enc_reg[3]),
        .I4(rx_66_enc_reg[4]),
        .I5(\mcp1_dec_c0[7]_i_5_n_0 ),
        .O(mcp1_dec_c0_0));
  LUT5 #(
    .INIT(32'hEAAAAAAA)) 
    \mcp1_dec_c0[7]_i_2 
       (.I0(\mcp1_dec_c0[7]_i_6_n_0 ),
        .I1(rx_66_enc_reg[6]),
        .I2(rx_66_enc_reg[8]),
        .I3(rx_66_enc_reg[2]),
        .I4(\mcp1_dec_c0[7]_i_7_n_0 ),
        .O(DecodeWord[7]));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c0[7]_i_3 
       (.I0(rx_66_enc_reg[5]),
        .I1(rx_66_enc_reg[6]),
        .O(\mcp1_dec_c0[7]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c0[7]_i_4 
       (.I0(rx_66_enc_reg[8]),
        .I1(rx_66_enc_reg[7]),
        .O(\mcp1_dec_c0[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c0[7]_i_5 
       (.I0(rx_66_enc_reg[5]),
        .I1(rx_66_enc_reg[7]),
        .O(\mcp1_dec_c0[7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000018000080)) 
    \mcp1_dec_c0[7]_i_6 
       (.I0(rx_66_enc_reg[6]),
        .I1(rx_66_enc_reg[5]),
        .I2(rx_66_enc_reg[7]),
        .I3(rx_66_enc_reg[3]),
        .I4(rx_66_enc_reg[4]),
        .I5(\mcp1_dec_c0[5]_i_3_n_0 ),
        .O(\mcp1_dec_c0[7]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT4 #(
    .INIT(16'h0100)) 
    \mcp1_dec_c0[7]_i_7 
       (.I0(rx_66_enc_reg[7]),
        .I1(rx_66_enc_reg[5]),
        .I2(rx_66_enc_reg[3]),
        .I3(rx_66_enc_reg[4]),
        .O(\mcp1_dec_c0[7]_i_7_n_0 ));
  FDRE \mcp1_dec_c0_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_dec_c0[0]_i_1_n_0 ),
        .Q(mcp1_dec_c0[0]),
        .R(mcp1_dec_c0_0));
  FDSE \mcp1_dec_c0_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord[1]),
        .Q(mcp1_dec_c0[1]),
        .S(mcp1_dec_c0_0));
  FDSE \mcp1_dec_c0_reg[3] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord[3]),
        .Q(mcp1_dec_c0[3]),
        .S(mcp1_dec_c0_0));
  FDSE \mcp1_dec_c0_reg[4] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord[4]),
        .Q(mcp1_dec_c0[4]),
        .S(mcp1_dec_c0_0));
  FDSE \mcp1_dec_c0_reg[5] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord[5]),
        .Q(mcp1_dec_c0[5]),
        .S(mcp1_dec_c0_0));
  FDSE \mcp1_dec_c0_reg[6] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord[6]),
        .Q(mcp1_dec_c0[6]),
        .S(mcp1_dec_c0_0));
  FDSE \mcp1_dec_c0_reg[7] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord[7]),
        .Q(mcp1_dec_c0[7]),
        .S(mcp1_dec_c0_0));
  LUT6 #(
    .INIT(64'h0080000000000010)) 
    \mcp1_dec_c1[0]_i_1 
       (.I0(rx_66_enc_reg[12]),
        .I1(rx_66_enc_reg[13]),
        .I2(\mcp1_dec_c1[0]_i_2_n_0 ),
        .I3(rx_66_enc_reg[9]),
        .I4(rx_66_enc_reg[15]),
        .I5(rx_66_enc_reg[14]),
        .O(DecodeWord0[0]));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \mcp1_dec_c1[0]_i_2 
       (.I0(rx_66_enc_reg[11]),
        .I1(rx_66_enc_reg[10]),
        .O(\mcp1_dec_c1[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT5 #(
    .INIT(32'h00004009)) 
    \mcp1_dec_c1[1]_i_1 
       (.I0(rx_66_enc_reg[14]),
        .I1(rx_66_enc_reg[12]),
        .I2(rx_66_enc_reg[11]),
        .I3(rx_66_enc_reg[10]),
        .I4(\mcp1_dec_c1[4]_i_3_n_0 ),
        .O(DecodeWord0[1]));
  LUT6 #(
    .INIT(64'hABAAAAAAAAAAEAAA)) 
    \mcp1_dec_c1[3]_i_1 
       (.I0(\mcp1_dec_c1[4]_i_2_n_0 ),
        .I1(rx_66_enc_reg[14]),
        .I2(rx_66_enc_reg[15]),
        .I3(\mcp1_dec_c1[3]_i_2_n_0 ),
        .I4(rx_66_enc_reg[13]),
        .I5(rx_66_enc_reg[12]),
        .O(DecodeWord0[3]));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \mcp1_dec_c1[3]_i_2 
       (.I0(rx_66_enc_reg[10]),
        .I1(rx_66_enc_reg[11]),
        .I2(rx_66_enc_reg[9]),
        .O(\mcp1_dec_c1[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAABBAAABAAAAAAA)) 
    \mcp1_dec_c1[4]_i_1 
       (.I0(\mcp1_dec_c1[4]_i_2_n_0 ),
        .I1(\mcp1_dec_c1[4]_i_3_n_0 ),
        .I2(rx_66_enc_reg[10]),
        .I3(rx_66_enc_reg[11]),
        .I4(rx_66_enc_reg[14]),
        .I5(rx_66_enc_reg[12]),
        .O(DecodeWord0[4]));
  LUT6 #(
    .INIT(64'h0200000200202000)) 
    \mcp1_dec_c1[4]_i_2 
       (.I0(rx_66_enc_reg[9]),
        .I1(\mcp1_dec_c1[4]_i_4_n_0 ),
        .I2(rx_66_enc_reg[10]),
        .I3(rx_66_enc_reg[14]),
        .I4(rx_66_enc_reg[12]),
        .I5(rx_66_enc_reg[11]),
        .O(\mcp1_dec_c1[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT5 #(
    .INIT(32'hFFFF6FF6)) 
    \mcp1_dec_c1[4]_i_3 
       (.I0(rx_66_enc_reg[13]),
        .I1(rx_66_enc_reg[12]),
        .I2(rx_66_enc_reg[15]),
        .I3(rx_66_enc_reg[14]),
        .I4(rx_66_enc_reg[9]),
        .O(\mcp1_dec_c1[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT4 #(
    .INIT(16'hF99F)) 
    \mcp1_dec_c1[4]_i_4 
       (.I0(rx_66_enc_reg[13]),
        .I1(rx_66_enc_reg[12]),
        .I2(rx_66_enc_reg[14]),
        .I3(rx_66_enc_reg[15]),
        .O(\mcp1_dec_c1[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h000F554400110F00)) 
    \mcp1_dec_c1[5]_i_1 
       (.I0(\mcp1_dec_c1[5]_i_2_n_0 ),
        .I1(rx_66_enc_reg[12]),
        .I2(\mcp1_dec_c1[5]_i_3_n_0 ),
        .I3(rx_66_enc_reg[14]),
        .I4(rx_66_enc_reg[11]),
        .I5(rx_66_enc_reg[10]),
        .O(DecodeWord0[5]));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT5 #(
    .INIT(32'hFFBFDF7F)) 
    \mcp1_dec_c1[5]_i_2 
       (.I0(rx_66_enc_reg[15]),
        .I1(rx_66_enc_reg[13]),
        .I2(rx_66_enc_reg[9]),
        .I3(rx_66_enc_reg[12]),
        .I4(rx_66_enc_reg[14]),
        .O(\mcp1_dec_c1[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT5 #(
    .INIT(32'hFFFF7FF7)) 
    \mcp1_dec_c1[5]_i_3 
       (.I0(rx_66_enc_reg[13]),
        .I1(rx_66_enc_reg[12]),
        .I2(rx_66_enc_reg[15]),
        .I3(rx_66_enc_reg[14]),
        .I4(rx_66_enc_reg[9]),
        .O(\mcp1_dec_c1[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAAEAAAAAAAAAAAAA)) 
    \mcp1_dec_c1[6]_i_1 
       (.I0(\mcp1_dec_c1[7]_i_6_n_0 ),
        .I1(\mcp1_dec_c1[6]_i_2_n_0 ),
        .I2(\mcp1_dec_c1[6]_i_3_n_0 ),
        .I3(rx_66_enc_reg[13]),
        .I4(rx_66_enc_reg[15]),
        .I5(rx_66_enc_reg[9]),
        .O(DecodeWord0[6]));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_dec_c1[6]_i_2 
       (.I0(rx_66_enc_reg[12]),
        .I1(rx_66_enc_reg[14]),
        .O(\mcp1_dec_c1[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_dec_c1[6]_i_3 
       (.I0(rx_66_enc_reg[10]),
        .I1(rx_66_enc_reg[11]),
        .O(\mcp1_dec_c1[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFEFF7FFFFF7FFFFE)) 
    \mcp1_dec_c1[7]_i_1 
       (.I0(\mcp1_dec_c1[7]_i_3_n_0 ),
        .I1(\mcp1_dec_c1[7]_i_4_n_0 ),
        .I2(rx_66_enc_reg[9]),
        .I3(\mcp1_dec_c1[7]_i_5_n_0 ),
        .I4(rx_66_enc_reg[11]),
        .I5(rx_66_enc_reg[10]),
        .O(mcp1_dec_c1_1));
  LUT6 #(
    .INIT(64'hAAAABAAAAAAAAAAA)) 
    \mcp1_dec_c1[7]_i_2 
       (.I0(\mcp1_dec_c1[7]_i_6_n_0 ),
        .I1(\mcp1_dec_c1[7]_i_7_n_0 ),
        .I2(rx_66_enc_reg[13]),
        .I3(\mcp1_dec_c1[7]_i_8_n_0 ),
        .I4(rx_66_enc_reg[10]),
        .I5(rx_66_enc_reg[11]),
        .O(DecodeWord0[7]));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c1[7]_i_3 
       (.I0(rx_66_enc_reg[12]),
        .I1(rx_66_enc_reg[13]),
        .O(\mcp1_dec_c1[7]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c1[7]_i_4 
       (.I0(rx_66_enc_reg[15]),
        .I1(rx_66_enc_reg[14]),
        .O(\mcp1_dec_c1[7]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c1[7]_i_5 
       (.I0(rx_66_enc_reg[12]),
        .I1(rx_66_enc_reg[14]),
        .O(\mcp1_dec_c1[7]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT5 #(
    .INIT(32'h00006008)) 
    \mcp1_dec_c1[7]_i_6 
       (.I0(rx_66_enc_reg[12]),
        .I1(rx_66_enc_reg[14]),
        .I2(rx_66_enc_reg[11]),
        .I3(rx_66_enc_reg[10]),
        .I4(\mcp1_dec_c1[4]_i_3_n_0 ),
        .O(\mcp1_dec_c1[7]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_dec_c1[7]_i_7 
       (.I0(rx_66_enc_reg[9]),
        .I1(rx_66_enc_reg[15]),
        .O(\mcp1_dec_c1[7]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \mcp1_dec_c1[7]_i_8 
       (.I0(rx_66_enc_reg[12]),
        .I1(rx_66_enc_reg[14]),
        .O(\mcp1_dec_c1[7]_i_8_n_0 ));
  FDRE \mcp1_dec_c1_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord0[0]),
        .Q(mcp1_dec_c1[0]),
        .R(mcp1_dec_c1_1));
  FDSE \mcp1_dec_c1_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord0[1]),
        .Q(mcp1_dec_c1[1]),
        .S(mcp1_dec_c1_1));
  FDSE \mcp1_dec_c1_reg[3] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord0[3]),
        .Q(mcp1_dec_c1[3]),
        .S(mcp1_dec_c1_1));
  FDSE \mcp1_dec_c1_reg[4] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord0[4]),
        .Q(mcp1_dec_c1[4]),
        .S(mcp1_dec_c1_1));
  FDSE \mcp1_dec_c1_reg[5] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord0[5]),
        .Q(mcp1_dec_c1[5]),
        .S(mcp1_dec_c1_1));
  FDSE \mcp1_dec_c1_reg[6] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord0[6]),
        .Q(mcp1_dec_c1[6]),
        .S(mcp1_dec_c1_1));
  FDSE \mcp1_dec_c1_reg[7] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord0[7]),
        .Q(mcp1_dec_c1[7]),
        .S(mcp1_dec_c1_1));
  LUT6 #(
    .INIT(64'h0000000000004001)) 
    \mcp1_dec_c2[0]_i_1 
       (.I0(\mcp1_dec_c2[1]_i_2_n_0 ),
        .I1(rx_66_enc_reg[20]),
        .I2(rx_66_enc_reg[21]),
        .I3(rx_66_enc_reg[19]),
        .I4(rx_66_enc_reg[17]),
        .I5(rx_66_enc_reg[18]),
        .O(\mcp1_dec_c2[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000018000001)) 
    \mcp1_dec_c2[1]_i_1 
       (.I0(rx_66_enc_reg[18]),
        .I1(rx_66_enc_reg[17]),
        .I2(rx_66_enc_reg[21]),
        .I3(rx_66_enc_reg[19]),
        .I4(rx_66_enc_reg[20]),
        .I5(\mcp1_dec_c2[1]_i_2_n_0 ),
        .O(DecodeWord1[1]));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT3 #(
    .INIT(8'hBE)) 
    \mcp1_dec_c2[1]_i_2 
       (.I0(rx_66_enc_reg[16]),
        .I1(rx_66_enc_reg[21]),
        .I2(rx_66_enc_reg[22]),
        .O(\mcp1_dec_c2[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hABAAAAAAAAAAEAAA)) 
    \mcp1_dec_c2[3]_i_1 
       (.I0(\mcp1_dec_c2[4]_i_2_n_0 ),
        .I1(rx_66_enc_reg[21]),
        .I2(rx_66_enc_reg[22]),
        .I3(\mcp1_dec_c2[3]_i_2_n_0 ),
        .I4(rx_66_enc_reg[19]),
        .I5(rx_66_enc_reg[20]),
        .O(DecodeWord1[3]));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \mcp1_dec_c2[3]_i_2 
       (.I0(rx_66_enc_reg[18]),
        .I1(rx_66_enc_reg[17]),
        .I2(rx_66_enc_reg[16]),
        .O(\mcp1_dec_c2[3]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_dec_c2[4]_i_1 
       (.I0(\mcp1_dec_c2[4]_i_2_n_0 ),
        .I1(\mcp1_dec_c2[7]_i_6_n_0 ),
        .O(DecodeWord1[4]));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT5 #(
    .INIT(32'h00004224)) 
    \mcp1_dec_c2[4]_i_2 
       (.I0(rx_66_enc_reg[17]),
        .I1(rx_66_enc_reg[18]),
        .I2(rx_66_enc_reg[19]),
        .I3(rx_66_enc_reg[21]),
        .I4(\mcp1_dec_c2[5]_i_2_n_0 ),
        .O(\mcp1_dec_c2[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000610)) 
    \mcp1_dec_c2[5]_i_1 
       (.I0(rx_66_enc_reg[21]),
        .I1(rx_66_enc_reg[19]),
        .I2(rx_66_enc_reg[18]),
        .I3(rx_66_enc_reg[17]),
        .I4(\mcp1_dec_c2[5]_i_2_n_0 ),
        .I5(\mcp1_dec_c2[5]_i_3_n_0 ),
        .O(DecodeWord1[5]));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT5 #(
    .INIT(32'hFF9F9FFF)) 
    \mcp1_dec_c2[5]_i_2 
       (.I0(rx_66_enc_reg[19]),
        .I1(rx_66_enc_reg[20]),
        .I2(rx_66_enc_reg[16]),
        .I3(rx_66_enc_reg[21]),
        .I4(rx_66_enc_reg[22]),
        .O(\mcp1_dec_c2[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000201000000)) 
    \mcp1_dec_c2[5]_i_3 
       (.I0(rx_66_enc_reg[22]),
        .I1(rx_66_enc_reg[16]),
        .I2(\mcp1_dec_c2[5]_i_4_n_0 ),
        .I3(rx_66_enc_reg[17]),
        .I4(rx_66_enc_reg[18]),
        .I5(rx_66_enc_reg[21]),
        .O(\mcp1_dec_c2[5]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_dec_c2[5]_i_4 
       (.I0(rx_66_enc_reg[19]),
        .I1(rx_66_enc_reg[20]),
        .O(\mcp1_dec_c2[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAEAAAAAAA)) 
    \mcp1_dec_c2[6]_i_1 
       (.I0(\mcp1_dec_c2[7]_i_6_n_0 ),
        .I1(rx_66_enc_reg[22]),
        .I2(rx_66_enc_reg[16]),
        .I3(\mcp1_dec_c2[6]_i_2_n_0 ),
        .I4(\mcp1_dec_c2[6]_i_3_n_0 ),
        .I5(rx_66_enc_reg[20]),
        .O(DecodeWord1[6]));
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_dec_c2[6]_i_2 
       (.I0(rx_66_enc_reg[19]),
        .I1(rx_66_enc_reg[21]),
        .O(\mcp1_dec_c2[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_dec_c2[6]_i_3 
       (.I0(rx_66_enc_reg[17]),
        .I1(rx_66_enc_reg[18]),
        .O(\mcp1_dec_c2[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFEFFFF7F7FFFFFFE)) 
    \mcp1_dec_c2[7]_i_1 
       (.I0(\mcp1_dec_c2[7]_i_3_n_0 ),
        .I1(\mcp1_dec_c2[7]_i_4_n_0 ),
        .I2(rx_66_enc_reg[16]),
        .I3(\mcp1_dec_c2[7]_i_5_n_0 ),
        .I4(rx_66_enc_reg[17]),
        .I5(rx_66_enc_reg[18]),
        .O(mcp1_dec_c2_2));
  LUT5 #(
    .INIT(32'hEAAAAAAA)) 
    \mcp1_dec_c2[7]_i_2 
       (.I0(\mcp1_dec_c2[7]_i_6_n_0 ),
        .I1(rx_66_enc_reg[22]),
        .I2(rx_66_enc_reg[16]),
        .I3(rx_66_enc_reg[20]),
        .I4(\mcp1_dec_c2[7]_i_7_n_0 ),
        .O(DecodeWord1[7]));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c2[7]_i_3 
       (.I0(rx_66_enc_reg[19]),
        .I1(rx_66_enc_reg[20]),
        .O(\mcp1_dec_c2[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c2[7]_i_4 
       (.I0(rx_66_enc_reg[22]),
        .I1(rx_66_enc_reg[21]),
        .O(\mcp1_dec_c2[7]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c2[7]_i_5 
       (.I0(rx_66_enc_reg[21]),
        .I1(rx_66_enc_reg[19]),
        .O(\mcp1_dec_c2[7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h1000004004000000)) 
    \mcp1_dec_c2[7]_i_6 
       (.I0(\mcp1_dec_c2[1]_i_2_n_0 ),
        .I1(rx_66_enc_reg[21]),
        .I2(rx_66_enc_reg[19]),
        .I3(rx_66_enc_reg[17]),
        .I4(rx_66_enc_reg[18]),
        .I5(rx_66_enc_reg[20]),
        .O(\mcp1_dec_c2[7]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    \mcp1_dec_c2[7]_i_7 
       (.I0(rx_66_enc_reg[17]),
        .I1(rx_66_enc_reg[18]),
        .I2(rx_66_enc_reg[19]),
        .I3(rx_66_enc_reg[21]),
        .O(\mcp1_dec_c2[7]_i_7_n_0 ));
  FDRE \mcp1_dec_c2_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_dec_c2[0]_i_1_n_0 ),
        .Q(mcp1_dec_c2[0]),
        .R(mcp1_dec_c2_2));
  FDSE \mcp1_dec_c2_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord1[1]),
        .Q(mcp1_dec_c2[1]),
        .S(mcp1_dec_c2_2));
  FDSE \mcp1_dec_c2_reg[3] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord1[3]),
        .Q(mcp1_dec_c2[3]),
        .S(mcp1_dec_c2_2));
  FDSE \mcp1_dec_c2_reg[4] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord1[4]),
        .Q(mcp1_dec_c2[4]),
        .S(mcp1_dec_c2_2));
  FDSE \mcp1_dec_c2_reg[5] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord1[5]),
        .Q(mcp1_dec_c2[5]),
        .S(mcp1_dec_c2_2));
  FDSE \mcp1_dec_c2_reg[6] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord1[6]),
        .Q(mcp1_dec_c2[6]),
        .S(mcp1_dec_c2_2));
  FDSE \mcp1_dec_c2_reg[7] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord1[7]),
        .Q(mcp1_dec_c2[7]),
        .S(mcp1_dec_c2_2));
  LUT6 #(
    .INIT(64'h0100000000000001)) 
    \mcp1_dec_c3[0]_i_1 
       (.I0(\mcp1_dec_c3[5]_i_3_n_0 ),
        .I1(rx_66_enc_reg[25]),
        .I2(rx_66_enc_reg[24]),
        .I3(rx_66_enc_reg[28]),
        .I4(rx_66_enc_reg[27]),
        .I5(rx_66_enc_reg[26]),
        .O(DecodeWord2[0]));
  LUT6 #(
    .INIT(64'h0000000008000081)) 
    \mcp1_dec_c3[1]_i_1 
       (.I0(rx_66_enc_reg[27]),
        .I1(rx_66_enc_reg[26]),
        .I2(rx_66_enc_reg[28]),
        .I3(rx_66_enc_reg[25]),
        .I4(rx_66_enc_reg[24]),
        .I5(\mcp1_dec_c3[5]_i_3_n_0 ),
        .O(DecodeWord2[1]));
  LUT6 #(
    .INIT(64'hABAAAAAAAAAAEAAA)) 
    \mcp1_dec_c3[3]_i_1 
       (.I0(\mcp1_dec_c3[4]_i_2_n_0 ),
        .I1(rx_66_enc_reg[29]),
        .I2(rx_66_enc_reg[28]),
        .I3(\mcp1_dec_c3[3]_i_2_n_0 ),
        .I4(rx_66_enc_reg[26]),
        .I5(rx_66_enc_reg[27]),
        .O(DecodeWord2[3]));
  LUT3 #(
    .INIT(8'h40)) 
    \mcp1_dec_c3[3]_i_2 
       (.I0(rx_66_enc_reg[23]),
        .I1(rx_66_enc_reg[24]),
        .I2(rx_66_enc_reg[25]),
        .O(\mcp1_dec_c3[3]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_dec_c3[4]_i_1 
       (.I0(\mcp1_dec_c3[4]_i_2_n_0 ),
        .I1(\mcp1_dec_c3[7]_i_6_n_0 ),
        .O(DecodeWord2[4]));
  LUT6 #(
    .INIT(64'h0002020020000020)) 
    \mcp1_dec_c3[4]_i_2 
       (.I0(rx_66_enc_reg[23]),
        .I1(\mcp1_dec_c3[5]_i_5_n_0 ),
        .I2(rx_66_enc_reg[25]),
        .I3(rx_66_enc_reg[28]),
        .I4(rx_66_enc_reg[26]),
        .I5(rx_66_enc_reg[24]),
        .O(\mcp1_dec_c3[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAABABAAAAAA)) 
    \mcp1_dec_c3[5]_i_1 
       (.I0(\mcp1_dec_c3[5]_i_2_n_0 ),
        .I1(\mcp1_dec_c3[5]_i_3_n_0 ),
        .I2(\mcp1_dec_c3[5]_i_4_n_0 ),
        .I3(rx_66_enc_reg[24]),
        .I4(rx_66_enc_reg[25]),
        .I5(rx_66_enc_reg[28]),
        .O(DecodeWord2[5]));
  LUT6 #(
    .INIT(64'h0000000004420000)) 
    \mcp1_dec_c3[5]_i_2 
       (.I0(rx_66_enc_reg[25]),
        .I1(rx_66_enc_reg[24]),
        .I2(rx_66_enc_reg[28]),
        .I3(rx_66_enc_reg[26]),
        .I4(rx_66_enc_reg[23]),
        .I5(\mcp1_dec_c3[5]_i_5_n_0 ),
        .O(\mcp1_dec_c3[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT3 #(
    .INIT(8'hBE)) 
    \mcp1_dec_c3[5]_i_3 
       (.I0(rx_66_enc_reg[23]),
        .I1(rx_66_enc_reg[29]),
        .I2(rx_66_enc_reg[28]),
        .O(\mcp1_dec_c3[5]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_dec_c3[5]_i_4 
       (.I0(rx_66_enc_reg[26]),
        .I1(rx_66_enc_reg[27]),
        .O(\mcp1_dec_c3[5]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT4 #(
    .INIT(16'hF99F)) 
    \mcp1_dec_c3[5]_i_5 
       (.I0(rx_66_enc_reg[29]),
        .I1(rx_66_enc_reg[28]),
        .I2(rx_66_enc_reg[27]),
        .I3(rx_66_enc_reg[26]),
        .O(\mcp1_dec_c3[5]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hABAAAAAA)) 
    \mcp1_dec_c3[6]_i_1 
       (.I0(\mcp1_dec_c3[7]_i_6_n_0 ),
        .I1(\mcp1_dec_c3[6]_i_2_n_0 ),
        .I2(rx_66_enc_reg[27]),
        .I3(rx_66_enc_reg[29]),
        .I4(rx_66_enc_reg[23]),
        .O(DecodeWord2[6]));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT4 #(
    .INIT(16'hFBFF)) 
    \mcp1_dec_c3[6]_i_2 
       (.I0(rx_66_enc_reg[28]),
        .I1(rx_66_enc_reg[26]),
        .I2(rx_66_enc_reg[25]),
        .I3(rx_66_enc_reg[24]),
        .O(\mcp1_dec_c3[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEFF7FFFFF7FFFFE)) 
    \mcp1_dec_c3[7]_i_1 
       (.I0(\mcp1_dec_c3[7]_i_3_n_0 ),
        .I1(\mcp1_dec_c3[7]_i_4_n_0 ),
        .I2(rx_66_enc_reg[23]),
        .I3(rx_66_enc_reg[24]),
        .I4(rx_66_enc_reg[25]),
        .I5(\mcp1_dec_c3[7]_i_5_n_0 ),
        .O(mcp1_dec_c3_3));
  LUT5 #(
    .INIT(32'hEAAAAAAA)) 
    \mcp1_dec_c3[7]_i_2 
       (.I0(\mcp1_dec_c3[7]_i_6_n_0 ),
        .I1(rx_66_enc_reg[29]),
        .I2(rx_66_enc_reg[23]),
        .I3(rx_66_enc_reg[27]),
        .I4(\mcp1_dec_c3[7]_i_7_n_0 ),
        .O(DecodeWord2[7]));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c3[7]_i_3 
       (.I0(rx_66_enc_reg[26]),
        .I1(rx_66_enc_reg[27]),
        .O(\mcp1_dec_c3[7]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c3[7]_i_4 
       (.I0(rx_66_enc_reg[28]),
        .I1(rx_66_enc_reg[29]),
        .O(\mcp1_dec_c3[7]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c3[7]_i_5 
       (.I0(rx_66_enc_reg[26]),
        .I1(rx_66_enc_reg[28]),
        .O(\mcp1_dec_c3[7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000018000080)) 
    \mcp1_dec_c3[7]_i_6 
       (.I0(rx_66_enc_reg[27]),
        .I1(rx_66_enc_reg[26]),
        .I2(rx_66_enc_reg[28]),
        .I3(rx_66_enc_reg[25]),
        .I4(rx_66_enc_reg[24]),
        .I5(\mcp1_dec_c3[5]_i_3_n_0 ),
        .O(\mcp1_dec_c3[7]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT4 #(
    .INIT(16'h0100)) 
    \mcp1_dec_c3[7]_i_7 
       (.I0(rx_66_enc_reg[28]),
        .I1(rx_66_enc_reg[26]),
        .I2(rx_66_enc_reg[24]),
        .I3(rx_66_enc_reg[25]),
        .O(\mcp1_dec_c3[7]_i_7_n_0 ));
  FDRE \mcp1_dec_c3_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord2[0]),
        .Q(mcp1_dec_c3[0]),
        .R(mcp1_dec_c3_3));
  FDSE \mcp1_dec_c3_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord2[1]),
        .Q(mcp1_dec_c3[1]),
        .S(mcp1_dec_c3_3));
  FDSE \mcp1_dec_c3_reg[3] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord2[3]),
        .Q(mcp1_dec_c3[3]),
        .S(mcp1_dec_c3_3));
  FDSE \mcp1_dec_c3_reg[4] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord2[4]),
        .Q(mcp1_dec_c3[4]),
        .S(mcp1_dec_c3_3));
  FDSE \mcp1_dec_c3_reg[5] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord2[5]),
        .Q(mcp1_dec_c3[5]),
        .S(mcp1_dec_c3_3));
  FDSE \mcp1_dec_c3_reg[6] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord2[6]),
        .Q(mcp1_dec_c3[6]),
        .S(mcp1_dec_c3_3));
  FDSE \mcp1_dec_c3_reg[7] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord2[7]),
        .Q(mcp1_dec_c3[7]),
        .S(mcp1_dec_c3_3));
  LUT6 #(
    .INIT(64'h0080000000000010)) 
    \mcp1_dec_c4[0]_i_1 
       (.I0(rx_66_enc_reg[33]),
        .I1(rx_66_enc_reg[34]),
        .I2(\mcp1_dec_c4[0]_i_2_n_0 ),
        .I3(rx_66_enc_reg[30]),
        .I4(rx_66_enc_reg[36]),
        .I5(rx_66_enc_reg[35]),
        .O(DecodeWord3[0]));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \mcp1_dec_c4[0]_i_2 
       (.I0(rx_66_enc_reg[32]),
        .I1(rx_66_enc_reg[31]),
        .O(\mcp1_dec_c4[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000010008001)) 
    \mcp1_dec_c4[1]_i_1 
       (.I0(rx_66_enc_reg[31]),
        .I1(rx_66_enc_reg[32]),
        .I2(rx_66_enc_reg[34]),
        .I3(rx_66_enc_reg[33]),
        .I4(rx_66_enc_reg[35]),
        .I5(\mcp1_dec_c4[5]_i_2_n_0 ),
        .O(DecodeWord3[1]));
  LUT6 #(
    .INIT(64'hABAAAAAAAAAAEAAA)) 
    \mcp1_dec_c4[3]_i_1 
       (.I0(\mcp1_dec_c4[4]_i_2_n_0 ),
        .I1(rx_66_enc_reg[35]),
        .I2(rx_66_enc_reg[36]),
        .I3(\mcp1_dec_c4[3]_i_2_n_0 ),
        .I4(rx_66_enc_reg[34]),
        .I5(rx_66_enc_reg[33]),
        .O(DecodeWord3[3]));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \mcp1_dec_c4[3]_i_2 
       (.I0(rx_66_enc_reg[30]),
        .I1(rx_66_enc_reg[31]),
        .I2(rx_66_enc_reg[32]),
        .O(\mcp1_dec_c4[3]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_dec_c4[4]_i_1 
       (.I0(\mcp1_dec_c4[4]_i_2_n_0 ),
        .I1(\mcp1_dec_c4[7]_i_6_n_0 ),
        .O(DecodeWord3[4]));
  LUT6 #(
    .INIT(64'h0200000200202000)) 
    \mcp1_dec_c4[4]_i_2 
       (.I0(rx_66_enc_reg[30]),
        .I1(\mcp1_dec_c4[5]_i_5_n_0 ),
        .I2(rx_66_enc_reg[31]),
        .I3(rx_66_enc_reg[35]),
        .I4(rx_66_enc_reg[33]),
        .I5(rx_66_enc_reg[32]),
        .O(\mcp1_dec_c4[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00011000)) 
    \mcp1_dec_c4[5]_i_1 
       (.I0(\mcp1_dec_c4[5]_i_2_n_0 ),
        .I1(\mcp1_dec_c4[5]_i_3_n_0 ),
        .I2(rx_66_enc_reg[31]),
        .I3(rx_66_enc_reg[32]),
        .I4(rx_66_enc_reg[35]),
        .I5(\mcp1_dec_c4[5]_i_4_n_0 ),
        .O(DecodeWord3[5]));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT3 #(
    .INIT(8'hBE)) 
    \mcp1_dec_c4[5]_i_2 
       (.I0(rx_66_enc_reg[30]),
        .I1(rx_66_enc_reg[35]),
        .I2(rx_66_enc_reg[36]),
        .O(\mcp1_dec_c4[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_dec_c4[5]_i_3 
       (.I0(rx_66_enc_reg[33]),
        .I1(rx_66_enc_reg[34]),
        .O(\mcp1_dec_c4[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000004420000)) 
    \mcp1_dec_c4[5]_i_4 
       (.I0(rx_66_enc_reg[32]),
        .I1(rx_66_enc_reg[31]),
        .I2(rx_66_enc_reg[35]),
        .I3(rx_66_enc_reg[33]),
        .I4(rx_66_enc_reg[30]),
        .I5(\mcp1_dec_c4[5]_i_5_n_0 ),
        .O(\mcp1_dec_c4[5]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT4 #(
    .INIT(16'hF99F)) 
    \mcp1_dec_c4[5]_i_5 
       (.I0(rx_66_enc_reg[34]),
        .I1(rx_66_enc_reg[33]),
        .I2(rx_66_enc_reg[35]),
        .I3(rx_66_enc_reg[36]),
        .O(\mcp1_dec_c4[5]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAAEAAAAAAAAAAAAA)) 
    \mcp1_dec_c4[6]_i_1 
       (.I0(\mcp1_dec_c4[7]_i_6_n_0 ),
        .I1(\mcp1_dec_c4[6]_i_2_n_0 ),
        .I2(\mcp1_dec_c4[6]_i_3_n_0 ),
        .I3(rx_66_enc_reg[34]),
        .I4(rx_66_enc_reg[36]),
        .I5(rx_66_enc_reg[30]),
        .O(DecodeWord3[6]));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_dec_c4[6]_i_2 
       (.I0(rx_66_enc_reg[33]),
        .I1(rx_66_enc_reg[35]),
        .O(\mcp1_dec_c4[6]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_dec_c4[6]_i_3 
       (.I0(rx_66_enc_reg[31]),
        .I1(rx_66_enc_reg[32]),
        .O(\mcp1_dec_c4[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFEFF7FFFFF7FFFFE)) 
    \mcp1_dec_c4[7]_i_1 
       (.I0(\mcp1_dec_c4[7]_i_3_n_0 ),
        .I1(\mcp1_dec_c4[7]_i_4_n_0 ),
        .I2(rx_66_enc_reg[30]),
        .I3(rx_66_enc_reg[31]),
        .I4(rx_66_enc_reg[32]),
        .I5(\mcp1_dec_c4[7]_i_5_n_0 ),
        .O(mcp1_dec_c4_4));
  LUT6 #(
    .INIT(64'hAAAABAAAAAAAAAAA)) 
    \mcp1_dec_c4[7]_i_2 
       (.I0(\mcp1_dec_c4[7]_i_6_n_0 ),
        .I1(\mcp1_dec_c4[7]_i_7_n_0 ),
        .I2(rx_66_enc_reg[34]),
        .I3(\mcp1_dec_c4[7]_i_8_n_0 ),
        .I4(rx_66_enc_reg[31]),
        .I5(rx_66_enc_reg[32]),
        .O(DecodeWord3[7]));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c4[7]_i_3 
       (.I0(rx_66_enc_reg[33]),
        .I1(rx_66_enc_reg[34]),
        .O(\mcp1_dec_c4[7]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c4[7]_i_4 
       (.I0(rx_66_enc_reg[36]),
        .I1(rx_66_enc_reg[35]),
        .O(\mcp1_dec_c4[7]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c4[7]_i_5 
       (.I0(rx_66_enc_reg[33]),
        .I1(rx_66_enc_reg[35]),
        .O(\mcp1_dec_c4[7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0042000000000080)) 
    \mcp1_dec_c4[7]_i_6 
       (.I0(rx_66_enc_reg[35]),
        .I1(rx_66_enc_reg[32]),
        .I2(rx_66_enc_reg[31]),
        .I3(\mcp1_dec_c4[5]_i_2_n_0 ),
        .I4(rx_66_enc_reg[33]),
        .I5(rx_66_enc_reg[34]),
        .O(\mcp1_dec_c4[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_dec_c4[7]_i_7 
       (.I0(rx_66_enc_reg[30]),
        .I1(rx_66_enc_reg[36]),
        .O(\mcp1_dec_c4[7]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \mcp1_dec_c4[7]_i_8 
       (.I0(rx_66_enc_reg[33]),
        .I1(rx_66_enc_reg[35]),
        .O(\mcp1_dec_c4[7]_i_8_n_0 ));
  FDRE \mcp1_dec_c4_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord3[0]),
        .Q(mcp1_dec_c4[0]),
        .R(mcp1_dec_c4_4));
  FDSE \mcp1_dec_c4_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord3[1]),
        .Q(mcp1_dec_c4[1]),
        .S(mcp1_dec_c4_4));
  FDSE \mcp1_dec_c4_reg[3] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord3[3]),
        .Q(mcp1_dec_c4[3]),
        .S(mcp1_dec_c4_4));
  FDSE \mcp1_dec_c4_reg[4] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord3[4]),
        .Q(mcp1_dec_c4[4]),
        .S(mcp1_dec_c4_4));
  FDSE \mcp1_dec_c4_reg[5] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord3[5]),
        .Q(mcp1_dec_c4[5]),
        .S(mcp1_dec_c4_4));
  FDSE \mcp1_dec_c4_reg[6] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord3[6]),
        .Q(mcp1_dec_c4[6]),
        .S(mcp1_dec_c4_4));
  FDSE \mcp1_dec_c4_reg[7] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord3[7]),
        .Q(mcp1_dec_c4[7]),
        .S(mcp1_dec_c4_4));
  LUT6 #(
    .INIT(64'h0000000000004001)) 
    \mcp1_dec_c5[0]_i_1 
       (.I0(\mcp1_dec_c5[1]_i_2_n_0 ),
        .I1(rx_66_enc_reg[41]),
        .I2(rx_66_enc_reg[42]),
        .I3(rx_66_enc_reg[40]),
        .I4(rx_66_enc_reg[38]),
        .I5(rx_66_enc_reg[39]),
        .O(\mcp1_dec_c5[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000002800001)) 
    \mcp1_dec_c5[1]_i_1 
       (.I0(rx_66_enc_reg[41]),
        .I1(rx_66_enc_reg[38]),
        .I2(rx_66_enc_reg[39]),
        .I3(rx_66_enc_reg[42]),
        .I4(rx_66_enc_reg[40]),
        .I5(\mcp1_dec_c5[1]_i_2_n_0 ),
        .O(DecodeWord4[1]));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT3 #(
    .INIT(8'hBE)) 
    \mcp1_dec_c5[1]_i_2 
       (.I0(rx_66_enc_reg[37]),
        .I1(rx_66_enc_reg[42]),
        .I2(rx_66_enc_reg[43]),
        .O(\mcp1_dec_c5[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h555D755555555555)) 
    \mcp1_dec_c5[3]_i_1 
       (.I0(\mcp1_dec_c5[4]_i_2_n_0 ),
        .I1(rx_66_enc_reg[42]),
        .I2(rx_66_enc_reg[40]),
        .I3(rx_66_enc_reg[41]),
        .I4(rx_66_enc_reg[43]),
        .I5(\mcp1_dec_c5[3]_i_2_n_0 ),
        .O(DecodeWord4[3]));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \mcp1_dec_c5[3]_i_2 
       (.I0(rx_66_enc_reg[37]),
        .I1(rx_66_enc_reg[39]),
        .I2(rx_66_enc_reg[38]),
        .O(\mcp1_dec_c5[3]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \mcp1_dec_c5[4]_i_1 
       (.I0(\mcp1_dec_c5[7]_i_6_n_0 ),
        .I1(\mcp1_dec_c5[4]_i_2_n_0 ),
        .O(DecodeWord4[4]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT5 #(
    .INIT(32'hFFFFDBBD)) 
    \mcp1_dec_c5[4]_i_2 
       (.I0(rx_66_enc_reg[39]),
        .I1(rx_66_enc_reg[38]),
        .I2(rx_66_enc_reg[40]),
        .I3(rx_66_enc_reg[42]),
        .I4(\mcp1_dec_c5[5]_i_2_n_0 ),
        .O(\mcp1_dec_c5[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000224)) 
    \mcp1_dec_c5[5]_i_1 
       (.I0(rx_66_enc_reg[38]),
        .I1(rx_66_enc_reg[39]),
        .I2(rx_66_enc_reg[42]),
        .I3(rx_66_enc_reg[40]),
        .I4(\mcp1_dec_c5[5]_i_2_n_0 ),
        .I5(\mcp1_dec_c5[5]_i_3_n_0 ),
        .O(DecodeWord4[5]));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT5 #(
    .INIT(32'hFF9F9FFF)) 
    \mcp1_dec_c5[5]_i_2 
       (.I0(rx_66_enc_reg[43]),
        .I1(rx_66_enc_reg[42]),
        .I2(rx_66_enc_reg[37]),
        .I3(rx_66_enc_reg[41]),
        .I4(rx_66_enc_reg[40]),
        .O(\mcp1_dec_c5[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000021000)) 
    \mcp1_dec_c5[5]_i_3 
       (.I0(rx_66_enc_reg[43]),
        .I1(rx_66_enc_reg[37]),
        .I2(rx_66_enc_reg[38]),
        .I3(rx_66_enc_reg[39]),
        .I4(rx_66_enc_reg[42]),
        .I5(\mcp1_dec_c5[5]_i_4_n_0 ),
        .O(\mcp1_dec_c5[5]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_dec_c5[5]_i_4 
       (.I0(rx_66_enc_reg[40]),
        .I1(rx_66_enc_reg[41]),
        .O(\mcp1_dec_c5[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hBAAAAAAAAAAAAAAA)) 
    \mcp1_dec_c5[6]_i_1 
       (.I0(\mcp1_dec_c5[7]_i_6_n_0 ),
        .I1(\mcp1_dec_c5[6]_i_2_n_0 ),
        .I2(\mcp1_dec_c5[6]_i_3_n_0 ),
        .I3(rx_66_enc_reg[43]),
        .I4(rx_66_enc_reg[37]),
        .I5(rx_66_enc_reg[38]),
        .O(DecodeWord4[6]));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_dec_c5[6]_i_2 
       (.I0(rx_66_enc_reg[39]),
        .I1(rx_66_enc_reg[41]),
        .O(\mcp1_dec_c5[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_dec_c5[6]_i_3 
       (.I0(rx_66_enc_reg[40]),
        .I1(rx_66_enc_reg[42]),
        .O(\mcp1_dec_c5[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hDBFFFFFFFFFFFF7E)) 
    \mcp1_dec_c5[7]_i_1 
       (.I0(\mcp1_dec_c5[7]_i_3_n_0 ),
        .I1(rx_66_enc_reg[39]),
        .I2(rx_66_enc_reg[38]),
        .I3(\mcp1_dec_c5[7]_i_4_n_0 ),
        .I4(\mcp1_dec_c5[7]_i_5_n_0 ),
        .I5(rx_66_enc_reg[37]),
        .O(mcp1_dec_c5_5));
  LUT5 #(
    .INIT(32'hEAAAAAAA)) 
    \mcp1_dec_c5[7]_i_2 
       (.I0(\mcp1_dec_c5[7]_i_6_n_0 ),
        .I1(rx_66_enc_reg[43]),
        .I2(rx_66_enc_reg[41]),
        .I3(rx_66_enc_reg[37]),
        .I4(\mcp1_dec_c5[7]_i_7_n_0 ),
        .O(DecodeWord4[7]));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c5[7]_i_3 
       (.I0(rx_66_enc_reg[42]),
        .I1(rx_66_enc_reg[40]),
        .O(\mcp1_dec_c5[7]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c5[7]_i_4 
       (.I0(rx_66_enc_reg[40]),
        .I1(rx_66_enc_reg[41]),
        .O(\mcp1_dec_c5[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c5[7]_i_5 
       (.I0(rx_66_enc_reg[43]),
        .I1(rx_66_enc_reg[42]),
        .O(\mcp1_dec_c5[7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000024000080)) 
    \mcp1_dec_c5[7]_i_6 
       (.I0(rx_66_enc_reg[41]),
        .I1(rx_66_enc_reg[42]),
        .I2(rx_66_enc_reg[40]),
        .I3(rx_66_enc_reg[38]),
        .I4(rx_66_enc_reg[39]),
        .I5(\mcp1_dec_c5[1]_i_2_n_0 ),
        .O(\mcp1_dec_c5[7]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT4 #(
    .INIT(16'h0010)) 
    \mcp1_dec_c5[7]_i_7 
       (.I0(rx_66_enc_reg[40]),
        .I1(rx_66_enc_reg[42]),
        .I2(rx_66_enc_reg[39]),
        .I3(rx_66_enc_reg[38]),
        .O(\mcp1_dec_c5[7]_i_7_n_0 ));
  FDRE \mcp1_dec_c5_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_dec_c5[0]_i_1_n_0 ),
        .Q(mcp1_dec_c5[0]),
        .R(mcp1_dec_c5_5));
  FDSE \mcp1_dec_c5_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord4[1]),
        .Q(mcp1_dec_c5[1]),
        .S(mcp1_dec_c5_5));
  FDSE \mcp1_dec_c5_reg[3] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord4[3]),
        .Q(mcp1_dec_c5[3]),
        .S(mcp1_dec_c5_5));
  FDSE \mcp1_dec_c5_reg[4] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord4[4]),
        .Q(mcp1_dec_c5[4]),
        .S(mcp1_dec_c5_5));
  FDSE \mcp1_dec_c5_reg[5] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord4[5]),
        .Q(mcp1_dec_c5[5]),
        .S(mcp1_dec_c5_5));
  FDSE \mcp1_dec_c5_reg[6] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord4[6]),
        .Q(mcp1_dec_c5[6]),
        .S(mcp1_dec_c5_5));
  FDSE \mcp1_dec_c5_reg[7] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord4[7]),
        .Q(mcp1_dec_c5[7]),
        .S(mcp1_dec_c5_5));
  LUT6 #(
    .INIT(64'h0000000020000001)) 
    \mcp1_dec_c6[0]_i_1 
       (.I0(rx_66_enc_reg[50]),
        .I1(rx_66_enc_reg[44]),
        .I2(rx_66_enc_reg[47]),
        .I3(rx_66_enc_reg[49]),
        .I4(rx_66_enc_reg[48]),
        .I5(\mcp1_dec_c6[0]_i_2_n_0 ),
        .O(\mcp1_dec_c6[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_dec_c6[0]_i_2 
       (.I0(rx_66_enc_reg[46]),
        .I1(rx_66_enc_reg[45]),
        .O(\mcp1_dec_c6[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000008000081)) 
    \mcp1_dec_c6[1]_i_1 
       (.I0(rx_66_enc_reg[48]),
        .I1(rx_66_enc_reg[47]),
        .I2(rx_66_enc_reg[49]),
        .I3(rx_66_enc_reg[46]),
        .I4(rx_66_enc_reg[45]),
        .I5(\mcp1_dec_c6[1]_i_2_n_0 ),
        .O(DecodeWord5[1]));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT3 #(
    .INIT(8'hBE)) 
    \mcp1_dec_c6[1]_i_2 
       (.I0(rx_66_enc_reg[44]),
        .I1(rx_66_enc_reg[49]),
        .I2(rx_66_enc_reg[50]),
        .O(\mcp1_dec_c6[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hABAAAAEAAAAAAAAA)) 
    \mcp1_dec_c6[3]_i_1 
       (.I0(\mcp1_dec_c6[4]_i_2_n_0 ),
        .I1(rx_66_enc_reg[50]),
        .I2(rx_66_enc_reg[49]),
        .I3(rx_66_enc_reg[47]),
        .I4(rx_66_enc_reg[48]),
        .I5(\mcp1_dec_c6[3]_i_2_n_0 ),
        .O(DecodeWord5[3]));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \mcp1_dec_c6[3]_i_2 
       (.I0(rx_66_enc_reg[44]),
        .I1(rx_66_enc_reg[45]),
        .I2(rx_66_enc_reg[46]),
        .O(\mcp1_dec_c6[3]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_dec_c6[4]_i_1 
       (.I0(\mcp1_dec_c6[4]_i_2_n_0 ),
        .I1(\mcp1_dec_c6[7]_i_6_n_0 ),
        .O(DecodeWord5[4]));
  LUT6 #(
    .INIT(64'h0008080080000080)) 
    \mcp1_dec_c6[4]_i_2 
       (.I0(rx_66_enc_reg[44]),
        .I1(\mcp1_dec_c6[4]_i_3_n_0 ),
        .I2(rx_66_enc_reg[46]),
        .I3(rx_66_enc_reg[49]),
        .I4(rx_66_enc_reg[47]),
        .I5(rx_66_enc_reg[45]),
        .O(\mcp1_dec_c6[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT4 #(
    .INIT(16'h0660)) 
    \mcp1_dec_c6[4]_i_3 
       (.I0(rx_66_enc_reg[48]),
        .I1(rx_66_enc_reg[47]),
        .I2(rx_66_enc_reg[49]),
        .I3(rx_66_enc_reg[50]),
        .O(\mcp1_dec_c6[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00141400)) 
    \mcp1_dec_c6[5]_i_1 
       (.I0(\mcp1_dec_c6[5]_i_2_n_0 ),
        .I1(rx_66_enc_reg[48]),
        .I2(rx_66_enc_reg[47]),
        .I3(rx_66_enc_reg[49]),
        .I4(rx_66_enc_reg[50]),
        .I5(\mcp1_dec_c6[5]_i_3_n_0 ),
        .O(DecodeWord5[5]));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT5 #(
    .INIT(32'hFFDFDFBF)) 
    \mcp1_dec_c6[5]_i_2 
       (.I0(rx_66_enc_reg[45]),
        .I1(rx_66_enc_reg[46]),
        .I2(rx_66_enc_reg[44]),
        .I3(rx_66_enc_reg[47]),
        .I4(rx_66_enc_reg[49]),
        .O(\mcp1_dec_c6[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000004040000000)) 
    \mcp1_dec_c6[5]_i_3 
       (.I0(\mcp1_dec_c6[1]_i_2_n_0 ),
        .I1(rx_66_enc_reg[47]),
        .I2(rx_66_enc_reg[48]),
        .I3(rx_66_enc_reg[45]),
        .I4(rx_66_enc_reg[46]),
        .I5(rx_66_enc_reg[49]),
        .O(\mcp1_dec_c6[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAABAAAAAAAAAAAAA)) 
    \mcp1_dec_c6[6]_i_1 
       (.I0(\mcp1_dec_c6[7]_i_6_n_0 ),
        .I1(\mcp1_dec_c6[6]_i_2_n_0 ),
        .I2(\mcp1_dec_c6[6]_i_3_n_0 ),
        .I3(rx_66_enc_reg[48]),
        .I4(rx_66_enc_reg[50]),
        .I5(rx_66_enc_reg[44]),
        .O(DecodeWord5[6]));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \mcp1_dec_c6[6]_i_2 
       (.I0(rx_66_enc_reg[46]),
        .I1(rx_66_enc_reg[45]),
        .O(\mcp1_dec_c6[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_dec_c6[6]_i_3 
       (.I0(rx_66_enc_reg[47]),
        .I1(rx_66_enc_reg[49]),
        .O(\mcp1_dec_c6[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFEFF7FFFFF7FFFFE)) 
    \mcp1_dec_c6[7]_i_1 
       (.I0(\mcp1_dec_c6[7]_i_3_n_0 ),
        .I1(\mcp1_dec_c6[7]_i_4_n_0 ),
        .I2(rx_66_enc_reg[44]),
        .I3(rx_66_enc_reg[45]),
        .I4(rx_66_enc_reg[46]),
        .I5(\mcp1_dec_c6[7]_i_5_n_0 ),
        .O(mcp1_dec_c6_6));
  LUT5 #(
    .INIT(32'hEAAAAAAA)) 
    \mcp1_dec_c6[7]_i_2 
       (.I0(\mcp1_dec_c6[7]_i_6_n_0 ),
        .I1(rx_66_enc_reg[50]),
        .I2(rx_66_enc_reg[44]),
        .I3(rx_66_enc_reg[48]),
        .I4(\mcp1_dec_c6[7]_i_7_n_0 ),
        .O(DecodeWord5[7]));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c6[7]_i_3 
       (.I0(rx_66_enc_reg[47]),
        .I1(rx_66_enc_reg[48]),
        .O(\mcp1_dec_c6[7]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c6[7]_i_4 
       (.I0(rx_66_enc_reg[50]),
        .I1(rx_66_enc_reg[49]),
        .O(\mcp1_dec_c6[7]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c6[7]_i_5 
       (.I0(rx_66_enc_reg[47]),
        .I1(rx_66_enc_reg[49]),
        .O(\mcp1_dec_c6[7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0140000000004000)) 
    \mcp1_dec_c6[7]_i_6 
       (.I0(\mcp1_dec_c6[1]_i_2_n_0 ),
        .I1(rx_66_enc_reg[47]),
        .I2(rx_66_enc_reg[48]),
        .I3(rx_66_enc_reg[49]),
        .I4(rx_66_enc_reg[46]),
        .I5(rx_66_enc_reg[45]),
        .O(\mcp1_dec_c6[7]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT4 #(
    .INIT(16'h0010)) 
    \mcp1_dec_c6[7]_i_7 
       (.I0(rx_66_enc_reg[49]),
        .I1(rx_66_enc_reg[47]),
        .I2(rx_66_enc_reg[46]),
        .I3(rx_66_enc_reg[45]),
        .O(\mcp1_dec_c6[7]_i_7_n_0 ));
  FDRE \mcp1_dec_c6_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_dec_c6[0]_i_1_n_0 ),
        .Q(mcp1_dec_c6[0]),
        .R(mcp1_dec_c6_6));
  FDSE \mcp1_dec_c6_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord5[1]),
        .Q(mcp1_dec_c6[1]),
        .S(mcp1_dec_c6_6));
  FDSE \mcp1_dec_c6_reg[3] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord5[3]),
        .Q(mcp1_dec_c6[3]),
        .S(mcp1_dec_c6_6));
  FDSE \mcp1_dec_c6_reg[4] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord5[4]),
        .Q(mcp1_dec_c6[4]),
        .S(mcp1_dec_c6_6));
  FDSE \mcp1_dec_c6_reg[5] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord5[5]),
        .Q(mcp1_dec_c6[5]),
        .S(mcp1_dec_c6_6));
  FDSE \mcp1_dec_c6_reg[6] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord5[6]),
        .Q(mcp1_dec_c6[6]),
        .S(mcp1_dec_c6_6));
  FDSE \mcp1_dec_c6_reg[7] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord5[7]),
        .Q(mcp1_dec_c6[7]),
        .S(mcp1_dec_c6_6));
  LUT6 #(
    .INIT(64'h0080000000000010)) 
    \mcp1_dec_c7[0]_i_1 
       (.I0(rx_66_enc_reg[54]),
        .I1(rx_66_enc_reg[55]),
        .I2(\mcp1_dec_c7[0]_i_2_n_0 ),
        .I3(rx_66_enc_reg[51]),
        .I4(rx_66_enc_reg[56]),
        .I5(rx_66_enc_reg[57]),
        .O(DecodeWord6[0]));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \mcp1_dec_c7[0]_i_2 
       (.I0(rx_66_enc_reg[53]),
        .I1(rx_66_enc_reg[52]),
        .O(\mcp1_dec_c7[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT5 #(
    .INIT(32'h00004009)) 
    \mcp1_dec_c7[1]_i_1 
       (.I0(rx_66_enc_reg[56]),
        .I1(rx_66_enc_reg[54]),
        .I2(rx_66_enc_reg[52]),
        .I3(rx_66_enc_reg[53]),
        .I4(\mcp1_dec_c7[4]_i_3_n_0 ),
        .O(DecodeWord6[1]));
  LUT6 #(
    .INIT(64'hABAAAAAAAAAAEAAA)) 
    \mcp1_dec_c7[3]_i_1 
       (.I0(\mcp1_dec_c7[4]_i_2_n_0 ),
        .I1(rx_66_enc_reg[57]),
        .I2(rx_66_enc_reg[56]),
        .I3(\mcp1_dec_c7[3]_i_2_n_0 ),
        .I4(rx_66_enc_reg[54]),
        .I5(rx_66_enc_reg[55]),
        .O(DecodeWord6[3]));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \mcp1_dec_c7[3]_i_2 
       (.I0(rx_66_enc_reg[52]),
        .I1(rx_66_enc_reg[53]),
        .I2(rx_66_enc_reg[51]),
        .O(\mcp1_dec_c7[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAABAAEEAAA)) 
    \mcp1_dec_c7[4]_i_1 
       (.I0(\mcp1_dec_c7[4]_i_2_n_0 ),
        .I1(rx_66_enc_reg[56]),
        .I2(rx_66_enc_reg[52]),
        .I3(rx_66_enc_reg[53]),
        .I4(rx_66_enc_reg[54]),
        .I5(\mcp1_dec_c7[4]_i_3_n_0 ),
        .O(DecodeWord6[4]));
  LUT6 #(
    .INIT(64'h0000000004408008)) 
    \mcp1_dec_c7[4]_i_2 
       (.I0(rx_66_enc_reg[53]),
        .I1(rx_66_enc_reg[51]),
        .I2(rx_66_enc_reg[56]),
        .I3(rx_66_enc_reg[54]),
        .I4(rx_66_enc_reg[52]),
        .I5(\mcp1_dec_c7[4]_i_4_n_0 ),
        .O(\mcp1_dec_c7[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT5 #(
    .INIT(32'hFFFF6FF6)) 
    \mcp1_dec_c7[4]_i_3 
       (.I0(rx_66_enc_reg[55]),
        .I1(rx_66_enc_reg[54]),
        .I2(rx_66_enc_reg[56]),
        .I3(rx_66_enc_reg[57]),
        .I4(rx_66_enc_reg[51]),
        .O(\mcp1_dec_c7[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT4 #(
    .INIT(16'hF99F)) 
    \mcp1_dec_c7[4]_i_4 
       (.I0(rx_66_enc_reg[57]),
        .I1(rx_66_enc_reg[56]),
        .I2(rx_66_enc_reg[55]),
        .I3(rx_66_enc_reg[54]),
        .O(\mcp1_dec_c7[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h3C0000AA000000AA)) 
    \mcp1_dec_c7[5]_i_1 
       (.I0(\mcp1_dec_c7[5]_i_2_n_0 ),
        .I1(rx_66_enc_reg[54]),
        .I2(rx_66_enc_reg[55]),
        .I3(\mcp1_dec_c7[7]_i_4_n_0 ),
        .I4(rx_66_enc_reg[51]),
        .I5(\mcp1_dec_c7[5]_i_3_n_0 ),
        .O(DecodeWord6[5]));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT5 #(
    .INIT(32'h08000080)) 
    \mcp1_dec_c7[5]_i_2 
       (.I0(rx_66_enc_reg[55]),
        .I1(rx_66_enc_reg[54]),
        .I2(rx_66_enc_reg[56]),
        .I3(rx_66_enc_reg[52]),
        .I4(rx_66_enc_reg[53]),
        .O(\mcp1_dec_c7[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT4 #(
    .INIT(16'h0224)) 
    \mcp1_dec_c7[5]_i_3 
       (.I0(rx_66_enc_reg[52]),
        .I1(rx_66_enc_reg[53]),
        .I2(rx_66_enc_reg[54]),
        .I3(rx_66_enc_reg[56]),
        .O(\mcp1_dec_c7[5]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT5 #(
    .INIT(32'hAAAABAAA)) 
    \mcp1_dec_c7[6]_i_1 
       (.I0(\mcp1_dec_c7[7]_i_6_n_0 ),
        .I1(\mcp1_dec_c7[6]_i_2_n_0 ),
        .I2(rx_66_enc_reg[51]),
        .I3(rx_66_enc_reg[52]),
        .I4(rx_66_enc_reg[53]),
        .O(DecodeWord6[6]));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    \mcp1_dec_c7[6]_i_2 
       (.I0(rx_66_enc_reg[57]),
        .I1(rx_66_enc_reg[56]),
        .I2(rx_66_enc_reg[54]),
        .I3(rx_66_enc_reg[55]),
        .O(\mcp1_dec_c7[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEFF7FFFFF7FFFFE)) 
    \mcp1_dec_c7[7]_i_1 
       (.I0(\mcp1_dec_c7[7]_i_3_n_0 ),
        .I1(\mcp1_dec_c7[7]_i_4_n_0 ),
        .I2(rx_66_enc_reg[51]),
        .I3(\mcp1_dec_c7[7]_i_5_n_0 ),
        .I4(rx_66_enc_reg[53]),
        .I5(rx_66_enc_reg[52]),
        .O(mcp1_dec_c7_7));
  LUT5 #(
    .INIT(32'hEAAAAAAA)) 
    \mcp1_dec_c7[7]_i_2 
       (.I0(\mcp1_dec_c7[7]_i_6_n_0 ),
        .I1(rx_66_enc_reg[55]),
        .I2(rx_66_enc_reg[57]),
        .I3(rx_66_enc_reg[51]),
        .I4(\mcp1_dec_c7[7]_i_7_n_0 ),
        .O(DecodeWord6[7]));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c7[7]_i_3 
       (.I0(rx_66_enc_reg[54]),
        .I1(rx_66_enc_reg[55]),
        .O(\mcp1_dec_c7[7]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c7[7]_i_4 
       (.I0(rx_66_enc_reg[56]),
        .I1(rx_66_enc_reg[57]),
        .O(\mcp1_dec_c7[7]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c7[7]_i_5 
       (.I0(rx_66_enc_reg[54]),
        .I1(rx_66_enc_reg[56]),
        .O(\mcp1_dec_c7[7]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT5 #(
    .INIT(32'h10044000)) 
    \mcp1_dec_c7[7]_i_6 
       (.I0(\mcp1_dec_c7[4]_i_3_n_0 ),
        .I1(rx_66_enc_reg[54]),
        .I2(rx_66_enc_reg[53]),
        .I3(rx_66_enc_reg[52]),
        .I4(rx_66_enc_reg[56]),
        .O(\mcp1_dec_c7[7]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT4 #(
    .INIT(16'h0010)) 
    \mcp1_dec_c7[7]_i_7 
       (.I0(rx_66_enc_reg[56]),
        .I1(rx_66_enc_reg[54]),
        .I2(rx_66_enc_reg[53]),
        .I3(rx_66_enc_reg[52]),
        .O(\mcp1_dec_c7[7]_i_7_n_0 ));
  FDRE \mcp1_dec_c7_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord6[0]),
        .Q(mcp1_dec_c7[0]),
        .R(mcp1_dec_c7_7));
  FDSE \mcp1_dec_c7_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord6[1]),
        .Q(mcp1_dec_c7[1]),
        .S(mcp1_dec_c7_7));
  FDSE \mcp1_dec_c7_reg[3] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord6[3]),
        .Q(mcp1_dec_c7[3]),
        .S(mcp1_dec_c7_7));
  FDSE \mcp1_dec_c7_reg[4] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord6[4]),
        .Q(mcp1_dec_c7[4]),
        .S(mcp1_dec_c7_7));
  FDSE \mcp1_dec_c7_reg[5] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord6[5]),
        .Q(mcp1_dec_c7[5]),
        .S(mcp1_dec_c7_7));
  FDSE \mcp1_dec_c7_reg[6] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord6[6]),
        .Q(mcp1_dec_c7[6]),
        .S(mcp1_dec_c7_7));
  FDSE \mcp1_dec_c7_reg[7] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(DecodeWord6[7]),
        .Q(mcp1_dec_c7[7]),
        .S(mcp1_dec_c7_7));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \mcp1_r_type_next_reg[0]_i_1 
       (.I0(rx_66_enc_reg[0]),
        .I1(rx_66_enc_reg[1]),
        .I2(\mcp1_r_type_next_reg[0]_i_2_n_0 ),
        .I3(\mcp1_r_type_next_reg[2]_i_4_n_0 ),
        .O(\mcp1_r_type_next_reg[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT3 #(
    .INIT(8'hFD)) 
    \mcp1_r_type_next_reg[0]_i_2 
       (.I0(rx_66_enc_reg[0]),
        .I1(rx_66_enc_reg[1]),
        .I2(\mcp1_r_type_next_reg[2]_i_5_n_0 ),
        .O(\mcp1_r_type_next_reg[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0000FFF4)) 
    \mcp1_r_type_next_reg[1]_i_1 
       (.I0(\mcp1_r_type_next_reg[1]_i_2_n_0 ),
        .I1(\mcp1_r_type_next_reg[1]_i_3_n_0 ),
        .I2(\mcp1_r_type_next_reg[2]_i_3_n_0 ),
        .I3(\mcp1_r_type_next_reg[2]_i_4_n_0 ),
        .I4(\mcp1_r_type_next_reg[0]_i_2_n_0 ),
        .O(\mcp1_r_type_next_reg[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFEFFFEFFFEFF0000)) 
    \mcp1_r_type_next_reg[1]_i_2 
       (.I0(\mcp1_r_type_next_reg[1]_i_4_n_0 ),
        .I1(\mcp1_r_type_next_reg[1]_i_5_n_0 ),
        .I2(\mcp1_r_type_next_reg[2]_i_11_n_0 ),
        .I3(\mcp1_r_type_next_reg[2]_i_10_n_0 ),
        .I4(\mcp1_r_type_next_reg[2]_i_9_n_0 ),
        .I5(\mcp1_r_type_next_reg[2]_i_8_n_0 ),
        .O(\mcp1_r_type_next_reg[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \mcp1_r_type_next_reg[1]_i_3 
       (.I0(mcp1_dec_c3_3),
        .I1(mcp1_dec_c2_2),
        .I2(mcp1_dec_c1_1),
        .I3(mcp1_dec_c0_0),
        .O(\mcp1_r_type_next_reg[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAEAAAAAAAAA)) 
    \mcp1_r_type_next_reg[1]_i_4 
       (.I0(\mcp1_r_type_next_reg[2]_i_30_n_0 ),
        .I1(rx_66_enc_reg[41]),
        .I2(rx_66_enc_reg[40]),
        .I3(rx_66_enc_reg[42]),
        .I4(rx_66_enc_reg[43]),
        .I5(\mcp1_dec_c5[3]_i_2_n_0 ),
        .O(\mcp1_r_type_next_reg[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    \mcp1_r_type_next_reg[1]_i_5 
       (.I0(\mcp1_r_type_next_reg[1]_i_6_n_0 ),
        .I1(rx_66_enc_reg[30]),
        .I2(rx_66_enc_reg[36]),
        .I3(rx_66_enc_reg[35]),
        .I4(rx_66_enc_reg[33]),
        .I5(rx_66_enc_reg[34]),
        .O(\mcp1_r_type_next_reg[1]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_r_type_next_reg[1]_i_6 
       (.I0(rx_66_enc_reg[32]),
        .I1(rx_66_enc_reg[31]),
        .O(\mcp1_r_type_next_reg[1]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFF0001)) 
    \mcp1_r_type_next_reg[2]_i_1 
       (.I0(\mcp1_r_type_next_reg[2]_i_2_n_0 ),
        .I1(\mcp1_r_type_next_reg[2]_i_3_n_0 ),
        .I2(\mcp1_r_type_next_reg[2]_i_4_n_0 ),
        .I3(\mcp1_r_type_next_reg[2]_i_5_n_0 ),
        .I4(\mcp1_r_type_next_reg[2]_i_6_n_0 ),
        .I5(\mcp1_r_type_next_reg[2]_i_7_n_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \mcp1_r_type_next_reg[2]_i_10 
       (.I0(mcp1_dec_c7_7),
        .I1(mcp1_dec_c6_6),
        .I2(mcp1_dec_c5_5),
        .I3(mcp1_dec_c4_4),
        .O(\mcp1_r_type_next_reg[2]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \mcp1_r_type_next_reg[2]_i_11 
       (.I0(\mcp1_r_type_next_reg[2]_i_25_n_0 ),
        .I1(\mcp1_r_type_next_reg[2]_i_26_n_0 ),
        .I2(\mcp1_r_type_next_reg[2]_i_27_n_0 ),
        .I3(\mcp1_r_type_next_reg[2]_i_28_n_0 ),
        .I4(\mcp1_r_type_next_reg[2]_i_29_n_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAAAAAE)) 
    \mcp1_r_type_next_reg[2]_i_12 
       (.I0(\mcp1_r_type_next_reg[1]_i_5_n_0 ),
        .I1(\mcp1_dec_c5[3]_i_2_n_0 ),
        .I2(rx_66_enc_reg[43]),
        .I3(rx_66_enc_reg[42]),
        .I4(\mcp1_dec_c5[5]_i_4_n_0 ),
        .I5(\mcp1_r_type_next_reg[2]_i_30_n_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT4 #(
    .INIT(16'h8001)) 
    \mcp1_r_type_next_reg[2]_i_13 
       (.I0(rx_66_enc_reg[29]),
        .I1(rx_66_enc_reg[28]),
        .I2(rx_66_enc_reg[27]),
        .I3(rx_66_enc_reg[26]),
        .O(\mcp1_r_type_next_reg[2]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'h0020)) 
    \mcp1_r_type_next_reg[2]_i_14 
       (.I0(block_field[6]),
        .I1(block_field[4]),
        .I2(block_field[3]),
        .I3(block_field[5]),
        .O(\mcp1_r_type_next_reg[2]_i_14_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    \mcp1_r_type_next_reg[2]_i_15 
       (.I0(block_field[1]),
        .I1(block_field[2]),
        .I2(block_field[0]),
        .I3(block_field[7]),
        .O(\mcp1_r_type_next_reg[2]_i_15_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT4 #(
    .INIT(16'hEFFF)) 
    \mcp1_r_type_next_reg[2]_i_16 
       (.I0(block_field[3]),
        .I1(block_field[5]),
        .I2(block_field[6]),
        .I3(block_field[4]),
        .O(\mcp1_r_type_next_reg[2]_i_16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT5 #(
    .INIT(32'h04000420)) 
    \mcp1_r_type_next_reg[2]_i_17 
       (.I0(block_field[5]),
        .I1(block_field[3]),
        .I2(block_field[4]),
        .I3(block_field[6]),
        .I4(mcp1_dec_c4_4),
        .O(\mcp1_r_type_next_reg[2]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
    \mcp1_r_type_next_reg[2]_i_18 
       (.I0(mcp1_dec_c6_6),
        .I1(mcp1_dec_c7_7),
        .I2(mcp1_dec_c5_5),
        .I3(\mcp1_r_type_next_reg[2]_i_31_n_0 ),
        .I4(block_field[0]),
        .I5(block_field[7]),
        .O(\mcp1_r_type_next_reg[2]_i_18_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \mcp1_r_type_next_reg[2]_i_19 
       (.I0(mcp1_dec_c7_7),
        .I1(mcp1_dec_c6_6),
        .I2(\mcp1_r_type_next_reg[2]_i_16_n_0 ),
        .I3(\mcp1_r_type_next_reg[2]_i_32_n_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h020202020202AA02)) 
    \mcp1_r_type_next_reg[2]_i_2 
       (.I0(\mcp1_r_type_next_reg[1]_i_3_n_0 ),
        .I1(\mcp1_r_type_next_reg[2]_i_8_n_0 ),
        .I2(\mcp1_r_type_next_reg[2]_i_9_n_0 ),
        .I3(\mcp1_r_type_next_reg[2]_i_10_n_0 ),
        .I4(\mcp1_r_type_next_reg[2]_i_11_n_0 ),
        .I5(\mcp1_r_type_next_reg[2]_i_12_n_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000A0000000A003)) 
    \mcp1_r_type_next_reg[2]_i_20 
       (.I0(\mcp1_r_type_next_reg[2]_i_33_n_0 ),
        .I1(\mcp1_r_type_next_reg[2]_i_34_n_0 ),
        .I2(block_field[2]),
        .I3(block_field[1]),
        .I4(\mcp1_r_type_next_reg[2]_i_35_n_0 ),
        .I5(mcp1_dec_c7_7),
        .O(\mcp1_r_type_next_reg[2]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0FEF0FFF0F0F0)) 
    \mcp1_r_type_next_reg[2]_i_21 
       (.I0(mcp1_dec_c1_1),
        .I1(\mcp1_r_type_next_reg[2]_i_36_n_0 ),
        .I2(mcp1_dec_c3_3),
        .I3(\mcp1_r_type_next_reg[2]_i_37_n_0 ),
        .I4(mcp1_dec_c2_2),
        .I5(\mcp1_r_type_next_reg[2]_i_38_n_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_21_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT5 #(
    .INIT(32'hFFFFFBFF)) 
    \mcp1_r_type_next_reg[2]_i_22 
       (.I0(block_field[6]),
        .I1(block_field[4]),
        .I2(block_field[3]),
        .I3(block_field[5]),
        .I4(\mcp1_r_type_next_reg[2]_i_15_n_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'h0300000A0000000A)) 
    \mcp1_r_type_next_reg[2]_i_23 
       (.I0(\mcp1_r_type_next_reg[2]_i_33_n_0 ),
        .I1(\mcp1_r_type_next_reg[2]_i_34_n_0 ),
        .I2(\mcp1_r_type_next_reg[2]_i_39_n_0 ),
        .I3(block_field[2]),
        .I4(block_field[1]),
        .I5(\mcp1_r_type_next_reg[2]_i_13_n_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_23_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT4 #(
    .INIT(16'h7FFE)) 
    \mcp1_r_type_next_reg[2]_i_24 
       (.I0(rx_66_enc_reg[31]),
        .I1(rx_66_enc_reg[32]),
        .I2(rx_66_enc_reg[30]),
        .I3(rx_66_enc_reg[33]),
        .O(\mcp1_r_type_next_reg[2]_i_24_n_0 ));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    \mcp1_r_type_next_reg[2]_i_25 
       (.I0(\mcp1_r_type_next_reg[2]_i_40_n_0 ),
        .I1(rx_66_enc_reg[44]),
        .I2(rx_66_enc_reg[50]),
        .I3(rx_66_enc_reg[49]),
        .I4(rx_66_enc_reg[47]),
        .I5(rx_66_enc_reg[48]),
        .O(\mcp1_r_type_next_reg[2]_i_25_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    \mcp1_r_type_next_reg[2]_i_26 
       (.I0(rx_66_enc_reg[25]),
        .I1(rx_66_enc_reg[24]),
        .I2(rx_66_enc_reg[23]),
        .I3(\mcp1_dec_c3[5]_i_4_n_0 ),
        .I4(rx_66_enc_reg[28]),
        .I5(rx_66_enc_reg[29]),
        .O(\mcp1_r_type_next_reg[2]_i_26_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0100)) 
    \mcp1_r_type_next_reg[2]_i_27 
       (.I0(rx_66_enc_reg[7]),
        .I1(rx_66_enc_reg[8]),
        .I2(\mcp1_dec_c0[5]_i_2_n_0 ),
        .I3(\mcp1_dec_c0[3]_i_2_n_0 ),
        .I4(\mcp1_r_type_next_reg[2]_i_41_n_0 ),
        .I5(\mcp1_r_type_next_reg[2]_i_42_n_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_27_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000040)) 
    \mcp1_r_type_next_reg[2]_i_28 
       (.I0(rx_66_enc_reg[16]),
        .I1(rx_66_enc_reg[17]),
        .I2(rx_66_enc_reg[18]),
        .I3(\mcp1_dec_c2[5]_i_4_n_0 ),
        .I4(rx_66_enc_reg[22]),
        .I5(rx_66_enc_reg[21]),
        .O(\mcp1_r_type_next_reg[2]_i_28_n_0 ));
  LUT6 #(
    .INIT(64'h0000000004000000)) 
    \mcp1_r_type_next_reg[2]_i_29 
       (.I0(rx_66_enc_reg[51]),
        .I1(\mcp1_r_type_next_reg[2]_i_43_n_0 ),
        .I2(rx_66_enc_reg[56]),
        .I3(rx_66_enc_reg[55]),
        .I4(rx_66_enc_reg[54]),
        .I5(rx_66_enc_reg[57]),
        .O(\mcp1_r_type_next_reg[2]_i_29_n_0 ));
  LUT6 #(
    .INIT(64'h008000800080AAAA)) 
    \mcp1_r_type_next_reg[2]_i_3 
       (.I0(\mcp1_r_type_next_reg[2]_i_13_n_0 ),
        .I1(\mcp1_r_type_next_reg[2]_i_10_n_0 ),
        .I2(\mcp1_r_type_next_reg[2]_i_14_n_0 ),
        .I3(\mcp1_r_type_next_reg[2]_i_15_n_0 ),
        .I4(\mcp1_r_type_next_reg[2]_i_16_n_0 ),
        .I5(\mcp1_r_type_next_reg[2]_i_9_n_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0004000000000000)) 
    \mcp1_r_type_next_reg[2]_i_30 
       (.I0(rx_66_enc_reg[9]),
        .I1(\mcp1_r_type_next_reg[2]_i_44_n_0 ),
        .I2(rx_66_enc_reg[15]),
        .I3(rx_66_enc_reg[14]),
        .I4(rx_66_enc_reg[12]),
        .I5(rx_66_enc_reg[13]),
        .O(\mcp1_r_type_next_reg[2]_i_30_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \mcp1_r_type_next_reg[2]_i_31 
       (.I0(block_field[1]),
        .I1(block_field[2]),
        .O(\mcp1_r_type_next_reg[2]_i_31_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    \mcp1_r_type_next_reg[2]_i_32 
       (.I0(block_field[1]),
        .I1(block_field[2]),
        .I2(block_field[7]),
        .I3(block_field[0]),
        .O(\mcp1_r_type_next_reg[2]_i_32_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \mcp1_r_type_next_reg[2]_i_33 
       (.I0(block_field[6]),
        .I1(block_field[5]),
        .I2(block_field[3]),
        .I3(block_field[4]),
        .O(\mcp1_r_type_next_reg[2]_i_33_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    \mcp1_r_type_next_reg[2]_i_34 
       (.I0(block_field[5]),
        .I1(block_field[3]),
        .I2(block_field[6]),
        .I3(block_field[4]),
        .O(\mcp1_r_type_next_reg[2]_i_34_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_r_type_next_reg[2]_i_35 
       (.I0(block_field[0]),
        .I1(block_field[7]),
        .O(\mcp1_r_type_next_reg[2]_i_35_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \mcp1_r_type_next_reg[2]_i_36 
       (.I0(\mcp1_r_type_next_reg[2]_i_45_n_0 ),
        .I1(block_field[5]),
        .I2(block_field[6]),
        .I3(block_field[4]),
        .I4(block_field[3]),
        .O(\mcp1_r_type_next_reg[2]_i_36_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT5 #(
    .INIT(32'hFFFFFBFF)) 
    \mcp1_r_type_next_reg[2]_i_37 
       (.I0(block_field[0]),
        .I1(block_field[7]),
        .I2(block_field[2]),
        .I3(block_field[1]),
        .I4(\mcp1_r_type_next_reg[2]_i_8_n_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_37_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT5 #(
    .INIT(32'hFFFFEFFF)) 
    \mcp1_r_type_next_reg[2]_i_38 
       (.I0(block_field[2]),
        .I1(block_field[1]),
        .I2(block_field[0]),
        .I3(block_field[7]),
        .I4(\mcp1_r_type_next_reg[2]_i_42_n_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_38_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_r_type_next_reg[2]_i_39 
       (.I0(block_field[0]),
        .I1(block_field[7]),
        .O(\mcp1_r_type_next_reg[2]_i_39_n_0 ));
  LUT6 #(
    .INIT(64'hFFF2FFFFFFF2FFF2)) 
    \mcp1_r_type_next_reg[2]_i_4 
       (.I0(\mcp1_r_type_next_reg[2]_i_17_n_0 ),
        .I1(\mcp1_r_type_next_reg[2]_i_18_n_0 ),
        .I2(\mcp1_r_type_next_reg[2]_i_19_n_0 ),
        .I3(\mcp1_r_type_next_reg[2]_i_20_n_0 ),
        .I4(\mcp1_r_type_next_reg[2]_i_21_n_0 ),
        .I5(\mcp1_r_type_next_reg[2]_i_10_n_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_r_type_next_reg[2]_i_40 
       (.I0(rx_66_enc_reg[46]),
        .I1(rx_66_enc_reg[45]),
        .O(\mcp1_r_type_next_reg[2]_i_40_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT4 #(
    .INIT(16'hFFF7)) 
    \mcp1_r_type_next_reg[2]_i_41 
       (.I0(block_field[1]),
        .I1(block_field[2]),
        .I2(block_field[7]),
        .I3(block_field[0]),
        .O(\mcp1_r_type_next_reg[2]_i_41_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT4 #(
    .INIT(16'hFFF7)) 
    \mcp1_r_type_next_reg[2]_i_42 
       (.I0(block_field[3]),
        .I1(block_field[4]),
        .I2(block_field[6]),
        .I3(block_field[5]),
        .O(\mcp1_r_type_next_reg[2]_i_42_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \mcp1_r_type_next_reg[2]_i_43 
       (.I0(rx_66_enc_reg[53]),
        .I1(rx_66_enc_reg[52]),
        .O(\mcp1_r_type_next_reg[2]_i_43_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \mcp1_r_type_next_reg[2]_i_44 
       (.I0(rx_66_enc_reg[11]),
        .I1(rx_66_enc_reg[10]),
        .O(\mcp1_r_type_next_reg[2]_i_44_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \mcp1_r_type_next_reg[2]_i_45 
       (.I0(block_field[1]),
        .I1(block_field[2]),
        .I2(block_field[7]),
        .I3(block_field[0]),
        .O(\mcp1_r_type_next_reg[2]_i_45_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000001)) 
    \mcp1_r_type_next_reg[2]_i_5 
       (.I0(\mcp1_r_type_next_reg[2]_i_22_n_0 ),
        .I1(mcp1_dec_c3_3),
        .I2(mcp1_dec_c2_2),
        .I3(mcp1_dec_c1_1),
        .I4(mcp1_dec_c0_0),
        .I5(\mcp1_r_type_next_reg[2]_i_23_n_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \mcp1_r_type_next_reg[2]_i_6 
       (.I0(rx_66_enc_reg[1]),
        .I1(rx_66_enc_reg[0]),
        .O(\mcp1_r_type_next_reg[2]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \mcp1_r_type_next_reg[2]_i_7 
       (.I0(out),
        .I1(rx_66_enc_reg[0]),
        .I2(rx_66_enc_reg[1]),
        .O(\mcp1_r_type_next_reg[2]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT4 #(
    .INIT(16'hFFF7)) 
    \mcp1_r_type_next_reg[2]_i_8 
       (.I0(block_field[3]),
        .I1(block_field[5]),
        .I2(block_field[6]),
        .I3(block_field[4]),
        .O(\mcp1_r_type_next_reg[2]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT5 #(
    .INIT(32'hFFFFFBFF)) 
    \mcp1_r_type_next_reg[2]_i_9 
       (.I0(block_field[7]),
        .I1(block_field[0]),
        .I2(block_field[1]),
        .I3(block_field[2]),
        .I4(\mcp1_r_type_next_reg[2]_i_24_n_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_9_n_0 ));
  FDRE \mcp1_r_type_next_reg_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_r_type_next_reg[0]_i_1_n_0 ),
        .Q(\mcp1_r_type_reg_reg[2]_0 [0]),
        .R(out));
  FDSE \mcp1_r_type_next_reg_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_r_type_next_reg[1]_i_1_n_0 ),
        .Q(r_type_next),
        .S(out));
  FDRE \mcp1_r_type_next_reg_reg[2] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_r_type_next_reg[2]_i_1_n_0 ),
        .Q(\mcp1_r_type_reg_reg[2]_0 [1]),
        .R(1'b0));
  FDRE \mcp1_r_type_reg_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_r_type_reg_reg[2]_0 [0]),
        .Q(r_type[0]),
        .R(out));
  FDSE \mcp1_r_type_reg_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(r_type_next),
        .Q(r_type[1]),
        .S(out));
  FDRE \mcp1_r_type_reg_reg[2] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_r_type_reg_reg[2]_0 [1]),
        .Q(r_type[2]),
        .R(out));
  LUT6 #(
    .INIT(64'h00000000FBBFFFFF)) 
    \mcp1_rx_64_ctrl_out[0]_i_1 
       (.I0(\mcp1_rx_64_ctrl_out[0]_i_2_n_0 ),
        .I1(\mcp1_rx_64_ctrl_out[0]_i_3_n_0 ),
        .I2(mcp1_block_field_reg[0]),
        .I3(\mcp1_rx_64_ctrl_out[0]_i_4_n_0 ),
        .I4(mcp1_block_field_reg[7]),
        .I5(\mcp1_rx_64_ctrl_out[0]_i_5_n_0 ),
        .O(\mcp1_rx_64_ctrl_out[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT5 #(
    .INIT(32'h7DBEEBDF)) 
    \mcp1_rx_64_ctrl_out[0]_i_2 
       (.I0(mcp1_block_field_reg[1]),
        .I1(mcp1_block_field_reg[2]),
        .I2(mcp1_block_field_reg[3]),
        .I3(mcp1_block_field_reg[4]),
        .I4(mcp1_block_field_reg[6]),
        .O(\mcp1_rx_64_ctrl_out[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \mcp1_rx_64_ctrl_out[0]_i_3 
       (.I0(mcp1_block_field_reg[5]),
        .I1(mcp1_block_field_reg[4]),
        .I2(mcp1_block_field_reg[2]),
        .O(\mcp1_rx_64_ctrl_out[0]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_rx_64_ctrl_out[0]_i_4 
       (.I0(mcp1_block_field_reg[2]),
        .I1(mcp1_block_field_reg[1]),
        .O(\mcp1_rx_64_ctrl_out[0]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_rx_64_ctrl_out[0]_i_5 
       (.I0(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .O(\mcp1_rx_64_ctrl_out[0]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_64_ctrl_out[1]_i_1 
       (.I0(\mcp1_rx_64_ctrl_out[1]_i_2_n_0 ),
        .I1(\mcp1_rx_64_ctrl_out[3]_i_2_n_0 ),
        .O(mcp1_rx_64_ctrl_out[1]));
  LUT6 #(
    .INIT(64'h0000000000008000)) 
    \mcp1_rx_64_ctrl_out[1]_i_2 
       (.I0(mcp1_block_field_reg[4]),
        .I1(\mcp1_rx_64_ctrl_out[1]_i_3_n_0 ),
        .I2(mcp1_block_field_reg[1]),
        .I3(\mcp1_rx_64_ctrl_out[1]_i_4_n_0 ),
        .I4(mcp1_block_field_reg[6]),
        .I5(mcp1_block_field_reg[0]),
        .O(\mcp1_rx_64_ctrl_out[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \mcp1_rx_64_ctrl_out[1]_i_3 
       (.I0(mcp1_block_field_reg[3]),
        .I1(mcp1_block_field_reg[2]),
        .O(\mcp1_rx_64_ctrl_out[1]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \mcp1_rx_64_ctrl_out[1]_i_4 
       (.I0(mcp1_block_field_reg[5]),
        .I1(mcp1_block_field_reg[7]),
        .O(\mcp1_rx_64_ctrl_out[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000002282880)) 
    \mcp1_rx_64_ctrl_out[2]_i_1 
       (.I0(\mcp1_rx_64_ctrl_out[2]_i_2_n_0 ),
        .I1(mcp1_block_field_reg[2]),
        .I2(mcp1_block_field_reg[4]),
        .I3(mcp1_block_field_reg[5]),
        .I4(mcp1_block_field_reg[7]),
        .I5(mcp1_block_field_reg[6]),
        .O(mcp1_rx_64_ctrl_out[2]));
  LUT6 #(
    .INIT(64'h3880048008403440)) 
    \mcp1_rx_64_ctrl_out[2]_i_2 
       (.I0(mcp1_block_field_reg[5]),
        .I1(mcp1_block_field_reg[0]),
        .I2(mcp1_block_field_reg[1]),
        .I3(mcp1_block_field_reg[3]),
        .I4(mcp1_block_field_reg[2]),
        .I5(mcp1_block_field_reg[4]),
        .O(\mcp1_rx_64_ctrl_out[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAFAAEAAAAAAAA)) 
    \mcp1_rx_64_ctrl_out[3]_i_1 
       (.I0(\mcp1_rx_64_ctrl_out[3]_i_2_n_0 ),
        .I1(mcp1_block_field_reg[4]),
        .I2(mcp1_block_field_reg[5]),
        .I3(mcp1_block_field_reg[7]),
        .I4(\mcp1_rx_64_ctrl_out[3]_i_3_n_0 ),
        .I5(\mcp1_rx_64_ctrl_out[3]_i_4_n_0 ),
        .O(mcp1_rx_64_ctrl_out[3]));
  LUT6 #(
    .INIT(64'h0000000000241800)) 
    \mcp1_rx_64_ctrl_out[3]_i_2 
       (.I0(mcp1_block_field_reg[2]),
        .I1(mcp1_block_field_reg[1]),
        .I2(mcp1_block_field_reg[3]),
        .I3(mcp1_block_field_reg[7]),
        .I4(mcp1_block_field_reg[5]),
        .I5(\mcp1_rx_64_ctrl_out[3]_i_5_n_0 ),
        .O(\mcp1_rx_64_ctrl_out[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_64_ctrl_out[3]_i_3 
       (.I0(mcp1_block_field_reg[6]),
        .I1(mcp1_block_field_reg[0]),
        .O(\mcp1_rx_64_ctrl_out[3]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT5 #(
    .INIT(32'h1008B000)) 
    \mcp1_rx_64_ctrl_out[3]_i_4 
       (.I0(mcp1_block_field_reg[2]),
        .I1(mcp1_block_field_reg[4]),
        .I2(mcp1_block_field_reg[1]),
        .I3(mcp1_block_field_reg[3]),
        .I4(mcp1_block_field_reg[5]),
        .O(\mcp1_rx_64_ctrl_out[3]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT4 #(
    .INIT(16'hF9FF)) 
    \mcp1_rx_64_ctrl_out[3]_i_5 
       (.I0(mcp1_block_field_reg[4]),
        .I1(mcp1_block_field_reg[2]),
        .I2(mcp1_block_field_reg[6]),
        .I3(mcp1_block_field_reg[0]),
        .O(\mcp1_rx_64_ctrl_out[3]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hE0EE)) 
    \mcp1_rx_64_ctrl_out[4]_i_1 
       (.I0(\mcp1_rx_64_ctrl_out[4]_i_2_n_0 ),
        .I1(\mcp1_rx_64_ctrl_out[4]_i_3_n_0 ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .O(\mcp1_rx_64_ctrl_out[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFB7EEB7EEB7EEB)) 
    \mcp1_rx_64_ctrl_out[4]_i_2 
       (.I0(mcp1_block_field_reg[2]),
        .I1(mcp1_block_field_reg[0]),
        .I2(mcp1_block_field_reg[1]),
        .I3(mcp1_block_field_reg[3]),
        .I4(mcp1_block_field_reg[5]),
        .I5(mcp1_block_field_reg[7]),
        .O(\mcp1_rx_64_ctrl_out[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h3F5FFFBFBFFFFFFF)) 
    \mcp1_rx_64_ctrl_out[4]_i_3 
       (.I0(mcp1_block_field_reg[3]),
        .I1(mcp1_block_field_reg[7]),
        .I2(mcp1_block_field_reg[6]),
        .I3(mcp1_block_field_reg[1]),
        .I4(mcp1_block_field_reg[4]),
        .I5(mcp1_block_field_reg[5]),
        .O(\mcp1_rx_64_ctrl_out[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAAAABAAAAAAAAAAA)) 
    \mcp1_rx_64_ctrl_out[5]_i_1 
       (.I0(\mcp1_rx_64_ctrl_out[6]_i_2_n_0 ),
        .I1(mcp1_block_field_reg[1]),
        .I2(mcp1_block_field_reg[3]),
        .I3(\mcp1_rx_64_ctrl_out[5]_i_2_n_0 ),
        .I4(mcp1_block_field_reg[6]),
        .I5(\mcp1_rx_64_ctrl_out[5]_i_3_n_0 ),
        .O(mcp1_rx_64_ctrl_out[5]));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_rx_64_ctrl_out[5]_i_2 
       (.I0(mcp1_block_field_reg[4]),
        .I1(mcp1_block_field_reg[2]),
        .O(\mcp1_rx_64_ctrl_out[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT5 #(
    .INIT(32'h10200020)) 
    \mcp1_rx_64_ctrl_out[5]_i_3 
       (.I0(mcp1_block_field_reg[7]),
        .I1(mcp1_block_field_reg[5]),
        .I2(mcp1_block_field_reg[0]),
        .I3(mcp1_block_field_reg[6]),
        .I4(mcp1_block_field_reg[3]),
        .O(\mcp1_rx_64_ctrl_out[5]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_64_ctrl_out[6]_i_1 
       (.I0(\mcp1_rx_64_ctrl_out[7]_i_5_n_0 ),
        .I1(\mcp1_rx_64_ctrl_out[6]_i_2_n_0 ),
        .O(mcp1_rx_64_ctrl_out[6]));
  LUT6 #(
    .INIT(64'hAAFAEAEAAAAAAAAA)) 
    \mcp1_rx_64_ctrl_out[6]_i_2 
       (.I0(\mcp1_rx_64_ctrl_out[7]_i_3_n_0 ),
        .I1(mcp1_block_field_reg[6]),
        .I2(\mcp1_rx_64_ctrl_out[6]_i_3_n_0 ),
        .I3(mcp1_block_field_reg[3]),
        .I4(mcp1_block_field_reg[2]),
        .I5(\mcp1_rx_64_ctrl_out[5]_i_3_n_0 ),
        .O(\mcp1_rx_64_ctrl_out[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_rx_64_ctrl_out[6]_i_3 
       (.I0(mcp1_block_field_reg[1]),
        .I1(mcp1_block_field_reg[4]),
        .O(\mcp1_rx_64_ctrl_out[6]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \mcp1_rx_64_ctrl_out[7]_i_1 
       (.I0(out),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .O(\mcp1_rx_64_ctrl_out[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFEAAA)) 
    \mcp1_rx_64_ctrl_out[7]_i_2 
       (.I0(\mcp1_rx_64_ctrl_out[7]_i_3_n_0 ),
        .I1(\mcp1_rx_64_ctrl_out[7]_i_4_n_0 ),
        .I2(mcp1_block_field_reg[0]),
        .I3(mcp1_block_field_reg[1]),
        .I4(\mcp1_rx_64_ctrl_out[7]_i_5_n_0 ),
        .O(mcp1_rx_64_ctrl_out[7]));
  LUT6 #(
    .INIT(64'hAABEAAAAAAAAAAAA)) 
    \mcp1_rx_64_ctrl_out[7]_i_3 
       (.I0(\mcp1_rx_64_ctrl_out[1]_i_2_n_0 ),
        .I1(mcp1_block_field_reg[6]),
        .I2(mcp1_block_field_reg[5]),
        .I3(mcp1_block_field_reg[0]),
        .I4(mcp1_block_field_reg[7]),
        .I5(\mcp1_rx_64_ctrl_out[7]_i_6_n_0 ),
        .O(\mcp1_rx_64_ctrl_out[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000100200)) 
    \mcp1_rx_64_ctrl_out[7]_i_4 
       (.I0(mcp1_block_field_reg[7]),
        .I1(mcp1_block_field_reg[4]),
        .I2(mcp1_block_field_reg[3]),
        .I3(mcp1_block_field_reg[2]),
        .I4(mcp1_block_field_reg[6]),
        .I5(mcp1_block_field_reg[5]),
        .O(\mcp1_rx_64_ctrl_out[7]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT5 #(
    .INIT(32'h00000402)) 
    \mcp1_rx_64_ctrl_out[7]_i_5 
       (.I0(mcp1_block_field_reg[5]),
        .I1(mcp1_block_field_reg[3]),
        .I2(mcp1_block_field_reg[2]),
        .I3(mcp1_block_field_reg[4]),
        .I4(\mcp1_rx_64_ctrl_out[7]_i_7_n_0 ),
        .O(\mcp1_rx_64_ctrl_out[7]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT5 #(
    .INIT(32'h00182400)) 
    \mcp1_rx_64_ctrl_out[7]_i_6 
       (.I0(mcp1_block_field_reg[5]),
        .I1(mcp1_block_field_reg[3]),
        .I2(mcp1_block_field_reg[4]),
        .I3(mcp1_block_field_reg[2]),
        .I4(mcp1_block_field_reg[1]),
        .O(\mcp1_rx_64_ctrl_out[7]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT5 #(
    .INIT(32'hFF6FFFFF)) 
    \mcp1_rx_64_ctrl_out[7]_i_7 
       (.I0(mcp1_block_field_reg[5]),
        .I1(mcp1_block_field_reg[6]),
        .I2(mcp1_block_field_reg[7]),
        .I3(mcp1_block_field_reg[1]),
        .I4(mcp1_block_field_reg[0]),
        .O(\mcp1_rx_64_ctrl_out[7]_i_7_n_0 ));
  FDSE \mcp1_rx_64_ctrl_out_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_ctrl_out[0]_i_1_n_0 ),
        .Q(\mcp1_rx_64_ctrl_out_reg_n_0_[0] ),
        .S(out));
  FDRE \mcp1_rx_64_ctrl_out_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_rx_64_ctrl_out[1]),
        .Q(\mcp1_rx_64_ctrl_out_reg_n_0_[1] ),
        .R(\mcp1_rx_64_ctrl_out[7]_i_1_n_0 ));
  FDRE \mcp1_rx_64_ctrl_out_reg[2] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_rx_64_ctrl_out[2]),
        .Q(\mcp1_rx_64_ctrl_out_reg_n_0_[2] ),
        .R(\mcp1_rx_64_ctrl_out[7]_i_1_n_0 ));
  FDRE \mcp1_rx_64_ctrl_out_reg[3] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_rx_64_ctrl_out[3]),
        .Q(\mcp1_rx_64_ctrl_out_reg_n_0_[3] ),
        .R(\mcp1_rx_64_ctrl_out[7]_i_1_n_0 ));
  FDSE \mcp1_rx_64_ctrl_out_reg[4] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_ctrl_out[4]_i_1_n_0 ),
        .Q(\mcp1_rx_64_ctrl_out_reg_n_0_[4] ),
        .S(out));
  FDRE \mcp1_rx_64_ctrl_out_reg[5] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_rx_64_ctrl_out[5]),
        .Q(\mcp1_rx_64_ctrl_out_reg_n_0_[5] ),
        .R(\mcp1_rx_64_ctrl_out[7]_i_1_n_0 ));
  FDRE \mcp1_rx_64_ctrl_out_reg[6] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_rx_64_ctrl_out[6]),
        .Q(\mcp1_rx_64_ctrl_out_reg_n_0_[6] ),
        .R(\mcp1_rx_64_ctrl_out[7]_i_1_n_0 ));
  FDRE \mcp1_rx_64_ctrl_out_reg[7] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_rx_64_ctrl_out[7]),
        .Q(\mcp1_rx_64_ctrl_out_reg_n_0_[7] ),
        .R(\mcp1_rx_64_ctrl_out[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \mcp1_rx_64_data_out[0]_i_1 
       (.I0(mcp1_block_field_reg[0]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[0]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hD888D888F8EDA848)) 
    \mcp1_rx_64_data_out[0]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I1(data2[0]),
        .I2(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I4(mcp1_dec_c0[0]),
        .I5(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \mcp1_rx_64_data_out[10]_i_1 
       (.I0(data2[2]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[10]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hE4A0E4E4FFE4FAFF)) 
    \mcp1_rx_64_data_out[10]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I1(data2[2]),
        .I2(data3[10]),
        .I3(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I5(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h22002200F2D0FFD0)) 
    \mcp1_rx_64_data_out[11]_i_1 
       (.I0(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I2(\mcp1_rx_64_data_out[11]_i_2_n_0 ),
        .I3(data2[3]),
        .I4(\mcp1_rx_64_data_out[15]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[11]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0000AC0A)) 
    \mcp1_rx_64_data_out[11]_i_2 
       (.I0(mcp1_dec_c1[3]),
        .I1(data3[11]),
        .I2(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I3(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF0044007400)) 
    \mcp1_rx_64_data_out[11]_i_3 
       (.I0(mcp1_dec_c1[3]),
        .I1(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I3(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I4(data3[11]),
        .I5(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[11]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h22002200F2D0FFD0)) 
    \mcp1_rx_64_data_out[12]_i_1 
       (.I0(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I2(\mcp1_rx_64_data_out[12]_i_2_n_0 ),
        .I3(data2[4]),
        .I4(\mcp1_rx_64_data_out[15]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[12]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0000AC0A)) 
    \mcp1_rx_64_data_out[12]_i_2 
       (.I0(mcp1_dec_c1[4]),
        .I1(data3[12]),
        .I2(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I3(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF0044007400)) 
    \mcp1_rx_64_data_out[12]_i_3 
       (.I0(mcp1_dec_c1[4]),
        .I1(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I3(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I4(data3[12]),
        .I5(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[12]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h22002200F2D0FFD0)) 
    \mcp1_rx_64_data_out[13]_i_1 
       (.I0(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I2(\mcp1_rx_64_data_out[13]_i_2_n_0 ),
        .I3(data2[5]),
        .I4(\mcp1_rx_64_data_out[15]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[13]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0000AC0A)) 
    \mcp1_rx_64_data_out[13]_i_2 
       (.I0(mcp1_dec_c1[5]),
        .I1(data3[13]),
        .I2(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I3(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF0044007400)) 
    \mcp1_rx_64_data_out[13]_i_3 
       (.I0(mcp1_dec_c1[5]),
        .I1(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I3(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I4(data3[13]),
        .I5(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[13]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h22002200F2D0FFD0)) 
    \mcp1_rx_64_data_out[14]_i_1 
       (.I0(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I2(\mcp1_rx_64_data_out[14]_i_2_n_0 ),
        .I3(data2[6]),
        .I4(\mcp1_rx_64_data_out[15]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[14]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0000AC0A)) 
    \mcp1_rx_64_data_out[14]_i_2 
       (.I0(mcp1_dec_c1[6]),
        .I1(data3[14]),
        .I2(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I3(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[14]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF0044007400)) 
    \mcp1_rx_64_data_out[14]_i_3 
       (.I0(mcp1_dec_c1[6]),
        .I1(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I3(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I4(data3[14]),
        .I5(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[14]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h22002200F2D0FFD0)) 
    \mcp1_rx_64_data_out[15]_i_1 
       (.I0(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I2(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .I3(data2[7]),
        .I4(\mcp1_rx_64_data_out[15]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[15]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0000AC0A)) 
    \mcp1_rx_64_data_out[15]_i_2 
       (.I0(mcp1_dec_c1[7]),
        .I1(data3[15]),
        .I2(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I3(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[15]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT3 #(
    .INIT(8'h2D)) 
    \mcp1_rx_64_data_out[15]_i_3 
       (.I0(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[15]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF0044007400)) 
    \mcp1_rx_64_data_out[15]_i_4 
       (.I0(mcp1_dec_c1[7]),
        .I1(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I3(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I4(data3[15]),
        .I5(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[15]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FB08FB08FBFB)) 
    \mcp1_rx_64_data_out[16]_i_1 
       (.I0(data3[8]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[16]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[16]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[16]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF00F2000000F200)) 
    \mcp1_rx_64_data_out[16]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I2(mcp1_dec_c2[0]),
        .I3(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I5(data4[16]),
        .O(\mcp1_rx_64_data_out[16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00F0FFFF350335F3)) 
    \mcp1_rx_64_data_out[16]_i_3 
       (.I0(data4[16]),
        .I1(mcp1_dec_c2[0]),
        .I2(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I3(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I4(data3[8]),
        .I5(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[16]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAA00AA00EE44EF44)) 
    \mcp1_rx_64_data_out[17]_i_1 
       (.I0(\mcp1_rx_64_ctrl_out[0]_i_5_n_0 ),
        .I1(\mcp1_rx_64_data_out[17]_i_2_n_0 ),
        .I2(\mcp1_rx_64_data_out[55]_i_2_n_0 ),
        .I3(data3[9]),
        .I4(\mcp1_rx_64_data_out[17]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[17]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[17]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0000CB08)) 
    \mcp1_rx_64_data_out[17]_i_2 
       (.I0(data4[17]),
        .I1(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I3(mcp1_dec_c2[1]),
        .I4(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[17]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT3 #(
    .INIT(8'h0D)) 
    \mcp1_rx_64_data_out[17]_i_3 
       (.I0(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[17]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF002F002F00)) 
    \mcp1_rx_64_data_out[17]_i_4 
       (.I0(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I2(mcp1_dec_c2[1]),
        .I3(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I4(data4[17]),
        .I5(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[17]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \mcp1_rx_64_data_out[18]_i_1 
       (.I0(data3[10]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[18]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[18]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEAE4404FFEFFAEF)) 
    \mcp1_rx_64_data_out[18]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I1(data3[10]),
        .I2(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I3(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I4(data4[18]),
        .I5(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[18]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[19]_i_1 
       (.I0(data3[11]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[19]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[19]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[19]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF0FFF022)) 
    \mcp1_rx_64_data_out[19]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I2(data4[19]),
        .I3(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I4(mcp1_dec_c2[3]),
        .O(\mcp1_rx_64_data_out[19]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hC0F0C0F0FCBB3088)) 
    \mcp1_rx_64_data_out[19]_i_3 
       (.I0(data4[19]),
        .I1(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I2(data3[11]),
        .I3(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I4(mcp1_dec_c2[3]),
        .I5(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[19]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hABABABABFF00ABAB)) 
    \mcp1_rx_64_data_out[1]_i_1 
       (.I0(\mcp1_rx_64_data_out[1]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[1]_i_3_n_0 ),
        .I3(mcp1_block_field_reg[1]),
        .I4(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I5(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .O(\mcp1_rx_64_data_out[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF0004040F000F000)) 
    \mcp1_rx_64_data_out[1]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I1(mcp1_dec_c0[1]),
        .I2(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I3(data2[1]),
        .I4(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h11FFAFBB11AA0511)) 
    \mcp1_rx_64_data_out[1]_i_3 
       (.I0(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I1(mcp1_dec_c0[1]),
        .I2(data2[1]),
        .I3(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I5(\mcp1_rx_64_data_out[5]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[20]_i_1 
       (.I0(data3[12]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[20]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[20]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[20]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF0FFF022)) 
    \mcp1_rx_64_data_out[20]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I2(data4[20]),
        .I3(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I4(mcp1_dec_c2[4]),
        .O(\mcp1_rx_64_data_out[20]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hC0F0C0F0FCBB3088)) 
    \mcp1_rx_64_data_out[20]_i_3 
       (.I0(data4[20]),
        .I1(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I2(data3[12]),
        .I3(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I4(mcp1_dec_c2[4]),
        .I5(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[20]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[21]_i_1 
       (.I0(data3[13]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[21]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[21]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[21]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF0FFF022)) 
    \mcp1_rx_64_data_out[21]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I2(data4[21]),
        .I3(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I4(mcp1_dec_c2[5]),
        .O(\mcp1_rx_64_data_out[21]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hC0F0C0F0FCBB3088)) 
    \mcp1_rx_64_data_out[21]_i_3 
       (.I0(data4[21]),
        .I1(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I2(data3[13]),
        .I3(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I4(mcp1_dec_c2[5]),
        .I5(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[21]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[22]_i_1 
       (.I0(data3[14]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[22]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[22]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[22]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF0FFF022)) 
    \mcp1_rx_64_data_out[22]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I2(data4[22]),
        .I3(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I4(mcp1_dec_c2[6]),
        .O(\mcp1_rx_64_data_out[22]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hC0F0C0F0FCBB3088)) 
    \mcp1_rx_64_data_out[22]_i_3 
       (.I0(data4[22]),
        .I1(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I2(data3[14]),
        .I3(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I4(mcp1_dec_c2[6]),
        .I5(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[22]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[23]_i_1 
       (.I0(data3[15]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[23]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[23]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[23]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT5 #(
    .INIT(32'hF0FFF022)) 
    \mcp1_rx_64_data_out[23]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I2(data4[23]),
        .I3(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I4(mcp1_dec_c2[7]),
        .O(\mcp1_rx_64_data_out[23]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFF0F0000CAFCCA0C)) 
    \mcp1_rx_64_data_out[23]_i_3 
       (.I0(data4[23]),
        .I1(mcp1_dec_c2[7]),
        .I2(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I3(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I4(data3[15]),
        .I5(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[23]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hABABABABFF00ABAB)) 
    \mcp1_rx_64_data_out[24]_i_1 
       (.I0(\mcp1_rx_64_data_out[24]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[24]_i_3_n_0 ),
        .I3(data4[16]),
        .I4(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I5(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .O(\mcp1_rx_64_data_out[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF200F200FF000000)) 
    \mcp1_rx_64_data_out[24]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I2(data5[24]),
        .I3(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I4(mcp1_dec_c3[0]),
        .I5(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[24]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h1B0A051B1B5F051B)) 
    \mcp1_rx_64_data_out[24]_i_3 
       (.I0(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I1(mcp1_dec_c3[0]),
        .I2(data4[16]),
        .I3(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I5(data5[24]),
        .O(\mcp1_rx_64_data_out[24]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h08080808FBFBFB08)) 
    \mcp1_rx_64_data_out[25]_i_1 
       (.I0(data4[17]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[25]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[25]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[25]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[25]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hECEEECEEFCCFCCCC)) 
    \mcp1_rx_64_data_out[25]_i_2 
       (.I0(data4[17]),
        .I1(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I4(mcp1_dec_c3[1]),
        .I5(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[25]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h05400040)) 
    \mcp1_rx_64_data_out[25]_i_3 
       (.I0(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I1(data4[17]),
        .I2(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I3(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I4(data5[25]),
        .O(\mcp1_rx_64_data_out[25]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h2F002F000000FF00)) 
    \mcp1_rx_64_data_out[25]_i_4 
       (.I0(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I2(data5[25]),
        .I3(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I4(mcp1_dec_c3[1]),
        .I5(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[25]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \mcp1_rx_64_data_out[26]_i_1 
       (.I0(data4[18]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[26]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[26]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hDF8FFEDF8F8AAE8F)) 
    \mcp1_rx_64_data_out[26]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I1(data5[26]),
        .I2(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I3(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I5(data4[18]),
        .O(\mcp1_rx_64_data_out[26]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hEF20EF20EF20EFEF)) 
    \mcp1_rx_64_data_out[27]_i_1 
       (.I0(data4[19]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I3(\mcp1_rx_64_data_out[27]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[27]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[27]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF200F200FF000000)) 
    \mcp1_rx_64_data_out[27]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I2(data5[27]),
        .I3(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I4(mcp1_dec_c3[3]),
        .I5(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[27]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h11AA0511BBFFAFBB)) 
    \mcp1_rx_64_data_out[27]_i_3 
       (.I0(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I1(mcp1_dec_c3[3]),
        .I2(data5[27]),
        .I3(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I5(data4[19]),
        .O(\mcp1_rx_64_data_out[27]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hEF20EF20EF20EFEF)) 
    \mcp1_rx_64_data_out[28]_i_1 
       (.I0(data4[20]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I3(\mcp1_rx_64_data_out[28]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[28]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[28]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF200F200FF000000)) 
    \mcp1_rx_64_data_out[28]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I2(data5[28]),
        .I3(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I4(mcp1_dec_c3[4]),
        .I5(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[28]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h11AA0511BBFFAFBB)) 
    \mcp1_rx_64_data_out[28]_i_3 
       (.I0(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I1(mcp1_dec_c3[4]),
        .I2(data5[28]),
        .I3(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I5(data4[20]),
        .O(\mcp1_rx_64_data_out[28]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hEF20EF20EF20EFEF)) 
    \mcp1_rx_64_data_out[29]_i_1 
       (.I0(data4[21]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I3(\mcp1_rx_64_data_out[29]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[29]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[29]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF200F200FF000000)) 
    \mcp1_rx_64_data_out[29]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I2(data5[29]),
        .I3(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I4(mcp1_dec_c3[5]),
        .I5(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[29]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h11AA0511BBFFAFBB)) 
    \mcp1_rx_64_data_out[29]_i_3 
       (.I0(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I1(mcp1_dec_c3[5]),
        .I2(data5[29]),
        .I3(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I5(data4[21]),
        .O(\mcp1_rx_64_data_out[29]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEAAAAAAFEAA)) 
    \mcp1_rx_64_data_out[2]_i_1 
       (.I0(\mcp1_rx_64_data_out[2]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[2]_i_3_n_0 ),
        .I2(data2[2]),
        .I3(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I4(\mcp1_rx_64_ctrl_out[0]_i_5_n_0 ),
        .I5(mcp1_block_field_reg[2]),
        .O(\mcp1_rx_64_data_out[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000DDCDDDD)) 
    \mcp1_rx_64_data_out[2]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I1(data2[2]),
        .I2(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I3(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I5(\mcp1_rx_64_ctrl_out[0]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_rx_64_data_out[2]_i_3 
       (.I0(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hEF20EF20EF20EFEF)) 
    \mcp1_rx_64_data_out[30]_i_1 
       (.I0(data4[22]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I3(\mcp1_rx_64_data_out[30]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[30]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF200F200FF000000)) 
    \mcp1_rx_64_data_out[30]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I2(data5[30]),
        .I3(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I4(mcp1_dec_c3[6]),
        .I5(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[30]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h11AA0511BBFFAFBB)) 
    \mcp1_rx_64_data_out[30]_i_3 
       (.I0(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I1(mcp1_dec_c3[6]),
        .I2(data5[30]),
        .I3(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I5(data4[22]),
        .O(\mcp1_rx_64_data_out[30]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hEF20EF20EF20EFEF)) 
    \mcp1_rx_64_data_out[31]_i_1 
       (.I0(data4[23]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I3(\mcp1_rx_64_data_out[31]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[31]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF200F200FF000000)) 
    \mcp1_rx_64_data_out[31]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I2(data5[31]),
        .I3(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I4(mcp1_dec_c3[7]),
        .I5(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h11AA0511BBFFAFBB)) 
    \mcp1_rx_64_data_out[31]_i_3 
       (.I0(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I1(mcp1_dec_c3[7]),
        .I2(data5[31]),
        .I3(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I5(data4[23]),
        .O(\mcp1_rx_64_data_out[31]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFBFBFBFB080808FB)) 
    \mcp1_rx_64_data_out[32]_i_1 
       (.I0(data5[24]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[32]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[32]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[32]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h50F0F03F50FFF03F)) 
    \mcp1_rx_64_data_out[32]_i_2 
       (.I0(data5[24]),
        .I1(mcp1_dec_c4[0]),
        .I2(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I3(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I5(data6[32]),
        .O(\mcp1_rx_64_data_out[32]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFA00D800FF000000)) 
    \mcp1_rx_64_data_out[32]_i_3 
       (.I0(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I2(data6[32]),
        .I3(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I4(mcp1_dec_c4[0]),
        .I5(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[32]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[33]_i_1 
       (.I0(data5[25]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[33]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[33]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[33]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h72FF5000)) 
    \mcp1_rx_64_data_out[33]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I2(data6[33]),
        .I3(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I4(mcp1_dec_c4[1]),
        .O(\mcp1_rx_64_data_out[33]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00C0FFACFFFFFFAC)) 
    \mcp1_rx_64_data_out[33]_i_3 
       (.I0(data6[33]),
        .I1(\mcp1_rx_64_data_out[37]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[33]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[33]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h3DFD)) 
    \mcp1_rx_64_data_out[33]_i_4 
       (.I0(mcp1_dec_c4[1]),
        .I1(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I3(data5[25]),
        .O(\mcp1_rx_64_data_out[33]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \mcp1_rx_64_data_out[34]_i_1 
       (.I0(data5[26]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[34]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[34]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFAAAFEFEDADADFDF)) 
    \mcp1_rx_64_data_out[34]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I1(data6[34]),
        .I2(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I3(data5[26]),
        .I4(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I5(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[34]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[35]_i_1 
       (.I0(data5[27]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[35]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[35]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[35]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFDA8F0F0)) 
    \mcp1_rx_64_data_out[35]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I2(mcp1_dec_c4[3]),
        .I3(data6[35]),
        .I4(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[35]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCFCFFFFFFFF0AFAF)) 
    \mcp1_rx_64_data_out[35]_i_3 
       (.I0(mcp1_dec_c4[3]),
        .I1(data5[27]),
        .I2(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I3(data6[35]),
        .I4(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[35]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[36]_i_1 
       (.I0(data5[28]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[36]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[36]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[36]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT5 #(
    .INIT(32'hFDA8F0F0)) 
    \mcp1_rx_64_data_out[36]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I2(mcp1_dec_c4[4]),
        .I3(data6[36]),
        .I4(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[36]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCFCFFFFFFFF0AFAF)) 
    \mcp1_rx_64_data_out[36]_i_3 
       (.I0(mcp1_dec_c4[4]),
        .I1(data5[28]),
        .I2(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I3(data6[36]),
        .I4(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[36]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFBFBFBFB08FB0808)) 
    \mcp1_rx_64_data_out[37]_i_1 
       (.I0(data5[29]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[37]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[37]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[37]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[37]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAABAAAAAAABABAB)) 
    \mcp1_rx_64_data_out[37]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I2(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I3(data6[37]),
        .I4(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[37]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[37]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF5DD55FFF5DD5555)) 
    \mcp1_rx_64_data_out[37]_i_3 
       (.I0(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I1(\mcp1_rx_64_data_out[37]_i_5_n_0 ),
        .I2(data5[29]),
        .I3(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I5(mcp1_dec_c4[5]),
        .O(\mcp1_rx_64_data_out[37]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFA00FF00D8000000)) 
    \mcp1_rx_64_data_out[37]_i_4 
       (.I0(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I2(data6[37]),
        .I3(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I5(mcp1_dec_c4[5]),
        .O(\mcp1_rx_64_data_out[37]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h7FFE)) 
    \mcp1_rx_64_data_out[37]_i_5 
       (.I0(data5[30]),
        .I1(data5[29]),
        .I2(data5[31]),
        .I3(data5[28]),
        .O(\mcp1_rx_64_data_out[37]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFAAFFAEAAAAAAAE)) 
    \mcp1_rx_64_data_out[38]_i_1 
       (.I0(\mcp1_rx_64_data_out[38]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[38]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[38]_i_4_n_0 ),
        .I3(\mcp1_rx_64_ctrl_out[0]_i_5_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I5(data5[30]),
        .O(\mcp1_rx_64_data_out[38]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FAFFD800)) 
    \mcp1_rx_64_data_out[38]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I2(data6[38]),
        .I3(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I4(mcp1_dec_c4[6]),
        .I5(\mcp1_rx_64_data_out[38]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[38]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h05D500D0FFFFFFFF)) 
    \mcp1_rx_64_data_out[38]_i_3 
       (.I0(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I1(data5[30]),
        .I2(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[38]_i_6_n_0 ),
        .I4(mcp1_dec_c4[6]),
        .I5(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[38]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h0000004E)) 
    \mcp1_rx_64_data_out[38]_i_4 
       (.I0(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[38]_i_6_n_0 ),
        .I2(data6[38]),
        .I3(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[38]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    \mcp1_rx_64_data_out[38]_i_5 
       (.I0(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[38]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \mcp1_rx_64_data_out[38]_i_6 
       (.I0(data5[28]),
        .I1(data5[31]),
        .I2(data5[29]),
        .I3(data5[30]),
        .O(\mcp1_rx_64_data_out[38]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFBFBFBFB080808FB)) 
    \mcp1_rx_64_data_out[39]_i_1 
       (.I0(data5[31]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[39]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[39]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[39]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h888B888B88BB8888)) 
    \mcp1_rx_64_data_out[39]_i_2 
       (.I0(\mcp1_rx_64_data_out[39]_i_4_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I2(data6[39]),
        .I3(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[39]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[39]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFA00D800FF000000)) 
    \mcp1_rx_64_data_out[39]_i_3 
       (.I0(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I2(data6[39]),
        .I3(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I4(mcp1_dec_c4[7]),
        .I5(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[39]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h5050C0CF)) 
    \mcp1_rx_64_data_out[39]_i_4 
       (.I0(data5[31]),
        .I1(\mcp1_rx_64_data_out[39]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I3(mcp1_dec_c4[7]),
        .I4(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[39]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \mcp1_rx_64_data_out[39]_i_5 
       (.I0(data5[28]),
        .I1(data5[31]),
        .I2(data5[29]),
        .I3(data5[30]),
        .O(\mcp1_rx_64_data_out[39]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \mcp1_rx_64_data_out[3]_i_1 
       (.I0(mcp1_block_field_reg[3]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[3]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF50EF40FFEFBEAE)) 
    \mcp1_rx_64_data_out[3]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I2(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I3(data2[3]),
        .I4(mcp1_dec_c0[3]),
        .I5(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[40]_i_1 
       (.I0(data6[32]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[40]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[40]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[40]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT5 #(
    .INIT(32'hEFFF4500)) 
    \mcp1_rx_64_data_out[40]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I1(data7[40]),
        .I2(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I3(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I4(mcp1_dec_c5[0]),
        .O(\mcp1_rx_64_data_out[40]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF0F330B8F0C030B8)) 
    \mcp1_rx_64_data_out[40]_i_3 
       (.I0(mcp1_dec_c5[0]),
        .I1(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I2(data6[32]),
        .I3(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I5(data7[40]),
        .O(\mcp1_rx_64_data_out[40]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[41]_i_1 
       (.I0(data6[33]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[41]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[41]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[41]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT5 #(
    .INIT(32'hF8FF0800)) 
    \mcp1_rx_64_data_out[41]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I1(data7[41]),
        .I2(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I4(mcp1_dec_c5[1]),
        .O(\mcp1_rx_64_data_out[41]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF0F330B8F0C030B8)) 
    \mcp1_rx_64_data_out[41]_i_3 
       (.I0(mcp1_dec_c5[1]),
        .I1(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I2(data6[33]),
        .I3(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I5(data7[41]),
        .O(\mcp1_rx_64_data_out[41]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \mcp1_rx_64_data_out[42]_i_1 
       (.I0(data6[34]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[42]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[42]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFCFFFFFFA0AAAFCA)) 
    \mcp1_rx_64_data_out[42]_i_2 
       (.I0(data6[34]),
        .I1(data7[42]),
        .I2(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I5(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[42]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[43]_i_1 
       (.I0(data6[35]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[43]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[43]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[43]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF0DDF0F0)) 
    \mcp1_rx_64_data_out[43]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I1(data7[43]),
        .I2(mcp1_dec_c5[3]),
        .I3(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[43]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF0F330B8F0C030B8)) 
    \mcp1_rx_64_data_out[43]_i_3 
       (.I0(mcp1_dec_c5[3]),
        .I1(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I2(data6[35]),
        .I3(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I5(data7[43]),
        .O(\mcp1_rx_64_data_out[43]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[44]_i_1 
       (.I0(data6[36]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[44]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[44]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[44]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF0DDF0F0)) 
    \mcp1_rx_64_data_out[44]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I1(data7[44]),
        .I2(mcp1_dec_c5[4]),
        .I3(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[44]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF0F330B8F0C030B8)) 
    \mcp1_rx_64_data_out[44]_i_3 
       (.I0(mcp1_dec_c5[4]),
        .I1(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I2(data6[36]),
        .I3(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I5(data7[44]),
        .O(\mcp1_rx_64_data_out[44]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[45]_i_1 
       (.I0(data6[37]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[45]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[45]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[45]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF0DDF0F0)) 
    \mcp1_rx_64_data_out[45]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I1(data7[45]),
        .I2(mcp1_dec_c5[5]),
        .I3(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[45]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF0F330B8F0C030B8)) 
    \mcp1_rx_64_data_out[45]_i_3 
       (.I0(mcp1_dec_c5[5]),
        .I1(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I2(data6[37]),
        .I3(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I5(data7[45]),
        .O(\mcp1_rx_64_data_out[45]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[46]_i_1 
       (.I0(data6[38]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[46]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[46]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[46]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF0DDF0F0)) 
    \mcp1_rx_64_data_out[46]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I1(data7[46]),
        .I2(mcp1_dec_c5[6]),
        .I3(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[46]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF0F330B8F0C030B8)) 
    \mcp1_rx_64_data_out[46]_i_3 
       (.I0(mcp1_dec_c5[6]),
        .I1(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I2(data6[38]),
        .I3(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I5(data7[46]),
        .O(\mcp1_rx_64_data_out[46]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[47]_i_1 
       (.I0(data6[39]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[47]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[47]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[47]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF0BBF0F0)) 
    \mcp1_rx_64_data_out[47]_i_2 
       (.I0(data7[47]),
        .I1(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I2(mcp1_dec_c5[7]),
        .I3(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[47]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF0F330B8F0C030B8)) 
    \mcp1_rx_64_data_out[47]_i_3 
       (.I0(mcp1_dec_c5[7]),
        .I1(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I2(data6[39]),
        .I3(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I5(data7[47]),
        .O(\mcp1_rx_64_data_out[47]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8BBBBBBB88888)) 
    \mcp1_rx_64_data_out[48]_i_1 
       (.I0(data7[40]),
        .I1(\mcp1_rx_64_ctrl_out[0]_i_5_n_0 ),
        .I2(mcp1_dec_c6[0]),
        .I3(\mcp1_rx_64_data_out[55]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[48]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[48]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF0F330B8F0C030B8)) 
    \mcp1_rx_64_data_out[48]_i_2 
       (.I0(mcp1_dec_c6[0]),
        .I1(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I2(data7[40]),
        .I3(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I5(data8[48]),
        .O(\mcp1_rx_64_data_out[48]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h88B8BBBB88B88888)) 
    \mcp1_rx_64_data_out[49]_i_1 
       (.I0(data7[41]),
        .I1(\mcp1_rx_64_ctrl_out[0]_i_5_n_0 ),
        .I2(mcp1_dec_c6[1]),
        .I3(\mcp1_rx_64_data_out[55]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[49]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[49]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF0F330B8F0C030B8)) 
    \mcp1_rx_64_data_out[49]_i_2 
       (.I0(mcp1_dec_c6[1]),
        .I1(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I2(data7[41]),
        .I3(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I5(data8[49]),
        .O(\mcp1_rx_64_data_out[49]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \mcp1_rx_64_data_out[4]_i_1 
       (.I0(mcp1_block_field_reg[4]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[4]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF50EF40FFEFBEAE)) 
    \mcp1_rx_64_data_out[4]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I2(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I3(data2[4]),
        .I4(mcp1_dec_c0[4]),
        .I5(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \mcp1_rx_64_data_out[50]_i_1 
       (.I0(data7[42]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[50]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[50]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFE023F30)) 
    \mcp1_rx_64_data_out[50]_i_2 
       (.I0(data8[50]),
        .I1(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I2(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I3(data7[42]),
        .I4(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[50]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8BBBBBBB88888)) 
    \mcp1_rx_64_data_out[51]_i_1 
       (.I0(data7[43]),
        .I1(\mcp1_rx_64_ctrl_out[0]_i_5_n_0 ),
        .I2(mcp1_dec_c6[3]),
        .I3(\mcp1_rx_64_data_out[55]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[51]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[51]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF0F3F0C030B830B8)) 
    \mcp1_rx_64_data_out[51]_i_2 
       (.I0(mcp1_dec_c6[3]),
        .I1(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I2(data7[43]),
        .I3(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I4(data8[51]),
        .I5(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[51]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8BBBBBBB88888)) 
    \mcp1_rx_64_data_out[52]_i_1 
       (.I0(data7[44]),
        .I1(\mcp1_rx_64_ctrl_out[0]_i_5_n_0 ),
        .I2(mcp1_dec_c6[4]),
        .I3(\mcp1_rx_64_data_out[55]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[52]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[52]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF0F3F0C030B830B8)) 
    \mcp1_rx_64_data_out[52]_i_2 
       (.I0(mcp1_dec_c6[4]),
        .I1(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I2(data7[44]),
        .I3(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I4(data8[52]),
        .I5(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[52]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8BBBBBBB88888)) 
    \mcp1_rx_64_data_out[53]_i_1 
       (.I0(data7[45]),
        .I1(\mcp1_rx_64_ctrl_out[0]_i_5_n_0 ),
        .I2(mcp1_dec_c6[5]),
        .I3(\mcp1_rx_64_data_out[55]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[53]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[53]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF0F3F0C030B830B8)) 
    \mcp1_rx_64_data_out[53]_i_2 
       (.I0(mcp1_dec_c6[5]),
        .I1(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I2(data7[45]),
        .I3(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I4(data8[53]),
        .I5(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[53]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8BBBBBBB88888)) 
    \mcp1_rx_64_data_out[54]_i_1 
       (.I0(data7[46]),
        .I1(\mcp1_rx_64_ctrl_out[0]_i_5_n_0 ),
        .I2(mcp1_dec_c6[6]),
        .I3(\mcp1_rx_64_data_out[55]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[54]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[54]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF0F3F0C030B830B8)) 
    \mcp1_rx_64_data_out[54]_i_2 
       (.I0(mcp1_dec_c6[6]),
        .I1(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I2(data7[46]),
        .I3(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I4(data8[54]),
        .I5(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[54]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8BBBBBBB88888)) 
    \mcp1_rx_64_data_out[55]_i_1 
       (.I0(data7[47]),
        .I1(\mcp1_rx_64_ctrl_out[0]_i_5_n_0 ),
        .I2(mcp1_dec_c6[7]),
        .I3(\mcp1_rx_64_data_out[55]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[55]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \mcp1_rx_64_data_out[55]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I2(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[55]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF0F3F0C030B830B8)) 
    \mcp1_rx_64_data_out[55]_i_3 
       (.I0(mcp1_dec_c6[7]),
        .I1(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I2(data7[47]),
        .I3(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I4(data8[55]),
        .I5(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[55]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \mcp1_rx_64_data_out[56]_i_1 
       (.I0(data8[48]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[56]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[56]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF0000AFBAACBA)) 
    \mcp1_rx_64_data_out[56]_i_2 
       (.I0(data8[48]),
        .I1(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I2(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I4(mcp1_dec_c7[0]),
        .I5(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[56]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \mcp1_rx_64_data_out[57]_i_1 
       (.I0(data8[49]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[57]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[57]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hDD88D8888D88CDC8)) 
    \mcp1_rx_64_data_out[57]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I1(mcp1_dec_c7[1]),
        .I2(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I3(data8[49]),
        .I4(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I5(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[57]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAFFFFAAAAA3BA)) 
    \mcp1_rx_64_data_out[58]_i_1 
       (.I0(data8[50]),
        .I1(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I2(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I4(\mcp1_rx_64_ctrl_out[0]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[58]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h90000C6C03936000)) 
    \mcp1_rx_64_data_out[58]_i_10 
       (.I0(mcp1_block_field_reg[5]),
        .I1(mcp1_block_field_reg[0]),
        .I2(mcp1_block_field_reg[2]),
        .I3(mcp1_block_field_reg[4]),
        .I4(mcp1_block_field_reg[3]),
        .I5(mcp1_block_field_reg[1]),
        .O(\mcp1_rx_64_data_out[58]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_rx_64_data_out[58]_i_11 
       (.I0(mcp1_block_field_reg[3]),
        .I1(mcp1_block_field_reg[6]),
        .O(\mcp1_rx_64_data_out[58]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF609FA05FFFFF)) 
    \mcp1_rx_64_data_out[58]_i_12 
       (.I0(mcp1_block_field_reg[3]),
        .I1(mcp1_block_field_reg[5]),
        .I2(mcp1_block_field_reg[1]),
        .I3(mcp1_block_field_reg[0]),
        .I4(\mcp1_rx_64_data_out[58]_i_15_n_0 ),
        .I5(mcp1_block_field_reg[2]),
        .O(\mcp1_rx_64_data_out[58]_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT5 #(
    .INIT(32'h7EFFE33D)) 
    \mcp1_rx_64_data_out[58]_i_13 
       (.I0(mcp1_block_field_reg[7]),
        .I1(mcp1_block_field_reg[3]),
        .I2(mcp1_block_field_reg[4]),
        .I3(mcp1_block_field_reg[5]),
        .I4(mcp1_block_field_reg[6]),
        .O(\mcp1_rx_64_data_out[58]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hFFFBBDEFEFFDFB7F)) 
    \mcp1_rx_64_data_out[58]_i_14 
       (.I0(mcp1_block_field_reg[0]),
        .I1(mcp1_block_field_reg[2]),
        .I2(mcp1_block_field_reg[1]),
        .I3(mcp1_block_field_reg[3]),
        .I4(mcp1_block_field_reg[5]),
        .I5(mcp1_block_field_reg[4]),
        .O(\mcp1_rx_64_data_out[58]_i_14_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT3 #(
    .INIT(8'h68)) 
    \mcp1_rx_64_data_out[58]_i_15 
       (.I0(mcp1_block_field_reg[4]),
        .I1(mcp1_block_field_reg[5]),
        .I2(mcp1_block_field_reg[7]),
        .O(\mcp1_rx_64_data_out[58]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hFFF9FFFF)) 
    \mcp1_rx_64_data_out[58]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_6_n_0 ),
        .I1(mcp1_block_field_reg[2]),
        .I2(\mcp1_rx_64_data_out[58]_i_7_n_0 ),
        .I3(\mcp1_rx_64_data_out[58]_i_8_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_9_n_0 ),
        .O(\mcp1_rx_64_data_out[58]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0082000020000080)) 
    \mcp1_rx_64_data_out[58]_i_3 
       (.I0(\mcp1_rx_64_data_out[58]_i_10_n_0 ),
        .I1(mcp1_block_field_reg[5]),
        .I2(mcp1_block_field_reg[4]),
        .I3(\mcp1_rx_64_data_out[58]_i_11_n_0 ),
        .I4(mcp1_block_field_reg[2]),
        .I5(mcp1_block_field_reg[7]),
        .O(\mcp1_rx_64_data_out[58]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hEFEFFEEFFEEFEFEF)) 
    \mcp1_rx_64_data_out[58]_i_4 
       (.I0(\mcp1_rx_64_data_out[58]_i_12_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_13_n_0 ),
        .I2(mcp1_block_field_reg[1]),
        .I3(mcp1_block_field_reg[3]),
        .I4(mcp1_block_field_reg[2]),
        .I5(mcp1_block_field_reg[4]),
        .O(\mcp1_rx_64_data_out[58]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h00000000423030C0)) 
    \mcp1_rx_64_data_out[58]_i_5 
       (.I0(mcp1_block_field_reg[4]),
        .I1(mcp1_block_field_reg[6]),
        .I2(mcp1_block_field_reg[7]),
        .I3(mcp1_block_field_reg[2]),
        .I4(mcp1_block_field_reg[3]),
        .I5(\mcp1_rx_64_data_out[58]_i_14_n_0 ),
        .O(\mcp1_rx_64_data_out[58]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT3 #(
    .INIT(8'h45)) 
    \mcp1_rx_64_data_out[58]_i_6 
       (.I0(mcp1_block_field_reg[5]),
        .I1(mcp1_block_field_reg[7]),
        .I2(mcp1_block_field_reg[4]),
        .O(\mcp1_rx_64_data_out[58]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h6FF69999F99FFFFF)) 
    \mcp1_rx_64_data_out[58]_i_7 
       (.I0(mcp1_block_field_reg[2]),
        .I1(mcp1_block_field_reg[1]),
        .I2(mcp1_block_field_reg[6]),
        .I3(mcp1_block_field_reg[5]),
        .I4(mcp1_block_field_reg[4]),
        .I5(mcp1_block_field_reg[3]),
        .O(\mcp1_rx_64_data_out[58]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT4 #(
    .INIT(16'h5A96)) 
    \mcp1_rx_64_data_out[58]_i_8 
       (.I0(mcp1_block_field_reg[0]),
        .I1(mcp1_block_field_reg[2]),
        .I2(mcp1_block_field_reg[3]),
        .I3(mcp1_block_field_reg[5]),
        .O(\mcp1_rx_64_data_out[58]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT4 #(
    .INIT(16'hCC1E)) 
    \mcp1_rx_64_data_out[58]_i_9 
       (.I0(mcp1_block_field_reg[6]),
        .I1(mcp1_block_field_reg[4]),
        .I2(mcp1_block_field_reg[5]),
        .I3(mcp1_block_field_reg[7]),
        .O(\mcp1_rx_64_data_out[58]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \mcp1_rx_64_data_out[59]_i_1 
       (.I0(data8[51]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[59]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[59]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEAFAFBFE40504054)) 
    \mcp1_rx_64_data_out[59]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I2(data8[51]),
        .I3(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I5(mcp1_dec_c7[3]),
        .O(\mcp1_rx_64_data_out[59]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hABABABABFF00ABAB)) 
    \mcp1_rx_64_data_out[5]_i_1 
       (.I0(\mcp1_rx_64_data_out[5]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[5]_i_3_n_0 ),
        .I3(mcp1_block_field_reg[5]),
        .I4(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I5(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .O(\mcp1_rx_64_data_out[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF000FA00F000D800)) 
    \mcp1_rx_64_data_out[5]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I2(data2[5]),
        .I3(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I5(mcp1_dec_c0[5]),
        .O(\mcp1_rx_64_data_out[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h1FAB1A011FFB1A51)) 
    \mcp1_rx_64_data_out[5]_i_3 
       (.I0(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I1(mcp1_dec_c0[5]),
        .I2(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[5]_i_4_n_0 ),
        .I5(data2[5]),
        .O(\mcp1_rx_64_data_out[5]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h8001)) 
    \mcp1_rx_64_data_out[5]_i_4 
       (.I0(data5[26]),
        .I1(data5[25]),
        .I2(data5[27]),
        .I3(data5[24]),
        .O(\mcp1_rx_64_data_out[5]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \mcp1_rx_64_data_out[60]_i_1 
       (.I0(data8[52]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[60]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[60]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEAFAFBFE40504054)) 
    \mcp1_rx_64_data_out[60]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I2(data8[52]),
        .I3(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I5(mcp1_dec_c7[4]),
        .O(\mcp1_rx_64_data_out[60]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \mcp1_rx_64_data_out[61]_i_1 
       (.I0(data8[53]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[61]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[61]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEAFAFBFE40504054)) 
    \mcp1_rx_64_data_out[61]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I2(data8[53]),
        .I3(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I5(mcp1_dec_c7[5]),
        .O(\mcp1_rx_64_data_out[61]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \mcp1_rx_64_data_out[62]_i_1 
       (.I0(data8[54]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[62]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[62]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEAFAFBFE40504054)) 
    \mcp1_rx_64_data_out[62]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I2(data8[54]),
        .I3(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I5(mcp1_dec_c7[6]),
        .O(\mcp1_rx_64_data_out[62]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \mcp1_rx_64_data_out[63]_i_1 
       (.I0(data8[55]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[63]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEAFAFBFE40504054)) 
    \mcp1_rx_64_data_out[63]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I2(data8[55]),
        .I3(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I5(mcp1_dec_c7[7]),
        .O(\mcp1_rx_64_data_out[63]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFBFBFBFB080808FB)) 
    \mcp1_rx_64_data_out[6]_i_1 
       (.I0(mcp1_block_field_reg[6]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[6]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[6]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0F0ABA105F5ABF15)) 
    \mcp1_rx_64_data_out[6]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I1(data2[6]),
        .I2(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[6]_i_4_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I5(mcp1_dec_c0[6]),
        .O(\mcp1_rx_64_data_out[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF000F000FA00D800)) 
    \mcp1_rx_64_data_out[6]_i_3 
       (.I0(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I2(data2[6]),
        .I3(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I4(mcp1_dec_c0[6]),
        .I5(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[6]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \mcp1_rx_64_data_out[6]_i_4 
       (.I0(data5[24]),
        .I1(data5[27]),
        .I2(data5[25]),
        .I3(data5[26]),
        .O(\mcp1_rx_64_data_out[6]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBBBB888B8888)) 
    \mcp1_rx_64_data_out[7]_i_1 
       (.I0(mcp1_block_field_reg[7]),
        .I1(\mcp1_rx_64_ctrl_out[0]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I3(\mcp1_rx_64_data_out[7]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[7]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[7]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \mcp1_rx_64_data_out[7]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I1(data5[24]),
        .I2(data5[27]),
        .I3(data5[25]),
        .I4(data5[26]),
        .I5(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFEEAFFFAAEEAFAA)) 
    \mcp1_rx_64_data_out[7]_i_3 
       (.I0(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I1(data2[7]),
        .I2(\mcp1_rx_64_data_out[7]_i_5_n_0 ),
        .I3(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I5(mcp1_dec_c0[7]),
        .O(\mcp1_rx_64_data_out[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF000FA00F000D800)) 
    \mcp1_rx_64_data_out[7]_i_4 
       (.I0(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I2(data2[7]),
        .I3(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I5(mcp1_dec_c0[7]),
        .O(\mcp1_rx_64_data_out[7]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \mcp1_rx_64_data_out[7]_i_5 
       (.I0(data5[24]),
        .I1(data5[27]),
        .I2(data5[25]),
        .I3(data5[26]),
        .O(\mcp1_rx_64_data_out[7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h22002200F2D0FFD0)) 
    \mcp1_rx_64_data_out[8]_i_1 
       (.I0(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I2(\mcp1_rx_64_data_out[8]_i_2_n_0 ),
        .I3(data2[0]),
        .I4(\mcp1_rx_64_data_out[15]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[8]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0000AC0A)) 
    \mcp1_rx_64_data_out[8]_i_2 
       (.I0(mcp1_dec_c1[0]),
        .I1(data3[8]),
        .I2(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I3(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0A0A0A0A0008AA08)) 
    \mcp1_rx_64_data_out[8]_i_3 
       (.I0(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I2(data3[8]),
        .I3(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I4(mcp1_dec_c1[0]),
        .I5(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[8]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[9]_i_1 
       (.I0(data2[1]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[9]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[9]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[9]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFF00E2C0)) 
    \mcp1_rx_64_data_out[9]_i_2 
       (.I0(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I1(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I2(mcp1_dec_c1[1]),
        .I3(data3[9]),
        .I4(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[9]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF0F000F0CCAAF0CC)) 
    \mcp1_rx_64_data_out[9]_i_3 
       (.I0(data3[9]),
        .I1(mcp1_dec_c1[1]),
        .I2(data2[1]),
        .I3(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[58]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[58]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[9]_i_3_n_0 ));
  FDRE \mcp1_rx_64_data_out_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[0]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[0]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[10] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[10]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[10]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[11] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[11]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[11]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[12] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[12]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[12]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[13] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[13]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[13]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[14] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[14]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[14]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[15] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[15]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[15]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[16] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[16]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[16]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[17] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[17]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[17]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[18] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[18]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[18]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[19] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[19]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[19]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[1]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[1]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[20] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[20]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[20]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[21] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[21]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[21]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[22] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[22]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[22]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[23] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[23]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[23]),
        .R(out));
  FDSE \mcp1_rx_64_data_out_reg[24] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[24]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[24]),
        .S(out));
  FDRE \mcp1_rx_64_data_out_reg[25] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[25]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[25]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[26] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[26]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[26]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[27] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[27]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[27]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[28] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[28]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[28]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[29] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[29]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[29]),
        .R(out));
  FDSE \mcp1_rx_64_data_out_reg[2] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[2]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[2]),
        .S(out));
  FDRE \mcp1_rx_64_data_out_reg[30] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[30]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[30]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[31] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[31]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[31]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[32] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[32]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[32]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[33] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[33]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[33]),
        .R(out));
  FDSE \mcp1_rx_64_data_out_reg[34] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[34]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[34]),
        .S(out));
  FDSE \mcp1_rx_64_data_out_reg[35] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[35]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[35]),
        .S(out));
  FDSE \mcp1_rx_64_data_out_reg[36] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[36]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[36]),
        .S(out));
  FDRE \mcp1_rx_64_data_out_reg[37] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[37]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[37]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[38] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[38]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[38]),
        .R(out));
  FDSE \mcp1_rx_64_data_out_reg[39] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[39]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[39]),
        .S(out));
  FDSE \mcp1_rx_64_data_out_reg[3] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[3]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[3]),
        .S(out));
  FDRE \mcp1_rx_64_data_out_reg[40] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[40]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[40]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[41] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[41]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[41]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[42] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[42]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[42]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[43] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[43]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[43]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[44] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[44]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[44]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[45] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[45]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[45]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[46] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[46]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[46]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[47] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[47]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[47]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[48] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[48]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[48]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[49] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[49]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[49]),
        .R(out));
  FDSE \mcp1_rx_64_data_out_reg[4] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[4]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[4]),
        .S(out));
  FDRE \mcp1_rx_64_data_out_reg[50] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[50]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[50]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[51] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[51]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[51]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[52] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[52]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[52]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[53] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[53]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[53]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[54] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[54]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[54]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[55] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[55]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[55]),
        .R(out));
  FDSE \mcp1_rx_64_data_out_reg[56] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[56]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[56]),
        .S(out));
  FDRE \mcp1_rx_64_data_out_reg[57] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[57]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[57]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[58] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[58]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[58]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[59] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[59]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[59]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[5] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[5]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[5]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[60] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[60]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[60]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[61] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[61]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[61]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[62] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[62]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[62]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[63] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[63]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[63]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[6] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[6]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[6]),
        .R(out));
  FDSE \mcp1_rx_64_data_out_reg[7] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[7]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[7]),
        .S(out));
  FDRE \mcp1_rx_64_data_out_reg[8] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[8]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[8]),
        .R(out));
  FDRE \mcp1_rx_64_data_out_reg[9] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_data_out[9]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[9]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[0]),
        .Q(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[10] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[2]),
        .Q(data2[0]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[11] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[3]),
        .Q(data2[1]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[12] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[4]),
        .Q(data2[2]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[13] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[5]),
        .Q(data2[3]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[14] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[6]),
        .Q(data2[4]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[15] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[7]),
        .Q(data2[5]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[16] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[8]),
        .Q(data2[6]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[17] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[9]),
        .Q(data2[7]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[18] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[10]),
        .Q(data3[8]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[19] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[11]),
        .Q(data3[9]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[1]),
        .Q(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[20] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[12]),
        .Q(data3[10]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[21] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[13]),
        .Q(data3[11]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[22] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[14]),
        .Q(data3[12]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[23] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[15]),
        .Q(data3[13]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[24] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[16]),
        .Q(data3[14]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[25] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[17]),
        .Q(data3[15]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[26] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[18]),
        .Q(data4[16]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[27] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[19]),
        .Q(data4[17]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[28] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[20]),
        .Q(data4[18]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[29] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[21]),
        .Q(data4[19]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[30] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[22]),
        .Q(data4[20]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[31] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[23]),
        .Q(data4[21]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[32] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[24]),
        .Q(data4[22]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[33] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[25]),
        .Q(data4[23]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[34] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[26]),
        .Q(data5[24]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[35] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[27]),
        .Q(data5[25]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[36] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[28]),
        .Q(data5[26]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[37] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[29]),
        .Q(data5[27]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[38] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[30]),
        .Q(data5[28]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[39] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[31]),
        .Q(data5[29]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[40] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[32]),
        .Q(data5[30]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[41] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[33]),
        .Q(data5[31]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[42] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[34]),
        .Q(data6[32]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[43] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[35]),
        .Q(data6[33]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[44] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[36]),
        .Q(data6[34]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[45] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[37]),
        .Q(data6[35]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[46] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[38]),
        .Q(data6[36]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[47] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[39]),
        .Q(data6[37]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[48] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[40]),
        .Q(data6[38]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[49] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[41]),
        .Q(data6[39]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[50] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[42]),
        .Q(data7[40]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[51] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[43]),
        .Q(data7[41]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[52] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[44]),
        .Q(data7[42]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[53] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[45]),
        .Q(data7[43]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[54] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[46]),
        .Q(data7[44]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[55] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[47]),
        .Q(data7[45]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[56] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[48]),
        .Q(data7[46]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[57] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[49]),
        .Q(data7[47]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[58] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[50]),
        .Q(data8[48]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[59] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[51]),
        .Q(data8[49]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[60] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[52]),
        .Q(data8[50]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[61] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[53]),
        .Q(data8[51]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[62] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[54]),
        .Q(data8[52]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[63] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[55]),
        .Q(data8[53]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[64] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[56]),
        .Q(data8[54]),
        .R(out));
  FDRE \mcp1_rx_66_enc_reg_reg[65] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc_reg[57]),
        .Q(data8[55]),
        .R(out));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT4 #(
    .INIT(16'hFFF1)) 
    \mcp1_rx_ebuff_ctrl[0]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(\rx_pcs_fsm_i/next_state [2]),
        .I3(\mcp1_rx_64_ctrl_out_reg_n_0_[0] ),
        .O(rx_ebuff_ctrl_t[0]));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_ctrl[1]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(\mcp1_rx_64_ctrl_out_reg_n_0_[1] ),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_ctrl_t[1]));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_ctrl[2]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(\mcp1_rx_64_ctrl_out_reg_n_0_[2] ),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_ctrl_t[2]));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_ctrl[3]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(\mcp1_rx_64_ctrl_out_reg_n_0_[3] ),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_ctrl_t[3]));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT4 #(
    .INIT(16'hFFF1)) 
    \mcp1_rx_ebuff_ctrl[4]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(\rx_pcs_fsm_i/next_state [2]),
        .I3(\mcp1_rx_64_ctrl_out_reg_n_0_[4] ),
        .O(rx_ebuff_ctrl_t[4]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_ctrl[5]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(\mcp1_rx_64_ctrl_out_reg_n_0_[5] ),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_ctrl_t[5]));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_ctrl[6]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(\mcp1_rx_64_ctrl_out_reg_n_0_[6] ),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_ctrl_t[6]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_ctrl[7]_i_2 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(\mcp1_rx_64_ctrl_out_reg_n_0_[7] ),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_ctrl_t[7]));
  LUT6 #(
    .INIT(64'h0300FFFF03000800)) 
    \mcp1_rx_ebuff_ctrl[7]_i_4 
       (.I0(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I1(\FSM_sequential_mcp1_state_reg[2] [0]),
        .I2(\FSM_sequential_mcp1_state_reg[2] [1]),
        .I3(\mcp1_r_type_reg_reg[0]_0 ),
        .I4(\FSM_sequential_mcp1_state_reg[2] [2]),
        .I5(\FSM_sequential_mcp1_state_reg[1] ),
        .O(\rx_pcs_fsm_i/next_state [0]));
  LUT6 #(
    .INIT(64'h404040504040404F)) 
    \mcp1_rx_ebuff_ctrl[7]_i_6 
       (.I0(\FSM_sequential_mcp1_state_reg[2] [1]),
        .I1(\mcp1_r_type_reg_reg[0]_0 ),
        .I2(\FSM_sequential_mcp1_state_reg[2] [2]),
        .I3(r_type[2]),
        .I4(r_type[1]),
        .I5(r_type[0]),
        .O(\mcp1_rx_ebuff_ctrl[7]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h000000000101EF02)) 
    \mcp1_rx_ebuff_ctrl[7]_i_7 
       (.I0(r_type[0]),
        .I1(r_type[2]),
        .I2(r_type[1]),
        .I3(\mcp1_r_type_reg_reg[0]_0 ),
        .I4(\FSM_sequential_mcp1_state_reg[2] [1]),
        .I5(\FSM_sequential_mcp1_state_reg[2] [2]),
        .O(\mcp1_rx_ebuff_ctrl[7]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h05FF04FF05FF0500)) 
    \mcp1_rx_ebuff_ctrl[7]_i_8 
       (.I0(\FSM_sequential_mcp1_state_reg[2] [1]),
        .I1(r_type[1]),
        .I2(\mcp1_r_type_reg_reg[0]_0 ),
        .I3(\FSM_sequential_mcp1_state_reg[2] [2]),
        .I4(r_type[2]),
        .I5(r_type[0]),
        .O(\mcp1_rx_ebuff_ctrl[7]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FCFC00F9)) 
    \mcp1_rx_ebuff_ctrl[7]_i_9 
       (.I0(r_type[1]),
        .I1(r_type[0]),
        .I2(r_type[2]),
        .I3(\mcp1_r_type_reg_reg[0]_0 ),
        .I4(\FSM_sequential_mcp1_state_reg[2] [1]),
        .I5(\FSM_sequential_mcp1_state_reg[2] [2]),
        .O(\mcp1_rx_ebuff_ctrl[7]_i_9_n_0 ));
  MUXF7 \mcp1_rx_ebuff_ctrl_reg[7]_i_3 
       (.I0(\mcp1_rx_ebuff_ctrl[7]_i_6_n_0 ),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_7_n_0 ),
        .O(\rx_pcs_fsm_i/next_state [1]),
        .S(\FSM_sequential_mcp1_state_reg[2] [0]));
  MUXF7 \mcp1_rx_ebuff_ctrl_reg[7]_i_5 
       (.I0(\mcp1_rx_ebuff_ctrl[7]_i_8_n_0 ),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_9_n_0 ),
        .O(\rx_pcs_fsm_i/next_state [2]),
        .S(\FSM_sequential_mcp1_state_reg[2] [0]));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT4 #(
    .INIT(16'h00E0)) 
    \mcp1_rx_ebuff_data[0]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[0]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[0]));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[10]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[10]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[10]));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[11]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[11]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[11]));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[12]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[12]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[12]));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[13]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[13]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[13]));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[14]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[14]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[14]));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[15]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[15]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[15]));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT4 #(
    .INIT(16'h00E0)) 
    \mcp1_rx_ebuff_data[16]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[16]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[16]));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[17]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[17]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[17]));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[18]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[18]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[18]));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[19]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[19]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[19]));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[1]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[1]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[1]));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[20]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[20]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[20]));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[21]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[21]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[21]));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[22]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[22]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[22]));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[23]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[23]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[23]));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT4 #(
    .INIT(16'hEFE1)) 
    \mcp1_rx_ebuff_data[24]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [0]),
        .I1(\rx_pcs_fsm_i/next_state [1]),
        .I2(\rx_pcs_fsm_i/next_state [2]),
        .I3(mcp1_rx_64_data_out[24]),
        .O(rx_ebuff_data_t[24]));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[25]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[25]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[25]));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[26]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[26]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[26]));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[27]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[27]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[27]));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[28]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[28]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[28]));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[29]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[29]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[29]));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT4 #(
    .INIT(16'hFFF1)) 
    \mcp1_rx_ebuff_data[2]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(\rx_pcs_fsm_i/next_state [2]),
        .I3(mcp1_rx_64_data_out[2]),
        .O(rx_ebuff_data_t[2]));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[30]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[30]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[30]));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[31]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[31]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[31]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT4 #(
    .INIT(16'h00E0)) 
    \mcp1_rx_ebuff_data[32]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[32]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[32]));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[33]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[33]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[33]));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT4 #(
    .INIT(16'hFFF1)) 
    \mcp1_rx_ebuff_data[34]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(\rx_pcs_fsm_i/next_state [2]),
        .I3(mcp1_rx_64_data_out[34]),
        .O(rx_ebuff_data_t[34]));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT4 #(
    .INIT(16'hFFF1)) 
    \mcp1_rx_ebuff_data[35]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(\rx_pcs_fsm_i/next_state [2]),
        .I3(mcp1_rx_64_data_out[35]),
        .O(rx_ebuff_data_t[35]));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT4 #(
    .INIT(16'hFFF1)) 
    \mcp1_rx_ebuff_data[36]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(\rx_pcs_fsm_i/next_state [2]),
        .I3(mcp1_rx_64_data_out[36]),
        .O(rx_ebuff_data_t[36]));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[37]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[37]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[37]));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[38]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[38]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[38]));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT4 #(
    .INIT(16'hFFF1)) 
    \mcp1_rx_ebuff_data[39]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(\rx_pcs_fsm_i/next_state [2]),
        .I3(mcp1_rx_64_data_out[39]),
        .O(rx_ebuff_data_t[39]));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT4 #(
    .INIT(16'hFFF1)) 
    \mcp1_rx_ebuff_data[3]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(\rx_pcs_fsm_i/next_state [2]),
        .I3(mcp1_rx_64_data_out[3]),
        .O(rx_ebuff_data_t[3]));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT4 #(
    .INIT(16'h00E0)) 
    \mcp1_rx_ebuff_data[40]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[40]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[40]));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[41]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[41]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[41]));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[42]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[42]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[42]));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[43]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[43]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[43]));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[44]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[44]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[44]));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[45]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[45]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[45]));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[46]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[46]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[46]));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[47]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[47]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[47]));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT4 #(
    .INIT(16'h00E0)) 
    \mcp1_rx_ebuff_data[48]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[48]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[48]));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[49]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[49]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[49]));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT4 #(
    .INIT(16'hFFF1)) 
    \mcp1_rx_ebuff_data[4]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(\rx_pcs_fsm_i/next_state [2]),
        .I3(mcp1_rx_64_data_out[4]),
        .O(rx_ebuff_data_t[4]));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[50]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[50]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[50]));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[51]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[51]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[51]));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[52]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[52]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[52]));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[53]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[53]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[53]));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[54]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[54]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[54]));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[55]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[55]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[55]));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT4 #(
    .INIT(16'hEFE1)) 
    \mcp1_rx_ebuff_data[56]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [0]),
        .I1(\rx_pcs_fsm_i/next_state [1]),
        .I2(\rx_pcs_fsm_i/next_state [2]),
        .I3(mcp1_rx_64_data_out[56]),
        .O(rx_ebuff_data_t[56]));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[57]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[57]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[57]));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[58]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[58]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[58]));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[59]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[59]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[59]));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[5]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[5]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[5]));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[60]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[60]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[60]));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[61]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[61]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[61]));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[62]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[62]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[62]));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[63]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[63]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[63]));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[6]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[6]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[6]));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT4 #(
    .INIT(16'hFFF1)) 
    \mcp1_rx_ebuff_data[7]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(\rx_pcs_fsm_i/next_state [2]),
        .I3(mcp1_rx_64_data_out[7]),
        .O(rx_ebuff_data_t[7]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT4 #(
    .INIT(16'h00E0)) 
    \mcp1_rx_ebuff_data[8]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[8]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[8]));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[9]_i_1 
       (.I0(\rx_pcs_fsm_i/next_state [1]),
        .I1(\rx_pcs_fsm_i/next_state [0]),
        .I2(mcp1_rx_64_data_out[9]),
        .I3(\rx_pcs_fsm_i/next_state [2]),
        .O(rx_ebuff_data_t[9]));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_rx_pcs
   (d1_reg,
    gt_slip_int,
    ber_count_inc,
    d1_reg_0,
    err_block_count_inc,
    pcs_rx_link_up_core_int,
    \mcp1_ctrl_pipe_reg[7] ,
    \mcp1_data_pipe_reg[63] ,
    signal_detect,
    rxusrclk2,
    out,
    \outreg_reg[2] ,
    Q,
    \outreg_reg[15] );
  output d1_reg;
  output gt_slip_int;
  output ber_count_inc;
  output d1_reg_0;
  output err_block_count_inc;
  output pcs_rx_link_up_core_int;
  output [7:0]\mcp1_ctrl_pipe_reg[7] ;
  output [63:0]\mcp1_data_pipe_reg[63] ;
  input signal_detect;
  input rxusrclk2;
  input out;
  input [2:0]\outreg_reg[2] ;
  input [65:0]Q;
  input [15:0]\outreg_reg[15] ;

  wire [65:0]Q;
  wire ber_count_inc;
  wire [7:0]block_field;
  wire d1_reg;
  wire d1_reg_0;
  wire err_block_count_inc;
  wire gt_slip_int;
  wire [7:0]\mcp1_ctrl_pipe_reg[7] ;
  wire [63:0]\mcp1_data_pipe_reg[63] ;
  wire mcp1_err_block_count_inc_out1;
  wire mcp1_err_block_count_inc_out10_out;
  wire mcp1_ignore_next_mismatch;
  wire mcp1_state0;
  wire out;
  wire [15:0]\outreg_reg[15] ;
  wire [2:0]\outreg_reg[2] ;
  wire pcs_rx_link_up_core_int;
  wire [2:0]r_type;
  wire [2:0]r_type_next;
  wire [65:2]rx_66_enc;
  wire [65:0]rx_66_enc_reg;
  wire rx_block_lock_fsm_i_n_3;
  wire rx_block_lock_fsm_i_n_4;
  wire rx_block_lock_fsm_i_n_5;
  wire rx_decoder_i_n_0;
  wire rx_decoder_i_n_4;
  wire rx_decoder_i_n_5;
  wire [7:0]rx_ebuff_ctrl_t;
  wire [63:0]rx_ebuff_data_t;
  wire rx_pcs_fsm_i_n_0;
  wire rx_pcs_fsm_i_n_1;
  wire rx_pcs_fsm_i_n_2;
  wire rx_pcs_fsm_i_n_3;
  wire rx_pcs_fsm_i_n_4;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire rxreset_1;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire rxreset_2;
  (* RTL_KEEP = "true" *) (* equivalent_register_removal = "no" *) wire rxreset_3;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire rxreset_4;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire rxreset_5;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire rxreset_6;
  wire rxusrclk2;
  wire sh_valid;
  wire signal_detect;
  wire signal_ok_reg;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_pcs_descramble pcs_descramble_i
       (.Q(Q[65:2]),
        .out(rxreset_4),
        .rx_66_enc(rx_66_enc[59:2]),
        .rxusrclk2(rxusrclk2));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[60]_i_1 
       (.I0(Q[60]),
        .I1(Q[21]),
        .I2(Q[2]),
        .O(rx_66_enc[60]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[61]_i_1 
       (.I0(Q[61]),
        .I1(Q[22]),
        .I2(Q[3]),
        .O(rx_66_enc[61]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[62]_i_1 
       (.I0(Q[62]),
        .I1(Q[23]),
        .I2(Q[4]),
        .O(rx_66_enc[62]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[63]_i_1 
       (.I0(Q[63]),
        .I1(Q[24]),
        .I2(Q[5]),
        .O(rx_66_enc[63]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[64]_i_1 
       (.I0(Q[64]),
        .I1(Q[25]),
        .I2(Q[6]),
        .O(rx_66_enc[64]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[65]_i_1 
       (.I0(Q[65]),
        .I1(Q[26]),
        .I2(Q[7]),
        .O(rx_66_enc[65]));
  FDRE \rx_66_enc_reg_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[0]),
        .Q(rx_66_enc_reg[0]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[10] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[10]),
        .Q(rx_66_enc_reg[10]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[11] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[11]),
        .Q(rx_66_enc_reg[11]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[12] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[12]),
        .Q(rx_66_enc_reg[12]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[13] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[13]),
        .Q(rx_66_enc_reg[13]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[14] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[14]),
        .Q(rx_66_enc_reg[14]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[15] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[15]),
        .Q(rx_66_enc_reg[15]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[16] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[16]),
        .Q(rx_66_enc_reg[16]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[17] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[17]),
        .Q(rx_66_enc_reg[17]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[18] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[18]),
        .Q(rx_66_enc_reg[18]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[19] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[19]),
        .Q(rx_66_enc_reg[19]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(Q[1]),
        .Q(rx_66_enc_reg[1]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[20] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[20]),
        .Q(rx_66_enc_reg[20]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[21] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[21]),
        .Q(rx_66_enc_reg[21]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[22] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[22]),
        .Q(rx_66_enc_reg[22]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[23] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[23]),
        .Q(rx_66_enc_reg[23]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[24] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[24]),
        .Q(rx_66_enc_reg[24]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[25] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[25]),
        .Q(rx_66_enc_reg[25]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[26] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[26]),
        .Q(rx_66_enc_reg[26]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[27] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[27]),
        .Q(rx_66_enc_reg[27]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[28] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[28]),
        .Q(rx_66_enc_reg[28]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[29] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[29]),
        .Q(rx_66_enc_reg[29]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[2] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[2]),
        .Q(block_field[0]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[30] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[30]),
        .Q(rx_66_enc_reg[30]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[31] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[31]),
        .Q(rx_66_enc_reg[31]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[32] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[32]),
        .Q(rx_66_enc_reg[32]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[33] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[33]),
        .Q(rx_66_enc_reg[33]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[34] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[34]),
        .Q(rx_66_enc_reg[34]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[35] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[35]),
        .Q(rx_66_enc_reg[35]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[36] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[36]),
        .Q(rx_66_enc_reg[36]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[37] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[37]),
        .Q(rx_66_enc_reg[37]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[38] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[38]),
        .Q(rx_66_enc_reg[38]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[39] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[39]),
        .Q(rx_66_enc_reg[39]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[3] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[3]),
        .Q(block_field[1]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[40] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[40]),
        .Q(rx_66_enc_reg[40]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[41] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[41]),
        .Q(rx_66_enc_reg[41]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[42] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[42]),
        .Q(rx_66_enc_reg[42]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[43] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[43]),
        .Q(rx_66_enc_reg[43]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[44] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[44]),
        .Q(rx_66_enc_reg[44]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[45] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[45]),
        .Q(rx_66_enc_reg[45]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[46] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[46]),
        .Q(rx_66_enc_reg[46]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[47] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[47]),
        .Q(rx_66_enc_reg[47]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[48] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[48]),
        .Q(rx_66_enc_reg[48]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[49] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[49]),
        .Q(rx_66_enc_reg[49]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[4] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[4]),
        .Q(block_field[2]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[50] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[50]),
        .Q(rx_66_enc_reg[50]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[51] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[51]),
        .Q(rx_66_enc_reg[51]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[52] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[52]),
        .Q(rx_66_enc_reg[52]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[53] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[53]),
        .Q(rx_66_enc_reg[53]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[54] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[54]),
        .Q(rx_66_enc_reg[54]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[55] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[55]),
        .Q(rx_66_enc_reg[55]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[56] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[56]),
        .Q(rx_66_enc_reg[56]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[57] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[57]),
        .Q(rx_66_enc_reg[57]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[58] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[58]),
        .Q(rx_66_enc_reg[58]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[59] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[59]),
        .Q(rx_66_enc_reg[59]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[5] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[5]),
        .Q(block_field[3]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[60] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[60]),
        .Q(rx_66_enc_reg[60]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[61] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[61]),
        .Q(rx_66_enc_reg[61]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[62] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[62]),
        .Q(rx_66_enc_reg[62]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[63] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[63]),
        .Q(rx_66_enc_reg[63]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[64] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[64]),
        .Q(rx_66_enc_reg[64]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[65] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[65]),
        .Q(rx_66_enc_reg[65]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[6] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[6]),
        .Q(block_field[4]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[7] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[7]),
        .Q(block_field[5]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[8] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[8]),
        .Q(block_field[6]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[9] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_66_enc[9]),
        .Q(block_field[7]),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_rx_ber_mon_fsm rx_ber_mon_fsm_i
       (.Q(Q[1:0]),
        .SR(rx_block_lock_fsm_i_n_4),
        .ber_count_inc(ber_count_inc),
        .d1_reg(d1_reg_0),
        .out(rxreset_2),
        .\outreg_reg[15] (\outreg_reg[15] ),
        .rxusrclk2(rxusrclk2),
        .sh_valid(sh_valid));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_rx_block_lock_fsm rx_block_lock_fsm_i
       (.\FSM_sequential_mcp1_state_reg[2] (rx_block_lock_fsm_i_n_3),
        .\FSM_sequential_mcp1_state_reg[2]_0 (rx_block_lock_fsm_i_n_4),
        .Q(Q[1:0]),
        .SR(mcp1_state0),
        .d1_reg(d1_reg),
        .gt_slip_int(gt_slip_int),
        .mcp1_err_block_count_inc_out_reg(rx_block_lock_fsm_i_n_5),
        .mcp1_hiber_reg(d1_reg_0),
        .out(rxreset_1),
        .\outreg_reg[2] (\outreg_reg[2] [2]),
        .pcs_rx_link_up_core_int(pcs_rx_link_up_core_int),
        .rxreset_2_reg(rxreset_2),
        .rxreset_6_reg(rxreset_6),
        .rxusrclk2(rxusrclk2),
        .sh_valid(sh_valid),
        .signal_ok_reg(signal_ok_reg));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_rx_decoder rx_decoder_i
       (.\FSM_sequential_mcp1_state_reg[0] (rx_decoder_i_n_4),
        .\FSM_sequential_mcp1_state_reg[1] (rx_decoder_i_n_0),
        .\FSM_sequential_mcp1_state_reg[1]_0 (rx_decoder_i_n_5),
        .\FSM_sequential_mcp1_state_reg[2] ({rx_pcs_fsm_i_n_1,rx_pcs_fsm_i_n_2,rx_pcs_fsm_i_n_3}),
        .block_field(block_field),
        .\mcp1_r_type_reg_reg[0]_0 (rx_pcs_fsm_i_n_0),
        .\mcp1_r_type_reg_reg[2]_0 ({r_type_next[2],r_type_next[0]}),
        .out(rxreset_5),
        .r_type(r_type),
        .rx_66_enc_reg({rx_66_enc_reg[65:10],rx_66_enc_reg[1:0]}),
        .rx_ebuff_ctrl_t(rx_ebuff_ctrl_t),
        .rx_ebuff_data_t(rx_ebuff_data_t),
        .rxusrclk2(rxusrclk2));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_rx_pcs_fsm rx_pcs_fsm_i
       (.CO(mcp1_err_block_count_inc_out1),
        .\FSM_sequential_mcp1_state_reg[1]_0 (rx_pcs_fsm_i_n_0),
        .mcp1_b_lock_reg(rx_block_lock_fsm_i_n_5),
        .mcp1_b_lock_reg_0(rx_block_lock_fsm_i_n_3),
        .\mcp1_ctrl_pipe_reg[7] (\mcp1_ctrl_pipe_reg[7] ),
        .\mcp1_data_pipe_reg[63] (\mcp1_data_pipe_reg[63] ),
        .mcp1_err_block_count_inc_out_reg(rx_pcs_fsm_i_n_4),
        .mcp1_ignore_next_mismatch(mcp1_ignore_next_mismatch),
        .\mcp1_r_type_next_reg_reg[2] ({r_type_next[2],r_type_next[0]}),
        .\mcp1_r_type_reg_reg[0] (rx_decoder_i_n_4),
        .\mcp1_r_type_reg_reg[0]_0 (rx_decoder_i_n_5),
        .\mcp1_r_type_reg_reg[1] (rx_decoder_i_n_0),
        .out({rx_pcs_fsm_i_n_1,rx_pcs_fsm_i_n_2,rx_pcs_fsm_i_n_3}),
        .r_type(r_type),
        .\rx_66_enc_reg_reg[65] (mcp1_err_block_count_inc_out10_out),
        .rx_ebuff_ctrl_t(rx_ebuff_ctrl_t),
        .rx_ebuff_data_t(rx_ebuff_data_t),
        .rxreset_3_reg(rxreset_3),
        .rxreset_6_reg(rxreset_6),
        .rxusrclk2(rxusrclk2));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_rx_pcs_test rx_pcs_test_i
       (.CO(mcp1_err_block_count_inc_out1),
        .block_field(block_field),
        .err_block_count_inc(err_block_count_inc),
        .mcp1_b_lock_reg(d1_reg),
        .mcp1_ignore_next_mismatch(mcp1_ignore_next_mismatch),
        .mcp1_ignore_next_mismatch_reg_0(mcp1_err_block_count_inc_out10_out),
        .mcp1_ignore_next_mismatch_reg_1(rx_pcs_fsm_i_n_4),
        .out(rxreset_3),
        .\outreg_reg[2] (\outreg_reg[2] ),
        .rx_66_enc_reg(rx_66_enc_reg[65:10]),
        .rxusrclk2(rxusrclk2));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE rxreset_1_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(out),
        .Q(rxreset_1),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE rxreset_2_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(out),
        .Q(rxreset_2),
        .R(1'b0));
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE rxreset_3_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(out),
        .Q(rxreset_3),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE rxreset_4_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(out),
        .Q(rxreset_4),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE rxreset_5_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(out),
        .Q(rxreset_5),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE rxreset_6_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(out),
        .Q(rxreset_6),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_60 synch_signal_ok
       (.SR(mcp1_state0),
        .out(rxreset_1),
        .rxusrclk2(rxusrclk2),
        .signal_detect(signal_detect),
        .signal_ok_reg(signal_ok_reg));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_rx_pcs_fsm
   (\FSM_sequential_mcp1_state_reg[1]_0 ,
    out,
    mcp1_err_block_count_inc_out_reg,
    \mcp1_ctrl_pipe_reg[7] ,
    \mcp1_data_pipe_reg[63] ,
    r_type,
    \mcp1_r_type_next_reg_reg[2] ,
    mcp1_ignore_next_mismatch,
    CO,
    \rx_66_enc_reg_reg[65] ,
    mcp1_b_lock_reg,
    rxreset_3_reg,
    rxreset_6_reg,
    \mcp1_r_type_reg_reg[0] ,
    \mcp1_r_type_reg_reg[0]_0 ,
    \mcp1_r_type_reg_reg[1] ,
    rx_ebuff_ctrl_t,
    rxusrclk2,
    rx_ebuff_data_t,
    mcp1_b_lock_reg_0);
  output \FSM_sequential_mcp1_state_reg[1]_0 ;
  output [2:0]out;
  output mcp1_err_block_count_inc_out_reg;
  output [7:0]\mcp1_ctrl_pipe_reg[7] ;
  output [63:0]\mcp1_data_pipe_reg[63] ;
  input [2:0]r_type;
  input [1:0]\mcp1_r_type_next_reg_reg[2] ;
  input mcp1_ignore_next_mismatch;
  input [0:0]CO;
  input [0:0]\rx_66_enc_reg_reg[65] ;
  input mcp1_b_lock_reg;
  input rxreset_3_reg;
  input rxreset_6_reg;
  input \mcp1_r_type_reg_reg[0] ;
  input \mcp1_r_type_reg_reg[0]_0 ;
  input \mcp1_r_type_reg_reg[1] ;
  input [7:0]rx_ebuff_ctrl_t;
  input rxusrclk2;
  input [63:0]rx_ebuff_data_t;
  input mcp1_b_lock_reg_0;

  wire [0:0]CO;
  wire \FSM_sequential_mcp1_state[0]_i_1__0_n_0 ;
  wire \FSM_sequential_mcp1_state[0]_i_2_n_0 ;
  wire \FSM_sequential_mcp1_state[1]_i_1__0_n_0 ;
  wire \FSM_sequential_mcp1_state[2]_i_2__0_n_0 ;
  wire \FSM_sequential_mcp1_state[2]_i_3__0_n_0 ;
  wire \FSM_sequential_mcp1_state_reg[1]_0 ;
  wire err_block_count_inc_int;
  wire mcp1_b_lock_reg;
  wire mcp1_b_lock_reg_0;
  wire [7:0]\mcp1_ctrl_pipe_reg[7] ;
  wire [63:0]\mcp1_data_pipe_reg[63] ;
  wire mcp1_err_block_count_inc_out_reg;
  wire mcp1_ignore_next_mismatch;
  wire [1:0]\mcp1_r_type_next_reg_reg[2] ;
  wire \mcp1_r_type_reg_reg[0] ;
  wire \mcp1_r_type_reg_reg[0]_0 ;
  wire \mcp1_r_type_reg_reg[1] ;
  wire \mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ;
  (* RTL_KEEP = "yes" *) wire [2:0]out;
  wire [2:0]r_type;
  wire [0:0]\rx_66_enc_reg_reg[65] ;
  wire [7:0]rx_ebuff_ctrl_t;
  wire [63:0]rx_ebuff_data_t;
  wire rxreset_3_reg;
  wire rxreset_6_reg;
  wire rxusrclk2;

  LUT6 #(
    .INIT(64'hFFFFFFAFEEEEFBAB)) 
    \FSM_sequential_mcp1_state[0]_i_1__0 
       (.I0(\FSM_sequential_mcp1_state[0]_i_2_n_0 ),
        .I1(out[0]),
        .I2(\mcp1_r_type_reg_reg[0] ),
        .I3(r_type[1]),
        .I4(out[2]),
        .I5(out[1]),
        .O(\FSM_sequential_mcp1_state[0]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h10101000)) 
    \FSM_sequential_mcp1_state[0]_i_2 
       (.I0(out[1]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(\mcp1_r_type_reg_reg[0]_0 ),
        .I3(out[2]),
        .I4(out[0]),
        .O(\FSM_sequential_mcp1_state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h44445E4E44444444)) 
    \FSM_sequential_mcp1_state[1]_i_1__0 
       (.I0(out[2]),
        .I1(\mcp1_r_type_reg_reg[1] ),
        .I2(out[0]),
        .I3(\mcp1_r_type_reg_reg[0]_0 ),
        .I4(out[1]),
        .I5(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .O(\FSM_sequential_mcp1_state[1]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000208A0A00208A)) 
    \FSM_sequential_mcp1_state[2]_i_2__0 
       (.I0(\FSM_sequential_mcp1_state[2]_i_3__0_n_0 ),
        .I1(out[1]),
        .I2(out[0]),
        .I3(r_type[0]),
        .I4(out[2]),
        .I5(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .O(\FSM_sequential_mcp1_state[2]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h0007)) 
    \FSM_sequential_mcp1_state[2]_i_3__0 
       (.I0(out[2]),
        .I1(out[1]),
        .I2(r_type[1]),
        .I3(r_type[2]),
        .O(\FSM_sequential_mcp1_state[2]_i_3__0_n_0 ));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_mcp1_state_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\FSM_sequential_mcp1_state[0]_i_1__0_n_0 ),
        .Q(out[0]),
        .R(mcp1_b_lock_reg_0));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_mcp1_state_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\FSM_sequential_mcp1_state[1]_i_1__0_n_0 ),
        .Q(out[1]),
        .R(mcp1_b_lock_reg_0));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_mcp1_state_reg[2] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\FSM_sequential_mcp1_state[2]_i_2__0_n_0 ),
        .Q(out[2]),
        .R(mcp1_b_lock_reg_0));
  LUT6 #(
    .INIT(64'h00000000AAAA3000)) 
    mcp1_err_block_count_inc_out_i_1
       (.I0(err_block_count_inc_int),
        .I1(mcp1_ignore_next_mismatch),
        .I2(CO),
        .I3(\rx_66_enc_reg_reg[65] ),
        .I4(mcp1_b_lock_reg),
        .I5(rxreset_3_reg),
        .O(mcp1_err_block_count_inc_out_reg));
  LUT3 #(
    .INIT(8'h02)) 
    mcp1_err_block_count_inc_out_i_2
       (.I0(out[0]),
        .I1(out[2]),
        .I2(out[1]),
        .O(err_block_count_inc_int));
  LUT4 #(
    .INIT(16'hAAAB)) 
    \mcp1_rx_ebuff_ctrl[7]_i_1 
       (.I0(rxreset_6_reg),
        .I1(out[2]),
        .I2(out[0]),
        .I3(out[1]),
        .O(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_ctrl_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_ctrl_t[0]),
        .Q(\mcp1_ctrl_pipe_reg[7] [0]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_ctrl_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_ctrl_t[1]),
        .Q(\mcp1_ctrl_pipe_reg[7] [1]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_ctrl_reg[2] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_ctrl_t[2]),
        .Q(\mcp1_ctrl_pipe_reg[7] [2]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_ctrl_reg[3] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_ctrl_t[3]),
        .Q(\mcp1_ctrl_pipe_reg[7] [3]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_ctrl_reg[4] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_ctrl_t[4]),
        .Q(\mcp1_ctrl_pipe_reg[7] [4]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_ctrl_reg[5] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_ctrl_t[5]),
        .Q(\mcp1_ctrl_pipe_reg[7] [5]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_ctrl_reg[6] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_ctrl_t[6]),
        .Q(\mcp1_ctrl_pipe_reg[7] [6]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_ctrl_reg[7] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_ctrl_t[7]),
        .Q(\mcp1_ctrl_pipe_reg[7] [7]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[0]),
        .Q(\mcp1_data_pipe_reg[63] [0]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[10] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[10]),
        .Q(\mcp1_data_pipe_reg[63] [10]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[11] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[11]),
        .Q(\mcp1_data_pipe_reg[63] [11]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[12] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[12]),
        .Q(\mcp1_data_pipe_reg[63] [12]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[13] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[13]),
        .Q(\mcp1_data_pipe_reg[63] [13]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[14] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[14]),
        .Q(\mcp1_data_pipe_reg[63] [14]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[15] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[15]),
        .Q(\mcp1_data_pipe_reg[63] [15]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[16] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[16]),
        .Q(\mcp1_data_pipe_reg[63] [16]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[17] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[17]),
        .Q(\mcp1_data_pipe_reg[63] [17]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[18] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[18]),
        .Q(\mcp1_data_pipe_reg[63] [18]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[19] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[19]),
        .Q(\mcp1_data_pipe_reg[63] [19]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[1]),
        .Q(\mcp1_data_pipe_reg[63] [1]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[20] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[20]),
        .Q(\mcp1_data_pipe_reg[63] [20]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[21] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[21]),
        .Q(\mcp1_data_pipe_reg[63] [21]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[22] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[22]),
        .Q(\mcp1_data_pipe_reg[63] [22]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[23] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[23]),
        .Q(\mcp1_data_pipe_reg[63] [23]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[24] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[24]),
        .Q(\mcp1_data_pipe_reg[63] [24]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[25] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[25]),
        .Q(\mcp1_data_pipe_reg[63] [25]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[26] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[26]),
        .Q(\mcp1_data_pipe_reg[63] [26]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[27] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[27]),
        .Q(\mcp1_data_pipe_reg[63] [27]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[28] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[28]),
        .Q(\mcp1_data_pipe_reg[63] [28]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[29] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[29]),
        .Q(\mcp1_data_pipe_reg[63] [29]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[2] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[2]),
        .Q(\mcp1_data_pipe_reg[63] [2]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[30] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[30]),
        .Q(\mcp1_data_pipe_reg[63] [30]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[31] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[31]),
        .Q(\mcp1_data_pipe_reg[63] [31]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[32] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[32]),
        .Q(\mcp1_data_pipe_reg[63] [32]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[33] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[33]),
        .Q(\mcp1_data_pipe_reg[63] [33]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[34] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[34]),
        .Q(\mcp1_data_pipe_reg[63] [34]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[35] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[35]),
        .Q(\mcp1_data_pipe_reg[63] [35]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[36] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[36]),
        .Q(\mcp1_data_pipe_reg[63] [36]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[37] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[37]),
        .Q(\mcp1_data_pipe_reg[63] [37]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[38] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[38]),
        .Q(\mcp1_data_pipe_reg[63] [38]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[39] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[39]),
        .Q(\mcp1_data_pipe_reg[63] [39]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[3] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[3]),
        .Q(\mcp1_data_pipe_reg[63] [3]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[40] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[40]),
        .Q(\mcp1_data_pipe_reg[63] [40]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[41] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[41]),
        .Q(\mcp1_data_pipe_reg[63] [41]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[42] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[42]),
        .Q(\mcp1_data_pipe_reg[63] [42]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[43] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[43]),
        .Q(\mcp1_data_pipe_reg[63] [43]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[44] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[44]),
        .Q(\mcp1_data_pipe_reg[63] [44]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[45] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[45]),
        .Q(\mcp1_data_pipe_reg[63] [45]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[46] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[46]),
        .Q(\mcp1_data_pipe_reg[63] [46]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[47] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[47]),
        .Q(\mcp1_data_pipe_reg[63] [47]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[48] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[48]),
        .Q(\mcp1_data_pipe_reg[63] [48]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[49] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[49]),
        .Q(\mcp1_data_pipe_reg[63] [49]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[4] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[4]),
        .Q(\mcp1_data_pipe_reg[63] [4]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[50] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[50]),
        .Q(\mcp1_data_pipe_reg[63] [50]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[51] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[51]),
        .Q(\mcp1_data_pipe_reg[63] [51]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[52] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[52]),
        .Q(\mcp1_data_pipe_reg[63] [52]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[53] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[53]),
        .Q(\mcp1_data_pipe_reg[63] [53]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[54] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[54]),
        .Q(\mcp1_data_pipe_reg[63] [54]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[55] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[55]),
        .Q(\mcp1_data_pipe_reg[63] [55]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[56] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[56]),
        .Q(\mcp1_data_pipe_reg[63] [56]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[57] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[57]),
        .Q(\mcp1_data_pipe_reg[63] [57]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[58] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[58]),
        .Q(\mcp1_data_pipe_reg[63] [58]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[59] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[59]),
        .Q(\mcp1_data_pipe_reg[63] [59]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[5] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[5]),
        .Q(\mcp1_data_pipe_reg[63] [5]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[60] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[60]),
        .Q(\mcp1_data_pipe_reg[63] [60]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[61] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[61]),
        .Q(\mcp1_data_pipe_reg[63] [61]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[62] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[62]),
        .Q(\mcp1_data_pipe_reg[63] [62]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[63] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[63]),
        .Q(\mcp1_data_pipe_reg[63] [63]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[6] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[6]),
        .Q(\mcp1_data_pipe_reg[63] [6]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[7] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[7]),
        .Q(\mcp1_data_pipe_reg[63] [7]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[8] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[8]),
        .Q(\mcp1_data_pipe_reg[63] [8]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[9] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rx_ebuff_data_t[9]),
        .Q(\mcp1_data_pipe_reg[63] [9]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00020000)) 
    next_state1
       (.I0(r_type[0]),
        .I1(r_type[2]),
        .I2(\mcp1_r_type_next_reg_reg[2] [0]),
        .I3(\mcp1_r_type_next_reg_reg[2] [1]),
        .I4(r_type[1]),
        .O(\FSM_sequential_mcp1_state_reg[1]_0 ));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_rx_pcs_test
   (mcp1_ignore_next_mismatch,
    err_block_count_inc,
    CO,
    mcp1_ignore_next_mismatch_reg_0,
    rxusrclk2,
    mcp1_ignore_next_mismatch_reg_1,
    mcp1_b_lock_reg,
    \outreg_reg[2] ,
    rx_66_enc_reg,
    out,
    block_field);
  output mcp1_ignore_next_mismatch;
  output err_block_count_inc;
  output [0:0]CO;
  output [0:0]mcp1_ignore_next_mismatch_reg_0;
  input rxusrclk2;
  input mcp1_ignore_next_mismatch_reg_1;
  input mcp1_b_lock_reg;
  input [2:0]\outreg_reg[2] ;
  input [55:0]rx_66_enc_reg;
  input out;
  input [7:0]block_field;

  wire [0:0]CO;
  wire [7:0]block_field;
  wire err_block_count_inc;
  wire i__carry__0_i_1_n_0;
  wire i__carry__0_i_2_n_0;
  wire i__carry__0_i_3_n_0;
  wire i__carry__0_i_4_n_0;
  wire i__carry__0_i_5_n_0;
  wire i__carry__0_i_6_n_0;
  wire i__carry__0_i_7_n_0;
  wire i__carry__0_i_8_n_0;
  wire i__carry__1_i_1_n_0;
  wire i__carry__1_i_2_n_0;
  wire i__carry__1_i_3_n_0;
  wire i__carry__1_i_4_n_0;
  wire i__carry__1_i_5_n_0;
  wire i__carry__1_i_6_n_0;
  wire i__carry_i_1_n_0;
  wire i__carry_i_2_n_0;
  wire i__carry_i_3_n_0;
  wire i__carry_i_4_n_0;
  wire i__carry_i_5_n_0;
  wire i__carry_i_6_n_0;
  wire i__carry_i_7_n_0;
  wire i__carry_i_8_n_0;
  wire mcp1_b_lock_reg;
  wire \mcp1_block_count[6]_i_2_n_0 ;
  wire [6:0]mcp1_block_count_reg__0;
  wire mcp1_err_block_count_inc_out1_carry__0_i_1_n_0;
  wire mcp1_err_block_count_inc_out1_carry__0_i_2_n_0;
  wire mcp1_err_block_count_inc_out1_carry__0_i_3_n_0;
  wire mcp1_err_block_count_inc_out1_carry__0_i_4_n_0;
  wire mcp1_err_block_count_inc_out1_carry__0_i_5_n_0;
  wire mcp1_err_block_count_inc_out1_carry__0_i_6_n_0;
  wire mcp1_err_block_count_inc_out1_carry__0_i_7_n_0;
  wire mcp1_err_block_count_inc_out1_carry__0_i_8_n_0;
  wire mcp1_err_block_count_inc_out1_carry__0_n_0;
  wire mcp1_err_block_count_inc_out1_carry__0_n_1;
  wire mcp1_err_block_count_inc_out1_carry__0_n_2;
  wire mcp1_err_block_count_inc_out1_carry__0_n_3;
  wire mcp1_err_block_count_inc_out1_carry__0_n_5;
  wire mcp1_err_block_count_inc_out1_carry__0_n_6;
  wire mcp1_err_block_count_inc_out1_carry__0_n_7;
  wire mcp1_err_block_count_inc_out1_carry__1_i_1_n_0;
  wire mcp1_err_block_count_inc_out1_carry__1_i_2_n_0;
  wire mcp1_err_block_count_inc_out1_carry__1_i_3_n_0;
  wire mcp1_err_block_count_inc_out1_carry__1_i_4_n_0;
  wire mcp1_err_block_count_inc_out1_carry__1_i_5_n_0;
  wire mcp1_err_block_count_inc_out1_carry__1_i_6_n_0;
  wire mcp1_err_block_count_inc_out1_carry__1_n_3;
  wire mcp1_err_block_count_inc_out1_carry__1_n_5;
  wire mcp1_err_block_count_inc_out1_carry__1_n_6;
  wire mcp1_err_block_count_inc_out1_carry__1_n_7;
  wire mcp1_err_block_count_inc_out1_carry_i_1_n_0;
  wire mcp1_err_block_count_inc_out1_carry_i_2_n_0;
  wire mcp1_err_block_count_inc_out1_carry_i_3_n_0;
  wire mcp1_err_block_count_inc_out1_carry_i_4_n_0;
  wire mcp1_err_block_count_inc_out1_carry_i_5_n_0;
  wire mcp1_err_block_count_inc_out1_carry_i_6_n_0;
  wire mcp1_err_block_count_inc_out1_carry_i_7_n_0;
  wire mcp1_err_block_count_inc_out1_carry_i_8_n_0;
  wire mcp1_err_block_count_inc_out1_carry_n_0;
  wire mcp1_err_block_count_inc_out1_carry_n_1;
  wire mcp1_err_block_count_inc_out1_carry_n_2;
  wire mcp1_err_block_count_inc_out1_carry_n_3;
  wire mcp1_err_block_count_inc_out1_carry_n_5;
  wire mcp1_err_block_count_inc_out1_carry_n_6;
  wire mcp1_err_block_count_inc_out1_carry_n_7;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry__0_n_0 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry__0_n_1 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry__0_n_2 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry__0_n_3 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry__0_n_5 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry__0_n_6 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry__0_n_7 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry__1_n_3 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry__1_n_5 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry__1_n_6 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry__1_n_7 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry_n_0 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry_n_1 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry_n_2 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry_n_3 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry_n_5 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry_n_6 ;
  wire \mcp1_err_block_count_inc_out1_inferred__0/i__carry_n_7 ;
  wire mcp1_ignore_next_mismatch;
  wire mcp1_ignore_next_mismatch_i_1_n_0;
  wire mcp1_ignore_next_mismatch_i_2_n_0;
  wire mcp1_ignore_next_mismatch_i_3_n_0;
  wire [0:0]mcp1_ignore_next_mismatch_reg_0;
  wire mcp1_ignore_next_mismatch_reg_1;
  wire out;
  wire [2:0]\outreg_reg[2] ;
  wire [6:0]p_0_in__4;
  wire [55:0]rx_66_enc_reg;
  wire rxusrclk2;
  wire [3:3]NLW_mcp1_err_block_count_inc_out1_carry_CO_UNCONNECTED;
  wire [7:0]NLW_mcp1_err_block_count_inc_out1_carry_O_UNCONNECTED;
  wire [3:3]NLW_mcp1_err_block_count_inc_out1_carry__0_CO_UNCONNECTED;
  wire [7:0]NLW_mcp1_err_block_count_inc_out1_carry__0_O_UNCONNECTED;
  wire [7:3]NLW_mcp1_err_block_count_inc_out1_carry__1_CO_UNCONNECTED;
  wire [7:6]NLW_mcp1_err_block_count_inc_out1_carry__1_DI_UNCONNECTED;
  wire [7:0]NLW_mcp1_err_block_count_inc_out1_carry__1_O_UNCONNECTED;
  wire [7:6]NLW_mcp1_err_block_count_inc_out1_carry__1_S_UNCONNECTED;
  wire [3:3]\NLW_mcp1_err_block_count_inc_out1_inferred__0/i__carry_CO_UNCONNECTED ;
  wire [7:0]\NLW_mcp1_err_block_count_inc_out1_inferred__0/i__carry_O_UNCONNECTED ;
  wire [3:3]\NLW_mcp1_err_block_count_inc_out1_inferred__0/i__carry__0_CO_UNCONNECTED ;
  wire [7:0]\NLW_mcp1_err_block_count_inc_out1_inferred__0/i__carry__0_O_UNCONNECTED ;
  wire [7:3]\NLW_mcp1_err_block_count_inc_out1_inferred__0/i__carry__1_CO_UNCONNECTED ;
  wire [7:6]\NLW_mcp1_err_block_count_inc_out1_inferred__0/i__carry__1_DI_UNCONNECTED ;
  wire [7:0]\NLW_mcp1_err_block_count_inc_out1_inferred__0/i__carry__1_O_UNCONNECTED ;
  wire [7:6]\NLW_mcp1_err_block_count_inc_out1_inferred__0/i__carry__1_S_UNCONNECTED ;

  LUT3 #(
    .INIT(8'h01)) 
    i__carry__0_i_1
       (.I0(rx_66_enc_reg[38]),
        .I1(rx_66_enc_reg[39]),
        .I2(rx_66_enc_reg[37]),
        .O(i__carry__0_i_1_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    i__carry__0_i_2
       (.I0(rx_66_enc_reg[35]),
        .I1(rx_66_enc_reg[34]),
        .I2(rx_66_enc_reg[36]),
        .O(i__carry__0_i_2_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    i__carry__0_i_3
       (.I0(rx_66_enc_reg[33]),
        .I1(rx_66_enc_reg[31]),
        .I2(rx_66_enc_reg[32]),
        .O(i__carry__0_i_3_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    i__carry__0_i_4
       (.I0(rx_66_enc_reg[29]),
        .I1(rx_66_enc_reg[30]),
        .I2(rx_66_enc_reg[28]),
        .O(i__carry__0_i_4_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    i__carry__0_i_5
       (.I0(rx_66_enc_reg[25]),
        .I1(rx_66_enc_reg[27]),
        .I2(rx_66_enc_reg[26]),
        .O(i__carry__0_i_5_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    i__carry__0_i_6
       (.I0(rx_66_enc_reg[24]),
        .I1(rx_66_enc_reg[22]),
        .I2(rx_66_enc_reg[23]),
        .O(i__carry__0_i_6_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    i__carry__0_i_7
       (.I0(rx_66_enc_reg[21]),
        .I1(rx_66_enc_reg[19]),
        .I2(rx_66_enc_reg[20]),
        .O(i__carry__0_i_7_n_0));
  LUT5 #(
    .INIT(32'h0000001E)) 
    i__carry__0_i_8
       (.I0(\outreg_reg[2] [0]),
        .I1(\outreg_reg[2] [1]),
        .I2(rx_66_enc_reg[16]),
        .I3(rx_66_enc_reg[18]),
        .I4(rx_66_enc_reg[17]),
        .O(i__carry__0_i_8_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry__1_i_1
       (.I0(rx_66_enc_reg[55]),
        .O(i__carry__1_i_1_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    i__carry__1_i_2
       (.I0(rx_66_enc_reg[54]),
        .I1(rx_66_enc_reg[52]),
        .I2(rx_66_enc_reg[53]),
        .O(i__carry__1_i_2_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    i__carry__1_i_3
       (.I0(rx_66_enc_reg[50]),
        .I1(rx_66_enc_reg[51]),
        .I2(rx_66_enc_reg[49]),
        .O(i__carry__1_i_3_n_0));
  LUT5 #(
    .INIT(32'h0000001E)) 
    i__carry__1_i_4
       (.I0(\outreg_reg[2] [0]),
        .I1(\outreg_reg[2] [1]),
        .I2(rx_66_enc_reg[48]),
        .I3(rx_66_enc_reg[46]),
        .I4(rx_66_enc_reg[47]),
        .O(i__carry__1_i_4_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    i__carry__1_i_5
       (.I0(rx_66_enc_reg[45]),
        .I1(rx_66_enc_reg[43]),
        .I2(rx_66_enc_reg[44]),
        .O(i__carry__1_i_5_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    i__carry__1_i_6
       (.I0(rx_66_enc_reg[42]),
        .I1(rx_66_enc_reg[40]),
        .I2(rx_66_enc_reg[41]),
        .O(i__carry__1_i_6_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    i__carry_i_1
       (.I0(rx_66_enc_reg[14]),
        .I1(rx_66_enc_reg[13]),
        .I2(rx_66_enc_reg[15]),
        .O(i__carry_i_1_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    i__carry_i_2
       (.I0(rx_66_enc_reg[12]),
        .I1(rx_66_enc_reg[10]),
        .I2(rx_66_enc_reg[11]),
        .O(i__carry_i_2_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    i__carry_i_3
       (.I0(rx_66_enc_reg[8]),
        .I1(rx_66_enc_reg[9]),
        .I2(rx_66_enc_reg[7]),
        .O(i__carry_i_3_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    i__carry_i_4
       (.I0(rx_66_enc_reg[4]),
        .I1(rx_66_enc_reg[5]),
        .I2(rx_66_enc_reg[6]),
        .O(i__carry_i_4_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    i__carry_i_5
       (.I0(rx_66_enc_reg[1]),
        .I1(rx_66_enc_reg[2]),
        .I2(rx_66_enc_reg[3]),
        .O(i__carry_i_5_n_0));
  LUT5 #(
    .INIT(32'h0000001E)) 
    i__carry_i_6
       (.I0(\outreg_reg[2] [0]),
        .I1(\outreg_reg[2] [1]),
        .I2(block_field[6]),
        .I3(block_field[7]),
        .I4(rx_66_enc_reg[0]),
        .O(i__carry_i_6_n_0));
  LUT5 #(
    .INIT(32'h0000001E)) 
    i__carry_i_7
       (.I0(\outreg_reg[2] [0]),
        .I1(\outreg_reg[2] [1]),
        .I2(block_field[4]),
        .I3(block_field[3]),
        .I4(block_field[5]),
        .O(i__carry_i_7_n_0));
  LUT5 #(
    .INIT(32'h00001118)) 
    i__carry_i_8
       (.I0(block_field[0]),
        .I1(block_field[2]),
        .I2(\outreg_reg[2] [1]),
        .I3(\outreg_reg[2] [0]),
        .I4(block_field[1]),
        .O(i__carry_i_8_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \mcp1_block_count[0]_i_1 
       (.I0(mcp1_block_count_reg__0[0]),
        .O(p_0_in__4[0]));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_block_count[1]_i_1 
       (.I0(mcp1_block_count_reg__0[0]),
        .I1(mcp1_block_count_reg__0[1]),
        .O(p_0_in__4[1]));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \mcp1_block_count[2]_i_1 
       (.I0(mcp1_block_count_reg__0[2]),
        .I1(mcp1_block_count_reg__0[1]),
        .I2(mcp1_block_count_reg__0[0]),
        .O(p_0_in__4[2]));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \mcp1_block_count[3]_i_1 
       (.I0(mcp1_block_count_reg__0[3]),
        .I1(mcp1_block_count_reg__0[2]),
        .I2(mcp1_block_count_reg__0[0]),
        .I3(mcp1_block_count_reg__0[1]),
        .O(p_0_in__4[3]));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \mcp1_block_count[4]_i_1 
       (.I0(mcp1_block_count_reg__0[4]),
        .I1(mcp1_block_count_reg__0[1]),
        .I2(mcp1_block_count_reg__0[0]),
        .I3(mcp1_block_count_reg__0[2]),
        .I4(mcp1_block_count_reg__0[3]),
        .O(p_0_in__4[4]));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \mcp1_block_count[5]_i_1 
       (.I0(mcp1_block_count_reg__0[5]),
        .I1(mcp1_block_count_reg__0[3]),
        .I2(mcp1_block_count_reg__0[2]),
        .I3(mcp1_block_count_reg__0[0]),
        .I4(mcp1_block_count_reg__0[1]),
        .I5(mcp1_block_count_reg__0[4]),
        .O(p_0_in__4[5]));
  LUT3 #(
    .INIT(8'h6A)) 
    \mcp1_block_count[6]_i_1 
       (.I0(mcp1_block_count_reg__0[6]),
        .I1(\mcp1_block_count[6]_i_2_n_0 ),
        .I2(mcp1_block_count_reg__0[5]),
        .O(p_0_in__4[6]));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \mcp1_block_count[6]_i_2 
       (.I0(mcp1_block_count_reg__0[4]),
        .I1(mcp1_block_count_reg__0[1]),
        .I2(mcp1_block_count_reg__0[0]),
        .I3(mcp1_block_count_reg__0[2]),
        .I4(mcp1_block_count_reg__0[3]),
        .O(\mcp1_block_count[6]_i_2_n_0 ));
  FDRE \mcp1_block_count_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(p_0_in__4[0]),
        .Q(mcp1_block_count_reg__0[0]),
        .R(out));
  FDRE \mcp1_block_count_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(p_0_in__4[1]),
        .Q(mcp1_block_count_reg__0[1]),
        .R(out));
  FDRE \mcp1_block_count_reg[2] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(p_0_in__4[2]),
        .Q(mcp1_block_count_reg__0[2]),
        .R(out));
  FDRE \mcp1_block_count_reg[3] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(p_0_in__4[3]),
        .Q(mcp1_block_count_reg__0[3]),
        .R(out));
  FDRE \mcp1_block_count_reg[4] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(p_0_in__4[4]),
        .Q(mcp1_block_count_reg__0[4]),
        .R(out));
  FDRE \mcp1_block_count_reg[5] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(p_0_in__4[5]),
        .Q(mcp1_block_count_reg__0[5]),
        .R(out));
  FDRE \mcp1_block_count_reg[6] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(p_0_in__4[6]),
        .Q(mcp1_block_count_reg__0[6]),
        .R(out));
  CARRY8 mcp1_err_block_count_inc_out1_carry
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({mcp1_err_block_count_inc_out1_carry_n_0,mcp1_err_block_count_inc_out1_carry_n_1,mcp1_err_block_count_inc_out1_carry_n_2,mcp1_err_block_count_inc_out1_carry_n_3,NLW_mcp1_err_block_count_inc_out1_carry_CO_UNCONNECTED[3],mcp1_err_block_count_inc_out1_carry_n_5,mcp1_err_block_count_inc_out1_carry_n_6,mcp1_err_block_count_inc_out1_carry_n_7}),
        .DI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_mcp1_err_block_count_inc_out1_carry_O_UNCONNECTED[7:0]),
        .S({mcp1_err_block_count_inc_out1_carry_i_1_n_0,mcp1_err_block_count_inc_out1_carry_i_2_n_0,mcp1_err_block_count_inc_out1_carry_i_3_n_0,mcp1_err_block_count_inc_out1_carry_i_4_n_0,mcp1_err_block_count_inc_out1_carry_i_5_n_0,mcp1_err_block_count_inc_out1_carry_i_6_n_0,mcp1_err_block_count_inc_out1_carry_i_7_n_0,mcp1_err_block_count_inc_out1_carry_i_8_n_0}));
  CARRY8 mcp1_err_block_count_inc_out1_carry__0
       (.CI(mcp1_err_block_count_inc_out1_carry_n_0),
        .CI_TOP(1'b0),
        .CO({mcp1_err_block_count_inc_out1_carry__0_n_0,mcp1_err_block_count_inc_out1_carry__0_n_1,mcp1_err_block_count_inc_out1_carry__0_n_2,mcp1_err_block_count_inc_out1_carry__0_n_3,NLW_mcp1_err_block_count_inc_out1_carry__0_CO_UNCONNECTED[3],mcp1_err_block_count_inc_out1_carry__0_n_5,mcp1_err_block_count_inc_out1_carry__0_n_6,mcp1_err_block_count_inc_out1_carry__0_n_7}),
        .DI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_mcp1_err_block_count_inc_out1_carry__0_O_UNCONNECTED[7:0]),
        .S({mcp1_err_block_count_inc_out1_carry__0_i_1_n_0,mcp1_err_block_count_inc_out1_carry__0_i_2_n_0,mcp1_err_block_count_inc_out1_carry__0_i_3_n_0,mcp1_err_block_count_inc_out1_carry__0_i_4_n_0,mcp1_err_block_count_inc_out1_carry__0_i_5_n_0,mcp1_err_block_count_inc_out1_carry__0_i_6_n_0,mcp1_err_block_count_inc_out1_carry__0_i_7_n_0,mcp1_err_block_count_inc_out1_carry__0_i_8_n_0}));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_err_block_count_inc_out1_carry__0_i_1
       (.I0(rx_66_enc_reg[37]),
        .I1(rx_66_enc_reg[39]),
        .I2(rx_66_enc_reg[38]),
        .O(mcp1_err_block_count_inc_out1_carry__0_i_1_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_err_block_count_inc_out1_carry__0_i_2
       (.I0(rx_66_enc_reg[34]),
        .I1(rx_66_enc_reg[35]),
        .I2(rx_66_enc_reg[36]),
        .O(mcp1_err_block_count_inc_out1_carry__0_i_2_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_err_block_count_inc_out1_carry__0_i_3
       (.I0(rx_66_enc_reg[33]),
        .I1(rx_66_enc_reg[31]),
        .I2(rx_66_enc_reg[32]),
        .O(mcp1_err_block_count_inc_out1_carry__0_i_3_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_err_block_count_inc_out1_carry__0_i_4
       (.I0(rx_66_enc_reg[28]),
        .I1(rx_66_enc_reg[29]),
        .I2(rx_66_enc_reg[30]),
        .O(mcp1_err_block_count_inc_out1_carry__0_i_4_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_err_block_count_inc_out1_carry__0_i_5
       (.I0(rx_66_enc_reg[25]),
        .I1(rx_66_enc_reg[27]),
        .I2(rx_66_enc_reg[26]),
        .O(mcp1_err_block_count_inc_out1_carry__0_i_5_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_err_block_count_inc_out1_carry__0_i_6
       (.I0(rx_66_enc_reg[24]),
        .I1(rx_66_enc_reg[22]),
        .I2(rx_66_enc_reg[23]),
        .O(mcp1_err_block_count_inc_out1_carry__0_i_6_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_err_block_count_inc_out1_carry__0_i_7
       (.I0(rx_66_enc_reg[21]),
        .I1(rx_66_enc_reg[19]),
        .I2(rx_66_enc_reg[20]),
        .O(mcp1_err_block_count_inc_out1_carry__0_i_7_n_0));
  LUT5 #(
    .INIT(32'h88800008)) 
    mcp1_err_block_count_inc_out1_carry__0_i_8
       (.I0(rx_66_enc_reg[18]),
        .I1(rx_66_enc_reg[17]),
        .I2(\outreg_reg[2] [0]),
        .I3(\outreg_reg[2] [1]),
        .I4(rx_66_enc_reg[16]),
        .O(mcp1_err_block_count_inc_out1_carry__0_i_8_n_0));
  CARRY8 mcp1_err_block_count_inc_out1_carry__1
       (.CI(mcp1_err_block_count_inc_out1_carry__0_n_0),
        .CI_TOP(1'b0),
        .CO({NLW_mcp1_err_block_count_inc_out1_carry__1_CO_UNCONNECTED[7:6],CO,mcp1_err_block_count_inc_out1_carry__1_n_3,NLW_mcp1_err_block_count_inc_out1_carry__1_CO_UNCONNECTED[3],mcp1_err_block_count_inc_out1_carry__1_n_5,mcp1_err_block_count_inc_out1_carry__1_n_6,mcp1_err_block_count_inc_out1_carry__1_n_7}),
        .DI({NLW_mcp1_err_block_count_inc_out1_carry__1_DI_UNCONNECTED[7:6],1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_mcp1_err_block_count_inc_out1_carry__1_O_UNCONNECTED[7:0]),
        .S({NLW_mcp1_err_block_count_inc_out1_carry__1_S_UNCONNECTED[7:6],mcp1_err_block_count_inc_out1_carry__1_i_1_n_0,mcp1_err_block_count_inc_out1_carry__1_i_2_n_0,mcp1_err_block_count_inc_out1_carry__1_i_3_n_0,mcp1_err_block_count_inc_out1_carry__1_i_4_n_0,mcp1_err_block_count_inc_out1_carry__1_i_5_n_0,mcp1_err_block_count_inc_out1_carry__1_i_6_n_0}));
  LUT1 #(
    .INIT(2'h2)) 
    mcp1_err_block_count_inc_out1_carry__1_i_1
       (.I0(rx_66_enc_reg[55]),
        .O(mcp1_err_block_count_inc_out1_carry__1_i_1_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_err_block_count_inc_out1_carry__1_i_2
       (.I0(rx_66_enc_reg[54]),
        .I1(rx_66_enc_reg[53]),
        .I2(rx_66_enc_reg[52]),
        .O(mcp1_err_block_count_inc_out1_carry__1_i_2_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_err_block_count_inc_out1_carry__1_i_3
       (.I0(rx_66_enc_reg[50]),
        .I1(rx_66_enc_reg[51]),
        .I2(rx_66_enc_reg[49]),
        .O(mcp1_err_block_count_inc_out1_carry__1_i_3_n_0));
  LUT5 #(
    .INIT(32'h88800008)) 
    mcp1_err_block_count_inc_out1_carry__1_i_4
       (.I0(rx_66_enc_reg[46]),
        .I1(rx_66_enc_reg[47]),
        .I2(\outreg_reg[2] [0]),
        .I3(\outreg_reg[2] [1]),
        .I4(rx_66_enc_reg[48]),
        .O(mcp1_err_block_count_inc_out1_carry__1_i_4_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_err_block_count_inc_out1_carry__1_i_5
       (.I0(rx_66_enc_reg[45]),
        .I1(rx_66_enc_reg[43]),
        .I2(rx_66_enc_reg[44]),
        .O(mcp1_err_block_count_inc_out1_carry__1_i_5_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_err_block_count_inc_out1_carry__1_i_6
       (.I0(rx_66_enc_reg[42]),
        .I1(rx_66_enc_reg[40]),
        .I2(rx_66_enc_reg[41]),
        .O(mcp1_err_block_count_inc_out1_carry__1_i_6_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_err_block_count_inc_out1_carry_i_1
       (.I0(rx_66_enc_reg[13]),
        .I1(rx_66_enc_reg[14]),
        .I2(rx_66_enc_reg[15]),
        .O(mcp1_err_block_count_inc_out1_carry_i_1_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_err_block_count_inc_out1_carry_i_2
       (.I0(rx_66_enc_reg[12]),
        .I1(rx_66_enc_reg[10]),
        .I2(rx_66_enc_reg[11]),
        .O(mcp1_err_block_count_inc_out1_carry_i_2_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_err_block_count_inc_out1_carry_i_3
       (.I0(rx_66_enc_reg[8]),
        .I1(rx_66_enc_reg[9]),
        .I2(rx_66_enc_reg[7]),
        .O(mcp1_err_block_count_inc_out1_carry_i_3_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_err_block_count_inc_out1_carry_i_4
       (.I0(rx_66_enc_reg[4]),
        .I1(rx_66_enc_reg[5]),
        .I2(rx_66_enc_reg[6]),
        .O(mcp1_err_block_count_inc_out1_carry_i_4_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_err_block_count_inc_out1_carry_i_5
       (.I0(rx_66_enc_reg[3]),
        .I1(rx_66_enc_reg[1]),
        .I2(rx_66_enc_reg[2]),
        .O(mcp1_err_block_count_inc_out1_carry_i_5_n_0));
  LUT5 #(
    .INIT(32'h88800008)) 
    mcp1_err_block_count_inc_out1_carry_i_6
       (.I0(block_field[7]),
        .I1(rx_66_enc_reg[0]),
        .I2(\outreg_reg[2] [0]),
        .I3(\outreg_reg[2] [1]),
        .I4(block_field[6]),
        .O(mcp1_err_block_count_inc_out1_carry_i_6_n_0));
  LUT5 #(
    .INIT(32'hE1000000)) 
    mcp1_err_block_count_inc_out1_carry_i_7
       (.I0(\outreg_reg[2] [0]),
        .I1(\outreg_reg[2] [1]),
        .I2(block_field[4]),
        .I3(block_field[3]),
        .I4(block_field[5]),
        .O(mcp1_err_block_count_inc_out1_carry_i_7_n_0));
  LUT5 #(
    .INIT(32'h88800004)) 
    mcp1_err_block_count_inc_out1_carry_i_8
       (.I0(block_field[2]),
        .I1(block_field[1]),
        .I2(\outreg_reg[2] [0]),
        .I3(\outreg_reg[2] [1]),
        .I4(block_field[0]),
        .O(mcp1_err_block_count_inc_out1_carry_i_8_n_0));
  CARRY8 \mcp1_err_block_count_inc_out1_inferred__0/i__carry 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\mcp1_err_block_count_inc_out1_inferred__0/i__carry_n_0 ,\mcp1_err_block_count_inc_out1_inferred__0/i__carry_n_1 ,\mcp1_err_block_count_inc_out1_inferred__0/i__carry_n_2 ,\mcp1_err_block_count_inc_out1_inferred__0/i__carry_n_3 ,\NLW_mcp1_err_block_count_inc_out1_inferred__0/i__carry_CO_UNCONNECTED [3],\mcp1_err_block_count_inc_out1_inferred__0/i__carry_n_5 ,\mcp1_err_block_count_inc_out1_inferred__0/i__carry_n_6 ,\mcp1_err_block_count_inc_out1_inferred__0/i__carry_n_7 }),
        .DI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_mcp1_err_block_count_inc_out1_inferred__0/i__carry_O_UNCONNECTED [7:0]),
        .S({i__carry_i_1_n_0,i__carry_i_2_n_0,i__carry_i_3_n_0,i__carry_i_4_n_0,i__carry_i_5_n_0,i__carry_i_6_n_0,i__carry_i_7_n_0,i__carry_i_8_n_0}));
  CARRY8 \mcp1_err_block_count_inc_out1_inferred__0/i__carry__0 
       (.CI(\mcp1_err_block_count_inc_out1_inferred__0/i__carry_n_0 ),
        .CI_TOP(1'b0),
        .CO({\mcp1_err_block_count_inc_out1_inferred__0/i__carry__0_n_0 ,\mcp1_err_block_count_inc_out1_inferred__0/i__carry__0_n_1 ,\mcp1_err_block_count_inc_out1_inferred__0/i__carry__0_n_2 ,\mcp1_err_block_count_inc_out1_inferred__0/i__carry__0_n_3 ,\NLW_mcp1_err_block_count_inc_out1_inferred__0/i__carry__0_CO_UNCONNECTED [3],\mcp1_err_block_count_inc_out1_inferred__0/i__carry__0_n_5 ,\mcp1_err_block_count_inc_out1_inferred__0/i__carry__0_n_6 ,\mcp1_err_block_count_inc_out1_inferred__0/i__carry__0_n_7 }),
        .DI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_mcp1_err_block_count_inc_out1_inferred__0/i__carry__0_O_UNCONNECTED [7:0]),
        .S({i__carry__0_i_1_n_0,i__carry__0_i_2_n_0,i__carry__0_i_3_n_0,i__carry__0_i_4_n_0,i__carry__0_i_5_n_0,i__carry__0_i_6_n_0,i__carry__0_i_7_n_0,i__carry__0_i_8_n_0}));
  CARRY8 \mcp1_err_block_count_inc_out1_inferred__0/i__carry__1 
       (.CI(\mcp1_err_block_count_inc_out1_inferred__0/i__carry__0_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_mcp1_err_block_count_inc_out1_inferred__0/i__carry__1_CO_UNCONNECTED [7:6],mcp1_ignore_next_mismatch_reg_0,\mcp1_err_block_count_inc_out1_inferred__0/i__carry__1_n_3 ,\NLW_mcp1_err_block_count_inc_out1_inferred__0/i__carry__1_CO_UNCONNECTED [3],\mcp1_err_block_count_inc_out1_inferred__0/i__carry__1_n_5 ,\mcp1_err_block_count_inc_out1_inferred__0/i__carry__1_n_6 ,\mcp1_err_block_count_inc_out1_inferred__0/i__carry__1_n_7 }),
        .DI({\NLW_mcp1_err_block_count_inc_out1_inferred__0/i__carry__1_DI_UNCONNECTED [7:6],1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_mcp1_err_block_count_inc_out1_inferred__0/i__carry__1_O_UNCONNECTED [7:0]),
        .S({\NLW_mcp1_err_block_count_inc_out1_inferred__0/i__carry__1_S_UNCONNECTED [7:6],i__carry__1_i_1_n_0,i__carry__1_i_2_n_0,i__carry__1_i_3_n_0,i__carry__1_i_4_n_0,i__carry__1_i_5_n_0,i__carry__1_i_6_n_0}));
  FDRE mcp1_err_block_count_inc_out_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_ignore_next_mismatch_reg_1),
        .Q(err_block_count_inc),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFF2AAAAAAA)) 
    mcp1_ignore_next_mismatch_i_1
       (.I0(mcp1_ignore_next_mismatch),
        .I1(CO),
        .I2(mcp1_ignore_next_mismatch_reg_0),
        .I3(mcp1_b_lock_reg),
        .I4(\outreg_reg[2] [2]),
        .I5(mcp1_ignore_next_mismatch_i_2_n_0),
        .O(mcp1_ignore_next_mismatch_i_1_n_0));
  LUT5 #(
    .INIT(32'hAAAAAAAB)) 
    mcp1_ignore_next_mismatch_i_2
       (.I0(out),
        .I1(mcp1_ignore_next_mismatch_i_3_n_0),
        .I2(mcp1_block_count_reg__0[2]),
        .I3(mcp1_block_count_reg__0[6]),
        .I4(mcp1_block_count_reg__0[4]),
        .O(mcp1_ignore_next_mismatch_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    mcp1_ignore_next_mismatch_i_3
       (.I0(mcp1_block_count_reg__0[1]),
        .I1(mcp1_block_count_reg__0[0]),
        .I2(mcp1_block_count_reg__0[5]),
        .I3(mcp1_block_count_reg__0[3]),
        .O(mcp1_ignore_next_mismatch_i_3_n_0));
  FDRE mcp1_ignore_next_mismatch_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_ignore_next_mismatch_i_1_n_0),
        .Q(mcp1_ignore_next_mismatch),
        .R(1'b0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_rxusrclk2_coreclk_counter_resync
   (pcs_error_block_count_control_core_int,
    rxusrclk2,
    coreclk,
    rxreset_rxusrclk2,
    rx_test_mode_int_reg,
    err_block_count_inc);
  output pcs_error_block_count_control_core_int;
  input rxusrclk2;
  input coreclk;
  input rxreset_rxusrclk2;
  input rx_test_mode_int_reg;
  input err_block_count_inc;

  wire coreclk;
  wire counter_out0;
  wire counter_sync_1;
  wire counter_sync_2;
  wire counter_sync_3;
  wire counter_sync_extra;
  wire counter_sync_extra_i_1_n_0;
  wire err_block_count_inc;
  wire mcp1_counter_1_i_1__0_n_0;
  wire mcp1_counter_1_reg_n_0;
  wire mcp1_counter_2_i_1__0_n_0;
  wire mcp1_counter_2_reg_n_0;
  wire mcp1_counter_3_i_1__0_n_0;
  wire mcp1_counter_3_reg_n_0;
  wire pcs_error_block_count_control_core_int;
  wire rx_test_mode_int_reg;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;

  FDRE counter_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(counter_out0),
        .Q(pcs_error_block_count_control_core_int),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFEE8)) 
    counter_sync_extra_i_1
       (.I0(counter_sync_extra),
        .I1(counter_sync_1),
        .I2(counter_sync_3),
        .I3(counter_sync_2),
        .O(counter_sync_extra_i_1_n_0));
  FDRE counter_sync_extra_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(counter_sync_extra_i_1_n_0),
        .Q(counter_sync_extra),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT4 #(
    .INIT(16'h0010)) 
    mcp1_counter_1_i_1__0
       (.I0(mcp1_counter_1_reg_n_0),
        .I1(rx_test_mode_int_reg),
        .I2(err_block_count_inc),
        .I3(mcp1_counter_2_reg_n_0),
        .O(mcp1_counter_1_i_1__0_n_0));
  FDRE mcp1_counter_1_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_1_i_1__0_n_0),
        .Q(mcp1_counter_1_reg_n_0),
        .R(rxreset_rxusrclk2));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    mcp1_counter_2_i_1__0
       (.I0(mcp1_counter_2_reg_n_0),
        .I1(rx_test_mode_int_reg),
        .I2(err_block_count_inc),
        .I3(mcp1_counter_1_reg_n_0),
        .O(mcp1_counter_2_i_1__0_n_0));
  FDRE mcp1_counter_2_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_2_i_1__0_n_0),
        .Q(mcp1_counter_2_reg_n_0),
        .R(rxreset_rxusrclk2));
  LUT4 #(
    .INIT(16'h1000)) 
    mcp1_counter_3_i_1__0
       (.I0(mcp1_counter_3_reg_n_0),
        .I1(rx_test_mode_int_reg),
        .I2(err_block_count_inc),
        .I3(mcp1_counter_2_reg_n_0),
        .O(mcp1_counter_3_i_1__0_n_0));
  FDRE mcp1_counter_3_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_3_i_1__0_n_0),
        .Q(mcp1_counter_3_reg_n_0),
        .R(rxreset_rxusrclk2));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_pulse_synchronizer_64 psynch_1
       (.coreclk(coreclk),
        .counter_sync_1(counter_sync_1),
        .mcp1_counter_1_reg(mcp1_counter_1_reg_n_0),
        .rxusrclk2(rxusrclk2));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_pulse_synchronizer_65 psynch_2
       (.coreclk(coreclk),
        .counter_out0(counter_out0),
        .counter_sync_1(counter_sync_1),
        .counter_sync_2(counter_sync_2),
        .counter_sync_3(counter_sync_3),
        .counter_sync_extra(counter_sync_extra),
        .mcp1_counter_2_reg(mcp1_counter_2_reg_n_0),
        .rxusrclk2(rxusrclk2));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_pulse_synchronizer_66 psynch_3
       (.coreclk(coreclk),
        .counter_sync_3(counter_sync_3),
        .mcp1_counter_3_reg(mcp1_counter_3_reg_n_0),
        .rxusrclk2(rxusrclk2));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_rxusrclk2_coreclk_counter_resync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_rxusrclk2_coreclk_counter_resync_50
   (pcs_ber_count_control_core_int,
    rxusrclk2,
    coreclk,
    rxreset_rxusrclk2,
    ber_count_inc);
  output pcs_ber_count_control_core_int;
  input rxusrclk2;
  input coreclk;
  input rxreset_rxusrclk2;
  input ber_count_inc;

  wire ber_count_inc;
  wire coreclk;
  wire counter_out0;
  wire counter_sync_1;
  wire counter_sync_2;
  wire counter_sync_3;
  wire counter_sync_extra;
  wire counter_sync_extra_i_1_n_0;
  wire mcp1_counter_1_i_1_n_0;
  wire mcp1_counter_1_reg_n_0;
  wire mcp1_counter_2_i_1_n_0;
  wire mcp1_counter_2_reg_n_0;
  wire mcp1_counter_3_i_1_n_0;
  wire mcp1_counter_3_reg_n_0;
  wire pcs_ber_count_control_core_int;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;

  FDRE counter_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(counter_out0),
        .Q(pcs_ber_count_control_core_int),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFEE8)) 
    counter_sync_extra_i_1
       (.I0(counter_sync_extra),
        .I1(counter_sync_1),
        .I2(counter_sync_3),
        .I3(counter_sync_2),
        .O(counter_sync_extra_i_1_n_0));
  FDRE counter_sync_extra_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(counter_sync_extra_i_1_n_0),
        .Q(counter_sync_extra),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT3 #(
    .INIT(8'h10)) 
    mcp1_counter_1_i_1
       (.I0(mcp1_counter_1_reg_n_0),
        .I1(mcp1_counter_2_reg_n_0),
        .I2(ber_count_inc),
        .O(mcp1_counter_1_i_1_n_0));
  FDRE mcp1_counter_1_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_1_i_1_n_0),
        .Q(mcp1_counter_1_reg_n_0),
        .R(rxreset_rxusrclk2));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT3 #(
    .INIT(8'h40)) 
    mcp1_counter_2_i_1
       (.I0(mcp1_counter_2_reg_n_0),
        .I1(mcp1_counter_1_reg_n_0),
        .I2(ber_count_inc),
        .O(mcp1_counter_2_i_1_n_0));
  FDRE mcp1_counter_2_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_2_i_1_n_0),
        .Q(mcp1_counter_2_reg_n_0),
        .R(rxreset_rxusrclk2));
  LUT3 #(
    .INIT(8'h40)) 
    mcp1_counter_3_i_1
       (.I0(mcp1_counter_3_reg_n_0),
        .I1(mcp1_counter_2_reg_n_0),
        .I2(ber_count_inc),
        .O(mcp1_counter_3_i_1_n_0));
  FDRE mcp1_counter_3_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_3_i_1_n_0),
        .Q(mcp1_counter_3_reg_n_0),
        .R(rxreset_rxusrclk2));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_pulse_synchronizer_61 psynch_1
       (.coreclk(coreclk),
        .counter_sync_1(counter_sync_1),
        .mcp1_counter_1_reg(mcp1_counter_1_reg_n_0),
        .rxusrclk2(rxusrclk2));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_pulse_synchronizer_62 psynch_2
       (.coreclk(coreclk),
        .counter_out0(counter_out0),
        .counter_sync_1(counter_sync_1),
        .counter_sync_2(counter_sync_2),
        .counter_sync_3(counter_sync_3),
        .counter_sync_extra(counter_sync_extra),
        .mcp1_counter_2_reg(mcp1_counter_2_reg_n_0),
        .rxusrclk2(rxusrclk2));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_pulse_synchronizer_63 psynch_3
       (.coreclk(coreclk),
        .counter_sync_3(counter_sync_3),
        .mcp1_counter_3_reg(mcp1_counter_3_reg_n_0),
        .rxusrclk2(rxusrclk2));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_rxusrclk2_coreclk_counter_resync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_rxusrclk2_coreclk_counter_resync_54
   (pcs_test_pattern_error_count_control_core_int,
    rxusrclk2,
    coreclk,
    rxreset_rxusrclk2,
    \outreg_reg[3] ,
    rx_test_mode_int_reg,
    err_block_count_inc);
  output pcs_test_pattern_error_count_control_core_int;
  input rxusrclk2;
  input coreclk;
  input rxreset_rxusrclk2;
  input [0:0]\outreg_reg[3] ;
  input rx_test_mode_int_reg;
  input err_block_count_inc;

  wire coreclk;
  wire counter_out0;
  wire counter_sync_1;
  wire counter_sync_2;
  wire counter_sync_3;
  wire counter_sync_extra;
  wire counter_sync_extra_i_1_n_0;
  wire err_block_count_inc;
  wire mcp1_counter_1_i_1__1_n_0;
  wire mcp1_counter_1_reg_n_0;
  wire mcp1_counter_2_i_1__1_n_0;
  wire mcp1_counter_2_reg_n_0;
  wire mcp1_counter_3_i_1__1_n_0;
  wire mcp1_counter_3_reg_n_0;
  wire [0:0]\outreg_reg[3] ;
  wire pcs_test_pattern_error_count_control_core_int;
  wire rx_test_mode_int_reg;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;

  FDRE counter_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(counter_out0),
        .Q(pcs_test_pattern_error_count_control_core_int),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFEE8)) 
    counter_sync_extra_i_1
       (.I0(counter_sync_extra),
        .I1(counter_sync_1),
        .I2(counter_sync_3),
        .I3(counter_sync_2),
        .O(counter_sync_extra_i_1_n_0));
  FDRE counter_sync_extra_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(counter_sync_extra_i_1_n_0),
        .Q(counter_sync_extra),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair333" *) 
  LUT5 #(
    .INIT(32'h00001000)) 
    mcp1_counter_1_i_1__1
       (.I0(mcp1_counter_1_reg_n_0),
        .I1(\outreg_reg[3] ),
        .I2(rx_test_mode_int_reg),
        .I3(err_block_count_inc),
        .I4(mcp1_counter_2_reg_n_0),
        .O(mcp1_counter_1_i_1__1_n_0));
  FDRE mcp1_counter_1_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_1_i_1__1_n_0),
        .Q(mcp1_counter_1_reg_n_0),
        .R(rxreset_rxusrclk2));
  (* SOFT_HLUTNM = "soft_lutpair333" *) 
  LUT5 #(
    .INIT(32'h10000000)) 
    mcp1_counter_2_i_1__1
       (.I0(mcp1_counter_2_reg_n_0),
        .I1(\outreg_reg[3] ),
        .I2(rx_test_mode_int_reg),
        .I3(err_block_count_inc),
        .I4(mcp1_counter_1_reg_n_0),
        .O(mcp1_counter_2_i_1__1_n_0));
  FDRE mcp1_counter_2_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_2_i_1__1_n_0),
        .Q(mcp1_counter_2_reg_n_0),
        .R(rxreset_rxusrclk2));
  LUT5 #(
    .INIT(32'h10000000)) 
    mcp1_counter_3_i_1__1
       (.I0(mcp1_counter_3_reg_n_0),
        .I1(\outreg_reg[3] ),
        .I2(rx_test_mode_int_reg),
        .I3(err_block_count_inc),
        .I4(mcp1_counter_2_reg_n_0),
        .O(mcp1_counter_3_i_1__1_n_0));
  FDRE mcp1_counter_3_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_3_i_1__1_n_0),
        .Q(mcp1_counter_3_reg_n_0),
        .R(rxreset_rxusrclk2));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_pulse_synchronizer psynch_1
       (.coreclk(coreclk),
        .counter_sync_1(counter_sync_1),
        .mcp1_counter_1_reg(mcp1_counter_1_reg_n_0),
        .rxusrclk2(rxusrclk2));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_pulse_synchronizer_55 psynch_2
       (.coreclk(coreclk),
        .counter_out0(counter_out0),
        .counter_sync_1(counter_sync_1),
        .counter_sync_2(counter_sync_2),
        .counter_sync_3(counter_sync_3),
        .counter_sync_extra(counter_sync_extra),
        .mcp1_counter_2_reg(mcp1_counter_2_reg_n_0),
        .rxusrclk2(rxusrclk2));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_pulse_synchronizer_56 psynch_3
       (.coreclk(coreclk),
        .counter_sync_3(counter_sync_3),
        .mcp1_counter_3_reg(mcp1_counter_3_reg_n_0),
        .rxusrclk2(rxusrclk2));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_seq_detect
   (D,
    \mcp1_rx_ebuff_ctrl_reg[3] ,
    \mcp1_rx_ebuff_data_reg[7] );
  output [0:0]D;
  input [3:0]\mcp1_rx_ebuff_ctrl_reg[3] ;
  input [7:0]\mcp1_rx_ebuff_data_reg[7] ;

  wire [0:0]D;
  wire comp_0__0;
  wire comp_1__0;
  wire comp_2__0;
  wire [3:0]\mcp1_rx_ebuff_ctrl_reg[3] ;
  wire [7:0]\mcp1_rx_ebuff_data_reg[7] ;
  wire muxcyo_0;
  wire muxcyo_1;
  wire [7:3]NLW_muxcy_i0_CARRY4_CARRY8_CO_UNCONNECTED;
  wire [7:3]NLW_muxcy_i0_CARRY4_CARRY8_DI_UNCONNECTED;
  wire [7:0]NLW_muxcy_i0_CARRY4_CARRY8_O_UNCONNECTED;
  wire [7:3]NLW_muxcy_i0_CARRY4_CARRY8_S_UNCONNECTED;

  LUT4 #(
    .INIT(16'h1000)) 
    comp_0
       (.I0(\mcp1_rx_ebuff_data_reg[7] [0]),
        .I1(\mcp1_rx_ebuff_data_reg[7] [1]),
        .I2(\mcp1_rx_ebuff_data_reg[7] [3]),
        .I3(\mcp1_rx_ebuff_data_reg[7] [2]),
        .O(comp_0__0));
  LUT4 #(
    .INIT(16'h1000)) 
    comp_1
       (.I0(\mcp1_rx_ebuff_data_reg[7] [5]),
        .I1(\mcp1_rx_ebuff_data_reg[7] [6]),
        .I2(\mcp1_rx_ebuff_data_reg[7] [4]),
        .I3(\mcp1_rx_ebuff_data_reg[7] [7]),
        .O(comp_1__0));
  LUT4 #(
    .INIT(16'h0010)) 
    comp_2
       (.I0(\mcp1_rx_ebuff_ctrl_reg[3] [3]),
        .I1(\mcp1_rx_ebuff_ctrl_reg[3] [2]),
        .I2(\mcp1_rx_ebuff_ctrl_reg[3] [0]),
        .I3(\mcp1_rx_ebuff_ctrl_reg[3] [1]),
        .O(comp_2__0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "(CARRY4)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY8 muxcy_i0_CARRY4_CARRY8
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({NLW_muxcy_i0_CARRY4_CARRY8_CO_UNCONNECTED[7:3],D,muxcyo_1,muxcyo_0}),
        .DI({NLW_muxcy_i0_CARRY4_CARRY8_DI_UNCONNECTED[7:3],1'b0,1'b0,1'b0}),
        .O(NLW_muxcy_i0_CARRY4_CARRY8_O_UNCONNECTED[7:0]),
        .S({NLW_muxcy_i0_CARRY4_CARRY8_S_UNCONNECTED[7:3],comp_2__0,comp_1__0,comp_0__0}));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_seq_detect" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_seq_detect_72
   (D,
    \mcp1_rx_ebuff_ctrl_reg[7] ,
    \mcp1_rx_ebuff_data_reg[39] );
  output [0:0]D;
  input [3:0]\mcp1_rx_ebuff_ctrl_reg[7] ;
  input [7:0]\mcp1_rx_ebuff_data_reg[39] ;

  wire [0:0]D;
  wire comp_0__0;
  wire comp_1__0;
  wire comp_2__0;
  wire [3:0]\mcp1_rx_ebuff_ctrl_reg[7] ;
  wire [7:0]\mcp1_rx_ebuff_data_reg[39] ;
  wire muxcyo_0;
  wire muxcyo_1;
  wire [7:3]NLW_muxcy_i0_CARRY4_CARRY8_CO_UNCONNECTED;
  wire [7:3]NLW_muxcy_i0_CARRY4_CARRY8_DI_UNCONNECTED;
  wire [7:0]NLW_muxcy_i0_CARRY4_CARRY8_O_UNCONNECTED;
  wire [7:3]NLW_muxcy_i0_CARRY4_CARRY8_S_UNCONNECTED;

  LUT4 #(
    .INIT(16'h1000)) 
    comp_0
       (.I0(\mcp1_rx_ebuff_data_reg[39] [0]),
        .I1(\mcp1_rx_ebuff_data_reg[39] [1]),
        .I2(\mcp1_rx_ebuff_data_reg[39] [3]),
        .I3(\mcp1_rx_ebuff_data_reg[39] [2]),
        .O(comp_0__0));
  LUT4 #(
    .INIT(16'h1000)) 
    comp_1
       (.I0(\mcp1_rx_ebuff_data_reg[39] [5]),
        .I1(\mcp1_rx_ebuff_data_reg[39] [6]),
        .I2(\mcp1_rx_ebuff_data_reg[39] [4]),
        .I3(\mcp1_rx_ebuff_data_reg[39] [7]),
        .O(comp_1__0));
  LUT4 #(
    .INIT(16'h0010)) 
    comp_2
       (.I0(\mcp1_rx_ebuff_ctrl_reg[7] [3]),
        .I1(\mcp1_rx_ebuff_ctrl_reg[7] [2]),
        .I2(\mcp1_rx_ebuff_ctrl_reg[7] [0]),
        .I3(\mcp1_rx_ebuff_ctrl_reg[7] [1]),
        .O(comp_2__0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "(CARRY4)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY8 muxcy_i0_CARRY4_CARRY8
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({NLW_muxcy_i0_CARRY4_CARRY8_CO_UNCONNECTED[7:3],D,muxcyo_1,muxcyo_0}),
        .DI({NLW_muxcy_i0_CARRY4_CARRY8_DI_UNCONNECTED[7:3],1'b0,1'b0,1'b0}),
        .O(NLW_muxcy_i0_CARRY4_CARRY8_O_UNCONNECTED[7:0]),
        .S({NLW_muxcy_i0_CARRY4_CARRY8_S_UNCONNECTED[7:3],comp_2__0,comp_1__0,comp_0__0}));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer
   (pcs_rxreset_int,
    rxreset,
    in0,
    rxusrclk2,
    rxreset_rxusrclk2);
  output pcs_rxreset_int;
  output rxreset;
  input in0;
  input rxusrclk2;
  input rxreset_rxusrclk2;

  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire in0;
  wire pcs_rxreset_int;
  wire rxreset;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(in0),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d4),
        .Q(pcs_rxreset_int),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    rxreset_local_i_1
       (.I0(pcs_rxreset_int),
        .I1(rxreset_rxusrclk2),
        .O(rxreset));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_51
   (rxdatavalid_reg,
    in0,
    coreclk);
  output rxdatavalid_reg;
  input in0;
  input coreclk;

  wire coreclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire in0;
  wire rxdatavalid_reg;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(in0),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d4),
        .Q(rxdatavalid_reg),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_52
   (tx_disable,
    configuration_vector,
    coreclk);
  output tx_disable;
  input [0:0]configuration_vector;
  input coreclk;

  wire [0:0]configuration_vector;
  wire coreclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire tx_disable;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(configuration_vector),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d4),
        .Q(tx_disable),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_53
   (signal_detect_sync,
    \q_reg[0] ,
    signal_detect,
    coreclk,
    status_vector,
    reset);
  output signal_detect_sync;
  output \q_reg[0] ;
  input signal_detect;
  input coreclk;
  input [0:0]status_vector;
  input reset;

  wire coreclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire \q_reg[0] ;
  wire reset;
  wire signal_detect;
  wire signal_detect_sync;
  wire [0:0]status_vector;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(signal_detect),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h02)) 
    \q[0]_i_1__2 
       (.I0(signal_detect_sync),
        .I1(status_vector),
        .I2(reset),
        .O(\q_reg[0] ));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d4),
        .Q(signal_detect_sync),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_57
   (core_status,
    b_lock,
    coreclk);
  output [0:0]core_status;
  input b_lock;
  input coreclk;

  wire b_lock;
  wire [0:0]core_status;
  wire coreclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(b_lock),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d4),
        .Q(core_status),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_58
   (\q_reg[0] ,
    hiber,
    coreclk);
  output \q_reg[0] ;
  input hiber;
  input coreclk;

  wire coreclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire hiber;
  wire \q_reg[0] ;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(hiber),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d4),
        .Q(\q_reg[0] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_59
   (\q_reg[0] ,
    in0,
    coreclk);
  output \q_reg[0] ;
  input in0;
  input coreclk;

  wire coreclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire in0;
  wire \q_reg[0] ;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(in0),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d4),
        .Q(\q_reg[0] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_60
   (signal_ok_reg,
    SR,
    signal_detect,
    rxusrclk2,
    out);
  output signal_ok_reg;
  output [0:0]SR;
  input signal_detect;
  input rxusrclk2;
  input out;

  wire [0:0]SR;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire out;
  wire rxusrclk2;
  wire signal_detect;
  wire signal_ok_reg;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(signal_detect),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hB)) 
    \mcp1_sh_cnt[5]_i_1 
       (.I0(out),
        .I1(signal_ok_reg),
        .O(SR));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d4),
        .Q(signal_ok_reg),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_68
   (toggle_rdclk,
    E,
    in0,
    coreclk,
    toggle_rdclk_reg);
  output toggle_rdclk;
  output [0:0]E;
  input in0;
  input coreclk;
  input toggle_rdclk_reg;

  wire [0:0]E;
  wire coreclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire in0;
  wire toggle_rdclk;
  wire toggle_rdclk_reg;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(in0),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \q[15]_i_1__0 
       (.I0(toggle_rdclk),
        .I1(toggle_rdclk_reg),
        .O(E));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d4),
        .Q(toggle_rdclk),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_69
   (toggle_rdclk,
    E,
    in0,
    dclk,
    toggle_rdclk_reg);
  output toggle_rdclk;
  output [0:0]E;
  input in0;
  input dclk;
  input toggle_rdclk_reg;

  wire [0:0]E;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire dclk;
  wire in0;
  wire toggle_rdclk;
  wire toggle_rdclk_reg;

  LUT2 #(
    .INIT(4'h6)) 
    control_out_i_1
       (.I0(toggle_rdclk),
        .I1(toggle_rdclk_reg),
        .O(E));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(dclk),
        .CE(1'b1),
        .D(in0),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(dclk),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(dclk),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(dclk),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(dclk),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(dclk),
        .CE(1'b1),
        .D(d4),
        .Q(toggle_rdclk),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_70
   (can_insert_rd_reg,
    in0,
    coreclk);
  output can_insert_rd_reg;
  input in0;
  input coreclk;

  wire can_insert_rd_reg;
  wire coreclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire in0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(in0),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d4),
        .Q(can_insert_rd_reg),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_73
   (tx_prbs31_en,
    in0,
    coreclk);
  output tx_prbs31_en;
  input in0;
  input coreclk;

  wire coreclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire in0;
  wire tx_prbs31_en;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(in0),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d4),
        .Q(tx_prbs31_en),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_74
   (D,
    \gt_txd_reg[25] ,
    \gt_txd_reg[33] ,
    \gt_txd_reg[35] ,
    \gt_txd_reg[45] ,
    \gt_txd_reg[0] ,
    \gt_txc_reg[0] ,
    \gt_txd_reg[6] ,
    \gt_txd_reg[2] ,
    \gt_txd_reg[4] ,
    \gt_txc_reg[1] ,
    \gt_txc_reg[0]_0 ,
    configuration_vector,
    coreclk,
    Q,
    \tx_66_enc_out_reg[39] ,
    \tx_66_enc_out_reg[38] ,
    \tx_test_patt_seed_sel_reg[0] ,
    \tx_66_enc_out_reg[26] ,
    \tx_66_enc_out_reg[10] ,
    \tx_66_enc_out_reg[27] ,
    \tx_66_enc_out_reg[1] );
  output [5:0]D;
  output \gt_txd_reg[25] ;
  output \gt_txd_reg[33] ;
  output \gt_txd_reg[35] ;
  output \gt_txd_reg[45] ;
  output \gt_txd_reg[0] ;
  output \gt_txc_reg[0] ;
  output \gt_txd_reg[6] ;
  output \gt_txd_reg[2] ;
  output \gt_txd_reg[4] ;
  output [0:0]\gt_txc_reg[1] ;
  output \gt_txc_reg[0]_0 ;
  input [2:0]configuration_vector;
  input coreclk;
  input [2:0]Q;
  input \tx_66_enc_out_reg[39] ;
  input \tx_66_enc_out_reg[38] ;
  input \tx_test_patt_seed_sel_reg[0] ;
  input \tx_66_enc_out_reg[26] ;
  input \tx_66_enc_out_reg[10] ;
  input \tx_66_enc_out_reg[27] ;
  input [1:0]\tx_66_enc_out_reg[1] ;

  wire [5:0]D;
  wire [2:0]Q;
  wire [2:0]configuration_vector;
  wire coreclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire \gt_txc_reg[0] ;
  wire \gt_txc_reg[0]_0 ;
  wire [0:0]\gt_txc_reg[1] ;
  wire \gt_txd_reg[0] ;
  wire \gt_txd_reg[25] ;
  wire \gt_txd_reg[2] ;
  wire \gt_txd_reg[33] ;
  wire \gt_txd_reg[35] ;
  wire \gt_txd_reg[45] ;
  wire \gt_txd_reg[4] ;
  wire \gt_txd_reg[6] ;
  wire q_reg_n_0;
  wire \tx_66_enc_out_reg[10] ;
  wire [1:0]\tx_66_enc_out_reg[1] ;
  wire \tx_66_enc_out_reg[26] ;
  wire \tx_66_enc_out_reg[27] ;
  wire \tx_66_enc_out_reg[38] ;
  wire \tx_66_enc_out_reg[39] ;
  wire \tx_test_patt_seed_sel_reg[0] ;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(configuration_vector[0]),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT4 #(
    .INIT(16'h1130)) 
    \gt_txc[0]_i_1 
       (.I0(configuration_vector[1]),
        .I1(q_reg_n_0),
        .I2(\tx_66_enc_out_reg[1] [0]),
        .I3(configuration_vector[2]),
        .O(\gt_txc_reg[0] ));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT4 #(
    .INIT(16'h4474)) 
    \gt_txc[1]_i_1 
       (.I0(Q[2]),
        .I1(q_reg_n_0),
        .I2(\tx_66_enc_out_reg[1] [1]),
        .I3(configuration_vector[2]),
        .O(\gt_txc_reg[1] ));
  LUT6 #(
    .INIT(64'hFFFF288828882888)) 
    \gt_txd[24]_i_1 
       (.I0(q_reg_n_0),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(\gt_txd_reg[25] ),
        .I5(\tx_66_enc_out_reg[26] ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFFFF288828882888)) 
    \gt_txd[25]_i_1 
       (.I0(q_reg_n_0),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(\gt_txd_reg[25] ),
        .I5(\tx_66_enc_out_reg[27] ),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT4 #(
    .INIT(16'h7800)) 
    \gt_txd[33]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(q_reg_n_0),
        .O(\gt_txd_reg[33] ));
  LUT6 #(
    .INIT(64'h0000FD57FD57FD57)) 
    \gt_txd[36]_i_1 
       (.I0(q_reg_n_0),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(\gt_txd_reg[25] ),
        .I5(\tx_66_enc_out_reg[38] ),
        .O(D[3]));
  LUT6 #(
    .INIT(64'h0000FD57FD57FD57)) 
    \gt_txd[37]_i_1 
       (.I0(q_reg_n_0),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(\gt_txd_reg[25] ),
        .I5(\tx_66_enc_out_reg[39] ),
        .O(D[4]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT3 #(
    .INIT(8'h60)) 
    \gt_txd[43]_i_1 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(q_reg_n_0),
        .O(\gt_txd_reg[35] ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT4 #(
    .INIT(16'h5600)) 
    \gt_txd[45]_i_1 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(q_reg_n_0),
        .O(\gt_txd_reg[45] ));
  LUT6 #(
    .INIT(64'hFD570000FD57FD57)) 
    \gt_txd[53]_i_1 
       (.I0(q_reg_n_0),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(\tx_test_patt_seed_sel_reg[0] ),
        .I5(\gt_txd_reg[25] ),
        .O(D[5]));
  LUT2 #(
    .INIT(4'h2)) 
    \gt_txd[55]_i_1 
       (.I0(q_reg_n_0),
        .I1(Q[2]),
        .O(\gt_txc_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT4 #(
    .INIT(16'h802A)) 
    \gt_txd[57]_i_1 
       (.I0(q_reg_n_0),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[2]),
        .O(\gt_txd_reg[0] ));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT3 #(
    .INIT(8'h82)) 
    \gt_txd[59]_i_1 
       (.I0(q_reg_n_0),
        .I1(Q[2]),
        .I2(Q[1]),
        .O(\gt_txd_reg[2] ));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT4 #(
    .INIT(16'h8882)) 
    \gt_txd[61]_i_1 
       (.I0(q_reg_n_0),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(\gt_txd_reg[4] ));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \gt_txd[63]_i_1 
       (.I0(q_reg_n_0),
        .I1(Q[2]),
        .O(\gt_txd_reg[6] ));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT3 #(
    .INIT(8'h15)) 
    \gt_txd[63]_i_6 
       (.I0(q_reg_n_0),
        .I1(configuration_vector[2]),
        .I2(configuration_vector[1]),
        .O(\gt_txd_reg[25] ));
  LUT6 #(
    .INIT(64'hFFFF288828882888)) 
    \gt_txd[8]_i_1 
       (.I0(q_reg_n_0),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(\gt_txd_reg[25] ),
        .I5(\tx_66_enc_out_reg[10] ),
        .O(D[0]));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d4),
        .Q(q_reg_n_0),
        .R(1'b0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__10
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__11
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__12
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__13
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__14
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__15
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__16
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__17
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__18
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__19
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__2
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__20
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__21
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__3
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__4
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__5
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__6
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__7
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__8
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_enable__9
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d2;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d3;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_toggle_synchronizer
   (ipif_cs_dclk,
    \ipif_addr_dclk_reg[8] ,
    Q,
    dclk,
    D,
    coreclk,
    mgmt_addr,
    out,
    ipif_cs_dclk_reg);
  output ipif_cs_dclk;
  output \ipif_addr_dclk_reg[8] ;
  output [1:0]Q;
  input dclk;
  input [0:0]D;
  input coreclk;
  input [0:0]mgmt_addr;
  input [1:0]out;
  input ipif_cs_dclk_reg;

  wire [0:0]D;
  wire [1:0]Q;
  wire control_reg;
  wire coreclk;
  wire [24:24]d_reg;
  wire dclk;
  wire \ipif_addr_dclk_reg[8] ;
  wire ipif_cs_dclk;
  wire ipif_cs_dclk_reg;
  wire [0:0]mgmt_addr;
  wire [1:0]out;
  wire toggle_rdclk;
  wire toggle_rdclk_reg;
  wire toggle_reg;
  wire toggle_reg_i_1_n_0;
  wire toggle_sync_n_1;

  FDRE #(
    .INIT(1'b0)) 
    control_out_reg
       (.C(dclk),
        .CE(1'b1),
        .D(toggle_sync_n_1),
        .Q(ipif_cs_dclk),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    control_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(D),
        .Q(control_reg),
        .R(1'b0));
  FDRE \d_reg_reg[24] 
       (.C(coreclk),
        .CE(1'b1),
        .D(mgmt_addr),
        .Q(d_reg),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ipif_addr_dclk[8]_i_1 
       (.I0(ipif_cs_dclk),
        .I1(ipif_cs_dclk_reg),
        .O(\ipif_addr_dclk_reg[8] ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[24] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg),
        .Q(Q[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[32] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(1'b1),
        .Q(Q[1]),
        .R(1'b0));
  FDRE toggle_rdclk_reg_reg
       (.C(dclk),
        .CE(1'b1),
        .D(toggle_rdclk),
        .Q(toggle_rdclk_reg),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hEB14)) 
    toggle_reg_i_1
       (.I0(control_reg),
        .I1(out[0]),
        .I2(out[1]),
        .I3(toggle_reg),
        .O(toggle_reg_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    toggle_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(toggle_reg_i_1_n_0),
        .Q(toggle_reg),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_69 toggle_sync
       (.E(toggle_sync_n_1),
        .dclk(dclk),
        .in0(toggle_reg),
        .toggle_rdclk(toggle_rdclk),
        .toggle_rdclk_reg(toggle_rdclk_reg));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_7_toggle_synchronizer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_toggle_synchronizer__parameterized0
   (drp_ack,
    \prbs31_err_count_reg[15] ,
    coreclk,
    drp_drdy,
    dclk,
    Q);
  output drp_ack;
  output [15:0]\prbs31_err_count_reg[15] ;
  input coreclk;
  input drp_drdy;
  input dclk;
  input [15:0]Q;

  wire [15:0]Q;
  wire control_reg;
  wire coreclk;
  wire \d_reg_reg_n_0_[0] ;
  wire \d_reg_reg_n_0_[10] ;
  wire \d_reg_reg_n_0_[11] ;
  wire \d_reg_reg_n_0_[12] ;
  wire \d_reg_reg_n_0_[13] ;
  wire \d_reg_reg_n_0_[14] ;
  wire \d_reg_reg_n_0_[15] ;
  wire \d_reg_reg_n_0_[1] ;
  wire \d_reg_reg_n_0_[2] ;
  wire \d_reg_reg_n_0_[3] ;
  wire \d_reg_reg_n_0_[4] ;
  wire \d_reg_reg_n_0_[5] ;
  wire \d_reg_reg_n_0_[6] ;
  wire \d_reg_reg_n_0_[7] ;
  wire \d_reg_reg_n_0_[8] ;
  wire \d_reg_reg_n_0_[9] ;
  wire dclk;
  wire drp_ack;
  wire drp_drdy;
  wire [15:0]\prbs31_err_count_reg[15] ;
  wire toggle_rdclk;
  wire toggle_rdclk_reg;
  wire toggle_reg;
  wire toggle_reg_i_1__0_n_0;
  wire toggle_sync_n_1;

  FDRE #(
    .INIT(1'b0)) 
    control_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(toggle_sync_n_1),
        .Q(drp_ack),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    control_reg_reg
       (.C(dclk),
        .CE(1'b1),
        .D(drp_drdy),
        .Q(control_reg),
        .R(1'b0));
  FDRE \d_reg_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(\d_reg_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \d_reg_reg[10] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[10]),
        .Q(\d_reg_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \d_reg_reg[11] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[11]),
        .Q(\d_reg_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \d_reg_reg[12] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[12]),
        .Q(\d_reg_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \d_reg_reg[13] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[13]),
        .Q(\d_reg_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \d_reg_reg[14] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[14]),
        .Q(\d_reg_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \d_reg_reg[15] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[15]),
        .Q(\d_reg_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \d_reg_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(\d_reg_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \d_reg_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(\d_reg_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \d_reg_reg[3] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(\d_reg_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \d_reg_reg[4] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(\d_reg_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \d_reg_reg[5] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[5]),
        .Q(\d_reg_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \d_reg_reg[6] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[6]),
        .Q(\d_reg_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \d_reg_reg[7] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[7]),
        .Q(\d_reg_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \d_reg_reg[8] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[8]),
        .Q(\d_reg_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \d_reg_reg[9] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[9]),
        .Q(\d_reg_reg_n_0_[9] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[0] ),
        .Q(\prbs31_err_count_reg[15] [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[10] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[10] ),
        .Q(\prbs31_err_count_reg[15] [10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[11] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[11] ),
        .Q(\prbs31_err_count_reg[15] [11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[12] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[12] ),
        .Q(\prbs31_err_count_reg[15] [12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[13] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[13] ),
        .Q(\prbs31_err_count_reg[15] [13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[14] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[14] ),
        .Q(\prbs31_err_count_reg[15] [14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[15] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[15] ),
        .Q(\prbs31_err_count_reg[15] [15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[1] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[1] ),
        .Q(\prbs31_err_count_reg[15] [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[2] ),
        .Q(\prbs31_err_count_reg[15] [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[3] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[3] ),
        .Q(\prbs31_err_count_reg[15] [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[4] ),
        .Q(\prbs31_err_count_reg[15] [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[5] ),
        .Q(\prbs31_err_count_reg[15] [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[6] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[6] ),
        .Q(\prbs31_err_count_reg[15] [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[7] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[7] ),
        .Q(\prbs31_err_count_reg[15] [7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[8] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[8] ),
        .Q(\prbs31_err_count_reg[15] [8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[9] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[9] ),
        .Q(\prbs31_err_count_reg[15] [9]),
        .R(1'b0));
  FDRE toggle_rdclk_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(toggle_rdclk),
        .Q(toggle_rdclk_reg),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB4)) 
    toggle_reg_i_1__0
       (.I0(control_reg),
        .I1(drp_drdy),
        .I2(toggle_reg),
        .O(toggle_reg_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    toggle_reg_reg
       (.C(dclk),
        .CE(1'b1),
        .D(toggle_reg_i_1__0_n_0),
        .Q(toggle_reg),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_synchronizer_68 toggle_sync
       (.E(toggle_sync_n_1),
        .coreclk(coreclk),
        .in0(toggle_reg),
        .toggle_rdclk(toggle_rdclk),
        .toggle_rdclk_reg(toggle_rdclk_reg));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_tx_encoder
   (Q,
    \tx_66_enc_out_reg[65] ,
    coreclk,
    D,
    SR,
    out);
  output [2:0]Q;
  output [65:0]\tx_66_enc_out_reg[65] ;
  input coreclk;
  input [7:0]D;
  input [0:0]SR;
  input [63:0]out;

  wire [7:0]D;
  wire [2:0]Q;
  wire [0:0]SR;
  wire \block_field[0]_i_2_n_0 ;
  wire \block_field[0]_i_3_n_0 ;
  wire \block_field[0]_i_4_n_0 ;
  wire \block_field[0]_i_5_n_0 ;
  wire \block_field[1]_i_2_n_0 ;
  wire \block_field[1]_i_3_n_0 ;
  wire \block_field[2]_i_2_n_0 ;
  wire \block_field[2]_i_3_n_0 ;
  wire \block_field[2]_i_4_n_0 ;
  wire \block_field[2]_i_5_n_0 ;
  wire \block_field[2]_i_6_n_0 ;
  wire \block_field[3]_i_1_n_0 ;
  wire \block_field[3]_i_2_n_0 ;
  wire \block_field[4]_i_2_n_0 ;
  wire \block_field[4]_i_3_n_0 ;
  wire \block_field[4]_i_4_n_0 ;
  wire \block_field[4]_i_5_n_0 ;
  wire \block_field[5]_i_1_n_0 ;
  wire \block_field[5]_i_2_n_0 ;
  wire \block_field[5]_i_3_n_0 ;
  wire \block_field[5]_i_4_n_0 ;
  wire \block_field[5]_i_5_n_0 ;
  wire \block_field[6]_i_2_n_0 ;
  wire \block_field[6]_i_3_n_0 ;
  wire \block_field[6]_i_4_n_0 ;
  wire \block_field[7]_i_1_n_0 ;
  wire [6:0]c0;
  wire \c0[0]_i_1_n_0 ;
  wire \c0[1]_i_1_n_0 ;
  wire \c0[2]_i_1_n_0 ;
  wire \c0[2]_i_2_n_0 ;
  wire \c0[3]_i_1_n_0 ;
  wire \c0[4]_i_1_n_0 ;
  wire \c0[4]_i_2_n_0 ;
  wire \c0[4]_i_3_n_0 ;
  wire \c0[5]_i_1_n_0 ;
  wire \c0[5]_i_2_n_0 ;
  wire \c0[5]_i_3_n_0 ;
  wire \c0[5]_i_4_n_0 ;
  wire \c0[5]_i_5_n_0 ;
  wire \c0[5]_i_6_n_0 ;
  wire \c0[6]_i_1_n_0 ;
  wire \c0[6]_i_2_n_0 ;
  wire \c0[6]_i_3_n_0 ;
  wire \c0[6]_i_4_n_0 ;
  wire \c0[6]_i_5_n_0 ;
  wire \c0[6]_i_6_n_0 ;
  wire [6:0]c1;
  wire \c1[0]_i_1_n_0 ;
  wire \c1[1]_i_1_n_0 ;
  wire \c1[1]_i_2_n_0 ;
  wire \c1[2]_i_1_n_0 ;
  wire \c1[3]_i_1_n_0 ;
  wire \c1[4]_i_1_n_0 ;
  wire \c1[4]_i_2_n_0 ;
  wire \c1[4]_i_3_n_0 ;
  wire \c1[4]_i_4_n_0 ;
  wire \c1[5]_i_1_n_0 ;
  wire \c1[5]_i_2_n_0 ;
  wire \c1[5]_i_3_n_0 ;
  wire \c1[5]_i_4_n_0 ;
  wire \c1[6]_i_1_n_0 ;
  wire \c1[6]_i_2_n_0 ;
  wire \c1[6]_i_3_n_0 ;
  wire \c1[6]_i_4_n_0 ;
  wire [6:0]c2;
  wire \c2[0]_i_1_n_0 ;
  wire \c2[1]_i_1_n_0 ;
  wire \c2[1]_i_2_n_0 ;
  wire \c2[2]_i_1_n_0 ;
  wire \c2[3]_i_1_n_0 ;
  wire \c2[4]_i_1_n_0 ;
  wire \c2[4]_i_2_n_0 ;
  wire \c2[4]_i_3_n_0 ;
  wire \c2[4]_i_4_n_0 ;
  wire \c2[5]_i_1_n_0 ;
  wire \c2[5]_i_2_n_0 ;
  wire \c2[5]_i_3_n_0 ;
  wire \c2[5]_i_4_n_0 ;
  wire \c2[6]_i_1_n_0 ;
  wire \c2[6]_i_2_n_0 ;
  wire \c2[6]_i_3_n_0 ;
  wire \c2[6]_i_4_n_0 ;
  wire [6:0]c3;
  wire \c3[0]_i_1_n_0 ;
  wire \c3[1]_i_1_n_0 ;
  wire \c3[1]_i_2_n_0 ;
  wire \c3[2]_i_1_n_0 ;
  wire \c3[3]_i_1_n_0 ;
  wire \c3[4]_i_1_n_0 ;
  wire \c3[4]_i_2_n_0 ;
  wire \c3[4]_i_3_n_0 ;
  wire \c3[4]_i_4_n_0 ;
  wire \c3[5]_i_1_n_0 ;
  wire \c3[5]_i_2_n_0 ;
  wire \c3[5]_i_3_n_0 ;
  wire \c3[5]_i_4_n_0 ;
  wire \c3[6]_i_1_n_0 ;
  wire \c3[6]_i_2_n_0 ;
  wire \c3[6]_i_3_n_0 ;
  wire \c3[6]_i_4_n_0 ;
  wire [6:0]c4;
  wire \c4[0]_i_1_n_0 ;
  wire \c4[1]_i_1_n_0 ;
  wire \c4[2]_i_1_n_0 ;
  wire \c4[2]_i_2_n_0 ;
  wire \c4[3]_i_1_n_0 ;
  wire \c4[4]_i_1_n_0 ;
  wire \c4[4]_i_2_n_0 ;
  wire \c4[4]_i_3_n_0 ;
  wire \c4[5]_i_1_n_0 ;
  wire \c4[5]_i_2_n_0 ;
  wire \c4[5]_i_3_n_0 ;
  wire \c4[5]_i_4_n_0 ;
  wire \c4[5]_i_5_n_0 ;
  wire \c4[5]_i_6_n_0 ;
  wire \c4[6]_i_1_n_0 ;
  wire \c4[6]_i_2_n_0 ;
  wire \c4[6]_i_3_n_0 ;
  wire \c4[6]_i_4_n_0 ;
  wire \c4[6]_i_5_n_0 ;
  wire \c4[6]_i_6_n_0 ;
  wire [6:0]c5;
  wire \c5[0]_i_1_n_0 ;
  wire \c5[1]_i_1_n_0 ;
  wire \c5[1]_i_2_n_0 ;
  wire \c5[2]_i_1_n_0 ;
  wire \c5[3]_i_1_n_0 ;
  wire \c5[4]_i_1_n_0 ;
  wire \c5[4]_i_2_n_0 ;
  wire \c5[4]_i_3_n_0 ;
  wire \c5[4]_i_4_n_0 ;
  wire \c5[5]_i_1_n_0 ;
  wire \c5[5]_i_2_n_0 ;
  wire \c5[5]_i_3_n_0 ;
  wire \c5[5]_i_4_n_0 ;
  wire \c5[6]_i_1_n_0 ;
  wire \c5[6]_i_2_n_0 ;
  wire \c5[6]_i_3_n_0 ;
  wire \c5[6]_i_4_n_0 ;
  wire [6:0]c6;
  wire \c6[0]_i_1_n_0 ;
  wire \c6[1]_i_1_n_0 ;
  wire \c6[1]_i_2_n_0 ;
  wire \c6[2]_i_1_n_0 ;
  wire \c6[3]_i_1_n_0 ;
  wire \c6[4]_i_1_n_0 ;
  wire \c6[4]_i_2_n_0 ;
  wire \c6[4]_i_3_n_0 ;
  wire \c6[4]_i_4_n_0 ;
  wire \c6[5]_i_1_n_0 ;
  wire \c6[5]_i_2_n_0 ;
  wire \c6[5]_i_3_n_0 ;
  wire \c6[5]_i_4_n_0 ;
  wire \c6[6]_i_1_n_0 ;
  wire \c6[6]_i_2_n_0 ;
  wire \c6[6]_i_3_n_0 ;
  wire \c6[6]_i_4_n_0 ;
  wire [6:0]c7;
  wire \c7[0]_i_1_n_0 ;
  wire \c7[1]_i_1_n_0 ;
  wire \c7[1]_i_2_n_0 ;
  wire \c7[2]_i_1_n_0 ;
  wire \c7[3]_i_1_n_0 ;
  wire \c7[4]_i_1_n_0 ;
  wire \c7[4]_i_2_n_0 ;
  wire \c7[4]_i_3_n_0 ;
  wire \c7[4]_i_4_n_0 ;
  wire \c7[5]_i_1_n_0 ;
  wire \c7[5]_i_2_n_0 ;
  wire \c7[5]_i_3_n_0 ;
  wire \c7[5]_i_4_n_0 ;
  wire \c7[6]_i_1_n_0 ;
  wire \c7[6]_i_2_n_0 ;
  wire \c7[6]_i_3_n_0 ;
  wire \c7[6]_i_4_n_0 ;
  wire coreclk;
  wire [7:0]d0;
  wire \d0[7]_i_1_n_0 ;
  wire [7:0]d1;
  wire \d1[7]_i_1_n_0 ;
  wire [7:0]d2;
  wire \d2[7]_i_1_n_0 ;
  wire [7:0]d3;
  wire \d3[7]_i_1_n_0 ;
  wire [7:0]d4;
  wire \d4[7]_i_1_n_0 ;
  wire [7:0]d5;
  wire \d5[7]_i_1_n_0 ;
  wire [7:0]d6;
  wire \d6[7]_i_1_n_0 ;
  wire [7:0]d7;
  wire \d7[7]_i_1_n_0 ;
  wire [9:2]data4;
  wire [0:0]o0;
  wire \o0[0]_i_1_n_0 ;
  wire [0:0]o4;
  wire \o4[0]_i_1_n_0 ;
  wire o_code_c0;
  wire o_code_c00;
  wire o_code_c0_i_2_n_0;
  wire o_code_c0_i_3_n_0;
  wire o_code_c4;
  wire o_code_c40;
  wire o_code_c4_i_2_n_0;
  wire o_code_c4_i_3_n_0;
  wire [63:0]out;
  wire [7:0]p_15_out;
  wire [7:0]p_1_in;
  wire p_5_in;
  wire [7:0]p_8_out;
  wire s_code_c0;
  wire s_code_c0_reg_n_0;
  wire s_code_c4;
  wire s_code_c4_reg_n_0;
  wire \t_code[0]_i_2_n_0 ;
  wire \t_code[1]_i_2_n_0 ;
  wire \t_code[2]_i_2_n_0 ;
  wire \t_code[3]_i_2_n_0 ;
  wire \t_code[4]_i_2_n_0 ;
  wire \t_code[5]_i_2_n_0 ;
  wire \t_code[6]_i_2_n_0 ;
  wire \t_code[7]_i_2_n_0 ;
  wire \t_code_reg_n_0_[0] ;
  wire \t_code_reg_n_0_[1] ;
  wire \t_code_reg_n_0_[2] ;
  wire \t_code_reg_n_0_[3] ;
  wire \t_code_reg_n_0_[4] ;
  wire \t_code_reg_n_0_[5] ;
  wire \t_code_reg_n_0_[6] ;
  wire \t_code_reg_n_0_[7] ;
  wire \t_type_reg[0]_i_10_n_0 ;
  wire \t_type_reg[0]_i_11_n_0 ;
  wire \t_type_reg[0]_i_1_n_0 ;
  wire \t_type_reg[0]_i_2_n_0 ;
  wire \t_type_reg[0]_i_3_n_0 ;
  wire \t_type_reg[0]_i_4_n_0 ;
  wire \t_type_reg[0]_i_5_n_0 ;
  wire \t_type_reg[0]_i_6_n_0 ;
  wire \t_type_reg[0]_i_7_n_0 ;
  wire \t_type_reg[0]_i_8_n_0 ;
  wire \t_type_reg[0]_i_9_n_0 ;
  wire \t_type_reg[1]_i_10_n_0 ;
  wire \t_type_reg[1]_i_11_n_0 ;
  wire \t_type_reg[1]_i_12_n_0 ;
  wire \t_type_reg[1]_i_1_n_0 ;
  wire \t_type_reg[1]_i_2_n_0 ;
  wire \t_type_reg[1]_i_3_n_0 ;
  wire \t_type_reg[1]_i_4_n_0 ;
  wire \t_type_reg[1]_i_5_n_0 ;
  wire \t_type_reg[1]_i_6_n_0 ;
  wire \t_type_reg[1]_i_7_n_0 ;
  wire \t_type_reg[1]_i_8_n_0 ;
  wire \t_type_reg[1]_i_9_n_0 ;
  wire \t_type_reg[2]_i_1_n_0 ;
  wire \t_type_reg[2]_i_2_n_0 ;
  wire \t_type_reg[2]_i_3_n_0 ;
  wire \t_type_reg[2]_i_4_n_0 ;
  wire \t_type_reg[2]_i_5_n_0 ;
  wire \t_type_reg[2]_i_6_n_0 ;
  wire \t_type_reg[2]_i_7_n_0 ;
  wire \t_type_reg[2]_i_8_n_0 ;
  wire \t_type_reg[2]_i_9_n_0 ;
  wire \t_type_reg_reg_n_0_[0] ;
  wire \t_type_reg_reg_n_0_[1] ;
  wire \t_type_reg_reg_n_0_[2] ;
  wire [65:0]\tx_66_enc_out_reg[65] ;
  wire [65:0]tx_encoded_data;
  wire \tx_encoded_data[10]_i_2_n_0 ;
  wire \tx_encoded_data[11]_i_2_n_0 ;
  wire \tx_encoded_data[12]_i_2_n_0 ;
  wire \tx_encoded_data[13]_i_2_n_0 ;
  wire \tx_encoded_data[14]_i_2_n_0 ;
  wire \tx_encoded_data[15]_i_2_n_0 ;
  wire \tx_encoded_data[16]_i_2_n_0 ;
  wire \tx_encoded_data[16]_i_3_n_0 ;
  wire \tx_encoded_data[17]_i_2_n_0 ;
  wire \tx_encoded_data[17]_i_3_n_0 ;
  wire \tx_encoded_data[17]_i_4_n_0 ;
  wire \tx_encoded_data[18]_i_2_n_0 ;
  wire \tx_encoded_data[19]_i_2_n_0 ;
  wire \tx_encoded_data[1]_i_2_n_0 ;
  wire \tx_encoded_data[20]_i_2_n_0 ;
  wire \tx_encoded_data[21]_i_2_n_0 ;
  wire \tx_encoded_data[21]_i_3_n_0 ;
  wire \tx_encoded_data[22]_i_2_n_0 ;
  wire \tx_encoded_data[23]_i_2_n_0 ;
  wire \tx_encoded_data[23]_i_3_n_0 ;
  wire \tx_encoded_data[24]_i_2_n_0 ;
  wire \tx_encoded_data[24]_i_3_n_0 ;
  wire \tx_encoded_data[25]_i_2_n_0 ;
  wire \tx_encoded_data[26]_i_2_n_0 ;
  wire \tx_encoded_data[27]_i_2_n_0 ;
  wire \tx_encoded_data[28]_i_2_n_0 ;
  wire \tx_encoded_data[29]_i_2_n_0 ;
  wire \tx_encoded_data[30]_i_2_n_0 ;
  wire \tx_encoded_data[30]_i_3_n_0 ;
  wire \tx_encoded_data[31]_i_2_n_0 ;
  wire \tx_encoded_data[31]_i_3_n_0 ;
  wire \tx_encoded_data[32]_i_2_n_0 ;
  wire \tx_encoded_data[33]_i_2_n_0 ;
  wire \tx_encoded_data[33]_i_3_n_0 ;
  wire \tx_encoded_data[34]_i_2_n_0 ;
  wire \tx_encoded_data[35]_i_2_n_0 ;
  wire \tx_encoded_data[36]_i_2_n_0 ;
  wire \tx_encoded_data[37]_i_2_n_0 ;
  wire \tx_encoded_data[37]_i_3_n_0 ;
  wire \tx_encoded_data[37]_i_4_n_0 ;
  wire \tx_encoded_data[37]_i_5_n_0 ;
  wire \tx_encoded_data[37]_i_6_n_0 ;
  wire \tx_encoded_data[38]_i_2_n_0 ;
  wire \tx_encoded_data[38]_i_3_n_0 ;
  wire \tx_encoded_data[38]_i_4_n_0 ;
  wire \tx_encoded_data[38]_i_5_n_0 ;
  wire \tx_encoded_data[38]_i_6_n_0 ;
  wire \tx_encoded_data[38]_i_7_n_0 ;
  wire \tx_encoded_data[38]_i_8_n_0 ;
  wire \tx_encoded_data[39]_i_2_n_0 ;
  wire \tx_encoded_data[40]_i_2_n_0 ;
  wire \tx_encoded_data[41]_i_2_n_0 ;
  wire \tx_encoded_data[41]_i_3_n_0 ;
  wire \tx_encoded_data[41]_i_4_n_0 ;
  wire \tx_encoded_data[41]_i_5_n_0 ;
  wire \tx_encoded_data[41]_i_6_n_0 ;
  wire \tx_encoded_data[42]_i_2_n_0 ;
  wire \tx_encoded_data[43]_i_2_n_0 ;
  wire \tx_encoded_data[44]_i_2_n_0 ;
  wire \tx_encoded_data[44]_i_3_n_0 ;
  wire \tx_encoded_data[44]_i_4_n_0 ;
  wire \tx_encoded_data[44]_i_5_n_0 ;
  wire \tx_encoded_data[44]_i_6_n_0 ;
  wire \tx_encoded_data[45]_i_2_n_0 ;
  wire \tx_encoded_data[45]_i_3_n_0 ;
  wire \tx_encoded_data[45]_i_4_n_0 ;
  wire \tx_encoded_data[45]_i_5_n_0 ;
  wire \tx_encoded_data[50]_i_2_n_0 ;
  wire \tx_encoded_data[51]_i_2_n_0 ;
  wire \tx_encoded_data[51]_i_3_n_0 ;
  wire \tx_encoded_data[57]_i_2_n_0 ;
  wire \tx_encoded_data[58]_i_2_n_0 ;
  wire \tx_encoded_data[63]_i_2_n_0 ;
  wire \tx_encoded_data[63]_i_3_n_0 ;
  wire \tx_encoded_data[63]_i_4_n_0 ;
  wire \tx_encoded_data[63]_i_5_n_0 ;
  wire \tx_encoded_data[65]_i_2_n_0 ;
  wire \tx_encoded_data[65]_i_3_n_0 ;
  wire \tx_encoded_data[65]_i_4_n_0 ;
  wire \tx_encoded_data[65]_i_5_n_0 ;
  wire \tx_encoded_data[65]_i_6_n_0 ;
  wire \tx_encoded_data[65]_i_7_n_0 ;
  wire \tx_encoded_data[9]_i_2_n_0 ;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire [7:0]tx_xgmii_ctrl_reg1;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire [7:0]tx_xgmii_ctrl_reg2;
  wire \tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ;
  wire \tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ;
  wire \tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ;
  wire \tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ;
  wire \tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ;
  wire \tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ;
  wire \tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ;
  wire \tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire [63:0]tx_xgmii_data_reg2;
  wire tx_xgmii_valid_code1__12;
  wire tx_xgmii_valid_code70_in;
  wire tx_xgmii_valid_code71_in;
  wire tx_xgmii_valid_code72_in;
  wire tx_xgmii_valid_code73_in;
  wire tx_xgmii_valid_code74_in;
  wire tx_xgmii_valid_code76_in;
  wire tx_xgmii_valid_code7__6;
  wire \tx_xgmii_valid_code[0]_i_1_n_0 ;
  wire \tx_xgmii_valid_code[0]_i_3_n_0 ;
  wire \tx_xgmii_valid_code[0]_i_4_n_0 ;
  wire \tx_xgmii_valid_code[1]_i_1_n_0 ;
  wire \tx_xgmii_valid_code[1]_i_3_n_0 ;
  wire \tx_xgmii_valid_code[2]_i_1_n_0 ;
  wire \tx_xgmii_valid_code[2]_i_3_n_0 ;
  wire \tx_xgmii_valid_code[3]_i_1_n_0 ;
  wire \tx_xgmii_valid_code[3]_i_3_n_0 ;
  wire \tx_xgmii_valid_code[4]_i_1_n_0 ;
  wire \tx_xgmii_valid_code[4]_i_3_n_0 ;
  wire \tx_xgmii_valid_code[5]_i_1_n_0 ;
  wire \tx_xgmii_valid_code[5]_i_3_n_0 ;
  wire \tx_xgmii_valid_code[6]_i_1_n_0 ;
  wire \tx_xgmii_valid_code[6]_i_3_n_0 ;
  wire \tx_xgmii_valid_code[7]_i_12_n_0 ;
  wire \tx_xgmii_valid_code[7]_i_1_n_0 ;
  wire \tx_xgmii_valid_code[7]_i_4_n_0 ;
  wire \tx_xgmii_valid_code[7]_i_5_n_0 ;
  wire \tx_xgmii_valid_code[7]_i_6_n_0 ;
  wire \tx_xgmii_valid_code[7]_i_7_n_0 ;
  wire \tx_xgmii_valid_code[7]_i_9_n_0 ;
  wire \tx_xgmii_valid_code_reg_n_0_[0] ;
  wire \tx_xgmii_valid_code_reg_n_0_[1] ;
  wire \tx_xgmii_valid_code_reg_n_0_[2] ;
  wire \tx_xgmii_valid_code_reg_n_0_[3] ;
  wire \tx_xgmii_valid_code_reg_n_0_[4] ;
  wire \tx_xgmii_valid_code_reg_n_0_[5] ;
  wire \tx_xgmii_valid_code_reg_n_0_[6] ;

  LUT6 #(
    .INIT(64'hAAABBBBBAAAAAAAA)) 
    \block_field[0]_i_1 
       (.I0(\t_type_reg[0]_i_4_n_0 ),
        .I1(\block_field[0]_i_2_n_0 ),
        .I2(tx_xgmii_ctrl_reg1[5]),
        .I3(\block_field[0]_i_3_n_0 ),
        .I4(tx_xgmii_ctrl_reg1[3]),
        .I5(\block_field[0]_i_4_n_0 ),
        .O(p_1_in[0]));
  LUT6 #(
    .INIT(64'h0FFFFF1FFFFFFFFF)) 
    \block_field[0]_i_2 
       (.I0(\block_field[1]_i_3_n_0 ),
        .I1(tx_xgmii_ctrl_reg1[3]),
        .I2(tx_xgmii_ctrl_reg1[4]),
        .I3(tx_xgmii_ctrl_reg1[5]),
        .I4(tx_xgmii_ctrl_reg1[6]),
        .I5(tx_xgmii_ctrl_reg1[0]),
        .O(\block_field[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h1FFFFFFFFFFFFFFF)) 
    \block_field[0]_i_3 
       (.I0(o_code_c4),
        .I1(s_code_c4_reg_n_0),
        .I2(\tx_xgmii_valid_code_reg_n_0_[1] ),
        .I3(\tx_xgmii_valid_code_reg_n_0_[0] ),
        .I4(\tx_xgmii_valid_code_reg_n_0_[3] ),
        .I5(\tx_xgmii_valid_code_reg_n_0_[2] ),
        .O(\block_field[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000008181000081)) 
    \block_field[0]_i_4 
       (.I0(tx_xgmii_ctrl_reg1[3]),
        .I1(tx_xgmii_ctrl_reg1[2]),
        .I2(tx_xgmii_ctrl_reg1[1]),
        .I3(tx_xgmii_ctrl_reg1[7]),
        .I4(tx_xgmii_ctrl_reg1[6]),
        .I5(\block_field[0]_i_5_n_0 ),
        .O(\block_field[0]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \block_field[0]_i_5 
       (.I0(o_code_c0),
        .I1(\tx_xgmii_valid_code_reg_n_0_[4] ),
        .I2(\tx_xgmii_valid_code_reg_n_0_[5] ),
        .I3(p_5_in),
        .I4(\tx_xgmii_valid_code_reg_n_0_[6] ),
        .O(\block_field[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAAB)) 
    \block_field[1]_i_1 
       (.I0(\block_field[2]_i_4_n_0 ),
        .I1(\t_type_reg[0]_i_5_n_0 ),
        .I2(\block_field[2]_i_3_n_0 ),
        .I3(\t_type_reg[1]_i_3_n_0 ),
        .I4(\block_field[4]_i_4_n_0 ),
        .I5(\block_field[1]_i_2_n_0 ),
        .O(p_1_in[1]));
  LUT6 #(
    .INIT(64'h2A200A0A2A200000)) 
    \block_field[1]_i_2 
       (.I0(\block_field[5]_i_3_n_0 ),
        .I1(\t_type_reg[1]_i_10_n_0 ),
        .I2(tx_xgmii_ctrl_reg1[3]),
        .I3(\block_field[1]_i_3_n_0 ),
        .I4(tx_xgmii_ctrl_reg1[4]),
        .I5(s_code_c0_reg_n_0),
        .O(\block_field[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \block_field[1]_i_3 
       (.I0(o_code_c0),
        .I1(o_code_c4),
        .I2(s_code_c4_reg_n_0),
        .O(\block_field[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FF02)) 
    \block_field[2]_i_1 
       (.I0(\block_field[2]_i_2_n_0 ),
        .I1(\block_field[2]_i_3_n_0 ),
        .I2(\t_type_reg[0]_i_2_n_0 ),
        .I3(\block_field[2]_i_4_n_0 ),
        .I4(\t_type_reg[0]_i_6_n_0 ),
        .I5(\t_type_reg[0]_i_3_n_0 ),
        .O(p_1_in[2]));
  LUT6 #(
    .INIT(64'h7F7F7F707F7F7F7F)) 
    \block_field[2]_i_2 
       (.I0(p_5_in),
        .I1(\t_code_reg_n_0_[6] ),
        .I2(\block_field[4]_i_5_n_0 ),
        .I3(\block_field[2]_i_5_n_0 ),
        .I4(\block_field[2]_i_6_n_0 ),
        .I5(\block_field[4]_i_2_n_0 ),
        .O(\block_field[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00008000)) 
    \block_field[2]_i_3 
       (.I0(\tx_xgmii_valid_code_reg_n_0_[2] ),
        .I1(\tx_xgmii_valid_code_reg_n_0_[3] ),
        .I2(\t_type_reg[1]_i_9_n_0 ),
        .I3(\t_code_reg_n_0_[1] ),
        .I4(\block_field[5]_i_4_n_0 ),
        .O(\block_field[2]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h2000)) 
    \block_field[2]_i_4 
       (.I0(tx_xgmii_ctrl_reg1[0]),
        .I1(\t_type_reg[1]_i_8_n_0 ),
        .I2(tx_xgmii_ctrl_reg1[1]),
        .I3(tx_xgmii_ctrl_reg1[2]),
        .O(\block_field[2]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00020000)) 
    \block_field[2]_i_5 
       (.I0(tx_xgmii_ctrl_reg1[7]),
        .I1(tx_xgmii_ctrl_reg1[4]),
        .I2(tx_xgmii_ctrl_reg1[5]),
        .I3(tx_xgmii_ctrl_reg1[6]),
        .I4(\t_type_reg[0]_i_8_n_0 ),
        .O(\block_field[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hF0BFFFF0F0BFFFFF)) 
    \block_field[2]_i_6 
       (.I0(\t_type_reg[1]_i_12_n_0 ),
        .I1(s_code_c4_reg_n_0),
        .I2(tx_xgmii_ctrl_reg1[3]),
        .I3(tx_xgmii_ctrl_reg1[5]),
        .I4(tx_xgmii_ctrl_reg1[4]),
        .I5(s_code_c0_reg_n_0),
        .O(\block_field[2]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000045)) 
    \block_field[3]_i_1 
       (.I0(\block_field[4]_i_4_n_0 ),
        .I1(\block_field[3]_i_2_n_0 ),
        .I2(\block_field[5]_i_3_n_0 ),
        .I3(\t_type_reg[0]_i_6_n_0 ),
        .I4(\t_type_reg[1]_i_3_n_0 ),
        .I5(\t_type_reg[2]_i_5_n_0 ),
        .O(\block_field[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hB0BFB3BFFFFFFFFF)) 
    \block_field[3]_i_2 
       (.I0(\t_type_reg[1]_i_12_n_0 ),
        .I1(s_code_c4_reg_n_0),
        .I2(tx_xgmii_ctrl_reg1[3]),
        .I3(o_code_c0),
        .I4(o_code_c4),
        .I5(tx_xgmii_ctrl_reg1[4]),
        .O(\block_field[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000000D)) 
    \block_field[4]_i_1 
       (.I0(\block_field[4]_i_2_n_0 ),
        .I1(\block_field[4]_i_3_n_0 ),
        .I2(\block_field[4]_i_4_n_0 ),
        .I3(\t_type_reg[0]_i_3_n_0 ),
        .I4(\t_type_reg[0]_i_5_n_0 ),
        .I5(\t_type_reg[1]_i_6_n_0 ),
        .O(p_1_in[4]));
  LUT6 #(
    .INIT(64'h0000000081010101)) 
    \block_field[4]_i_2 
       (.I0(tx_xgmii_ctrl_reg1[7]),
        .I1(tx_xgmii_ctrl_reg1[6]),
        .I2(tx_xgmii_ctrl_reg1[5]),
        .I3(\t_type_reg[1]_i_9_n_0 ),
        .I4(o_code_c0),
        .I5(\t_type_reg[2]_i_9_n_0 ),
        .O(\block_field[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFBBBB33333FFF)) 
    \block_field[4]_i_3 
       (.I0(\t_type_reg[1]_i_10_n_0 ),
        .I1(tx_xgmii_ctrl_reg1[4]),
        .I2(o_code_c0),
        .I3(s_code_c4_reg_n_0),
        .I4(tx_xgmii_ctrl_reg1[5]),
        .I5(tx_xgmii_ctrl_reg1[3]),
        .O(\block_field[4]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \block_field[4]_i_4 
       (.I0(\block_field[4]_i_5_n_0 ),
        .I1(\t_code_reg_n_0_[6] ),
        .I2(p_5_in),
        .O(\block_field[4]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h01000000)) 
    \block_field[4]_i_5 
       (.I0(\t_type_reg[0]_i_10_n_0 ),
        .I1(tx_xgmii_ctrl_reg1[3]),
        .I2(tx_xgmii_ctrl_reg1[5]),
        .I3(tx_xgmii_ctrl_reg1[7]),
        .I4(tx_xgmii_ctrl_reg1[6]),
        .O(\block_field[4]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFBA0000)) 
    \block_field[5]_i_1 
       (.I0(\t_type_reg[2]_i_2_n_0 ),
        .I1(\block_field[5]_i_2_n_0 ),
        .I2(\block_field[5]_i_3_n_0 ),
        .I3(\t_type_reg[2]_i_4_n_0 ),
        .I4(\block_field[5]_i_4_n_0 ),
        .I5(\block_field[7]_i_1_n_0 ),
        .O(\block_field[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8C8FBCBFBCBFBCBF)) 
    \block_field[5]_i_2 
       (.I0(\block_field[0]_i_3_n_0 ),
        .I1(tx_xgmii_ctrl_reg1[3]),
        .I2(tx_xgmii_ctrl_reg1[4]),
        .I3(s_code_c0_reg_n_0),
        .I4(o_code_c0),
        .I5(s_code_c4_reg_n_0),
        .O(\block_field[5]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \block_field[5]_i_3 
       (.I0(tx_xgmii_ctrl_reg1[6]),
        .I1(tx_xgmii_ctrl_reg1[5]),
        .I2(tx_xgmii_ctrl_reg1[7]),
        .I3(\t_type_reg[2]_i_9_n_0 ),
        .O(\block_field[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF7FFFFFFFFFFFFFF)) 
    \block_field[5]_i_4 
       (.I0(tx_xgmii_ctrl_reg1[2]),
        .I1(tx_xgmii_ctrl_reg1[1]),
        .I2(\block_field[5]_i_5_n_0 ),
        .I3(tx_xgmii_ctrl_reg1[5]),
        .I4(tx_xgmii_ctrl_reg1[6]),
        .I5(tx_xgmii_ctrl_reg1[7]),
        .O(\block_field[5]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \block_field[5]_i_5 
       (.I0(tx_xgmii_ctrl_reg1[3]),
        .I1(tx_xgmii_ctrl_reg1[4]),
        .O(\block_field[5]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFAAAE)) 
    \block_field[6]_i_1 
       (.I0(\t_type_reg[1]_i_2_n_0 ),
        .I1(\block_field[6]_i_2_n_0 ),
        .I2(\block_field[6]_i_3_n_0 ),
        .I3(\block_field[6]_i_4_n_0 ),
        .I4(\t_type_reg[1]_i_5_n_0 ),
        .O(p_1_in[6]));
  LUT4 #(
    .INIT(16'h800F)) 
    \block_field[6]_i_2 
       (.I0(o_code_c0),
        .I1(\t_type_reg[1]_i_9_n_0 ),
        .I2(tx_xgmii_ctrl_reg1[6]),
        .I3(tx_xgmii_ctrl_reg1[7]),
        .O(\block_field[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEFFFFFFFFFFFEFF)) 
    \block_field[6]_i_3 
       (.I0(tx_xgmii_ctrl_reg1[1]),
        .I1(tx_xgmii_ctrl_reg1[2]),
        .I2(tx_xgmii_ctrl_reg1[3]),
        .I3(tx_xgmii_ctrl_reg1[0]),
        .I4(tx_xgmii_ctrl_reg1[6]),
        .I5(tx_xgmii_ctrl_reg1[5]),
        .O(\block_field[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00001F1FFFFF00FF)) 
    \block_field[6]_i_4 
       (.I0(o_code_c4),
        .I1(s_code_c4_reg_n_0),
        .I2(o_code_c0),
        .I3(s_code_c0_reg_n_0),
        .I4(tx_xgmii_ctrl_reg1[5]),
        .I5(tx_xgmii_ctrl_reg1[4]),
        .O(\block_field[6]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \block_field[7]_i_1 
       (.I0(SR),
        .I1(\t_type_reg[0]_i_3_n_0 ),
        .O(\block_field[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \block_field[7]_i_2 
       (.I0(\t_type_reg[0]_i_2_n_0 ),
        .I1(\t_type_reg[1]_i_3_n_0 ),
        .I2(\t_type_reg[0]_i_6_n_0 ),
        .I3(\t_type_reg[0]_i_5_n_0 ),
        .I4(\t_type_reg[0]_i_4_n_0 ),
        .O(p_1_in[7]));
  FDSE \block_field_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_1_in[0]),
        .Q(data4[2]),
        .S(SR));
  FDRE \block_field_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_1_in[1]),
        .Q(data4[3]),
        .R(\block_field[7]_i_1_n_0 ));
  FDSE \block_field_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_1_in[2]),
        .Q(data4[4]),
        .S(SR));
  FDRE \block_field_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\block_field[3]_i_1_n_0 ),
        .Q(data4[5]),
        .R(1'b0));
  FDSE \block_field_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_1_in[4]),
        .Q(data4[6]),
        .S(SR));
  FDRE \block_field_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\block_field[5]_i_1_n_0 ),
        .Q(data4[7]),
        .R(1'b0));
  FDSE \block_field_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_1_in[6]),
        .Q(data4[8]),
        .S(SR));
  FDRE \block_field_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_1_in[7]),
        .Q(data4[9]),
        .R(\block_field[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0223)) 
    \c0[0]_i_1 
       (.I0(tx_xgmii_data_reg2[5]),
        .I1(\c0[5]_i_5_n_0 ),
        .I2(tx_xgmii_data_reg2[6]),
        .I3(tx_xgmii_data_reg2[7]),
        .O(\c0[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hEFFFBFFB)) 
    \c0[1]_i_1 
       (.I0(\c0[2]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[3]),
        .I2(tx_xgmii_data_reg2[5]),
        .I3(tx_xgmii_data_reg2[7]),
        .I4(tx_xgmii_data_reg2[6]),
        .O(\c0[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF7AFF)) 
    \c0[2]_i_1 
       (.I0(tx_xgmii_data_reg2[7]),
        .I1(tx_xgmii_data_reg2[6]),
        .I2(tx_xgmii_data_reg2[1]),
        .I3(tx_xgmii_data_reg2[5]),
        .I4(\c0[2]_i_2_n_0 ),
        .O(\c0[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF7FFFF7F)) 
    \c0[2]_i_2 
       (.I0(tx_xgmii_data_reg2[4]),
        .I1(tx_xgmii_data_reg2[2]),
        .I2(tx_xgmii_data_reg2[3]),
        .I3(tx_xgmii_data_reg2[0]),
        .I4(tx_xgmii_data_reg2[1]),
        .O(\c0[2]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFB5)) 
    \c0[3]_i_1 
       (.I0(tx_xgmii_data_reg2[5]),
        .I1(tx_xgmii_data_reg2[7]),
        .I2(tx_xgmii_data_reg2[6]),
        .I3(\c0[5]_i_5_n_0 ),
        .O(\c0[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0080)) 
    \c0[4]_i_1 
       (.I0(\c0[4]_i_3_n_0 ),
        .I1(tx_xgmii_data_reg2[1]),
        .I2(tx_xgmii_data_reg2[2]),
        .I3(tx_xgmii_data_reg2[4]),
        .O(\c0[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEBFE)) 
    \c0[4]_i_2 
       (.I0(\c0[5]_i_5_n_0 ),
        .I1(tx_xgmii_data_reg2[5]),
        .I2(tx_xgmii_data_reg2[7]),
        .I3(tx_xgmii_data_reg2[6]),
        .O(\c0[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000100000)) 
    \c0[4]_i_3 
       (.I0(tx_xgmii_data_reg2[5]),
        .I1(tx_xgmii_data_reg2[6]),
        .I2(tx_xgmii_ctrl_reg2[0]),
        .I3(tx_xgmii_data_reg2[7]),
        .I4(tx_xgmii_data_reg2[0]),
        .I5(tx_xgmii_data_reg2[3]),
        .O(\c0[4]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h08200000)) 
    \c0[5]_i_1 
       (.I0(\c0[5]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[3]),
        .I2(tx_xgmii_data_reg2[0]),
        .I3(tx_xgmii_data_reg2[4]),
        .I4(tx_xgmii_data_reg2[2]),
        .O(\c0[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF0F0F090)) 
    \c0[5]_i_2 
       (.I0(tx_xgmii_data_reg2[6]),
        .I1(tx_xgmii_data_reg2[7]),
        .I2(tx_xgmii_ctrl_reg2[0]),
        .I3(\c0[5]_i_5_n_0 ),
        .I4(tx_xgmii_data_reg2[5]),
        .O(\c0[5]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h19800000)) 
    \c0[5]_i_3 
       (.I0(tx_xgmii_data_reg2[6]),
        .I1(tx_xgmii_data_reg2[7]),
        .I2(tx_xgmii_data_reg2[5]),
        .I3(tx_xgmii_data_reg2[3]),
        .I4(\c0[5]_i_6_n_0 ),
        .O(\c0[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000040)) 
    \c0[5]_i_4 
       (.I0(tx_xgmii_data_reg2[7]),
        .I1(tx_xgmii_data_reg2[1]),
        .I2(tx_xgmii_ctrl_reg2[0]),
        .I3(tx_xgmii_data_reg2[6]),
        .I4(tx_xgmii_data_reg2[5]),
        .I5(tx_xgmii_data_reg2[4]),
        .O(\c0[5]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hEFFFFFFF)) 
    \c0[5]_i_5 
       (.I0(tx_xgmii_data_reg2[1]),
        .I1(tx_xgmii_data_reg2[0]),
        .I2(tx_xgmii_data_reg2[3]),
        .I3(tx_xgmii_data_reg2[4]),
        .I4(tx_xgmii_data_reg2[2]),
        .O(\c0[5]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h42000000)) 
    \c0[5]_i_6 
       (.I0(tx_xgmii_data_reg2[3]),
        .I1(tx_xgmii_data_reg2[0]),
        .I2(tx_xgmii_data_reg2[1]),
        .I3(tx_xgmii_data_reg2[4]),
        .I4(tx_xgmii_data_reg2[2]),
        .O(\c0[5]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h00000000EAFA2A0A)) 
    \c0[6]_i_1 
       (.I0(c0[6]),
        .I1(\c0[6]_i_2_n_0 ),
        .I2(tx_xgmii_ctrl_reg2[0]),
        .I3(\c0[6]_i_3_n_0 ),
        .I4(\c0[6]_i_4_n_0 ),
        .I5(\c0[6]_i_5_n_0 ),
        .O(\c0[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF7F)) 
    \c0[6]_i_2 
       (.I0(tx_xgmii_data_reg2[2]),
        .I1(tx_xgmii_data_reg2[4]),
        .I2(tx_xgmii_data_reg2[3]),
        .I3(tx_xgmii_data_reg2[0]),
        .I4(tx_xgmii_data_reg2[1]),
        .I5(tx_xgmii_data_reg2[5]),
        .O(\c0[6]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \c0[6]_i_3 
       (.I0(tx_xgmii_data_reg2[6]),
        .I1(tx_xgmii_data_reg2[7]),
        .O(\c0[6]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h28808080)) 
    \c0[6]_i_4 
       (.I0(\c0[5]_i_6_n_0 ),
        .I1(tx_xgmii_data_reg2[3]),
        .I2(tx_xgmii_data_reg2[5]),
        .I3(tx_xgmii_data_reg2[7]),
        .I4(tx_xgmii_data_reg2[6]),
        .O(\c0[6]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000202080080000)) 
    \c0[6]_i_5 
       (.I0(\c0[6]_i_6_n_0 ),
        .I1(tx_xgmii_data_reg2[4]),
        .I2(tx_xgmii_data_reg2[1]),
        .I3(tx_xgmii_data_reg2[6]),
        .I4(tx_xgmii_data_reg2[3]),
        .I5(tx_xgmii_data_reg2[0]),
        .O(\c0[6]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h8000000044040000)) 
    \c0[6]_i_6 
       (.I0(tx_xgmii_data_reg2[7]),
        .I1(tx_xgmii_ctrl_reg2[0]),
        .I2(tx_xgmii_data_reg2[5]),
        .I3(tx_xgmii_data_reg2[4]),
        .I4(tx_xgmii_data_reg2[2]),
        .I5(tx_xgmii_data_reg2[6]),
        .O(\c0[6]_i_6_n_0 ));
  FDRE \c0_reg[0] 
       (.C(coreclk),
        .CE(\c0[5]_i_2_n_0 ),
        .D(\c0[0]_i_1_n_0 ),
        .Q(c0[0]),
        .R(\c0[5]_i_1_n_0 ));
  FDRE \c0_reg[1] 
       (.C(coreclk),
        .CE(\c0[5]_i_2_n_0 ),
        .D(\c0[1]_i_1_n_0 ),
        .Q(c0[1]),
        .R(\c0[4]_i_1_n_0 ));
  FDRE \c0_reg[2] 
       (.C(coreclk),
        .CE(\c0[5]_i_2_n_0 ),
        .D(\c0[2]_i_1_n_0 ),
        .Q(c0[2]),
        .R(\c0[4]_i_1_n_0 ));
  FDRE \c0_reg[3] 
       (.C(coreclk),
        .CE(\c0[5]_i_2_n_0 ),
        .D(\c0[3]_i_1_n_0 ),
        .Q(c0[3]),
        .R(\c0[4]_i_1_n_0 ));
  FDRE \c0_reg[4] 
       (.C(coreclk),
        .CE(\c0[5]_i_2_n_0 ),
        .D(\c0[4]_i_2_n_0 ),
        .Q(c0[4]),
        .R(\c0[4]_i_1_n_0 ));
  FDRE \c0_reg[5] 
       (.C(coreclk),
        .CE(\c0[5]_i_2_n_0 ),
        .D(\c0[5]_i_3_n_0 ),
        .Q(c0[5]),
        .R(\c0[5]_i_1_n_0 ));
  FDRE \c0_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c0[6]_i_1_n_0 ),
        .Q(c0[6]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h005D)) 
    \c1[0]_i_1 
       (.I0(tx_xgmii_data_reg2[14]),
        .I1(tx_xgmii_data_reg2[13]),
        .I2(tx_xgmii_data_reg2[15]),
        .I3(\c1[4]_i_4_n_0 ),
        .O(\c1[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hBEBF)) 
    \c1[1]_i_1 
       (.I0(\c1[1]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[13]),
        .I2(tx_xgmii_data_reg2[15]),
        .I3(tx_xgmii_data_reg2[11]),
        .O(\c1[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hDFFBFFFFFFFFFFFF)) 
    \c1[1]_i_2 
       (.I0(tx_xgmii_data_reg2[14]),
        .I1(tx_xgmii_data_reg2[11]),
        .I2(tx_xgmii_data_reg2[9]),
        .I3(tx_xgmii_data_reg2[8]),
        .I4(tx_xgmii_data_reg2[12]),
        .I5(tx_xgmii_data_reg2[10]),
        .O(\c1[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFBFFBFBF)) 
    \c1[2]_i_1 
       (.I0(\c1[5]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[13]),
        .I2(tx_xgmii_data_reg2[11]),
        .I3(tx_xgmii_data_reg2[14]),
        .I4(tx_xgmii_data_reg2[15]),
        .O(\c1[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEBEF)) 
    \c1[3]_i_1 
       (.I0(\c1[4]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[14]),
        .I2(tx_xgmii_data_reg2[13]),
        .I3(tx_xgmii_data_reg2[15]),
        .O(\c1[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \c1[4]_i_1 
       (.I0(\c1[4]_i_3_n_0 ),
        .I1(tx_xgmii_data_reg2[14]),
        .I2(tx_xgmii_data_reg2[15]),
        .I3(tx_xgmii_data_reg2[13]),
        .I4(tx_xgmii_ctrl_reg2[1]),
        .I5(tx_xgmii_data_reg2[10]),
        .O(\c1[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEFBE)) 
    \c1[4]_i_2 
       (.I0(\c1[4]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[15]),
        .I2(tx_xgmii_data_reg2[14]),
        .I3(tx_xgmii_data_reg2[13]),
        .O(\c1[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0008)) 
    \c1[4]_i_3 
       (.I0(tx_xgmii_data_reg2[9]),
        .I1(tx_xgmii_data_reg2[8]),
        .I2(tx_xgmii_data_reg2[11]),
        .I3(tx_xgmii_data_reg2[12]),
        .O(\c1[4]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFF7F)) 
    \c1[4]_i_4 
       (.I0(tx_xgmii_data_reg2[11]),
        .I1(tx_xgmii_data_reg2[12]),
        .I2(tx_xgmii_data_reg2[10]),
        .I3(tx_xgmii_data_reg2[8]),
        .I4(tx_xgmii_data_reg2[9]),
        .O(\c1[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000018001008)) 
    \c1[5]_i_1 
       (.I0(tx_xgmii_data_reg2[12]),
        .I1(tx_xgmii_data_reg2[11]),
        .I2(tx_xgmii_data_reg2[8]),
        .I3(tx_xgmii_data_reg2[9]),
        .I4(tx_xgmii_data_reg2[13]),
        .I5(\c1[5]_i_3_n_0 ),
        .O(\c1[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00004822)) 
    \c1[5]_i_2 
       (.I0(tx_xgmii_data_reg2[11]),
        .I1(tx_xgmii_data_reg2[15]),
        .I2(tx_xgmii_data_reg2[13]),
        .I3(tx_xgmii_data_reg2[14]),
        .I4(\c1[5]_i_4_n_0 ),
        .O(\c1[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFF7FF7)) 
    \c1[5]_i_3 
       (.I0(tx_xgmii_ctrl_reg2[1]),
        .I1(tx_xgmii_data_reg2[10]),
        .I2(tx_xgmii_data_reg2[12]),
        .I3(tx_xgmii_data_reg2[15]),
        .I4(tx_xgmii_data_reg2[14]),
        .I5(tx_xgmii_data_reg2[13]),
        .O(\c1[5]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFF7FF7FF)) 
    \c1[5]_i_4 
       (.I0(tx_xgmii_data_reg2[10]),
        .I1(tx_xgmii_data_reg2[12]),
        .I2(tx_xgmii_data_reg2[9]),
        .I3(tx_xgmii_data_reg2[11]),
        .I4(tx_xgmii_data_reg2[8]),
        .O(\c1[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h2E2200002E222E22)) 
    \c1[6]_i_1 
       (.I0(c1[6]),
        .I1(tx_xgmii_ctrl_reg2[1]),
        .I2(\c1[5]_i_4_n_0 ),
        .I3(\c1[6]_i_2_n_0 ),
        .I4(\c1[6]_i_3_n_0 ),
        .I5(\c1[6]_i_4_n_0 ),
        .O(\c1[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h68AA)) 
    \c1[6]_i_2 
       (.I0(tx_xgmii_data_reg2[11]),
        .I1(tx_xgmii_data_reg2[13]),
        .I2(tx_xgmii_data_reg2[15]),
        .I3(tx_xgmii_data_reg2[14]),
        .O(\c1[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7FBFBFBFFFFFFFBF)) 
    \c1[6]_i_3 
       (.I0(tx_xgmii_data_reg2[14]),
        .I1(tx_xgmii_ctrl_reg2[1]),
        .I2(tx_xgmii_data_reg2[10]),
        .I3(tx_xgmii_data_reg2[15]),
        .I4(tx_xgmii_data_reg2[13]),
        .I5(tx_xgmii_data_reg2[12]),
        .O(\c1[6]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h090000C0)) 
    \c1[6]_i_4 
       (.I0(tx_xgmii_data_reg2[14]),
        .I1(tx_xgmii_data_reg2[9]),
        .I2(tx_xgmii_data_reg2[8]),
        .I3(tx_xgmii_data_reg2[11]),
        .I4(tx_xgmii_data_reg2[12]),
        .O(\c1[6]_i_4_n_0 ));
  FDRE \c1_reg[0] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[1]),
        .D(\c1[0]_i_1_n_0 ),
        .Q(c1[0]),
        .R(\c1[5]_i_1_n_0 ));
  FDRE \c1_reg[1] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[1]),
        .D(\c1[1]_i_1_n_0 ),
        .Q(c1[1]),
        .R(\c1[4]_i_1_n_0 ));
  FDRE \c1_reg[2] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[1]),
        .D(\c1[2]_i_1_n_0 ),
        .Q(c1[2]),
        .R(\c1[4]_i_1_n_0 ));
  FDRE \c1_reg[3] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[1]),
        .D(\c1[3]_i_1_n_0 ),
        .Q(c1[3]),
        .R(\c1[4]_i_1_n_0 ));
  FDRE \c1_reg[4] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[1]),
        .D(\c1[4]_i_2_n_0 ),
        .Q(c1[4]),
        .R(\c1[4]_i_1_n_0 ));
  FDRE \c1_reg[5] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[1]),
        .D(\c1[5]_i_2_n_0 ),
        .Q(c1[5]),
        .R(\c1[5]_i_1_n_0 ));
  FDRE \c1_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c1[6]_i_1_n_0 ),
        .Q(c1[6]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h005D)) 
    \c2[0]_i_1 
       (.I0(tx_xgmii_data_reg2[22]),
        .I1(tx_xgmii_data_reg2[21]),
        .I2(tx_xgmii_data_reg2[23]),
        .I3(\c2[4]_i_4_n_0 ),
        .O(\c2[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hBEBF)) 
    \c2[1]_i_1 
       (.I0(\c2[1]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[21]),
        .I2(tx_xgmii_data_reg2[23]),
        .I3(tx_xgmii_data_reg2[19]),
        .O(\c2[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hDFFBFFFFFFFFFFFF)) 
    \c2[1]_i_2 
       (.I0(tx_xgmii_data_reg2[22]),
        .I1(tx_xgmii_data_reg2[19]),
        .I2(tx_xgmii_data_reg2[17]),
        .I3(tx_xgmii_data_reg2[16]),
        .I4(tx_xgmii_data_reg2[20]),
        .I5(tx_xgmii_data_reg2[18]),
        .O(\c2[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFBFFBFBF)) 
    \c2[2]_i_1 
       (.I0(\c2[5]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[21]),
        .I2(tx_xgmii_data_reg2[19]),
        .I3(tx_xgmii_data_reg2[22]),
        .I4(tx_xgmii_data_reg2[23]),
        .O(\c2[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEBEF)) 
    \c2[3]_i_1 
       (.I0(\c2[4]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[22]),
        .I2(tx_xgmii_data_reg2[21]),
        .I3(tx_xgmii_data_reg2[23]),
        .O(\c2[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \c2[4]_i_1 
       (.I0(\c2[4]_i_3_n_0 ),
        .I1(tx_xgmii_data_reg2[22]),
        .I2(tx_xgmii_data_reg2[23]),
        .I3(tx_xgmii_data_reg2[21]),
        .I4(tx_xgmii_ctrl_reg2[2]),
        .I5(tx_xgmii_data_reg2[18]),
        .O(\c2[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEFBE)) 
    \c2[4]_i_2 
       (.I0(\c2[4]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[23]),
        .I2(tx_xgmii_data_reg2[22]),
        .I3(tx_xgmii_data_reg2[21]),
        .O(\c2[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0008)) 
    \c2[4]_i_3 
       (.I0(tx_xgmii_data_reg2[17]),
        .I1(tx_xgmii_data_reg2[16]),
        .I2(tx_xgmii_data_reg2[19]),
        .I3(tx_xgmii_data_reg2[20]),
        .O(\c2[4]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFF7F)) 
    \c2[4]_i_4 
       (.I0(tx_xgmii_data_reg2[19]),
        .I1(tx_xgmii_data_reg2[20]),
        .I2(tx_xgmii_data_reg2[18]),
        .I3(tx_xgmii_data_reg2[16]),
        .I4(tx_xgmii_data_reg2[17]),
        .O(\c2[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000018001008)) 
    \c2[5]_i_1 
       (.I0(tx_xgmii_data_reg2[20]),
        .I1(tx_xgmii_data_reg2[19]),
        .I2(tx_xgmii_data_reg2[16]),
        .I3(tx_xgmii_data_reg2[17]),
        .I4(tx_xgmii_data_reg2[21]),
        .I5(\c2[5]_i_3_n_0 ),
        .O(\c2[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00004822)) 
    \c2[5]_i_2 
       (.I0(tx_xgmii_data_reg2[19]),
        .I1(tx_xgmii_data_reg2[23]),
        .I2(tx_xgmii_data_reg2[21]),
        .I3(tx_xgmii_data_reg2[22]),
        .I4(\c2[5]_i_4_n_0 ),
        .O(\c2[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFF7FF7)) 
    \c2[5]_i_3 
       (.I0(tx_xgmii_ctrl_reg2[2]),
        .I1(tx_xgmii_data_reg2[18]),
        .I2(tx_xgmii_data_reg2[20]),
        .I3(tx_xgmii_data_reg2[23]),
        .I4(tx_xgmii_data_reg2[22]),
        .I5(tx_xgmii_data_reg2[21]),
        .O(\c2[5]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFF7FF7FF)) 
    \c2[5]_i_4 
       (.I0(tx_xgmii_data_reg2[18]),
        .I1(tx_xgmii_data_reg2[20]),
        .I2(tx_xgmii_data_reg2[17]),
        .I3(tx_xgmii_data_reg2[19]),
        .I4(tx_xgmii_data_reg2[16]),
        .O(\c2[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h2E2200002E222E22)) 
    \c2[6]_i_1 
       (.I0(c2[6]),
        .I1(tx_xgmii_ctrl_reg2[2]),
        .I2(\c2[5]_i_4_n_0 ),
        .I3(\c2[6]_i_2_n_0 ),
        .I4(\c2[6]_i_3_n_0 ),
        .I5(\c2[6]_i_4_n_0 ),
        .O(\c2[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h68AA)) 
    \c2[6]_i_2 
       (.I0(tx_xgmii_data_reg2[19]),
        .I1(tx_xgmii_data_reg2[21]),
        .I2(tx_xgmii_data_reg2[23]),
        .I3(tx_xgmii_data_reg2[22]),
        .O(\c2[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7FBFBFBFFFFFFFBF)) 
    \c2[6]_i_3 
       (.I0(tx_xgmii_data_reg2[22]),
        .I1(tx_xgmii_ctrl_reg2[2]),
        .I2(tx_xgmii_data_reg2[18]),
        .I3(tx_xgmii_data_reg2[23]),
        .I4(tx_xgmii_data_reg2[21]),
        .I5(tx_xgmii_data_reg2[20]),
        .O(\c2[6]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h090000C0)) 
    \c2[6]_i_4 
       (.I0(tx_xgmii_data_reg2[22]),
        .I1(tx_xgmii_data_reg2[17]),
        .I2(tx_xgmii_data_reg2[16]),
        .I3(tx_xgmii_data_reg2[19]),
        .I4(tx_xgmii_data_reg2[20]),
        .O(\c2[6]_i_4_n_0 ));
  FDRE \c2_reg[0] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[2]),
        .D(\c2[0]_i_1_n_0 ),
        .Q(c2[0]),
        .R(\c2[5]_i_1_n_0 ));
  FDRE \c2_reg[1] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[2]),
        .D(\c2[1]_i_1_n_0 ),
        .Q(c2[1]),
        .R(\c2[4]_i_1_n_0 ));
  FDRE \c2_reg[2] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[2]),
        .D(\c2[2]_i_1_n_0 ),
        .Q(c2[2]),
        .R(\c2[4]_i_1_n_0 ));
  FDRE \c2_reg[3] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[2]),
        .D(\c2[3]_i_1_n_0 ),
        .Q(c2[3]),
        .R(\c2[4]_i_1_n_0 ));
  FDRE \c2_reg[4] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[2]),
        .D(\c2[4]_i_2_n_0 ),
        .Q(c2[4]),
        .R(\c2[4]_i_1_n_0 ));
  FDRE \c2_reg[5] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[2]),
        .D(\c2[5]_i_2_n_0 ),
        .Q(c2[5]),
        .R(\c2[5]_i_1_n_0 ));
  FDRE \c2_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c2[6]_i_1_n_0 ),
        .Q(c2[6]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h005D)) 
    \c3[0]_i_1 
       (.I0(tx_xgmii_data_reg2[30]),
        .I1(tx_xgmii_data_reg2[29]),
        .I2(tx_xgmii_data_reg2[31]),
        .I3(\c3[4]_i_4_n_0 ),
        .O(\c3[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hBEBF)) 
    \c3[1]_i_1 
       (.I0(\c3[1]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[29]),
        .I2(tx_xgmii_data_reg2[31]),
        .I3(tx_xgmii_data_reg2[27]),
        .O(\c3[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hDFFBFFFFFFFFFFFF)) 
    \c3[1]_i_2 
       (.I0(tx_xgmii_data_reg2[30]),
        .I1(tx_xgmii_data_reg2[27]),
        .I2(tx_xgmii_data_reg2[25]),
        .I3(tx_xgmii_data_reg2[24]),
        .I4(tx_xgmii_data_reg2[28]),
        .I5(tx_xgmii_data_reg2[26]),
        .O(\c3[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFBFFBFBF)) 
    \c3[2]_i_1 
       (.I0(\c3[5]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[29]),
        .I2(tx_xgmii_data_reg2[27]),
        .I3(tx_xgmii_data_reg2[30]),
        .I4(tx_xgmii_data_reg2[31]),
        .O(\c3[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEBEF)) 
    \c3[3]_i_1 
       (.I0(\c3[4]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[30]),
        .I2(tx_xgmii_data_reg2[29]),
        .I3(tx_xgmii_data_reg2[31]),
        .O(\c3[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \c3[4]_i_1 
       (.I0(\c3[4]_i_3_n_0 ),
        .I1(tx_xgmii_data_reg2[30]),
        .I2(tx_xgmii_data_reg2[31]),
        .I3(tx_xgmii_data_reg2[29]),
        .I4(tx_xgmii_ctrl_reg2[3]),
        .I5(tx_xgmii_data_reg2[26]),
        .O(\c3[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEFBE)) 
    \c3[4]_i_2 
       (.I0(\c3[4]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[31]),
        .I2(tx_xgmii_data_reg2[30]),
        .I3(tx_xgmii_data_reg2[29]),
        .O(\c3[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0008)) 
    \c3[4]_i_3 
       (.I0(tx_xgmii_data_reg2[25]),
        .I1(tx_xgmii_data_reg2[24]),
        .I2(tx_xgmii_data_reg2[27]),
        .I3(tx_xgmii_data_reg2[28]),
        .O(\c3[4]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFF7F)) 
    \c3[4]_i_4 
       (.I0(tx_xgmii_data_reg2[27]),
        .I1(tx_xgmii_data_reg2[28]),
        .I2(tx_xgmii_data_reg2[26]),
        .I3(tx_xgmii_data_reg2[24]),
        .I4(tx_xgmii_data_reg2[25]),
        .O(\c3[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000018001008)) 
    \c3[5]_i_1 
       (.I0(tx_xgmii_data_reg2[28]),
        .I1(tx_xgmii_data_reg2[27]),
        .I2(tx_xgmii_data_reg2[24]),
        .I3(tx_xgmii_data_reg2[25]),
        .I4(tx_xgmii_data_reg2[29]),
        .I5(\c3[5]_i_3_n_0 ),
        .O(\c3[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00004822)) 
    \c3[5]_i_2 
       (.I0(tx_xgmii_data_reg2[27]),
        .I1(tx_xgmii_data_reg2[31]),
        .I2(tx_xgmii_data_reg2[29]),
        .I3(tx_xgmii_data_reg2[30]),
        .I4(\c3[5]_i_4_n_0 ),
        .O(\c3[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFF7FF7)) 
    \c3[5]_i_3 
       (.I0(tx_xgmii_ctrl_reg2[3]),
        .I1(tx_xgmii_data_reg2[26]),
        .I2(tx_xgmii_data_reg2[28]),
        .I3(tx_xgmii_data_reg2[31]),
        .I4(tx_xgmii_data_reg2[30]),
        .I5(tx_xgmii_data_reg2[29]),
        .O(\c3[5]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFF7FF7FF)) 
    \c3[5]_i_4 
       (.I0(tx_xgmii_data_reg2[26]),
        .I1(tx_xgmii_data_reg2[28]),
        .I2(tx_xgmii_data_reg2[25]),
        .I3(tx_xgmii_data_reg2[27]),
        .I4(tx_xgmii_data_reg2[24]),
        .O(\c3[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h2E2200002E222E22)) 
    \c3[6]_i_1 
       (.I0(c3[6]),
        .I1(tx_xgmii_ctrl_reg2[3]),
        .I2(\c3[5]_i_4_n_0 ),
        .I3(\c3[6]_i_2_n_0 ),
        .I4(\c3[6]_i_3_n_0 ),
        .I5(\c3[6]_i_4_n_0 ),
        .O(\c3[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h68AA)) 
    \c3[6]_i_2 
       (.I0(tx_xgmii_data_reg2[27]),
        .I1(tx_xgmii_data_reg2[29]),
        .I2(tx_xgmii_data_reg2[31]),
        .I3(tx_xgmii_data_reg2[30]),
        .O(\c3[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7FBFBFBFFFFFFFBF)) 
    \c3[6]_i_3 
       (.I0(tx_xgmii_data_reg2[30]),
        .I1(tx_xgmii_ctrl_reg2[3]),
        .I2(tx_xgmii_data_reg2[26]),
        .I3(tx_xgmii_data_reg2[31]),
        .I4(tx_xgmii_data_reg2[29]),
        .I5(tx_xgmii_data_reg2[28]),
        .O(\c3[6]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h090000C0)) 
    \c3[6]_i_4 
       (.I0(tx_xgmii_data_reg2[30]),
        .I1(tx_xgmii_data_reg2[25]),
        .I2(tx_xgmii_data_reg2[24]),
        .I3(tx_xgmii_data_reg2[27]),
        .I4(tx_xgmii_data_reg2[28]),
        .O(\c3[6]_i_4_n_0 ));
  FDRE \c3_reg[0] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[3]),
        .D(\c3[0]_i_1_n_0 ),
        .Q(c3[0]),
        .R(\c3[5]_i_1_n_0 ));
  FDRE \c3_reg[1] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[3]),
        .D(\c3[1]_i_1_n_0 ),
        .Q(c3[1]),
        .R(\c3[4]_i_1_n_0 ));
  FDRE \c3_reg[2] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[3]),
        .D(\c3[2]_i_1_n_0 ),
        .Q(c3[2]),
        .R(\c3[4]_i_1_n_0 ));
  FDRE \c3_reg[3] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[3]),
        .D(\c3[3]_i_1_n_0 ),
        .Q(c3[3]),
        .R(\c3[4]_i_1_n_0 ));
  FDRE \c3_reg[4] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[3]),
        .D(\c3[4]_i_2_n_0 ),
        .Q(c3[4]),
        .R(\c3[4]_i_1_n_0 ));
  FDRE \c3_reg[5] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[3]),
        .D(\c3[5]_i_2_n_0 ),
        .Q(c3[5]),
        .R(\c3[5]_i_1_n_0 ));
  FDRE \c3_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c3[6]_i_1_n_0 ),
        .Q(c3[6]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h0223)) 
    \c4[0]_i_1 
       (.I0(tx_xgmii_data_reg2[37]),
        .I1(\c4[5]_i_5_n_0 ),
        .I2(tx_xgmii_data_reg2[38]),
        .I3(tx_xgmii_data_reg2[39]),
        .O(\c4[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hEFFFBFFB)) 
    \c4[1]_i_1 
       (.I0(\c4[2]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[35]),
        .I2(tx_xgmii_data_reg2[37]),
        .I3(tx_xgmii_data_reg2[39]),
        .I4(tx_xgmii_data_reg2[38]),
        .O(\c4[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF7AFF)) 
    \c4[2]_i_1 
       (.I0(tx_xgmii_data_reg2[39]),
        .I1(tx_xgmii_data_reg2[38]),
        .I2(tx_xgmii_data_reg2[33]),
        .I3(tx_xgmii_data_reg2[37]),
        .I4(\c4[2]_i_2_n_0 ),
        .O(\c4[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF7FFFF7F)) 
    \c4[2]_i_2 
       (.I0(tx_xgmii_data_reg2[36]),
        .I1(tx_xgmii_data_reg2[34]),
        .I2(tx_xgmii_data_reg2[35]),
        .I3(tx_xgmii_data_reg2[32]),
        .I4(tx_xgmii_data_reg2[33]),
        .O(\c4[2]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFB5)) 
    \c4[3]_i_1 
       (.I0(tx_xgmii_data_reg2[37]),
        .I1(tx_xgmii_data_reg2[39]),
        .I2(tx_xgmii_data_reg2[38]),
        .I3(\c4[5]_i_5_n_0 ),
        .O(\c4[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0080)) 
    \c4[4]_i_1 
       (.I0(\c4[4]_i_3_n_0 ),
        .I1(tx_xgmii_data_reg2[33]),
        .I2(tx_xgmii_data_reg2[34]),
        .I3(tx_xgmii_data_reg2[36]),
        .O(\c4[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEBFE)) 
    \c4[4]_i_2 
       (.I0(\c4[5]_i_5_n_0 ),
        .I1(tx_xgmii_data_reg2[37]),
        .I2(tx_xgmii_data_reg2[39]),
        .I3(tx_xgmii_data_reg2[38]),
        .O(\c4[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000100000)) 
    \c4[4]_i_3 
       (.I0(tx_xgmii_data_reg2[37]),
        .I1(tx_xgmii_data_reg2[38]),
        .I2(tx_xgmii_ctrl_reg2[4]),
        .I3(tx_xgmii_data_reg2[39]),
        .I4(tx_xgmii_data_reg2[32]),
        .I5(tx_xgmii_data_reg2[35]),
        .O(\c4[4]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h08200000)) 
    \c4[5]_i_1 
       (.I0(\c4[5]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[35]),
        .I2(tx_xgmii_data_reg2[32]),
        .I3(tx_xgmii_data_reg2[36]),
        .I4(tx_xgmii_data_reg2[34]),
        .O(\c4[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF0F0F090)) 
    \c4[5]_i_2 
       (.I0(tx_xgmii_data_reg2[38]),
        .I1(tx_xgmii_data_reg2[39]),
        .I2(tx_xgmii_ctrl_reg2[4]),
        .I3(\c4[5]_i_5_n_0 ),
        .I4(tx_xgmii_data_reg2[37]),
        .O(\c4[5]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h19800000)) 
    \c4[5]_i_3 
       (.I0(tx_xgmii_data_reg2[38]),
        .I1(tx_xgmii_data_reg2[39]),
        .I2(tx_xgmii_data_reg2[37]),
        .I3(tx_xgmii_data_reg2[35]),
        .I4(\c4[5]_i_6_n_0 ),
        .O(\c4[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000040)) 
    \c4[5]_i_4 
       (.I0(tx_xgmii_data_reg2[39]),
        .I1(tx_xgmii_data_reg2[33]),
        .I2(tx_xgmii_ctrl_reg2[4]),
        .I3(tx_xgmii_data_reg2[38]),
        .I4(tx_xgmii_data_reg2[37]),
        .I5(tx_xgmii_data_reg2[36]),
        .O(\c4[5]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hEFFFFFFF)) 
    \c4[5]_i_5 
       (.I0(tx_xgmii_data_reg2[33]),
        .I1(tx_xgmii_data_reg2[32]),
        .I2(tx_xgmii_data_reg2[35]),
        .I3(tx_xgmii_data_reg2[36]),
        .I4(tx_xgmii_data_reg2[34]),
        .O(\c4[5]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h42000000)) 
    \c4[5]_i_6 
       (.I0(tx_xgmii_data_reg2[35]),
        .I1(tx_xgmii_data_reg2[32]),
        .I2(tx_xgmii_data_reg2[33]),
        .I3(tx_xgmii_data_reg2[36]),
        .I4(tx_xgmii_data_reg2[34]),
        .O(\c4[5]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h00000000EAFA2A0A)) 
    \c4[6]_i_1 
       (.I0(c4[6]),
        .I1(\c4[6]_i_2_n_0 ),
        .I2(tx_xgmii_ctrl_reg2[4]),
        .I3(\c4[6]_i_3_n_0 ),
        .I4(\c4[6]_i_4_n_0 ),
        .I5(\c4[6]_i_5_n_0 ),
        .O(\c4[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF7F)) 
    \c4[6]_i_2 
       (.I0(tx_xgmii_data_reg2[34]),
        .I1(tx_xgmii_data_reg2[36]),
        .I2(tx_xgmii_data_reg2[35]),
        .I3(tx_xgmii_data_reg2[32]),
        .I4(tx_xgmii_data_reg2[33]),
        .I5(tx_xgmii_data_reg2[37]),
        .O(\c4[6]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \c4[6]_i_3 
       (.I0(tx_xgmii_data_reg2[38]),
        .I1(tx_xgmii_data_reg2[39]),
        .O(\c4[6]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h28808080)) 
    \c4[6]_i_4 
       (.I0(\c4[5]_i_6_n_0 ),
        .I1(tx_xgmii_data_reg2[35]),
        .I2(tx_xgmii_data_reg2[37]),
        .I3(tx_xgmii_data_reg2[39]),
        .I4(tx_xgmii_data_reg2[38]),
        .O(\c4[6]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000202080080000)) 
    \c4[6]_i_5 
       (.I0(\c4[6]_i_6_n_0 ),
        .I1(tx_xgmii_data_reg2[36]),
        .I2(tx_xgmii_data_reg2[33]),
        .I3(tx_xgmii_data_reg2[38]),
        .I4(tx_xgmii_data_reg2[35]),
        .I5(tx_xgmii_data_reg2[32]),
        .O(\c4[6]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h8000000044040000)) 
    \c4[6]_i_6 
       (.I0(tx_xgmii_data_reg2[39]),
        .I1(tx_xgmii_ctrl_reg2[4]),
        .I2(tx_xgmii_data_reg2[37]),
        .I3(tx_xgmii_data_reg2[36]),
        .I4(tx_xgmii_data_reg2[34]),
        .I5(tx_xgmii_data_reg2[38]),
        .O(\c4[6]_i_6_n_0 ));
  FDRE \c4_reg[0] 
       (.C(coreclk),
        .CE(\c4[5]_i_2_n_0 ),
        .D(\c4[0]_i_1_n_0 ),
        .Q(c4[0]),
        .R(\c4[5]_i_1_n_0 ));
  FDRE \c4_reg[1] 
       (.C(coreclk),
        .CE(\c4[5]_i_2_n_0 ),
        .D(\c4[1]_i_1_n_0 ),
        .Q(c4[1]),
        .R(\c4[4]_i_1_n_0 ));
  FDRE \c4_reg[2] 
       (.C(coreclk),
        .CE(\c4[5]_i_2_n_0 ),
        .D(\c4[2]_i_1_n_0 ),
        .Q(c4[2]),
        .R(\c4[4]_i_1_n_0 ));
  FDRE \c4_reg[3] 
       (.C(coreclk),
        .CE(\c4[5]_i_2_n_0 ),
        .D(\c4[3]_i_1_n_0 ),
        .Q(c4[3]),
        .R(\c4[4]_i_1_n_0 ));
  FDRE \c4_reg[4] 
       (.C(coreclk),
        .CE(\c4[5]_i_2_n_0 ),
        .D(\c4[4]_i_2_n_0 ),
        .Q(c4[4]),
        .R(\c4[4]_i_1_n_0 ));
  FDRE \c4_reg[5] 
       (.C(coreclk),
        .CE(\c4[5]_i_2_n_0 ),
        .D(\c4[5]_i_3_n_0 ),
        .Q(c4[5]),
        .R(\c4[5]_i_1_n_0 ));
  FDRE \c4_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c4[6]_i_1_n_0 ),
        .Q(c4[6]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h005D)) 
    \c5[0]_i_1 
       (.I0(tx_xgmii_data_reg2[46]),
        .I1(tx_xgmii_data_reg2[45]),
        .I2(tx_xgmii_data_reg2[47]),
        .I3(\c5[4]_i_4_n_0 ),
        .O(\c5[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hBEBF)) 
    \c5[1]_i_1 
       (.I0(\c5[1]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[45]),
        .I2(tx_xgmii_data_reg2[47]),
        .I3(tx_xgmii_data_reg2[43]),
        .O(\c5[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hDFFBFFFFFFFFFFFF)) 
    \c5[1]_i_2 
       (.I0(tx_xgmii_data_reg2[46]),
        .I1(tx_xgmii_data_reg2[43]),
        .I2(tx_xgmii_data_reg2[41]),
        .I3(tx_xgmii_data_reg2[40]),
        .I4(tx_xgmii_data_reg2[44]),
        .I5(tx_xgmii_data_reg2[42]),
        .O(\c5[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFBFFBFBF)) 
    \c5[2]_i_1 
       (.I0(\c5[5]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[45]),
        .I2(tx_xgmii_data_reg2[43]),
        .I3(tx_xgmii_data_reg2[46]),
        .I4(tx_xgmii_data_reg2[47]),
        .O(\c5[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEBEF)) 
    \c5[3]_i_1 
       (.I0(\c5[4]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[46]),
        .I2(tx_xgmii_data_reg2[45]),
        .I3(tx_xgmii_data_reg2[47]),
        .O(\c5[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \c5[4]_i_1 
       (.I0(\c5[4]_i_3_n_0 ),
        .I1(tx_xgmii_data_reg2[46]),
        .I2(tx_xgmii_data_reg2[47]),
        .I3(tx_xgmii_data_reg2[45]),
        .I4(tx_xgmii_ctrl_reg2[5]),
        .I5(tx_xgmii_data_reg2[42]),
        .O(\c5[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEFBE)) 
    \c5[4]_i_2 
       (.I0(\c5[4]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[47]),
        .I2(tx_xgmii_data_reg2[46]),
        .I3(tx_xgmii_data_reg2[45]),
        .O(\c5[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0008)) 
    \c5[4]_i_3 
       (.I0(tx_xgmii_data_reg2[41]),
        .I1(tx_xgmii_data_reg2[40]),
        .I2(tx_xgmii_data_reg2[43]),
        .I3(tx_xgmii_data_reg2[44]),
        .O(\c5[4]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFF7F)) 
    \c5[4]_i_4 
       (.I0(tx_xgmii_data_reg2[43]),
        .I1(tx_xgmii_data_reg2[44]),
        .I2(tx_xgmii_data_reg2[42]),
        .I3(tx_xgmii_data_reg2[40]),
        .I4(tx_xgmii_data_reg2[41]),
        .O(\c5[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000018001008)) 
    \c5[5]_i_1 
       (.I0(tx_xgmii_data_reg2[44]),
        .I1(tx_xgmii_data_reg2[43]),
        .I2(tx_xgmii_data_reg2[40]),
        .I3(tx_xgmii_data_reg2[41]),
        .I4(tx_xgmii_data_reg2[45]),
        .I5(\c5[5]_i_3_n_0 ),
        .O(\c5[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00004822)) 
    \c5[5]_i_2 
       (.I0(tx_xgmii_data_reg2[43]),
        .I1(tx_xgmii_data_reg2[47]),
        .I2(tx_xgmii_data_reg2[45]),
        .I3(tx_xgmii_data_reg2[46]),
        .I4(\c5[5]_i_4_n_0 ),
        .O(\c5[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFF7FF7)) 
    \c5[5]_i_3 
       (.I0(tx_xgmii_ctrl_reg2[5]),
        .I1(tx_xgmii_data_reg2[42]),
        .I2(tx_xgmii_data_reg2[44]),
        .I3(tx_xgmii_data_reg2[47]),
        .I4(tx_xgmii_data_reg2[46]),
        .I5(tx_xgmii_data_reg2[45]),
        .O(\c5[5]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFF7FF7FF)) 
    \c5[5]_i_4 
       (.I0(tx_xgmii_data_reg2[42]),
        .I1(tx_xgmii_data_reg2[44]),
        .I2(tx_xgmii_data_reg2[41]),
        .I3(tx_xgmii_data_reg2[43]),
        .I4(tx_xgmii_data_reg2[40]),
        .O(\c5[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h2E2200002E222E22)) 
    \c5[6]_i_1 
       (.I0(c5[6]),
        .I1(tx_xgmii_ctrl_reg2[5]),
        .I2(\c5[5]_i_4_n_0 ),
        .I3(\c5[6]_i_2_n_0 ),
        .I4(\c5[6]_i_3_n_0 ),
        .I5(\c5[6]_i_4_n_0 ),
        .O(\c5[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h68AA)) 
    \c5[6]_i_2 
       (.I0(tx_xgmii_data_reg2[43]),
        .I1(tx_xgmii_data_reg2[45]),
        .I2(tx_xgmii_data_reg2[47]),
        .I3(tx_xgmii_data_reg2[46]),
        .O(\c5[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7FBFBFBFFFFFFFBF)) 
    \c5[6]_i_3 
       (.I0(tx_xgmii_data_reg2[46]),
        .I1(tx_xgmii_ctrl_reg2[5]),
        .I2(tx_xgmii_data_reg2[42]),
        .I3(tx_xgmii_data_reg2[47]),
        .I4(tx_xgmii_data_reg2[45]),
        .I5(tx_xgmii_data_reg2[44]),
        .O(\c5[6]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h090000C0)) 
    \c5[6]_i_4 
       (.I0(tx_xgmii_data_reg2[46]),
        .I1(tx_xgmii_data_reg2[41]),
        .I2(tx_xgmii_data_reg2[40]),
        .I3(tx_xgmii_data_reg2[43]),
        .I4(tx_xgmii_data_reg2[44]),
        .O(\c5[6]_i_4_n_0 ));
  FDRE \c5_reg[0] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[5]),
        .D(\c5[0]_i_1_n_0 ),
        .Q(c5[0]),
        .R(\c5[5]_i_1_n_0 ));
  FDRE \c5_reg[1] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[5]),
        .D(\c5[1]_i_1_n_0 ),
        .Q(c5[1]),
        .R(\c5[4]_i_1_n_0 ));
  FDRE \c5_reg[2] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[5]),
        .D(\c5[2]_i_1_n_0 ),
        .Q(c5[2]),
        .R(\c5[4]_i_1_n_0 ));
  FDRE \c5_reg[3] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[5]),
        .D(\c5[3]_i_1_n_0 ),
        .Q(c5[3]),
        .R(\c5[4]_i_1_n_0 ));
  FDRE \c5_reg[4] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[5]),
        .D(\c5[4]_i_2_n_0 ),
        .Q(c5[4]),
        .R(\c5[4]_i_1_n_0 ));
  FDRE \c5_reg[5] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[5]),
        .D(\c5[5]_i_2_n_0 ),
        .Q(c5[5]),
        .R(\c5[5]_i_1_n_0 ));
  FDRE \c5_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c5[6]_i_1_n_0 ),
        .Q(c5[6]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h005D)) 
    \c6[0]_i_1 
       (.I0(tx_xgmii_data_reg2[54]),
        .I1(tx_xgmii_data_reg2[53]),
        .I2(tx_xgmii_data_reg2[55]),
        .I3(\c6[4]_i_4_n_0 ),
        .O(\c6[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hBEBF)) 
    \c6[1]_i_1 
       (.I0(\c6[1]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[53]),
        .I2(tx_xgmii_data_reg2[55]),
        .I3(tx_xgmii_data_reg2[51]),
        .O(\c6[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hDFFBFFFFFFFFFFFF)) 
    \c6[1]_i_2 
       (.I0(tx_xgmii_data_reg2[54]),
        .I1(tx_xgmii_data_reg2[51]),
        .I2(tx_xgmii_data_reg2[49]),
        .I3(tx_xgmii_data_reg2[48]),
        .I4(tx_xgmii_data_reg2[52]),
        .I5(tx_xgmii_data_reg2[50]),
        .O(\c6[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFBFFBFBF)) 
    \c6[2]_i_1 
       (.I0(\c6[5]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[53]),
        .I2(tx_xgmii_data_reg2[51]),
        .I3(tx_xgmii_data_reg2[54]),
        .I4(tx_xgmii_data_reg2[55]),
        .O(\c6[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEBEF)) 
    \c6[3]_i_1 
       (.I0(\c6[4]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[54]),
        .I2(tx_xgmii_data_reg2[53]),
        .I3(tx_xgmii_data_reg2[55]),
        .O(\c6[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \c6[4]_i_1 
       (.I0(\c6[4]_i_3_n_0 ),
        .I1(tx_xgmii_data_reg2[54]),
        .I2(tx_xgmii_data_reg2[55]),
        .I3(tx_xgmii_data_reg2[53]),
        .I4(tx_xgmii_ctrl_reg2[6]),
        .I5(tx_xgmii_data_reg2[50]),
        .O(\c6[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEFBE)) 
    \c6[4]_i_2 
       (.I0(\c6[4]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[55]),
        .I2(tx_xgmii_data_reg2[54]),
        .I3(tx_xgmii_data_reg2[53]),
        .O(\c6[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0008)) 
    \c6[4]_i_3 
       (.I0(tx_xgmii_data_reg2[49]),
        .I1(tx_xgmii_data_reg2[48]),
        .I2(tx_xgmii_data_reg2[51]),
        .I3(tx_xgmii_data_reg2[52]),
        .O(\c6[4]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFF7F)) 
    \c6[4]_i_4 
       (.I0(tx_xgmii_data_reg2[51]),
        .I1(tx_xgmii_data_reg2[52]),
        .I2(tx_xgmii_data_reg2[50]),
        .I3(tx_xgmii_data_reg2[48]),
        .I4(tx_xgmii_data_reg2[49]),
        .O(\c6[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000018001008)) 
    \c6[5]_i_1 
       (.I0(tx_xgmii_data_reg2[52]),
        .I1(tx_xgmii_data_reg2[51]),
        .I2(tx_xgmii_data_reg2[48]),
        .I3(tx_xgmii_data_reg2[49]),
        .I4(tx_xgmii_data_reg2[53]),
        .I5(\c6[5]_i_3_n_0 ),
        .O(\c6[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00004822)) 
    \c6[5]_i_2 
       (.I0(tx_xgmii_data_reg2[51]),
        .I1(tx_xgmii_data_reg2[55]),
        .I2(tx_xgmii_data_reg2[53]),
        .I3(tx_xgmii_data_reg2[54]),
        .I4(\c6[5]_i_4_n_0 ),
        .O(\c6[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFF7FF7)) 
    \c6[5]_i_3 
       (.I0(tx_xgmii_ctrl_reg2[6]),
        .I1(tx_xgmii_data_reg2[50]),
        .I2(tx_xgmii_data_reg2[52]),
        .I3(tx_xgmii_data_reg2[55]),
        .I4(tx_xgmii_data_reg2[54]),
        .I5(tx_xgmii_data_reg2[53]),
        .O(\c6[5]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFF7FF7FF)) 
    \c6[5]_i_4 
       (.I0(tx_xgmii_data_reg2[50]),
        .I1(tx_xgmii_data_reg2[52]),
        .I2(tx_xgmii_data_reg2[49]),
        .I3(tx_xgmii_data_reg2[51]),
        .I4(tx_xgmii_data_reg2[48]),
        .O(\c6[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h2E2200002E222E22)) 
    \c6[6]_i_1 
       (.I0(c6[6]),
        .I1(tx_xgmii_ctrl_reg2[6]),
        .I2(\c6[5]_i_4_n_0 ),
        .I3(\c6[6]_i_2_n_0 ),
        .I4(\c6[6]_i_3_n_0 ),
        .I5(\c6[6]_i_4_n_0 ),
        .O(\c6[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h68AA)) 
    \c6[6]_i_2 
       (.I0(tx_xgmii_data_reg2[51]),
        .I1(tx_xgmii_data_reg2[53]),
        .I2(tx_xgmii_data_reg2[55]),
        .I3(tx_xgmii_data_reg2[54]),
        .O(\c6[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7FBFBFBFFFFFFFBF)) 
    \c6[6]_i_3 
       (.I0(tx_xgmii_data_reg2[54]),
        .I1(tx_xgmii_ctrl_reg2[6]),
        .I2(tx_xgmii_data_reg2[50]),
        .I3(tx_xgmii_data_reg2[55]),
        .I4(tx_xgmii_data_reg2[53]),
        .I5(tx_xgmii_data_reg2[52]),
        .O(\c6[6]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h090000C0)) 
    \c6[6]_i_4 
       (.I0(tx_xgmii_data_reg2[54]),
        .I1(tx_xgmii_data_reg2[49]),
        .I2(tx_xgmii_data_reg2[48]),
        .I3(tx_xgmii_data_reg2[51]),
        .I4(tx_xgmii_data_reg2[52]),
        .O(\c6[6]_i_4_n_0 ));
  FDRE \c6_reg[0] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[6]),
        .D(\c6[0]_i_1_n_0 ),
        .Q(c6[0]),
        .R(\c6[5]_i_1_n_0 ));
  FDRE \c6_reg[1] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[6]),
        .D(\c6[1]_i_1_n_0 ),
        .Q(c6[1]),
        .R(\c6[4]_i_1_n_0 ));
  FDRE \c6_reg[2] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[6]),
        .D(\c6[2]_i_1_n_0 ),
        .Q(c6[2]),
        .R(\c6[4]_i_1_n_0 ));
  FDRE \c6_reg[3] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[6]),
        .D(\c6[3]_i_1_n_0 ),
        .Q(c6[3]),
        .R(\c6[4]_i_1_n_0 ));
  FDRE \c6_reg[4] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[6]),
        .D(\c6[4]_i_2_n_0 ),
        .Q(c6[4]),
        .R(\c6[4]_i_1_n_0 ));
  FDRE \c6_reg[5] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[6]),
        .D(\c6[5]_i_2_n_0 ),
        .Q(c6[5]),
        .R(\c6[5]_i_1_n_0 ));
  FDRE \c6_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c6[6]_i_1_n_0 ),
        .Q(c6[6]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h005D)) 
    \c7[0]_i_1 
       (.I0(tx_xgmii_data_reg2[62]),
        .I1(tx_xgmii_data_reg2[61]),
        .I2(tx_xgmii_data_reg2[63]),
        .I3(\c7[4]_i_4_n_0 ),
        .O(\c7[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hBEBF)) 
    \c7[1]_i_1 
       (.I0(\c7[1]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[61]),
        .I2(tx_xgmii_data_reg2[63]),
        .I3(tx_xgmii_data_reg2[59]),
        .O(\c7[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hDFFBFFFFFFFFFFFF)) 
    \c7[1]_i_2 
       (.I0(tx_xgmii_data_reg2[62]),
        .I1(tx_xgmii_data_reg2[59]),
        .I2(tx_xgmii_data_reg2[57]),
        .I3(tx_xgmii_data_reg2[56]),
        .I4(tx_xgmii_data_reg2[60]),
        .I5(tx_xgmii_data_reg2[58]),
        .O(\c7[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFBFFBFBF)) 
    \c7[2]_i_1 
       (.I0(\c7[5]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[61]),
        .I2(tx_xgmii_data_reg2[59]),
        .I3(tx_xgmii_data_reg2[62]),
        .I4(tx_xgmii_data_reg2[63]),
        .O(\c7[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEBEF)) 
    \c7[3]_i_1 
       (.I0(\c7[4]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[62]),
        .I2(tx_xgmii_data_reg2[61]),
        .I3(tx_xgmii_data_reg2[63]),
        .O(\c7[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \c7[4]_i_1 
       (.I0(\c7[4]_i_3_n_0 ),
        .I1(tx_xgmii_data_reg2[62]),
        .I2(tx_xgmii_data_reg2[63]),
        .I3(tx_xgmii_data_reg2[61]),
        .I4(tx_xgmii_ctrl_reg2[7]),
        .I5(tx_xgmii_data_reg2[58]),
        .O(\c7[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEFBE)) 
    \c7[4]_i_2 
       (.I0(\c7[4]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[63]),
        .I2(tx_xgmii_data_reg2[62]),
        .I3(tx_xgmii_data_reg2[61]),
        .O(\c7[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0008)) 
    \c7[4]_i_3 
       (.I0(tx_xgmii_data_reg2[57]),
        .I1(tx_xgmii_data_reg2[56]),
        .I2(tx_xgmii_data_reg2[59]),
        .I3(tx_xgmii_data_reg2[60]),
        .O(\c7[4]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFF7F)) 
    \c7[4]_i_4 
       (.I0(tx_xgmii_data_reg2[59]),
        .I1(tx_xgmii_data_reg2[60]),
        .I2(tx_xgmii_data_reg2[58]),
        .I3(tx_xgmii_data_reg2[56]),
        .I4(tx_xgmii_data_reg2[57]),
        .O(\c7[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000018001008)) 
    \c7[5]_i_1 
       (.I0(tx_xgmii_data_reg2[60]),
        .I1(tx_xgmii_data_reg2[59]),
        .I2(tx_xgmii_data_reg2[56]),
        .I3(tx_xgmii_data_reg2[57]),
        .I4(tx_xgmii_data_reg2[61]),
        .I5(\c7[5]_i_3_n_0 ),
        .O(\c7[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00004822)) 
    \c7[5]_i_2 
       (.I0(tx_xgmii_data_reg2[59]),
        .I1(tx_xgmii_data_reg2[63]),
        .I2(tx_xgmii_data_reg2[61]),
        .I3(tx_xgmii_data_reg2[62]),
        .I4(\c7[5]_i_4_n_0 ),
        .O(\c7[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFF7FF7)) 
    \c7[5]_i_3 
       (.I0(tx_xgmii_ctrl_reg2[7]),
        .I1(tx_xgmii_data_reg2[58]),
        .I2(tx_xgmii_data_reg2[60]),
        .I3(tx_xgmii_data_reg2[63]),
        .I4(tx_xgmii_data_reg2[62]),
        .I5(tx_xgmii_data_reg2[61]),
        .O(\c7[5]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFF7FF7FF)) 
    \c7[5]_i_4 
       (.I0(tx_xgmii_data_reg2[58]),
        .I1(tx_xgmii_data_reg2[60]),
        .I2(tx_xgmii_data_reg2[57]),
        .I3(tx_xgmii_data_reg2[59]),
        .I4(tx_xgmii_data_reg2[56]),
        .O(\c7[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h2E2200002E222E22)) 
    \c7[6]_i_1 
       (.I0(c7[6]),
        .I1(tx_xgmii_ctrl_reg2[7]),
        .I2(\c7[5]_i_4_n_0 ),
        .I3(\c7[6]_i_2_n_0 ),
        .I4(\c7[6]_i_3_n_0 ),
        .I5(\c7[6]_i_4_n_0 ),
        .O(\c7[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h68AA)) 
    \c7[6]_i_2 
       (.I0(tx_xgmii_data_reg2[59]),
        .I1(tx_xgmii_data_reg2[61]),
        .I2(tx_xgmii_data_reg2[63]),
        .I3(tx_xgmii_data_reg2[62]),
        .O(\c7[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7FBFBFBFFFFFFFBF)) 
    \c7[6]_i_3 
       (.I0(tx_xgmii_data_reg2[62]),
        .I1(tx_xgmii_ctrl_reg2[7]),
        .I2(tx_xgmii_data_reg2[58]),
        .I3(tx_xgmii_data_reg2[63]),
        .I4(tx_xgmii_data_reg2[61]),
        .I5(tx_xgmii_data_reg2[60]),
        .O(\c7[6]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h090000C0)) 
    \c7[6]_i_4 
       (.I0(tx_xgmii_data_reg2[62]),
        .I1(tx_xgmii_data_reg2[57]),
        .I2(tx_xgmii_data_reg2[56]),
        .I3(tx_xgmii_data_reg2[59]),
        .I4(tx_xgmii_data_reg2[60]),
        .O(\c7[6]_i_4_n_0 ));
  FDRE \c7_reg[0] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[7]),
        .D(\c7[0]_i_1_n_0 ),
        .Q(c7[0]),
        .R(\c7[5]_i_1_n_0 ));
  FDRE \c7_reg[1] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[7]),
        .D(\c7[1]_i_1_n_0 ),
        .Q(c7[1]),
        .R(\c7[4]_i_1_n_0 ));
  FDRE \c7_reg[2] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[7]),
        .D(\c7[2]_i_1_n_0 ),
        .Q(c7[2]),
        .R(\c7[4]_i_1_n_0 ));
  FDRE \c7_reg[3] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[7]),
        .D(\c7[3]_i_1_n_0 ),
        .Q(c7[3]),
        .R(\c7[4]_i_1_n_0 ));
  FDRE \c7_reg[4] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[7]),
        .D(\c7[4]_i_2_n_0 ),
        .Q(c7[4]),
        .R(\c7[4]_i_1_n_0 ));
  FDRE \c7_reg[5] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[7]),
        .D(\c7[5]_i_2_n_0 ),
        .Q(c7[5]),
        .R(\c7[5]_i_1_n_0 ));
  FDRE \c7_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c7[6]_i_1_n_0 ),
        .Q(c7[6]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \d0[7]_i_1 
       (.I0(tx_xgmii_ctrl_reg2[0]),
        .O(\d0[7]_i_1_n_0 ));
  FDRE \d0_reg[0] 
       (.C(coreclk),
        .CE(\d0[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[0]),
        .Q(d0[0]),
        .R(1'b0));
  FDRE \d0_reg[1] 
       (.C(coreclk),
        .CE(\d0[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[1]),
        .Q(d0[1]),
        .R(1'b0));
  FDRE \d0_reg[2] 
       (.C(coreclk),
        .CE(\d0[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[2]),
        .Q(d0[2]),
        .R(1'b0));
  FDRE \d0_reg[3] 
       (.C(coreclk),
        .CE(\d0[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[3]),
        .Q(d0[3]),
        .R(1'b0));
  FDRE \d0_reg[4] 
       (.C(coreclk),
        .CE(\d0[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[4]),
        .Q(d0[4]),
        .R(1'b0));
  FDRE \d0_reg[5] 
       (.C(coreclk),
        .CE(\d0[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[5]),
        .Q(d0[5]),
        .R(1'b0));
  FDRE \d0_reg[6] 
       (.C(coreclk),
        .CE(\d0[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[6]),
        .Q(d0[6]),
        .R(1'b0));
  FDRE \d0_reg[7] 
       (.C(coreclk),
        .CE(\d0[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[7]),
        .Q(d0[7]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \d1[7]_i_1 
       (.I0(tx_xgmii_ctrl_reg2[1]),
        .O(\d1[7]_i_1_n_0 ));
  FDRE \d1_reg[0] 
       (.C(coreclk),
        .CE(\d1[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[8]),
        .Q(d1[0]),
        .R(1'b0));
  FDRE \d1_reg[1] 
       (.C(coreclk),
        .CE(\d1[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[9]),
        .Q(d1[1]),
        .R(1'b0));
  FDRE \d1_reg[2] 
       (.C(coreclk),
        .CE(\d1[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[10]),
        .Q(d1[2]),
        .R(1'b0));
  FDRE \d1_reg[3] 
       (.C(coreclk),
        .CE(\d1[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[11]),
        .Q(d1[3]),
        .R(1'b0));
  FDRE \d1_reg[4] 
       (.C(coreclk),
        .CE(\d1[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[12]),
        .Q(d1[4]),
        .R(1'b0));
  FDRE \d1_reg[5] 
       (.C(coreclk),
        .CE(\d1[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[13]),
        .Q(d1[5]),
        .R(1'b0));
  FDRE \d1_reg[6] 
       (.C(coreclk),
        .CE(\d1[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[14]),
        .Q(d1[6]),
        .R(1'b0));
  FDRE \d1_reg[7] 
       (.C(coreclk),
        .CE(\d1[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[15]),
        .Q(d1[7]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \d2[7]_i_1 
       (.I0(tx_xgmii_ctrl_reg2[2]),
        .O(\d2[7]_i_1_n_0 ));
  FDRE \d2_reg[0] 
       (.C(coreclk),
        .CE(\d2[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[16]),
        .Q(d2[0]),
        .R(1'b0));
  FDRE \d2_reg[1] 
       (.C(coreclk),
        .CE(\d2[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[17]),
        .Q(d2[1]),
        .R(1'b0));
  FDRE \d2_reg[2] 
       (.C(coreclk),
        .CE(\d2[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[18]),
        .Q(d2[2]),
        .R(1'b0));
  FDRE \d2_reg[3] 
       (.C(coreclk),
        .CE(\d2[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[19]),
        .Q(d2[3]),
        .R(1'b0));
  FDRE \d2_reg[4] 
       (.C(coreclk),
        .CE(\d2[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[20]),
        .Q(d2[4]),
        .R(1'b0));
  FDRE \d2_reg[5] 
       (.C(coreclk),
        .CE(\d2[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[21]),
        .Q(d2[5]),
        .R(1'b0));
  FDRE \d2_reg[6] 
       (.C(coreclk),
        .CE(\d2[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[22]),
        .Q(d2[6]),
        .R(1'b0));
  FDRE \d2_reg[7] 
       (.C(coreclk),
        .CE(\d2[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[23]),
        .Q(d2[7]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \d3[7]_i_1 
       (.I0(tx_xgmii_ctrl_reg2[3]),
        .O(\d3[7]_i_1_n_0 ));
  FDRE \d3_reg[0] 
       (.C(coreclk),
        .CE(\d3[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[24]),
        .Q(d3[0]),
        .R(1'b0));
  FDRE \d3_reg[1] 
       (.C(coreclk),
        .CE(\d3[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[25]),
        .Q(d3[1]),
        .R(1'b0));
  FDRE \d3_reg[2] 
       (.C(coreclk),
        .CE(\d3[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[26]),
        .Q(d3[2]),
        .R(1'b0));
  FDRE \d3_reg[3] 
       (.C(coreclk),
        .CE(\d3[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[27]),
        .Q(d3[3]),
        .R(1'b0));
  FDRE \d3_reg[4] 
       (.C(coreclk),
        .CE(\d3[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[28]),
        .Q(d3[4]),
        .R(1'b0));
  FDRE \d3_reg[5] 
       (.C(coreclk),
        .CE(\d3[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[29]),
        .Q(d3[5]),
        .R(1'b0));
  FDRE \d3_reg[6] 
       (.C(coreclk),
        .CE(\d3[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[30]),
        .Q(d3[6]),
        .R(1'b0));
  FDRE \d3_reg[7] 
       (.C(coreclk),
        .CE(\d3[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[31]),
        .Q(d3[7]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \d4[7]_i_1 
       (.I0(tx_xgmii_ctrl_reg2[4]),
        .O(\d4[7]_i_1_n_0 ));
  FDRE \d4_reg[0] 
       (.C(coreclk),
        .CE(\d4[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[32]),
        .Q(d4[0]),
        .R(1'b0));
  FDRE \d4_reg[1] 
       (.C(coreclk),
        .CE(\d4[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[33]),
        .Q(d4[1]),
        .R(1'b0));
  FDRE \d4_reg[2] 
       (.C(coreclk),
        .CE(\d4[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[34]),
        .Q(d4[2]),
        .R(1'b0));
  FDRE \d4_reg[3] 
       (.C(coreclk),
        .CE(\d4[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[35]),
        .Q(d4[3]),
        .R(1'b0));
  FDRE \d4_reg[4] 
       (.C(coreclk),
        .CE(\d4[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[36]),
        .Q(d4[4]),
        .R(1'b0));
  FDRE \d4_reg[5] 
       (.C(coreclk),
        .CE(\d4[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[37]),
        .Q(d4[5]),
        .R(1'b0));
  FDRE \d4_reg[6] 
       (.C(coreclk),
        .CE(\d4[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[38]),
        .Q(d4[6]),
        .R(1'b0));
  FDRE \d4_reg[7] 
       (.C(coreclk),
        .CE(\d4[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[39]),
        .Q(d4[7]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \d5[7]_i_1 
       (.I0(tx_xgmii_ctrl_reg2[5]),
        .O(\d5[7]_i_1_n_0 ));
  FDRE \d5_reg[0] 
       (.C(coreclk),
        .CE(\d5[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[40]),
        .Q(d5[0]),
        .R(1'b0));
  FDRE \d5_reg[1] 
       (.C(coreclk),
        .CE(\d5[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[41]),
        .Q(d5[1]),
        .R(1'b0));
  FDRE \d5_reg[2] 
       (.C(coreclk),
        .CE(\d5[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[42]),
        .Q(d5[2]),
        .R(1'b0));
  FDRE \d5_reg[3] 
       (.C(coreclk),
        .CE(\d5[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[43]),
        .Q(d5[3]),
        .R(1'b0));
  FDRE \d5_reg[4] 
       (.C(coreclk),
        .CE(\d5[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[44]),
        .Q(d5[4]),
        .R(1'b0));
  FDRE \d5_reg[5] 
       (.C(coreclk),
        .CE(\d5[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[45]),
        .Q(d5[5]),
        .R(1'b0));
  FDRE \d5_reg[6] 
       (.C(coreclk),
        .CE(\d5[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[46]),
        .Q(d5[6]),
        .R(1'b0));
  FDRE \d5_reg[7] 
       (.C(coreclk),
        .CE(\d5[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[47]),
        .Q(d5[7]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \d6[7]_i_1 
       (.I0(tx_xgmii_ctrl_reg2[6]),
        .O(\d6[7]_i_1_n_0 ));
  FDRE \d6_reg[0] 
       (.C(coreclk),
        .CE(\d6[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[48]),
        .Q(d6[0]),
        .R(1'b0));
  FDRE \d6_reg[1] 
       (.C(coreclk),
        .CE(\d6[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[49]),
        .Q(d6[1]),
        .R(1'b0));
  FDRE \d6_reg[2] 
       (.C(coreclk),
        .CE(\d6[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[50]),
        .Q(d6[2]),
        .R(1'b0));
  FDRE \d6_reg[3] 
       (.C(coreclk),
        .CE(\d6[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[51]),
        .Q(d6[3]),
        .R(1'b0));
  FDRE \d6_reg[4] 
       (.C(coreclk),
        .CE(\d6[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[52]),
        .Q(d6[4]),
        .R(1'b0));
  FDRE \d6_reg[5] 
       (.C(coreclk),
        .CE(\d6[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[53]),
        .Q(d6[5]),
        .R(1'b0));
  FDRE \d6_reg[6] 
       (.C(coreclk),
        .CE(\d6[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[54]),
        .Q(d6[6]),
        .R(1'b0));
  FDRE \d6_reg[7] 
       (.C(coreclk),
        .CE(\d6[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[55]),
        .Q(d6[7]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \d7[7]_i_1 
       (.I0(tx_xgmii_ctrl_reg2[7]),
        .O(\d7[7]_i_1_n_0 ));
  FDRE \d7_reg[0] 
       (.C(coreclk),
        .CE(\d7[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[56]),
        .Q(d7[0]),
        .R(1'b0));
  FDRE \d7_reg[1] 
       (.C(coreclk),
        .CE(\d7[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[57]),
        .Q(d7[1]),
        .R(1'b0));
  FDRE \d7_reg[2] 
       (.C(coreclk),
        .CE(\d7[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[58]),
        .Q(d7[2]),
        .R(1'b0));
  FDRE \d7_reg[3] 
       (.C(coreclk),
        .CE(\d7[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[59]),
        .Q(d7[3]),
        .R(1'b0));
  FDRE \d7_reg[4] 
       (.C(coreclk),
        .CE(\d7[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[60]),
        .Q(d7[4]),
        .R(1'b0));
  FDRE \d7_reg[5] 
       (.C(coreclk),
        .CE(\d7[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[61]),
        .Q(d7[5]),
        .R(1'b0));
  FDRE \d7_reg[6] 
       (.C(coreclk),
        .CE(\d7[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[62]),
        .Q(d7[6]),
        .R(1'b0));
  FDRE \d7_reg[7] 
       (.C(coreclk),
        .CE(\d7[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[63]),
        .Q(d7[7]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAAAABAAA8AAAAAA)) 
    \o0[0]_i_1 
       (.I0(o0),
        .I1(\c0[5]_i_5_n_0 ),
        .I2(tx_xgmii_data_reg2[5]),
        .I3(tx_xgmii_ctrl_reg2[0]),
        .I4(tx_xgmii_data_reg2[7]),
        .I5(tx_xgmii_data_reg2[6]),
        .O(\o0[0]_i_1_n_0 ));
  FDRE \o0_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\o0[0]_i_1_n_0 ),
        .Q(o0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAAAABAAA8AAAAAA)) 
    \o4[0]_i_1 
       (.I0(o4),
        .I1(\c4[5]_i_5_n_0 ),
        .I2(tx_xgmii_data_reg2[37]),
        .I3(tx_xgmii_ctrl_reg2[4]),
        .I4(tx_xgmii_data_reg2[39]),
        .I5(tx_xgmii_data_reg2[38]),
        .O(\o4[0]_i_1_n_0 ));
  FDRE \o4_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\o4[0]_i_1_n_0 ),
        .Q(o4),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000000001000)) 
    o_code_c0_i_1
       (.I0(o_code_c0_i_2_n_0),
        .I1(out[1]),
        .I2(out[2]),
        .I3(o_code_c0_i_3_n_0),
        .I4(out[0]),
        .I5(out[5]),
        .O(o_code_c00));
  LUT2 #(
    .INIT(4'h7)) 
    o_code_c0_i_2
       (.I0(out[3]),
        .I1(out[4]),
        .O(o_code_c0_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    o_code_c0_i_3
       (.I0(out[6]),
        .I1(out[7]),
        .O(o_code_c0_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    o_code_c0_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(o_code_c00),
        .Q(o_code_c0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000000000080)) 
    o_code_c4_i_1
       (.I0(o_code_c4_i_2_n_0),
        .I1(o_code_c4_i_3_n_0),
        .I2(out[34]),
        .I3(out[37]),
        .I4(out[32]),
        .I5(out[33]),
        .O(o_code_c40));
  LUT2 #(
    .INIT(4'h6)) 
    o_code_c4_i_2
       (.I0(out[38]),
        .I1(out[39]),
        .O(o_code_c4_i_2_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    o_code_c4_i_3
       (.I0(out[35]),
        .I1(out[36]),
        .O(o_code_c4_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    o_code_c4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(o_code_c40),
        .Q(o_code_c4),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h04)) 
    s_code_c0_i_1
       (.I0(out[2]),
        .I1(out[1]),
        .I2(\t_code[0]_i_2_n_0 ),
        .O(s_code_c0));
  FDRE #(
    .INIT(1'b0)) 
    s_code_c0_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(s_code_c0),
        .Q(s_code_c0_reg_n_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0800000000000000)) 
    s_code_c4_i_1
       (.I0(out[38]),
        .I1(out[39]),
        .I2(out[34]),
        .I3(out[33]),
        .I4(out[32]),
        .I5(\t_code[4]_i_2_n_0 ),
        .O(s_code_c4));
  FDRE #(
    .INIT(1'b0)) 
    s_code_c4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(s_code_c4),
        .Q(s_code_c4_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \t_code[0]_i_1 
       (.I0(\t_code[0]_i_2_n_0 ),
        .I1(out[2]),
        .I2(out[1]),
        .O(p_8_out[0]));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \t_code[0]_i_2 
       (.I0(out[6]),
        .I1(out[7]),
        .I2(out[4]),
        .I3(out[3]),
        .I4(out[5]),
        .I5(out[0]),
        .O(\t_code[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT5 #(
    .INIT(32'h00008000)) 
    \t_code[1]_i_1 
       (.I0(\t_code[1]_i_2_n_0 ),
        .I1(out[10]),
        .I2(out[13]),
        .I3(out[8]),
        .I4(out[9]),
        .O(p_8_out[1]));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \t_code[1]_i_2 
       (.I0(out[12]),
        .I1(out[11]),
        .I2(out[15]),
        .I3(out[14]),
        .O(\t_code[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT5 #(
    .INIT(32'h00008000)) 
    \t_code[2]_i_1 
       (.I0(\t_code[2]_i_2_n_0 ),
        .I1(out[18]),
        .I2(out[21]),
        .I3(out[16]),
        .I4(out[17]),
        .O(p_8_out[2]));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \t_code[2]_i_2 
       (.I0(out[20]),
        .I1(out[19]),
        .I2(out[23]),
        .I3(out[22]),
        .O(\t_code[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT5 #(
    .INIT(32'h00008000)) 
    \t_code[3]_i_1 
       (.I0(\t_code[3]_i_2_n_0 ),
        .I1(out[26]),
        .I2(out[29]),
        .I3(out[24]),
        .I4(out[25]),
        .O(p_8_out[3]));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \t_code[3]_i_2 
       (.I0(out[28]),
        .I1(out[27]),
        .I2(out[31]),
        .I3(out[30]),
        .O(\t_code[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0800000000000000)) 
    \t_code[4]_i_1 
       (.I0(out[38]),
        .I1(out[39]),
        .I2(out[33]),
        .I3(out[34]),
        .I4(out[32]),
        .I5(\t_code[4]_i_2_n_0 ),
        .O(p_8_out[4]));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \t_code[4]_i_2 
       (.I0(out[36]),
        .I1(out[35]),
        .I2(out[37]),
        .O(\t_code[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT5 #(
    .INIT(32'h00008000)) 
    \t_code[5]_i_1 
       (.I0(\t_code[5]_i_2_n_0 ),
        .I1(out[42]),
        .I2(out[45]),
        .I3(out[40]),
        .I4(out[41]),
        .O(p_8_out[5]));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \t_code[5]_i_2 
       (.I0(out[44]),
        .I1(out[43]),
        .I2(out[47]),
        .I3(out[46]),
        .O(\t_code[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT5 #(
    .INIT(32'h00008000)) 
    \t_code[6]_i_1 
       (.I0(\t_code[6]_i_2_n_0 ),
        .I1(out[50]),
        .I2(out[53]),
        .I3(out[48]),
        .I4(out[49]),
        .O(p_8_out[6]));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \t_code[6]_i_2 
       (.I0(out[52]),
        .I1(out[51]),
        .I2(out[55]),
        .I3(out[54]),
        .O(\t_code[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0800000000000000)) 
    \t_code[7]_i_1 
       (.I0(out[62]),
        .I1(out[63]),
        .I2(out[57]),
        .I3(out[58]),
        .I4(out[56]),
        .I5(\t_code[7]_i_2_n_0 ),
        .O(p_8_out[7]));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \t_code[7]_i_2 
       (.I0(out[60]),
        .I1(out[59]),
        .I2(out[61]),
        .O(\t_code[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \t_code_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_8_out[0]),
        .Q(\t_code_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \t_code_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_8_out[1]),
        .Q(\t_code_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \t_code_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_8_out[2]),
        .Q(\t_code_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \t_code_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_8_out[3]),
        .Q(\t_code_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \t_code_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_8_out[4]),
        .Q(\t_code_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \t_code_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_8_out[5]),
        .Q(\t_code_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \t_code_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_8_out[6]),
        .Q(\t_code_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \t_code_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_8_out[7]),
        .Q(\t_code_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \t_type_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\t_type_reg_reg_n_0_[0] ),
        .Q(Q[0]),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \t_type_reg[0]_i_1 
       (.I0(\t_type_reg[0]_i_2_n_0 ),
        .I1(\t_type_reg[1]_i_3_n_0 ),
        .I2(\t_type_reg[0]_i_3_n_0 ),
        .I3(\t_type_reg[0]_i_4_n_0 ),
        .I4(\t_type_reg[0]_i_5_n_0 ),
        .I5(\t_type_reg[0]_i_6_n_0 ),
        .O(\t_type_reg[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \t_type_reg[0]_i_10 
       (.I0(tx_xgmii_ctrl_reg1[4]),
        .I1(tx_xgmii_ctrl_reg1[0]),
        .I2(tx_xgmii_ctrl_reg1[1]),
        .I3(tx_xgmii_ctrl_reg1[2]),
        .O(\t_type_reg[0]_i_10_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \t_type_reg[0]_i_11 
       (.I0(tx_xgmii_ctrl_reg1[5]),
        .I1(tx_xgmii_ctrl_reg1[6]),
        .I2(tx_xgmii_ctrl_reg1[7]),
        .O(\t_type_reg[0]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h0000000001000000)) 
    \t_type_reg[0]_i_2 
       (.I0(tx_xgmii_ctrl_reg1[1]),
        .I1(tx_xgmii_ctrl_reg1[0]),
        .I2(\t_type_reg[1]_i_8_n_0 ),
        .I3(tx_xgmii_ctrl_reg1[2]),
        .I4(\t_code_reg_n_0_[2] ),
        .I5(\t_type_reg[0]_i_7_n_0 ),
        .O(\t_type_reg[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00010000)) 
    \t_type_reg[0]_i_3 
       (.I0(tx_xgmii_ctrl_reg1[7]),
        .I1(tx_xgmii_ctrl_reg1[4]),
        .I2(tx_xgmii_ctrl_reg1[5]),
        .I3(tx_xgmii_ctrl_reg1[6]),
        .I4(\t_type_reg[0]_i_8_n_0 ),
        .O(\t_type_reg[0]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFEEFE)) 
    \t_type_reg[0]_i_4 
       (.I0(\block_field[4]_i_4_n_0 ),
        .I1(\t_type_reg[2]_i_2_n_0 ),
        .I2(\block_field[2]_i_3_n_0 ),
        .I3(tx_xgmii_ctrl_reg1[0]),
        .I4(\t_type_reg[1]_i_11_n_0 ),
        .O(\t_type_reg[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \t_type_reg[0]_i_5 
       (.I0(tx_xgmii_ctrl_reg1[6]),
        .I1(tx_xgmii_ctrl_reg1[7]),
        .I2(tx_xgmii_ctrl_reg1[4]),
        .I3(tx_xgmii_ctrl_reg1[5]),
        .I4(\t_type_reg[0]_i_8_n_0 ),
        .I5(\t_type_reg[0]_i_9_n_0 ),
        .O(\t_type_reg[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    \t_type_reg[0]_i_6 
       (.I0(tx_xgmii_ctrl_reg1[3]),
        .I1(\t_type_reg[0]_i_10_n_0 ),
        .I2(\t_type_reg[0]_i_11_n_0 ),
        .I3(\t_code_reg_n_0_[5] ),
        .I4(p_5_in),
        .I5(\tx_xgmii_valid_code_reg_n_0_[6] ),
        .O(\t_type_reg[0]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \t_type_reg[0]_i_7 
       (.I0(\tx_xgmii_valid_code_reg_n_0_[3] ),
        .I1(\tx_xgmii_valid_code_reg_n_0_[4] ),
        .I2(\tx_xgmii_valid_code_reg_n_0_[5] ),
        .I3(p_5_in),
        .I4(\tx_xgmii_valid_code_reg_n_0_[6] ),
        .O(\t_type_reg[0]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \t_type_reg[0]_i_8 
       (.I0(tx_xgmii_ctrl_reg1[2]),
        .I1(tx_xgmii_ctrl_reg1[3]),
        .I2(tx_xgmii_ctrl_reg1[1]),
        .I3(tx_xgmii_ctrl_reg1[0]),
        .O(\t_type_reg[0]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \t_type_reg[0]_i_9 
       (.I0(\t_code_reg_n_0_[4] ),
        .I1(p_5_in),
        .I2(\tx_xgmii_valid_code_reg_n_0_[6] ),
        .I3(\tx_xgmii_valid_code_reg_n_0_[5] ),
        .O(\t_type_reg[0]_i_9_n_0 ));
  FDSE \t_type_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\t_type_reg_reg_n_0_[1] ),
        .Q(Q[1]),
        .S(SR));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \t_type_reg[1]_i_1 
       (.I0(\t_type_reg[1]_i_2_n_0 ),
        .I1(\t_type_reg[1]_i_3_n_0 ),
        .I2(\t_type_reg[1]_i_4_n_0 ),
        .I3(\t_type_reg[1]_i_5_n_0 ),
        .I4(\t_type_reg[1]_i_6_n_0 ),
        .I5(\t_type_reg[1]_i_7_n_0 ),
        .O(\t_type_reg[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF7FFFFFFF)) 
    \t_type_reg[1]_i_10 
       (.I0(\tx_xgmii_valid_code_reg_n_0_[1] ),
        .I1(\tx_xgmii_valid_code_reg_n_0_[0] ),
        .I2(\tx_xgmii_valid_code_reg_n_0_[3] ),
        .I3(\tx_xgmii_valid_code_reg_n_0_[2] ),
        .I4(o_code_c4),
        .I5(s_code_c4_reg_n_0),
        .O(\t_type_reg[1]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \t_type_reg[1]_i_11 
       (.I0(\block_field[2]_i_4_n_0 ),
        .I1(\tx_xgmii_valid_code_reg_n_0_[1] ),
        .I2(\t_code_reg_n_0_[0] ),
        .I3(\t_type_reg[1]_i_9_n_0 ),
        .I4(\tx_xgmii_valid_code_reg_n_0_[3] ),
        .I5(\tx_xgmii_valid_code_reg_n_0_[2] ),
        .O(\t_type_reg[1]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \t_type_reg[1]_i_12 
       (.I0(\tx_xgmii_valid_code_reg_n_0_[2] ),
        .I1(\tx_xgmii_valid_code_reg_n_0_[3] ),
        .I2(\tx_xgmii_valid_code_reg_n_0_[0] ),
        .I3(\tx_xgmii_valid_code_reg_n_0_[1] ),
        .O(\t_type_reg[1]_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \t_type_reg[1]_i_2 
       (.I0(\t_type_reg[0]_i_5_n_0 ),
        .I1(\t_type_reg[0]_i_6_n_0 ),
        .O(\t_type_reg[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    \t_type_reg[1]_i_3 
       (.I0(\t_type_reg[1]_i_8_n_0 ),
        .I1(tx_xgmii_ctrl_reg1[2]),
        .I2(tx_xgmii_ctrl_reg1[1]),
        .I3(tx_xgmii_ctrl_reg1[0]),
        .I4(\t_type_reg[1]_i_9_n_0 ),
        .I5(\t_code_reg_n_0_[3] ),
        .O(\t_type_reg[1]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h02020222)) 
    \t_type_reg[1]_i_4 
       (.I0(\block_field[0]_i_4_n_0 ),
        .I1(\block_field[0]_i_2_n_0 ),
        .I2(tx_xgmii_ctrl_reg1[3]),
        .I3(\t_type_reg[1]_i_10_n_0 ),
        .I4(tx_xgmii_ctrl_reg1[5]),
        .O(\t_type_reg[1]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \t_type_reg[1]_i_5 
       (.I0(\t_type_reg[2]_i_2_n_0 ),
        .I1(\block_field[4]_i_4_n_0 ),
        .O(\t_type_reg[1]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \t_type_reg[1]_i_6 
       (.I0(\t_type_reg[1]_i_11_n_0 ),
        .I1(\t_type_reg[0]_i_2_n_0 ),
        .O(\t_type_reg[1]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h1000FFFF10001000)) 
    \t_type_reg[1]_i_7 
       (.I0(\t_type_reg[1]_i_12_n_0 ),
        .I1(\t_code_reg_n_0_[0] ),
        .I2(\t_type_reg[1]_i_9_n_0 ),
        .I3(\block_field[2]_i_4_n_0 ),
        .I4(tx_xgmii_ctrl_reg1[0]),
        .I5(\block_field[2]_i_3_n_0 ),
        .O(\t_type_reg[1]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \t_type_reg[1]_i_8 
       (.I0(tx_xgmii_ctrl_reg1[7]),
        .I1(tx_xgmii_ctrl_reg1[6]),
        .I2(tx_xgmii_ctrl_reg1[5]),
        .I3(tx_xgmii_ctrl_reg1[4]),
        .I4(tx_xgmii_ctrl_reg1[3]),
        .O(\t_type_reg[1]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \t_type_reg[1]_i_9 
       (.I0(\tx_xgmii_valid_code_reg_n_0_[6] ),
        .I1(p_5_in),
        .I2(\tx_xgmii_valid_code_reg_n_0_[5] ),
        .I3(\tx_xgmii_valid_code_reg_n_0_[4] ),
        .O(\t_type_reg[1]_i_9_n_0 ));
  FDRE \t_type_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\t_type_reg_reg_n_0_[2] ),
        .Q(Q[2]),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    \t_type_reg[2]_i_1 
       (.I0(\t_type_reg[1]_i_7_n_0 ),
        .I1(\t_type_reg[2]_i_2_n_0 ),
        .I2(\t_type_reg[2]_i_3_n_0 ),
        .I3(\t_type_reg[2]_i_4_n_0 ),
        .I4(\t_type_reg[1]_i_2_n_0 ),
        .I5(\t_type_reg[2]_i_5_n_0 ),
        .O(\t_type_reg[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \t_type_reg[2]_i_2 
       (.I0(\t_code_reg_n_0_[7] ),
        .I1(\t_type_reg[0]_i_8_n_0 ),
        .I2(tx_xgmii_ctrl_reg1[6]),
        .I3(tx_xgmii_ctrl_reg1[5]),
        .I4(tx_xgmii_ctrl_reg1[4]),
        .I5(tx_xgmii_ctrl_reg1[7]),
        .O(\t_type_reg[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFAEFEFEFE)) 
    \t_type_reg[2]_i_3 
       (.I0(\t_type_reg[2]_i_6_n_0 ),
        .I1(\t_type_reg[2]_i_7_n_0 ),
        .I2(tx_xgmii_ctrl_reg1[3]),
        .I3(tx_xgmii_ctrl_reg1[4]),
        .I4(\t_type_reg[2]_i_8_n_0 ),
        .I5(\t_type_reg[2]_i_9_n_0 ),
        .O(\t_type_reg[2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \t_type_reg[2]_i_4 
       (.I0(\t_type_reg[0]_i_2_n_0 ),
        .I1(\t_type_reg[1]_i_3_n_0 ),
        .I2(\block_field[4]_i_4_n_0 ),
        .O(\t_type_reg[2]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \t_type_reg[2]_i_5 
       (.I0(\block_field[7]_i_1_n_0 ),
        .I1(\t_type_reg[1]_i_11_n_0 ),
        .O(\t_type_reg[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hF3FFFFFFFFFFFF11)) 
    \t_type_reg[2]_i_6 
       (.I0(s_code_c0_reg_n_0),
        .I1(tx_xgmii_ctrl_reg1[4]),
        .I2(\block_field[0]_i_5_n_0 ),
        .I3(tx_xgmii_ctrl_reg1[5]),
        .I4(tx_xgmii_ctrl_reg1[6]),
        .I5(tx_xgmii_ctrl_reg1[7]),
        .O(\t_type_reg[2]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h00570000)) 
    \t_type_reg[2]_i_7 
       (.I0(o_code_c0),
        .I1(s_code_c4_reg_n_0),
        .I2(o_code_c4),
        .I3(tx_xgmii_ctrl_reg1[5]),
        .I4(tx_xgmii_ctrl_reg1[4]),
        .O(\t_type_reg[2]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h1110)) 
    \t_type_reg[2]_i_8 
       (.I0(tx_xgmii_ctrl_reg1[5]),
        .I1(\t_type_reg[1]_i_12_n_0 ),
        .I2(s_code_c4_reg_n_0),
        .I3(o_code_c4),
        .O(\t_type_reg[2]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h7FFD)) 
    \t_type_reg[2]_i_9 
       (.I0(tx_xgmii_ctrl_reg1[0]),
        .I1(tx_xgmii_ctrl_reg1[3]),
        .I2(tx_xgmii_ctrl_reg1[2]),
        .I3(tx_xgmii_ctrl_reg1[1]),
        .O(\t_type_reg[2]_i_9_n_0 ));
  FDRE \t_type_reg_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\t_type_reg[0]_i_1_n_0 ),
        .Q(\t_type_reg_reg_n_0_[0] ),
        .R(SR));
  FDSE \t_type_reg_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\t_type_reg[1]_i_1_n_0 ),
        .Q(\t_type_reg_reg_n_0_[1] ),
        .S(SR));
  FDRE \t_type_reg_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\t_type_reg[2]_i_1_n_0 ),
        .Q(\t_type_reg_reg_n_0_[2] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \tx_encoded_data[0]_i_1 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I3(\tx_encoded_data[1]_i_2_n_0 ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I5(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .O(tx_encoded_data[0]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \tx_encoded_data[10]_i_1 
       (.I0(d0[0]),
        .I1(\tx_encoded_data[17]_i_2_n_0 ),
        .I2(\tx_encoded_data[10]_i_2_n_0 ),
        .I3(\tx_encoded_data[16]_i_3_n_0 ),
        .I4(\tx_encoded_data[31]_i_2_n_0 ),
        .I5(d1[0]),
        .O(tx_encoded_data[10]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \tx_encoded_data[10]_i_2 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I5(c0[0]),
        .O(\tx_encoded_data[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF7400)) 
    \tx_encoded_data[11]_i_1 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I3(d0[1]),
        .I4(\tx_encoded_data[11]_i_2_n_0 ),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(tx_encoded_data[11]));
  LUT6 #(
    .INIT(64'h0C0CCC0CAA0AAA0A)) 
    \tx_encoded_data[11]_i_2 
       (.I0(d1[1]),
        .I1(c0[1]),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I4(\t_type_reg_reg_n_0_[0] ),
        .I5(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF7400)) 
    \tx_encoded_data[12]_i_1 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I3(d0[2]),
        .I4(\tx_encoded_data[12]_i_2_n_0 ),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(tx_encoded_data[12]));
  LUT6 #(
    .INIT(64'h0C0CCC0CAA0AAA0A)) 
    \tx_encoded_data[12]_i_2 
       (.I0(d1[2]),
        .I1(c0[2]),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I4(\t_type_reg_reg_n_0_[0] ),
        .I5(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF7400)) 
    \tx_encoded_data[13]_i_1 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I3(d0[3]),
        .I4(\tx_encoded_data[13]_i_2_n_0 ),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(tx_encoded_data[13]));
  LUT6 #(
    .INIT(64'h0C0CCC0CAA0AAA0A)) 
    \tx_encoded_data[13]_i_2 
       (.I0(d1[3]),
        .I1(c0[3]),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I4(\t_type_reg_reg_n_0_[0] ),
        .I5(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF7400)) 
    \tx_encoded_data[14]_i_1 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I3(d0[4]),
        .I4(\tx_encoded_data[14]_i_2_n_0 ),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(tx_encoded_data[14]));
  LUT6 #(
    .INIT(64'h0C0CCC0CAA0AAA0A)) 
    \tx_encoded_data[14]_i_2 
       (.I0(d1[4]),
        .I1(c0[4]),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I4(\t_type_reg_reg_n_0_[0] ),
        .I5(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[14]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \tx_encoded_data[15]_i_1 
       (.I0(d0[5]),
        .I1(\tx_encoded_data[17]_i_2_n_0 ),
        .I2(\tx_encoded_data[15]_i_2_n_0 ),
        .I3(\tx_encoded_data[16]_i_3_n_0 ),
        .I4(\tx_encoded_data[31]_i_2_n_0 ),
        .I5(d1[5]),
        .O(tx_encoded_data[15]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \tx_encoded_data[15]_i_2 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I5(c0[5]),
        .O(\tx_encoded_data[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \tx_encoded_data[16]_i_1 
       (.I0(d0[6]),
        .I1(\tx_encoded_data[17]_i_2_n_0 ),
        .I2(\tx_encoded_data[16]_i_2_n_0 ),
        .I3(\tx_encoded_data[16]_i_3_n_0 ),
        .I4(\tx_encoded_data[31]_i_2_n_0 ),
        .I5(d1[6]),
        .O(tx_encoded_data[16]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \tx_encoded_data[16]_i_2 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I5(c0[6]),
        .O(\tx_encoded_data[16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h02000000000000FF)) 
    \tx_encoded_data[16]_i_3 
       (.I0(\t_type_reg_reg_n_0_[1] ),
        .I1(\t_type_reg_reg_n_0_[2] ),
        .I2(\t_type_reg_reg_n_0_[0] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I5(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .O(\tx_encoded_data[16]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \tx_encoded_data[17]_i_1 
       (.I0(d0[7]),
        .I1(\tx_encoded_data[17]_i_2_n_0 ),
        .I2(\tx_encoded_data[17]_i_3_n_0 ),
        .I3(\tx_encoded_data[23]_i_3_n_0 ),
        .I4(\tx_encoded_data[31]_i_2_n_0 ),
        .I5(d1[7]),
        .O(tx_encoded_data[17]));
  LUT6 #(
    .INIT(64'hF888F8FF88888888)) 
    \tx_encoded_data[17]_i_2 
       (.I0(\tx_encoded_data[17]_i_4_n_0 ),
        .I1(\tx_encoded_data[51]_i_2_n_0 ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I5(\tx_encoded_data[37]_i_6_n_0 ),
        .O(\tx_encoded_data[17]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \tx_encoded_data[17]_i_3 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I5(c1[0]),
        .O(\tx_encoded_data[17]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \tx_encoded_data[17]_i_4 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .O(\tx_encoded_data[17]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hFFF8)) 
    \tx_encoded_data[18]_i_1 
       (.I0(\tx_encoded_data[21]_i_2_n_0 ),
        .I1(d1[0]),
        .I2(\tx_encoded_data[18]_i_2_n_0 ),
        .I3(\tx_encoded_data[63]_i_2_n_0 ),
        .O(tx_encoded_data[18]));
  LUT5 #(
    .INIT(32'hF000AA22)) 
    \tx_encoded_data[18]_i_2 
       (.I0(d2[0]),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I2(c1[1]),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[18]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFF8)) 
    \tx_encoded_data[19]_i_1 
       (.I0(\tx_encoded_data[21]_i_2_n_0 ),
        .I1(d1[1]),
        .I2(\tx_encoded_data[19]_i_2_n_0 ),
        .I3(\tx_encoded_data[63]_i_2_n_0 ),
        .O(tx_encoded_data[19]));
  LUT5 #(
    .INIT(32'hF000AA22)) 
    \tx_encoded_data[19]_i_2 
       (.I0(d2[1]),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I2(c1[2]),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[19]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \tx_encoded_data[1]_i_1 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I2(\tx_encoded_data[1]_i_2_n_0 ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I5(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .O(tx_encoded_data[1]));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \tx_encoded_data[1]_i_2 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .O(\tx_encoded_data[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFF8)) 
    \tx_encoded_data[20]_i_1 
       (.I0(\tx_encoded_data[21]_i_2_n_0 ),
        .I1(d1[2]),
        .I2(\tx_encoded_data[20]_i_2_n_0 ),
        .I3(\tx_encoded_data[63]_i_2_n_0 ),
        .O(tx_encoded_data[20]));
  LUT5 #(
    .INIT(32'hF000AA22)) 
    \tx_encoded_data[20]_i_2 
       (.I0(d2[2]),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I2(c1[3]),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[20]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFF8)) 
    \tx_encoded_data[21]_i_1 
       (.I0(\tx_encoded_data[21]_i_2_n_0 ),
        .I1(d1[3]),
        .I2(\tx_encoded_data[21]_i_3_n_0 ),
        .I3(\tx_encoded_data[63]_i_2_n_0 ),
        .O(tx_encoded_data[21]));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT4 #(
    .INIT(16'h1F10)) 
    \tx_encoded_data[21]_i_2 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .O(\tx_encoded_data[21]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF000AA22)) 
    \tx_encoded_data[21]_i_3 
       (.I0(d2[3]),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I2(c1[4]),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[21]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \tx_encoded_data[22]_i_1 
       (.I0(d1[4]),
        .I1(\tx_encoded_data[24]_i_2_n_0 ),
        .I2(\tx_encoded_data[22]_i_2_n_0 ),
        .I3(\tx_encoded_data[23]_i_3_n_0 ),
        .I4(\tx_encoded_data[31]_i_2_n_0 ),
        .I5(d2[4]),
        .O(tx_encoded_data[22]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \tx_encoded_data[22]_i_2 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I5(c1[5]),
        .O(\tx_encoded_data[22]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \tx_encoded_data[23]_i_1 
       (.I0(d1[5]),
        .I1(\tx_encoded_data[24]_i_2_n_0 ),
        .I2(\tx_encoded_data[23]_i_2_n_0 ),
        .I3(\tx_encoded_data[23]_i_3_n_0 ),
        .I4(\tx_encoded_data[31]_i_2_n_0 ),
        .I5(d2[5]),
        .O(tx_encoded_data[23]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \tx_encoded_data[23]_i_2 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I5(c1[6]),
        .O(\tx_encoded_data[23]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT5 #(
    .INIT(32'h2000000F)) 
    \tx_encoded_data[23]_i_3 
       (.I0(\t_type_reg_reg_n_0_[1] ),
        .I1(\t_type_reg_reg_n_0_[2] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .O(\tx_encoded_data[23]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \tx_encoded_data[24]_i_1 
       (.I0(d1[6]),
        .I1(\tx_encoded_data[24]_i_2_n_0 ),
        .I2(\tx_encoded_data[24]_i_3_n_0 ),
        .I3(\tx_encoded_data[30]_i_3_n_0 ),
        .I4(\tx_encoded_data[31]_i_2_n_0 ),
        .I5(d2[6]),
        .O(tx_encoded_data[24]));
  LUT6 #(
    .INIT(64'h08FF080808080808)) 
    \tx_encoded_data[24]_i_2 
       (.I0(\tx_encoded_data[37]_i_6_n_0 ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I5(\tx_encoded_data[38]_i_4_n_0 ),
        .O(\tx_encoded_data[24]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \tx_encoded_data[24]_i_3 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I3(c2[0]),
        .O(\tx_encoded_data[24]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \tx_encoded_data[25]_i_1 
       (.I0(\tx_encoded_data[25]_i_2_n_0 ),
        .I1(d2[7]),
        .I2(\tx_encoded_data[33]_i_3_n_0 ),
        .I3(c2[1]),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(tx_encoded_data[25]));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT5 #(
    .INIT(32'h222E0000)) 
    \tx_encoded_data[25]_i_2 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I4(d1[7]),
        .O(\tx_encoded_data[25]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \tx_encoded_data[26]_i_1 
       (.I0(\tx_encoded_data[26]_i_2_n_0 ),
        .I1(d3[0]),
        .I2(\tx_encoded_data[33]_i_3_n_0 ),
        .I3(c2[2]),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(tx_encoded_data[26]));
  LUT5 #(
    .INIT(32'h222E0000)) 
    \tx_encoded_data[26]_i_2 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I4(d2[0]),
        .O(\tx_encoded_data[26]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \tx_encoded_data[27]_i_1 
       (.I0(\tx_encoded_data[27]_i_2_n_0 ),
        .I1(d3[1]),
        .I2(\tx_encoded_data[33]_i_3_n_0 ),
        .I3(c2[3]),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(tx_encoded_data[27]));
  LUT5 #(
    .INIT(32'h222E0000)) 
    \tx_encoded_data[27]_i_2 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I4(d2[1]),
        .O(\tx_encoded_data[27]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \tx_encoded_data[28]_i_1 
       (.I0(\tx_encoded_data[28]_i_2_n_0 ),
        .I1(d3[2]),
        .I2(\tx_encoded_data[33]_i_3_n_0 ),
        .I3(c2[4]),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(tx_encoded_data[28]));
  LUT5 #(
    .INIT(32'h222E0000)) 
    \tx_encoded_data[28]_i_2 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I4(d2[2]),
        .O(\tx_encoded_data[28]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \tx_encoded_data[29]_i_1 
       (.I0(d2[3]),
        .I1(\tx_encoded_data[31]_i_3_n_0 ),
        .I2(\tx_encoded_data[29]_i_2_n_0 ),
        .I3(\tx_encoded_data[30]_i_3_n_0 ),
        .I4(\tx_encoded_data[31]_i_2_n_0 ),
        .I5(d3[3]),
        .O(tx_encoded_data[29]));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \tx_encoded_data[29]_i_2 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I3(c2[5]),
        .O(\tx_encoded_data[29]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hF444)) 
    \tx_encoded_data[2]_i_1 
       (.I0(tx_encoded_data[0]),
        .I1(d0[0]),
        .I2(data4[2]),
        .I3(\tx_encoded_data[9]_i_2_n_0 ),
        .O(tx_encoded_data[2]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \tx_encoded_data[30]_i_1 
       (.I0(d2[4]),
        .I1(\tx_encoded_data[31]_i_3_n_0 ),
        .I2(\tx_encoded_data[30]_i_2_n_0 ),
        .I3(\tx_encoded_data[30]_i_3_n_0 ),
        .I4(\tx_encoded_data[31]_i_2_n_0 ),
        .I5(d3[4]),
        .O(tx_encoded_data[30]));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \tx_encoded_data[30]_i_2 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I3(c2[6]),
        .O(\tx_encoded_data[30]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hB0000000000000C0)) 
    \tx_encoded_data[30]_i_3 
       (.I0(\tx_encoded_data[45]_i_5_n_0 ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I5(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .O(\tx_encoded_data[30]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \tx_encoded_data[31]_i_1 
       (.I0(\tx_encoded_data[37]_i_2_n_0 ),
        .I1(c3[0]),
        .I2(\tx_encoded_data[31]_i_2_n_0 ),
        .I3(d3[5]),
        .I4(d2[5]),
        .I5(\tx_encoded_data[31]_i_3_n_0 ),
        .O(tx_encoded_data[31]));
  LUT6 #(
    .INIT(64'h0000000081010001)) 
    \tx_encoded_data[31]_i_2 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I5(\tx_encoded_data[1]_i_2_n_0 ),
        .O(\tx_encoded_data[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFF10FFFF10101010)) 
    \tx_encoded_data[31]_i_3 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I2(\tx_encoded_data[37]_i_6_n_0 ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I5(\tx_encoded_data[51]_i_2_n_0 ),
        .O(\tx_encoded_data[31]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \tx_encoded_data[32]_i_1 
       (.I0(\tx_encoded_data[32]_i_2_n_0 ),
        .I1(d3[6]),
        .I2(\tx_encoded_data[33]_i_3_n_0 ),
        .I3(c3[1]),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(tx_encoded_data[32]));
  LUT5 #(
    .INIT(32'h222E0000)) 
    \tx_encoded_data[32]_i_2 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I4(d2[6]),
        .O(\tx_encoded_data[32]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \tx_encoded_data[33]_i_1 
       (.I0(\tx_encoded_data[33]_i_2_n_0 ),
        .I1(d3[7]),
        .I2(\tx_encoded_data[33]_i_3_n_0 ),
        .I3(c3[2]),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(tx_encoded_data[33]));
  LUT5 #(
    .INIT(32'h222E0000)) 
    \tx_encoded_data[33]_i_2 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I4(d2[7]),
        .O(\tx_encoded_data[33]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT3 #(
    .INIT(8'h0D)) 
    \tx_encoded_data[33]_i_3 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[33]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hEFEEEEEEEEEEEEEE)) 
    \tx_encoded_data[34]_i_1 
       (.I0(\tx_encoded_data[34]_i_2_n_0 ),
        .I1(\tx_encoded_data[63]_i_2_n_0 ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I3(o0),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I5(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .O(tx_encoded_data[34]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \tx_encoded_data[34]_i_2 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I1(c3[3]),
        .I2(\tx_encoded_data[41]_i_3_n_0 ),
        .I3(d4[0]),
        .I4(d3[0]),
        .I5(\tx_encoded_data[41]_i_2_n_0 ),
        .O(\tx_encoded_data[34]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hEFEEEEEEEEEEEEEE)) 
    \tx_encoded_data[35]_i_1 
       (.I0(\tx_encoded_data[35]_i_2_n_0 ),
        .I1(\tx_encoded_data[63]_i_2_n_0 ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I3(o0),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I5(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .O(tx_encoded_data[35]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \tx_encoded_data[35]_i_2 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I1(c3[4]),
        .I2(\tx_encoded_data[41]_i_3_n_0 ),
        .I3(d4[1]),
        .I4(d3[1]),
        .I5(\tx_encoded_data[41]_i_2_n_0 ),
        .O(\tx_encoded_data[35]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFF8FFFFFFF8FFF8)) 
    \tx_encoded_data[36]_i_1 
       (.I0(c3[5]),
        .I1(\tx_encoded_data[37]_i_2_n_0 ),
        .I2(\tx_encoded_data[37]_i_3_n_0 ),
        .I3(\tx_encoded_data[36]_i_2_n_0 ),
        .I4(\tx_encoded_data[38]_i_5_n_0 ),
        .I5(d4[2]),
        .O(tx_encoded_data[36]));
  LUT6 #(
    .INIT(64'h0044000400000004)) 
    \tx_encoded_data[36]_i_2 
       (.I0(\tx_encoded_data[38]_i_3_n_0 ),
        .I1(d3[2]),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I3(\tx_encoded_data[1]_i_2_n_0 ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I5(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .O(\tx_encoded_data[36]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFF8FFFFFFF8FFF8)) 
    \tx_encoded_data[37]_i_1 
       (.I0(c3[6]),
        .I1(\tx_encoded_data[37]_i_2_n_0 ),
        .I2(\tx_encoded_data[37]_i_3_n_0 ),
        .I3(\tx_encoded_data[37]_i_4_n_0 ),
        .I4(\tx_encoded_data[38]_i_5_n_0 ),
        .I5(d4[3]),
        .O(tx_encoded_data[37]));
  LUT6 #(
    .INIT(64'hFF00000080000000)) 
    \tx_encoded_data[37]_i_2 
       (.I0(\tx_encoded_data[37]_i_5_n_0 ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I5(\tx_encoded_data[37]_i_6_n_0 ),
        .O(\tx_encoded_data[37]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h4000000000000040)) 
    \tx_encoded_data[37]_i_3 
       (.I0(\tx_encoded_data[1]_i_2_n_0 ),
        .I1(\tx_encoded_data[38]_i_6_n_0 ),
        .I2(o0),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I5(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .O(\tx_encoded_data[37]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0044000400000004)) 
    \tx_encoded_data[37]_i_4 
       (.I0(\tx_encoded_data[38]_i_3_n_0 ),
        .I1(d3[3]),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I3(\tx_encoded_data[1]_i_2_n_0 ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I5(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .O(\tx_encoded_data[37]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h20002000000F0000)) 
    \tx_encoded_data[37]_i_5 
       (.I0(\t_type_reg_reg_n_0_[1] ),
        .I1(\t_type_reg_reg_n_0_[2] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I5(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .O(\tx_encoded_data[37]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT5 #(
    .INIT(32'h00008000)) 
    \tx_encoded_data[37]_i_6 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .O(\tx_encoded_data[37]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hBAAAFFFFBAAABAAA)) 
    \tx_encoded_data[38]_i_1 
       (.I0(\tx_encoded_data[38]_i_2_n_0 ),
        .I1(\tx_encoded_data[38]_i_3_n_0 ),
        .I2(d3[4]),
        .I3(\tx_encoded_data[38]_i_4_n_0 ),
        .I4(\tx_encoded_data[38]_i_5_n_0 ),
        .I5(d4[4]),
        .O(tx_encoded_data[38]));
  LUT6 #(
    .INIT(64'hFFFF8F8888888888)) 
    \tx_encoded_data[38]_i_2 
       (.I0(c4[0]),
        .I1(\tx_encoded_data[44]_i_3_n_0 ),
        .I2(\tx_encoded_data[1]_i_2_n_0 ),
        .I3(\tx_encoded_data[38]_i_6_n_0 ),
        .I4(\tx_encoded_data[38]_i_7_n_0 ),
        .I5(\tx_encoded_data[38]_i_8_n_0 ),
        .O(\tx_encoded_data[38]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \tx_encoded_data[38]_i_3 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .O(\tx_encoded_data[38]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h000000080000000B)) 
    \tx_encoded_data[38]_i_4 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I5(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .O(\tx_encoded_data[38]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \tx_encoded_data[38]_i_5 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I1(\tx_encoded_data[1]_i_2_n_0 ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .O(\tx_encoded_data[38]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \tx_encoded_data[38]_i_6 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .O(\tx_encoded_data[38]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \tx_encoded_data[38]_i_7 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .O(\tx_encoded_data[38]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT5 #(
    .INIT(32'h44444440)) 
    \tx_encoded_data[38]_i_8 
       (.I0(\tx_encoded_data[65]_i_7_n_0 ),
        .I1(o4),
        .I2(\t_type_reg_reg_n_0_[1] ),
        .I3(\t_type_reg_reg_n_0_[0] ),
        .I4(\t_type_reg_reg_n_0_[2] ),
        .O(\tx_encoded_data[38]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \tx_encoded_data[39]_i_1 
       (.I0(\tx_encoded_data[41]_i_2_n_0 ),
        .I1(d3[5]),
        .I2(d4[5]),
        .I3(\tx_encoded_data[41]_i_3_n_0 ),
        .I4(\tx_encoded_data[39]_i_2_n_0 ),
        .I5(\tx_encoded_data[41]_i_5_n_0 ),
        .O(tx_encoded_data[39]));
  LUT5 #(
    .INIT(32'hBFB80000)) 
    \tx_encoded_data[39]_i_2 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I4(c4[1]),
        .O(\tx_encoded_data[39]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT5 #(
    .INIT(32'hEEEFEEEA)) 
    \tx_encoded_data[3]_i_1 
       (.I0(\tx_encoded_data[63]_i_2_n_0 ),
        .I1(data4[3]),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I4(d0[1]),
        .O(tx_encoded_data[3]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \tx_encoded_data[40]_i_1 
       (.I0(\tx_encoded_data[41]_i_2_n_0 ),
        .I1(d3[6]),
        .I2(d4[6]),
        .I3(\tx_encoded_data[41]_i_3_n_0 ),
        .I4(\tx_encoded_data[40]_i_2_n_0 ),
        .I5(\tx_encoded_data[41]_i_5_n_0 ),
        .O(tx_encoded_data[40]));
  LUT5 #(
    .INIT(32'hBFB80000)) 
    \tx_encoded_data[40]_i_2 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I4(c4[2]),
        .O(\tx_encoded_data[40]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \tx_encoded_data[41]_i_1 
       (.I0(\tx_encoded_data[41]_i_2_n_0 ),
        .I1(d3[7]),
        .I2(d4[7]),
        .I3(\tx_encoded_data[41]_i_3_n_0 ),
        .I4(\tx_encoded_data[41]_i_4_n_0 ),
        .I5(\tx_encoded_data[41]_i_5_n_0 ),
        .O(tx_encoded_data[41]));
  LUT4 #(
    .INIT(16'h1F10)) 
    \tx_encoded_data[41]_i_2 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .O(\tx_encoded_data[41]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \tx_encoded_data[41]_i_3 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .O(\tx_encoded_data[41]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hBFB80000)) 
    \tx_encoded_data[41]_i_4 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I4(c4[3]),
        .O(\tx_encoded_data[41]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT5 #(
    .INIT(32'hFFFF2000)) 
    \tx_encoded_data[41]_i_5 
       (.I0(\tx_encoded_data[41]_i_6_n_0 ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I2(o4),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I4(\tx_encoded_data[63]_i_2_n_0 ),
        .O(\tx_encoded_data[41]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \tx_encoded_data[41]_i_6 
       (.I0(\t_type_reg_reg_n_0_[2] ),
        .I1(\t_type_reg_reg_n_0_[0] ),
        .I2(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[41]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFF40)) 
    \tx_encoded_data[42]_i_1 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I2(d4[0]),
        .I3(\tx_encoded_data[42]_i_2_n_0 ),
        .I4(\tx_encoded_data[63]_i_2_n_0 ),
        .O(tx_encoded_data[42]));
  LUT6 #(
    .INIT(64'hCCCCCCC0AAEAEEEA)) 
    \tx_encoded_data[42]_i_2 
       (.I0(d5[0]),
        .I1(c4[4]),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I5(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .O(\tx_encoded_data[42]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFF8F8F8)) 
    \tx_encoded_data[43]_i_1 
       (.I0(d5[1]),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(\tx_encoded_data[43]_i_2_n_0 ),
        .I3(\tx_encoded_data[44]_i_3_n_0 ),
        .I4(c4[5]),
        .O(tx_encoded_data[43]));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT4 #(
    .INIT(16'h8A00)) 
    \tx_encoded_data[43]_i_2 
       (.I0(d4[1]),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I3(\tx_encoded_data[51]_i_2_n_0 ),
        .O(\tx_encoded_data[43]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFF8F8F8)) 
    \tx_encoded_data[44]_i_1 
       (.I0(d5[2]),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(\tx_encoded_data[44]_i_2_n_0 ),
        .I3(\tx_encoded_data[44]_i_3_n_0 ),
        .I4(c4[6]),
        .O(tx_encoded_data[44]));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT4 #(
    .INIT(16'h8A00)) 
    \tx_encoded_data[44]_i_2 
       (.I0(d4[2]),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I3(\tx_encoded_data[51]_i_2_n_0 ),
        .O(\tx_encoded_data[44]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEEEEEEEEEEEEEEE)) 
    \tx_encoded_data[44]_i_3 
       (.I0(\tx_encoded_data[44]_i_4_n_0 ),
        .I1(\tx_encoded_data[44]_i_5_n_0 ),
        .I2(\tx_encoded_data[45]_i_2_n_0 ),
        .I3(\tx_encoded_data[45]_i_5_n_0 ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I5(\tx_encoded_data[44]_i_6_n_0 ),
        .O(\tx_encoded_data[44]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h01000000C0000000)) 
    \tx_encoded_data[44]_i_4 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I3(\tx_encoded_data[45]_i_2_n_0 ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I5(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .O(\tx_encoded_data[44]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT5 #(
    .INIT(32'h04000000)) 
    \tx_encoded_data[44]_i_5 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I4(\tx_encoded_data[45]_i_2_n_0 ),
        .O(\tx_encoded_data[44]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \tx_encoded_data[44]_i_6 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[44]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFF8888888)) 
    \tx_encoded_data[45]_i_1 
       (.I0(d5[3]),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(c5[0]),
        .I3(\tx_encoded_data[45]_i_2_n_0 ),
        .I4(\tx_encoded_data[45]_i_3_n_0 ),
        .I5(\tx_encoded_data[45]_i_4_n_0 ),
        .O(tx_encoded_data[45]));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \tx_encoded_data[45]_i_2 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .O(\tx_encoded_data[45]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8100D1000100D100)) 
    \tx_encoded_data[45]_i_3 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I5(\tx_encoded_data[45]_i_5_n_0 ),
        .O(\tx_encoded_data[45]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h8A00)) 
    \tx_encoded_data[45]_i_4 
       (.I0(d4[3]),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I3(\tx_encoded_data[51]_i_2_n_0 ),
        .O(\tx_encoded_data[45]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \tx_encoded_data[45]_i_5 
       (.I0(\t_type_reg_reg_n_0_[1] ),
        .I1(\t_type_reg_reg_n_0_[2] ),
        .O(\tx_encoded_data[45]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBC87340)) 
    \tx_encoded_data[46]_i_1 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I2(d4[4]),
        .I3(d5[4]),
        .I4(c5[1]),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(tx_encoded_data[46]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBC87340)) 
    \tx_encoded_data[47]_i_1 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I2(d4[5]),
        .I3(d5[5]),
        .I4(c5[2]),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(tx_encoded_data[47]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBC87340)) 
    \tx_encoded_data[48]_i_1 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I2(d4[6]),
        .I3(d5[6]),
        .I4(c5[3]),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(tx_encoded_data[48]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBC87340)) 
    \tx_encoded_data[49]_i_1 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I2(d4[7]),
        .I3(d5[7]),
        .I4(c5[4]),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(tx_encoded_data[49]));
  LUT5 #(
    .INIT(32'hEEEFEEEA)) 
    \tx_encoded_data[4]_i_1 
       (.I0(\tx_encoded_data[63]_i_2_n_0 ),
        .I1(data4[4]),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I4(d0[2]),
        .O(tx_encoded_data[4]));
  LUT6 #(
    .INIT(64'hFFFFFF08FF08FF08)) 
    \tx_encoded_data[50]_i_1 
       (.I0(d5[0]),
        .I1(\tx_encoded_data[51]_i_2_n_0 ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I3(\tx_encoded_data[50]_i_2_n_0 ),
        .I4(\tx_encoded_data[65]_i_3_n_0 ),
        .I5(d6[0]),
        .O(tx_encoded_data[50]));
  LUT5 #(
    .INIT(32'h80000000)) 
    \tx_encoded_data[50]_i_2 
       (.I0(c5[5]),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I4(\tx_encoded_data[45]_i_3_n_0 ),
        .O(\tx_encoded_data[50]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF08FF08FF08)) 
    \tx_encoded_data[51]_i_1 
       (.I0(d5[1]),
        .I1(\tx_encoded_data[51]_i_2_n_0 ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I3(\tx_encoded_data[51]_i_3_n_0 ),
        .I4(\tx_encoded_data[65]_i_3_n_0 ),
        .I5(d6[1]),
        .O(tx_encoded_data[51]));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    \tx_encoded_data[51]_i_2 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I5(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .O(\tx_encoded_data[51]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \tx_encoded_data[51]_i_3 
       (.I0(c5[6]),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I4(\tx_encoded_data[45]_i_3_n_0 ),
        .O(\tx_encoded_data[51]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \tx_encoded_data[52]_i_1 
       (.I0(\tx_encoded_data[58]_i_2_n_0 ),
        .I1(c6[0]),
        .I2(\tx_encoded_data[65]_i_3_n_0 ),
        .I3(d6[2]),
        .I4(d5[2]),
        .I5(\tx_encoded_data[57]_i_2_n_0 ),
        .O(tx_encoded_data[52]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBEA7340)) 
    \tx_encoded_data[53]_i_1 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I2(d5[3]),
        .I3(d6[3]),
        .I4(c6[1]),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(tx_encoded_data[53]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBEA7340)) 
    \tx_encoded_data[54]_i_1 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I2(d5[4]),
        .I3(d6[4]),
        .I4(c6[2]),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(tx_encoded_data[54]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBEA7340)) 
    \tx_encoded_data[55]_i_1 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I2(d5[5]),
        .I3(d6[5]),
        .I4(c6[3]),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(tx_encoded_data[55]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBEA7340)) 
    \tx_encoded_data[56]_i_1 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I2(d5[6]),
        .I3(d6[6]),
        .I4(c6[4]),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(tx_encoded_data[56]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \tx_encoded_data[57]_i_1 
       (.I0(\tx_encoded_data[58]_i_2_n_0 ),
        .I1(c6[5]),
        .I2(\tx_encoded_data[65]_i_3_n_0 ),
        .I3(d6[7]),
        .I4(d5[7]),
        .I5(\tx_encoded_data[57]_i_2_n_0 ),
        .O(tx_encoded_data[57]));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT5 #(
    .INIT(32'h00000004)) 
    \tx_encoded_data[57]_i_2 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I2(\tx_encoded_data[1]_i_2_n_0 ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .O(\tx_encoded_data[57]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \tx_encoded_data[58]_i_1 
       (.I0(\tx_encoded_data[58]_i_2_n_0 ),
        .I1(c6[6]),
        .I2(\tx_encoded_data[65]_i_3_n_0 ),
        .I3(d7[0]),
        .I4(d6[0]),
        .I5(\tx_encoded_data[65]_i_4_n_0 ),
        .O(tx_encoded_data[58]));
  LUT6 #(
    .INIT(64'hF000000010000000)) 
    \tx_encoded_data[58]_i_2 
       (.I0(\tx_encoded_data[1]_i_2_n_0 ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I5(\tx_encoded_data[45]_i_3_n_0 ),
        .O(\tx_encoded_data[58]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \tx_encoded_data[59]_i_1 
       (.I0(\tx_encoded_data[65]_i_2_n_0 ),
        .I1(c7[0]),
        .I2(\tx_encoded_data[65]_i_3_n_0 ),
        .I3(d7[1]),
        .I4(d6[1]),
        .I5(\tx_encoded_data[65]_i_4_n_0 ),
        .O(tx_encoded_data[59]));
  LUT5 #(
    .INIT(32'hEEEFEEEA)) 
    \tx_encoded_data[5]_i_1 
       (.I0(\tx_encoded_data[63]_i_2_n_0 ),
        .I1(data4[5]),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I4(d0[3]),
        .O(tx_encoded_data[5]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBEA7340)) 
    \tx_encoded_data[60]_i_1 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I2(d6[2]),
        .I3(d7[2]),
        .I4(c7[1]),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(tx_encoded_data[60]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBEA7340)) 
    \tx_encoded_data[61]_i_1 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I2(d6[3]),
        .I3(d7[3]),
        .I4(c7[2]),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(tx_encoded_data[61]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBEA7340)) 
    \tx_encoded_data[62]_i_1 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I2(d6[4]),
        .I3(d7[4]),
        .I4(c7[3]),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(tx_encoded_data[62]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBEA7340)) 
    \tx_encoded_data[63]_i_1 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I2(d6[5]),
        .I3(d7[5]),
        .I4(c7[4]),
        .I5(\tx_encoded_data[63]_i_2_n_0 ),
        .O(tx_encoded_data[63]));
  LUT6 #(
    .INIT(64'hFFFFFFFFEEFEFFFE)) 
    \tx_encoded_data[63]_i_2 
       (.I0(\tx_encoded_data[63]_i_3_n_0 ),
        .I1(\tx_encoded_data[63]_i_4_n_0 ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I5(\tx_encoded_data[63]_i_5_n_0 ),
        .O(\tx_encoded_data[63]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h80AAFFFF80008000)) 
    \tx_encoded_data[63]_i_3 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I2(\t_type_reg_reg_n_0_[2] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I5(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .O(\tx_encoded_data[63]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT5 #(
    .INIT(32'h20FF2000)) 
    \tx_encoded_data[63]_i_4 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I1(\t_type_reg_reg_n_0_[1] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .O(\tx_encoded_data[63]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT5 #(
    .INIT(32'h24E4FFE4)) 
    \tx_encoded_data[63]_i_5 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .O(\tx_encoded_data[63]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \tx_encoded_data[64]_i_1 
       (.I0(\tx_encoded_data[65]_i_2_n_0 ),
        .I1(c7[5]),
        .I2(\tx_encoded_data[65]_i_3_n_0 ),
        .I3(d7[6]),
        .I4(d6[6]),
        .I5(\tx_encoded_data[65]_i_4_n_0 ),
        .O(tx_encoded_data[64]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \tx_encoded_data[65]_i_1 
       (.I0(\tx_encoded_data[65]_i_2_n_0 ),
        .I1(c7[6]),
        .I2(\tx_encoded_data[65]_i_3_n_0 ),
        .I3(d7[7]),
        .I4(d6[7]),
        .I5(\tx_encoded_data[65]_i_4_n_0 ),
        .O(tx_encoded_data[65]));
  LUT6 #(
    .INIT(64'hF400440000000000)) 
    \tx_encoded_data[65]_i_2 
       (.I0(\tx_encoded_data[1]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_5_n_0 ),
        .I2(\tx_encoded_data[65]_i_6_n_0 ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I5(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .O(\tx_encoded_data[65]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000081010001)) 
    \tx_encoded_data[65]_i_3 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I5(\tx_encoded_data[65]_i_7_n_0 ),
        .O(\tx_encoded_data[65]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    \tx_encoded_data[65]_i_4 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I2(\tx_encoded_data[1]_i_2_n_0 ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .I5(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .O(\tx_encoded_data[65]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT3 #(
    .INIT(8'h8B)) 
    \tx_encoded_data[65]_i_5 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .O(\tx_encoded_data[65]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hB000000030003030)) 
    \tx_encoded_data[65]_i_6 
       (.I0(\tx_encoded_data[45]_i_5_n_0 ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I5(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[65]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \tx_encoded_data[65]_i_7 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .O(\tx_encoded_data[65]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hEEEFEEEA)) 
    \tx_encoded_data[6]_i_1 
       (.I0(\tx_encoded_data[63]_i_2_n_0 ),
        .I1(data4[6]),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I4(d0[4]),
        .O(tx_encoded_data[6]));
  LUT4 #(
    .INIT(16'hF444)) 
    \tx_encoded_data[7]_i_1 
       (.I0(tx_encoded_data[0]),
        .I1(d0[5]),
        .I2(data4[7]),
        .I3(\tx_encoded_data[9]_i_2_n_0 ),
        .O(tx_encoded_data[7]));
  LUT4 #(
    .INIT(16'hF444)) 
    \tx_encoded_data[8]_i_1 
       (.I0(tx_encoded_data[0]),
        .I1(d0[6]),
        .I2(data4[8]),
        .I3(\tx_encoded_data[9]_i_2_n_0 ),
        .O(tx_encoded_data[8]));
  LUT4 #(
    .INIT(16'hF444)) 
    \tx_encoded_data[9]_i_1 
       (.I0(tx_encoded_data[0]),
        .I1(d0[7]),
        .I2(data4[9]),
        .I3(\tx_encoded_data[9]_i_2_n_0 ),
        .O(tx_encoded_data[9]));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAAFFAE)) 
    \tx_encoded_data[9]_i_2 
       (.I0(\tx_encoded_data[57]_i_2_n_0 ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I2(\tx_encoded_data[1]_i_2_n_0 ),
        .I3(\tx_encoded_data[38]_i_7_n_0 ),
        .I4(\tx_encoded_data[65]_i_7_n_0 ),
        .I5(\tx_encoded_data[65]_i_2_n_0 ),
        .O(\tx_encoded_data[9]_i_2_n_0 ));
  FDSE \tx_encoded_data_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[0]),
        .Q(\tx_66_enc_out_reg[65] [0]),
        .S(SR));
  FDRE \tx_encoded_data_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[10]),
        .Q(\tx_66_enc_out_reg[65] [10]),
        .R(SR));
  FDRE \tx_encoded_data_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[11]),
        .Q(\tx_66_enc_out_reg[65] [11]),
        .R(SR));
  FDRE \tx_encoded_data_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[12]),
        .Q(\tx_66_enc_out_reg[65] [12]),
        .R(SR));
  FDRE \tx_encoded_data_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[13]),
        .Q(\tx_66_enc_out_reg[65] [13]),
        .R(SR));
  FDRE \tx_encoded_data_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[14]),
        .Q(\tx_66_enc_out_reg[65] [14]),
        .R(SR));
  FDRE \tx_encoded_data_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[15]),
        .Q(\tx_66_enc_out_reg[65] [15]),
        .R(SR));
  FDRE \tx_encoded_data_reg[16] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[16]),
        .Q(\tx_66_enc_out_reg[65] [16]),
        .R(SR));
  FDRE \tx_encoded_data_reg[17] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[17]),
        .Q(\tx_66_enc_out_reg[65] [17]),
        .R(SR));
  FDRE \tx_encoded_data_reg[18] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[18]),
        .Q(\tx_66_enc_out_reg[65] [18]),
        .R(SR));
  FDRE \tx_encoded_data_reg[19] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[19]),
        .Q(\tx_66_enc_out_reg[65] [19]),
        .R(SR));
  FDRE \tx_encoded_data_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[1]),
        .Q(\tx_66_enc_out_reg[65] [1]),
        .R(SR));
  FDRE \tx_encoded_data_reg[20] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[20]),
        .Q(\tx_66_enc_out_reg[65] [20]),
        .R(SR));
  FDRE \tx_encoded_data_reg[21] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[21]),
        .Q(\tx_66_enc_out_reg[65] [21]),
        .R(SR));
  FDRE \tx_encoded_data_reg[22] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[22]),
        .Q(\tx_66_enc_out_reg[65] [22]),
        .R(SR));
  FDRE \tx_encoded_data_reg[23] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[23]),
        .Q(\tx_66_enc_out_reg[65] [23]),
        .R(SR));
  FDRE \tx_encoded_data_reg[24] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[24]),
        .Q(\tx_66_enc_out_reg[65] [24]),
        .R(SR));
  FDRE \tx_encoded_data_reg[25] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[25]),
        .Q(\tx_66_enc_out_reg[65] [25]),
        .R(SR));
  FDSE \tx_encoded_data_reg[26] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[26]),
        .Q(\tx_66_enc_out_reg[65] [26]),
        .S(SR));
  FDRE \tx_encoded_data_reg[27] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[27]),
        .Q(\tx_66_enc_out_reg[65] [27]),
        .R(SR));
  FDRE \tx_encoded_data_reg[28] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[28]),
        .Q(\tx_66_enc_out_reg[65] [28]),
        .R(SR));
  FDRE \tx_encoded_data_reg[29] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[29]),
        .Q(\tx_66_enc_out_reg[65] [29]),
        .R(SR));
  FDSE \tx_encoded_data_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[2]),
        .Q(\tx_66_enc_out_reg[65] [2]),
        .S(SR));
  FDRE \tx_encoded_data_reg[30] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[30]),
        .Q(\tx_66_enc_out_reg[65] [30]),
        .R(SR));
  FDRE \tx_encoded_data_reg[31] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[31]),
        .Q(\tx_66_enc_out_reg[65] [31]),
        .R(SR));
  FDRE \tx_encoded_data_reg[32] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[32]),
        .Q(\tx_66_enc_out_reg[65] [32]),
        .R(SR));
  FDRE \tx_encoded_data_reg[33] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[33]),
        .Q(\tx_66_enc_out_reg[65] [33]),
        .R(SR));
  FDRE \tx_encoded_data_reg[34] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[34]),
        .Q(\tx_66_enc_out_reg[65] [34]),
        .R(SR));
  FDRE \tx_encoded_data_reg[35] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[35]),
        .Q(\tx_66_enc_out_reg[65] [35]),
        .R(SR));
  FDRE \tx_encoded_data_reg[36] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[36]),
        .Q(\tx_66_enc_out_reg[65] [36]),
        .R(SR));
  FDRE \tx_encoded_data_reg[37] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[37]),
        .Q(\tx_66_enc_out_reg[65] [37]),
        .R(SR));
  FDRE \tx_encoded_data_reg[38] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[38]),
        .Q(\tx_66_enc_out_reg[65] [38]),
        .R(SR));
  FDRE \tx_encoded_data_reg[39] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[39]),
        .Q(\tx_66_enc_out_reg[65] [39]),
        .R(SR));
  FDRE \tx_encoded_data_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[3]),
        .Q(\tx_66_enc_out_reg[65] [3]),
        .R(SR));
  FDRE \tx_encoded_data_reg[40] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[40]),
        .Q(\tx_66_enc_out_reg[65] [40]),
        .R(SR));
  FDRE \tx_encoded_data_reg[41] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[41]),
        .Q(\tx_66_enc_out_reg[65] [41]),
        .R(SR));
  FDRE \tx_encoded_data_reg[42] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[42]),
        .Q(\tx_66_enc_out_reg[65] [42]),
        .R(SR));
  FDRE \tx_encoded_data_reg[43] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[43]),
        .Q(\tx_66_enc_out_reg[65] [43]),
        .R(SR));
  FDRE \tx_encoded_data_reg[44] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[44]),
        .Q(\tx_66_enc_out_reg[65] [44]),
        .R(SR));
  FDRE \tx_encoded_data_reg[45] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[45]),
        .Q(\tx_66_enc_out_reg[65] [45]),
        .R(SR));
  FDRE \tx_encoded_data_reg[46] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[46]),
        .Q(\tx_66_enc_out_reg[65] [46]),
        .R(SR));
  FDRE \tx_encoded_data_reg[47] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[47]),
        .Q(\tx_66_enc_out_reg[65] [47]),
        .R(SR));
  FDRE \tx_encoded_data_reg[48] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[48]),
        .Q(\tx_66_enc_out_reg[65] [48]),
        .R(SR));
  FDRE \tx_encoded_data_reg[49] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[49]),
        .Q(\tx_66_enc_out_reg[65] [49]),
        .R(SR));
  FDSE \tx_encoded_data_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[4]),
        .Q(\tx_66_enc_out_reg[65] [4]),
        .S(SR));
  FDRE \tx_encoded_data_reg[50] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[50]),
        .Q(\tx_66_enc_out_reg[65] [50]),
        .R(SR));
  FDRE \tx_encoded_data_reg[51] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[51]),
        .Q(\tx_66_enc_out_reg[65] [51]),
        .R(SR));
  FDRE \tx_encoded_data_reg[52] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[52]),
        .Q(\tx_66_enc_out_reg[65] [52]),
        .R(SR));
  FDRE \tx_encoded_data_reg[53] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[53]),
        .Q(\tx_66_enc_out_reg[65] [53]),
        .R(SR));
  FDRE \tx_encoded_data_reg[54] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[54]),
        .Q(\tx_66_enc_out_reg[65] [54]),
        .R(SR));
  FDRE \tx_encoded_data_reg[55] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[55]),
        .Q(\tx_66_enc_out_reg[65] [55]),
        .R(SR));
  FDRE \tx_encoded_data_reg[56] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[56]),
        .Q(\tx_66_enc_out_reg[65] [56]),
        .R(SR));
  FDRE \tx_encoded_data_reg[57] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[57]),
        .Q(\tx_66_enc_out_reg[65] [57]),
        .R(SR));
  FDSE \tx_encoded_data_reg[58] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[58]),
        .Q(\tx_66_enc_out_reg[65] [58]),
        .S(SR));
  FDRE \tx_encoded_data_reg[59] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[59]),
        .Q(\tx_66_enc_out_reg[65] [59]),
        .R(SR));
  FDRE \tx_encoded_data_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[5]),
        .Q(\tx_66_enc_out_reg[65] [5]),
        .R(SR));
  FDRE \tx_encoded_data_reg[60] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[60]),
        .Q(\tx_66_enc_out_reg[65] [60]),
        .R(SR));
  FDRE \tx_encoded_data_reg[61] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[61]),
        .Q(\tx_66_enc_out_reg[65] [61]),
        .R(SR));
  FDRE \tx_encoded_data_reg[62] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[62]),
        .Q(\tx_66_enc_out_reg[65] [62]),
        .R(SR));
  FDRE \tx_encoded_data_reg[63] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[63]),
        .Q(\tx_66_enc_out_reg[65] [63]),
        .R(SR));
  FDRE \tx_encoded_data_reg[64] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[64]),
        .Q(\tx_66_enc_out_reg[65] [64]),
        .R(SR));
  FDRE \tx_encoded_data_reg[65] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[65]),
        .Q(\tx_66_enc_out_reg[65] [65]),
        .R(SR));
  FDSE \tx_encoded_data_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[6]),
        .Q(\tx_66_enc_out_reg[65] [6]),
        .S(SR));
  FDRE \tx_encoded_data_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[7]),
        .Q(\tx_66_enc_out_reg[65] [7]),
        .R(SR));
  FDSE \tx_encoded_data_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[8]),
        .Q(\tx_66_enc_out_reg[65] [8]),
        .S(SR));
  FDRE \tx_encoded_data_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[9]),
        .Q(\tx_66_enc_out_reg[65] [9]),
        .R(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg1_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[0]),
        .Q(tx_xgmii_ctrl_reg1[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg1_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[1]),
        .Q(tx_xgmii_ctrl_reg1[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg1_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[2]),
        .Q(tx_xgmii_ctrl_reg1[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg1_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[3]),
        .Q(tx_xgmii_ctrl_reg1[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg1_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[4]),
        .Q(tx_xgmii_ctrl_reg1[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg1_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[5]),
        .Q(tx_xgmii_ctrl_reg1[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg1_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[6]),
        .Q(tx_xgmii_ctrl_reg1[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg1_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[7]),
        .Q(tx_xgmii_ctrl_reg1[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg2_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[0]),
        .Q(tx_xgmii_ctrl_reg2[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg2_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[1]),
        .Q(tx_xgmii_ctrl_reg2[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg2_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[2]),
        .Q(tx_xgmii_ctrl_reg2[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg2_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[3]),
        .Q(tx_xgmii_ctrl_reg2[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg2_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[4]),
        .Q(tx_xgmii_ctrl_reg2[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg2_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[5]),
        .Q(tx_xgmii_ctrl_reg2[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg2_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[6]),
        .Q(tx_xgmii_ctrl_reg2[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg2_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[7]),
        .Q(tx_xgmii_ctrl_reg2[7]),
        .R(1'b0));
  FDRE \tx_xgmii_ctrl_reg2_reg_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_xgmii_ctrl_reg2[0]),
        .Q(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \tx_xgmii_ctrl_reg2_reg_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_xgmii_ctrl_reg2[1]),
        .Q(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \tx_xgmii_ctrl_reg2_reg_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_xgmii_ctrl_reg2[2]),
        .Q(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \tx_xgmii_ctrl_reg2_reg_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_xgmii_ctrl_reg2[3]),
        .Q(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \tx_xgmii_ctrl_reg2_reg_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_xgmii_ctrl_reg2[4]),
        .Q(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \tx_xgmii_ctrl_reg2_reg_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_xgmii_ctrl_reg2[5]),
        .Q(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \tx_xgmii_ctrl_reg2_reg_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_xgmii_ctrl_reg2[6]),
        .Q(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \tx_xgmii_ctrl_reg2_reg_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_xgmii_ctrl_reg2[7]),
        .Q(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[0]),
        .Q(tx_xgmii_data_reg2[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[10]),
        .Q(tx_xgmii_data_reg2[10]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[11]),
        .Q(tx_xgmii_data_reg2[11]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[12]),
        .Q(tx_xgmii_data_reg2[12]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[13]),
        .Q(tx_xgmii_data_reg2[13]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[14]),
        .Q(tx_xgmii_data_reg2[14]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[15]),
        .Q(tx_xgmii_data_reg2[15]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[16] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[16]),
        .Q(tx_xgmii_data_reg2[16]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[17] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[17]),
        .Q(tx_xgmii_data_reg2[17]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[18] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[18]),
        .Q(tx_xgmii_data_reg2[18]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[19] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[19]),
        .Q(tx_xgmii_data_reg2[19]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[1]),
        .Q(tx_xgmii_data_reg2[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[20] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[20]),
        .Q(tx_xgmii_data_reg2[20]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[21] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[21]),
        .Q(tx_xgmii_data_reg2[21]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[22] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[22]),
        .Q(tx_xgmii_data_reg2[22]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[23] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[23]),
        .Q(tx_xgmii_data_reg2[23]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[24] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[24]),
        .Q(tx_xgmii_data_reg2[24]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[25] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[25]),
        .Q(tx_xgmii_data_reg2[25]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[26] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[26]),
        .Q(tx_xgmii_data_reg2[26]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[27] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[27]),
        .Q(tx_xgmii_data_reg2[27]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[28] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[28]),
        .Q(tx_xgmii_data_reg2[28]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[29] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[29]),
        .Q(tx_xgmii_data_reg2[29]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[2]),
        .Q(tx_xgmii_data_reg2[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[30] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[30]),
        .Q(tx_xgmii_data_reg2[30]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[31] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[31]),
        .Q(tx_xgmii_data_reg2[31]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[32] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[32]),
        .Q(tx_xgmii_data_reg2[32]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[33] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[33]),
        .Q(tx_xgmii_data_reg2[33]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[34] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[34]),
        .Q(tx_xgmii_data_reg2[34]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[35] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[35]),
        .Q(tx_xgmii_data_reg2[35]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[36] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[36]),
        .Q(tx_xgmii_data_reg2[36]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[37] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[37]),
        .Q(tx_xgmii_data_reg2[37]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[38] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[38]),
        .Q(tx_xgmii_data_reg2[38]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[39] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[39]),
        .Q(tx_xgmii_data_reg2[39]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[3]),
        .Q(tx_xgmii_data_reg2[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[40] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[40]),
        .Q(tx_xgmii_data_reg2[40]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[41] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[41]),
        .Q(tx_xgmii_data_reg2[41]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[42] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[42]),
        .Q(tx_xgmii_data_reg2[42]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[43] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[43]),
        .Q(tx_xgmii_data_reg2[43]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[44] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[44]),
        .Q(tx_xgmii_data_reg2[44]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[45] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[45]),
        .Q(tx_xgmii_data_reg2[45]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[46] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[46]),
        .Q(tx_xgmii_data_reg2[46]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[47] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[47]),
        .Q(tx_xgmii_data_reg2[47]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[48] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[48]),
        .Q(tx_xgmii_data_reg2[48]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[49] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[49]),
        .Q(tx_xgmii_data_reg2[49]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[4]),
        .Q(tx_xgmii_data_reg2[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[50] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[50]),
        .Q(tx_xgmii_data_reg2[50]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[51] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[51]),
        .Q(tx_xgmii_data_reg2[51]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[52] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[52]),
        .Q(tx_xgmii_data_reg2[52]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[53] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[53]),
        .Q(tx_xgmii_data_reg2[53]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[54] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[54]),
        .Q(tx_xgmii_data_reg2[54]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[55] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[55]),
        .Q(tx_xgmii_data_reg2[55]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[56] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[56]),
        .Q(tx_xgmii_data_reg2[56]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[57] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[57]),
        .Q(tx_xgmii_data_reg2[57]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[58] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[58]),
        .Q(tx_xgmii_data_reg2[58]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[59] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[59]),
        .Q(tx_xgmii_data_reg2[59]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[5]),
        .Q(tx_xgmii_data_reg2[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[60] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[60]),
        .Q(tx_xgmii_data_reg2[60]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[61] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[61]),
        .Q(tx_xgmii_data_reg2[61]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[62] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[62]),
        .Q(tx_xgmii_data_reg2[62]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[63] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[63]),
        .Q(tx_xgmii_data_reg2[63]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[6]),
        .Q(tx_xgmii_data_reg2[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[7]),
        .Q(tx_xgmii_data_reg2[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[8]),
        .Q(tx_xgmii_data_reg2[8]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(out[9]),
        .Q(tx_xgmii_data_reg2[9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_xgmii_valid_code[0]_i_1 
       (.I0(p_15_out[0]),
        .I1(D[0]),
        .I2(tx_xgmii_valid_code1__12),
        .O(\tx_xgmii_valid_code[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h05C500000C000000)) 
    \tx_xgmii_valid_code[0]_i_2 
       (.I0(\tx_xgmii_valid_code[0]_i_3_n_0 ),
        .I1(\tx_xgmii_valid_code[0]_i_4_n_0 ),
        .I2(out[0]),
        .I3(out[3]),
        .I4(out[2]),
        .I5(out[1]),
        .O(p_15_out[0]));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \tx_xgmii_valid_code[0]_i_3 
       (.I0(out[5]),
        .I1(out[3]),
        .I2(out[4]),
        .I3(out[7]),
        .I4(out[6]),
        .O(\tx_xgmii_valid_code[0]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT5 #(
    .INIT(32'h28808089)) 
    \tx_xgmii_valid_code[0]_i_4 
       (.I0(out[4]),
        .I1(out[3]),
        .I2(out[5]),
        .I3(out[6]),
        .I4(out[7]),
        .O(\tx_xgmii_valid_code[0]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_xgmii_valid_code[1]_i_1 
       (.I0(p_15_out[1]),
        .I1(D[1]),
        .I2(tx_xgmii_valid_code1__12),
        .O(\tx_xgmii_valid_code[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF20080000)) 
    \tx_xgmii_valid_code[1]_i_2 
       (.I0(\tx_xgmii_valid_code[1]_i_3_n_0 ),
        .I1(out[11]),
        .I2(out[9]),
        .I3(out[8]),
        .I4(out[10]),
        .I5(tx_xgmii_valid_code7__6),
        .O(p_15_out[1]));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT5 #(
    .INIT(32'h48888009)) 
    \tx_xgmii_valid_code[1]_i_3 
       (.I0(out[11]),
        .I1(out[12]),
        .I2(out[15]),
        .I3(out[14]),
        .I4(out[13]),
        .O(\tx_xgmii_valid_code[1]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT5 #(
    .INIT(32'h00008000)) 
    \tx_xgmii_valid_code[1]_i_4 
       (.I0(\t_code[1]_i_2_n_0 ),
        .I1(out[10]),
        .I2(out[13]),
        .I3(out[9]),
        .I4(out[8]),
        .O(tx_xgmii_valid_code7__6));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_xgmii_valid_code[2]_i_1 
       (.I0(p_15_out[2]),
        .I1(D[2]),
        .I2(tx_xgmii_valid_code1__12),
        .O(\tx_xgmii_valid_code[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF20080000)) 
    \tx_xgmii_valid_code[2]_i_2 
       (.I0(\tx_xgmii_valid_code[2]_i_3_n_0 ),
        .I1(out[19]),
        .I2(out[17]),
        .I3(out[16]),
        .I4(out[18]),
        .I5(tx_xgmii_valid_code70_in),
        .O(p_15_out[2]));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT5 #(
    .INIT(32'h48888009)) 
    \tx_xgmii_valid_code[2]_i_3 
       (.I0(out[19]),
        .I1(out[20]),
        .I2(out[23]),
        .I3(out[22]),
        .I4(out[21]),
        .O(\tx_xgmii_valid_code[2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT5 #(
    .INIT(32'h00008000)) 
    \tx_xgmii_valid_code[2]_i_4 
       (.I0(\t_code[2]_i_2_n_0 ),
        .I1(out[18]),
        .I2(out[21]),
        .I3(out[17]),
        .I4(out[16]),
        .O(tx_xgmii_valid_code70_in));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_xgmii_valid_code[3]_i_1 
       (.I0(p_15_out[3]),
        .I1(D[3]),
        .I2(tx_xgmii_valid_code1__12),
        .O(\tx_xgmii_valid_code[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF20080000)) 
    \tx_xgmii_valid_code[3]_i_2 
       (.I0(\tx_xgmii_valid_code[3]_i_3_n_0 ),
        .I1(out[27]),
        .I2(out[25]),
        .I3(out[24]),
        .I4(out[26]),
        .I5(tx_xgmii_valid_code71_in),
        .O(p_15_out[3]));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT5 #(
    .INIT(32'h48888009)) 
    \tx_xgmii_valid_code[3]_i_3 
       (.I0(out[27]),
        .I1(out[28]),
        .I2(out[31]),
        .I3(out[30]),
        .I4(out[29]),
        .O(\tx_xgmii_valid_code[3]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_xgmii_valid_code[4]_i_1 
       (.I0(p_15_out[4]),
        .I1(D[4]),
        .I2(tx_xgmii_valid_code1__12),
        .O(\tx_xgmii_valid_code[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF20080000)) 
    \tx_xgmii_valid_code[4]_i_2 
       (.I0(\tx_xgmii_valid_code[4]_i_3_n_0 ),
        .I1(out[35]),
        .I2(out[33]),
        .I3(out[32]),
        .I4(out[34]),
        .I5(tx_xgmii_valid_code72_in),
        .O(p_15_out[4]));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT5 #(
    .INIT(32'h70809001)) 
    \tx_xgmii_valid_code[4]_i_3 
       (.I0(out[38]),
        .I1(out[39]),
        .I2(out[36]),
        .I3(out[35]),
        .I4(out[37]),
        .O(\tx_xgmii_valid_code[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_xgmii_valid_code[5]_i_1 
       (.I0(p_15_out[5]),
        .I1(D[5]),
        .I2(tx_xgmii_valid_code1__12),
        .O(\tx_xgmii_valid_code[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF20080000)) 
    \tx_xgmii_valid_code[5]_i_2 
       (.I0(\tx_xgmii_valid_code[5]_i_3_n_0 ),
        .I1(out[43]),
        .I2(out[41]),
        .I3(out[40]),
        .I4(out[42]),
        .I5(tx_xgmii_valid_code73_in),
        .O(p_15_out[5]));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT5 #(
    .INIT(32'h48888009)) 
    \tx_xgmii_valid_code[5]_i_3 
       (.I0(out[43]),
        .I1(out[44]),
        .I2(out[47]),
        .I3(out[46]),
        .I4(out[45]),
        .O(\tx_xgmii_valid_code[5]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT5 #(
    .INIT(32'h00008000)) 
    \tx_xgmii_valid_code[5]_i_4 
       (.I0(\t_code[5]_i_2_n_0 ),
        .I1(out[42]),
        .I2(out[45]),
        .I3(out[41]),
        .I4(out[40]),
        .O(tx_xgmii_valid_code73_in));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_xgmii_valid_code[6]_i_1 
       (.I0(p_15_out[6]),
        .I1(D[6]),
        .I2(tx_xgmii_valid_code1__12),
        .O(\tx_xgmii_valid_code[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF20080000)) 
    \tx_xgmii_valid_code[6]_i_2 
       (.I0(\tx_xgmii_valid_code[6]_i_3_n_0 ),
        .I1(out[51]),
        .I2(out[49]),
        .I3(out[48]),
        .I4(out[50]),
        .I5(tx_xgmii_valid_code74_in),
        .O(p_15_out[6]));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT5 #(
    .INIT(32'h48888009)) 
    \tx_xgmii_valid_code[6]_i_3 
       (.I0(out[51]),
        .I1(out[52]),
        .I2(out[55]),
        .I3(out[54]),
        .I4(out[53]),
        .O(\tx_xgmii_valid_code[6]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT5 #(
    .INIT(32'h00008000)) 
    \tx_xgmii_valid_code[6]_i_4 
       (.I0(\t_code[6]_i_2_n_0 ),
        .I1(out[50]),
        .I2(out[53]),
        .I3(out[49]),
        .I4(out[48]),
        .O(tx_xgmii_valid_code74_in));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_xgmii_valid_code[7]_i_1 
       (.I0(p_15_out[7]),
        .I1(D[7]),
        .I2(tx_xgmii_valid_code1__12),
        .O(\tx_xgmii_valid_code[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    \tx_xgmii_valid_code[7]_i_10 
       (.I0(out[38]),
        .I1(out[39]),
        .I2(out[34]),
        .I3(out[33]),
        .I4(out[32]),
        .I5(\t_code[4]_i_2_n_0 ),
        .O(tx_xgmii_valid_code72_in));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT5 #(
    .INIT(32'h00008000)) 
    \tx_xgmii_valid_code[7]_i_11 
       (.I0(\t_code[3]_i_2_n_0 ),
        .I1(out[26]),
        .I2(out[29]),
        .I3(out[25]),
        .I4(out[24]),
        .O(tx_xgmii_valid_code71_in));
  LUT4 #(
    .INIT(16'h8000)) 
    \tx_xgmii_valid_code[7]_i_12 
       (.I0(D[1]),
        .I1(D[0]),
        .I2(D[3]),
        .I3(D[2]),
        .O(\tx_xgmii_valid_code[7]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAEAAAAEAAAAAAAAA)) 
    \tx_xgmii_valid_code[7]_i_2 
       (.I0(\tx_xgmii_valid_code[7]_i_4_n_0 ),
        .I1(\tx_xgmii_valid_code[7]_i_5_n_0 ),
        .I2(out[59]),
        .I3(out[57]),
        .I4(out[56]),
        .I5(out[58]),
        .O(p_15_out[7]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA8)) 
    \tx_xgmii_valid_code[7]_i_3 
       (.I0(\tx_xgmii_valid_code[7]_i_6_n_0 ),
        .I1(\tx_xgmii_valid_code[7]_i_7_n_0 ),
        .I2(tx_xgmii_valid_code76_in),
        .I3(\tx_xgmii_valid_code[7]_i_9_n_0 ),
        .I4(tx_xgmii_valid_code72_in),
        .I5(tx_xgmii_valid_code71_in),
        .O(tx_xgmii_valid_code1__12));
  LUT6 #(
    .INIT(64'h0800000000000000)) 
    \tx_xgmii_valid_code[7]_i_4 
       (.I0(out[62]),
        .I1(out[63]),
        .I2(out[56]),
        .I3(out[57]),
        .I4(out[58]),
        .I5(\t_code[7]_i_2_n_0 ),
        .O(\tx_xgmii_valid_code[7]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT5 #(
    .INIT(32'h70809001)) 
    \tx_xgmii_valid_code[7]_i_5 
       (.I0(out[62]),
        .I1(out[63]),
        .I2(out[60]),
        .I3(out[59]),
        .I4(out[61]),
        .O(\tx_xgmii_valid_code[7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \tx_xgmii_valid_code[7]_i_6 
       (.I0(\tx_xgmii_valid_code[7]_i_12_n_0 ),
        .I1(D[7]),
        .I2(D[6]),
        .I3(D[5]),
        .I4(D[4]),
        .I5(p_8_out[0]),
        .O(\tx_xgmii_valid_code[7]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \tx_xgmii_valid_code[7]_i_7 
       (.I0(tx_xgmii_valid_code74_in),
        .I1(tx_xgmii_valid_code73_in),
        .I2(tx_xgmii_valid_code7__6),
        .I3(tx_xgmii_valid_code70_in),
        .O(\tx_xgmii_valid_code[7]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT4 #(
    .INIT(16'h0040)) 
    \tx_xgmii_valid_code[7]_i_8 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(out[2]),
        .I3(\tx_xgmii_valid_code[0]_i_3_n_0 ),
        .O(tx_xgmii_valid_code76_in));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    \tx_xgmii_valid_code[7]_i_9 
       (.I0(out[62]),
        .I1(out[63]),
        .I2(out[58]),
        .I3(out[57]),
        .I4(out[56]),
        .I5(\t_code[7]_i_2_n_0 ),
        .O(\tx_xgmii_valid_code[7]_i_9_n_0 ));
  FDRE \tx_xgmii_valid_code_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_valid_code[0]_i_1_n_0 ),
        .Q(\tx_xgmii_valid_code_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \tx_xgmii_valid_code_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_valid_code[1]_i_1_n_0 ),
        .Q(\tx_xgmii_valid_code_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \tx_xgmii_valid_code_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_valid_code[2]_i_1_n_0 ),
        .Q(\tx_xgmii_valid_code_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \tx_xgmii_valid_code_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_valid_code[3]_i_1_n_0 ),
        .Q(\tx_xgmii_valid_code_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \tx_xgmii_valid_code_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_valid_code[4]_i_1_n_0 ),
        .Q(\tx_xgmii_valid_code_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \tx_xgmii_valid_code_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_valid_code[5]_i_1_n_0 ),
        .Q(\tx_xgmii_valid_code_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \tx_xgmii_valid_code_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_valid_code[6]_i_1_n_0 ),
        .Q(\tx_xgmii_valid_code_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \tx_xgmii_valid_code_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_valid_code[7]_i_1_n_0 ),
        .Q(p_5_in),
        .R(1'b0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_tx_pcs
   (\gt_txd_reg[6] ,
    \gt_txd_reg[45] ,
    \gt_txd_reg[56] ,
    \gt_txd_reg[4] ,
    \gt_txd_reg[62] ,
    \gt_txd_reg[43] ,
    \gt_txd_reg[60] ,
    \gt_txd_reg[41] ,
    \gt_txd_reg[58] ,
    \gt_txd_reg[39] ,
    \gt_txd_reg[63] ,
    \scr_reg_reg[39] ,
    \gt_txd_reg[61] ,
    \gt_txd_reg[59] ,
    \gt_txd_reg[55] ,
    \gt_txd_reg[38] ,
    \gt_txd_reg[35] ,
    \gt_txd_reg[34] ,
    \gt_txd_reg[33] ,
    \gt_txd_reg[32] ,
    \gt_txd_reg[31] ,
    \gt_txd_reg[19] ,
    \gt_txd_reg[7] ,
    \gt_txd_reg[46] ,
    \gt_txd_reg[47] ,
    \scr_reg_reg[55] ,
    \gt_txd_reg[9] ,
    \gt_txd_reg[48] ,
    \gt_txd_reg[10] ,
    \gt_txd_reg[49] ,
    \gt_txd_reg[11] ,
    \gt_txd_reg[50] ,
    \gt_txd_reg[12] ,
    \gt_txd_reg[51] ,
    \gt_txd_reg[13] ,
    \gt_txd_reg[52] ,
    \gt_txd_reg[14] ,
    \gt_txd_reg[15] ,
    \gt_txd_reg[54] ,
    \gt_txd_reg[16] ,
    \gt_txd_reg[17] ,
    \gt_txd_reg[18] ,
    \gt_txd_reg[57] ,
    \gt_txd_reg[26] ,
    \gt_txd_reg[27] ,
    \gt_txd_reg[28] ,
    \gt_txd_reg[29] ,
    \gt_txd_reg[30] ,
    \gt_txd_reg[40] ,
    \gt_txd_reg[1] ,
    \gt_txd_reg[42] ,
    \gt_txd_reg[3] ,
    \gt_txd_reg[44] ,
    \gt_txd_reg[5] ,
    \scr_reg_reg[38] ,
    \scr_reg_reg[27] ,
    \scr_reg_reg[26] ,
    \scr_reg_reg[10] ,
    \gt_txd_reg[2] ,
    \gt_txd_reg[0] ,
    \gt_txd_reg[23] ,
    \gt_txd_reg[22] ,
    \gt_txd_reg[21] ,
    \gt_txd_reg[20] ,
    \gt_txc_reg[1] ,
    coreclk,
    configuration_vector,
    q_reg,
    D,
    SR,
    out);
  output \gt_txd_reg[6] ;
  output \gt_txd_reg[45] ;
  output \gt_txd_reg[56] ;
  output \gt_txd_reg[4] ;
  output \gt_txd_reg[62] ;
  output \gt_txd_reg[43] ;
  output \gt_txd_reg[60] ;
  output \gt_txd_reg[41] ;
  output \gt_txd_reg[58] ;
  output \gt_txd_reg[39] ;
  output \gt_txd_reg[63] ;
  output \scr_reg_reg[39] ;
  output \gt_txd_reg[61] ;
  output \gt_txd_reg[59] ;
  output \gt_txd_reg[55] ;
  output \gt_txd_reg[38] ;
  output \gt_txd_reg[35] ;
  output \gt_txd_reg[34] ;
  output \gt_txd_reg[33] ;
  output \gt_txd_reg[32] ;
  output \gt_txd_reg[31] ;
  output \gt_txd_reg[19] ;
  output \gt_txd_reg[7] ;
  output \gt_txd_reg[46] ;
  output \gt_txd_reg[47] ;
  output \scr_reg_reg[55] ;
  output \gt_txd_reg[9] ;
  output \gt_txd_reg[48] ;
  output \gt_txd_reg[10] ;
  output \gt_txd_reg[49] ;
  output \gt_txd_reg[11] ;
  output \gt_txd_reg[50] ;
  output \gt_txd_reg[12] ;
  output \gt_txd_reg[51] ;
  output \gt_txd_reg[13] ;
  output \gt_txd_reg[52] ;
  output \gt_txd_reg[14] ;
  output \gt_txd_reg[15] ;
  output \gt_txd_reg[54] ;
  output \gt_txd_reg[16] ;
  output \gt_txd_reg[17] ;
  output \gt_txd_reg[18] ;
  output \gt_txd_reg[57] ;
  output \gt_txd_reg[26] ;
  output \gt_txd_reg[27] ;
  output \gt_txd_reg[28] ;
  output \gt_txd_reg[29] ;
  output \gt_txd_reg[30] ;
  output \gt_txd_reg[40] ;
  output \gt_txd_reg[1] ;
  output \gt_txd_reg[42] ;
  output \gt_txd_reg[3] ;
  output \gt_txd_reg[44] ;
  output \gt_txd_reg[5] ;
  output \scr_reg_reg[38] ;
  output \scr_reg_reg[27] ;
  output \scr_reg_reg[26] ;
  output \scr_reg_reg[10] ;
  output \gt_txd_reg[2] ;
  output \gt_txd_reg[0] ;
  output \gt_txd_reg[23] ;
  output \gt_txd_reg[22] ;
  output \gt_txd_reg[21] ;
  output \gt_txd_reg[20] ;
  output [1:0]\gt_txc_reg[1] ;
  input coreclk;
  input [118:0]configuration_vector;
  input q_reg;
  input [7:0]D;
  input [0:0]SR;
  input [63:0]out;

  wire [7:0]D;
  wire [0:0]SR;
  wire [118:0]configuration_vector;
  wire coreclk;
  wire [1:0]\gt_txc_reg[1] ;
  wire \gt_txd_reg[0] ;
  wire \gt_txd_reg[10] ;
  wire \gt_txd_reg[11] ;
  wire \gt_txd_reg[12] ;
  wire \gt_txd_reg[13] ;
  wire \gt_txd_reg[14] ;
  wire \gt_txd_reg[15] ;
  wire \gt_txd_reg[16] ;
  wire \gt_txd_reg[17] ;
  wire \gt_txd_reg[18] ;
  wire \gt_txd_reg[19] ;
  wire \gt_txd_reg[1] ;
  wire \gt_txd_reg[20] ;
  wire \gt_txd_reg[21] ;
  wire \gt_txd_reg[22] ;
  wire \gt_txd_reg[23] ;
  wire \gt_txd_reg[26] ;
  wire \gt_txd_reg[27] ;
  wire \gt_txd_reg[28] ;
  wire \gt_txd_reg[29] ;
  wire \gt_txd_reg[2] ;
  wire \gt_txd_reg[30] ;
  wire \gt_txd_reg[31] ;
  wire \gt_txd_reg[32] ;
  wire \gt_txd_reg[33] ;
  wire \gt_txd_reg[34] ;
  wire \gt_txd_reg[35] ;
  wire \gt_txd_reg[38] ;
  wire \gt_txd_reg[39] ;
  wire \gt_txd_reg[3] ;
  wire \gt_txd_reg[40] ;
  wire \gt_txd_reg[41] ;
  wire \gt_txd_reg[42] ;
  wire \gt_txd_reg[43] ;
  wire \gt_txd_reg[44] ;
  wire \gt_txd_reg[45] ;
  wire \gt_txd_reg[46] ;
  wire \gt_txd_reg[47] ;
  wire \gt_txd_reg[48] ;
  wire \gt_txd_reg[49] ;
  wire \gt_txd_reg[4] ;
  wire \gt_txd_reg[50] ;
  wire \gt_txd_reg[51] ;
  wire \gt_txd_reg[52] ;
  wire \gt_txd_reg[54] ;
  wire \gt_txd_reg[55] ;
  wire \gt_txd_reg[56] ;
  wire \gt_txd_reg[57] ;
  wire \gt_txd_reg[58] ;
  wire \gt_txd_reg[59] ;
  wire \gt_txd_reg[5] ;
  wire \gt_txd_reg[60] ;
  wire \gt_txd_reg[61] ;
  wire \gt_txd_reg[62] ;
  wire \gt_txd_reg[63] ;
  wire \gt_txd_reg[6] ;
  wire \gt_txd_reg[7] ;
  wire \gt_txd_reg[9] ;
  wire [63:0]out;
  wire q_reg;
  wire \scr_reg_reg[10] ;
  wire \scr_reg_reg[26] ;
  wire \scr_reg_reg[27] ;
  wire \scr_reg_reg[38] ;
  wire \scr_reg_reg[39] ;
  wire \scr_reg_reg[55] ;
  wire [2:0]t_type;
  wire [65:0]tx_encoded_data;
  wire tx_pcs_fsm_i_n_0;
  wire tx_pcs_fsm_i_n_1;
  wire tx_pcs_fsm_i_n_10;
  wire tx_pcs_fsm_i_n_11;
  wire tx_pcs_fsm_i_n_12;
  wire tx_pcs_fsm_i_n_13;
  wire tx_pcs_fsm_i_n_14;
  wire tx_pcs_fsm_i_n_15;
  wire tx_pcs_fsm_i_n_16;
  wire tx_pcs_fsm_i_n_17;
  wire tx_pcs_fsm_i_n_18;
  wire tx_pcs_fsm_i_n_19;
  wire tx_pcs_fsm_i_n_2;
  wire tx_pcs_fsm_i_n_20;
  wire tx_pcs_fsm_i_n_21;
  wire tx_pcs_fsm_i_n_22;
  wire tx_pcs_fsm_i_n_23;
  wire tx_pcs_fsm_i_n_24;
  wire tx_pcs_fsm_i_n_25;
  wire tx_pcs_fsm_i_n_26;
  wire tx_pcs_fsm_i_n_27;
  wire tx_pcs_fsm_i_n_28;
  wire tx_pcs_fsm_i_n_29;
  wire tx_pcs_fsm_i_n_3;
  wire tx_pcs_fsm_i_n_30;
  wire tx_pcs_fsm_i_n_31;
  wire tx_pcs_fsm_i_n_32;
  wire tx_pcs_fsm_i_n_33;
  wire tx_pcs_fsm_i_n_34;
  wire tx_pcs_fsm_i_n_35;
  wire tx_pcs_fsm_i_n_36;
  wire tx_pcs_fsm_i_n_37;
  wire tx_pcs_fsm_i_n_38;
  wire tx_pcs_fsm_i_n_39;
  wire tx_pcs_fsm_i_n_4;
  wire tx_pcs_fsm_i_n_40;
  wire tx_pcs_fsm_i_n_41;
  wire tx_pcs_fsm_i_n_42;
  wire tx_pcs_fsm_i_n_43;
  wire tx_pcs_fsm_i_n_44;
  wire tx_pcs_fsm_i_n_45;
  wire tx_pcs_fsm_i_n_46;
  wire tx_pcs_fsm_i_n_47;
  wire tx_pcs_fsm_i_n_48;
  wire tx_pcs_fsm_i_n_49;
  wire tx_pcs_fsm_i_n_5;
  wire tx_pcs_fsm_i_n_50;
  wire tx_pcs_fsm_i_n_51;
  wire tx_pcs_fsm_i_n_52;
  wire tx_pcs_fsm_i_n_53;
  wire tx_pcs_fsm_i_n_54;
  wire tx_pcs_fsm_i_n_55;
  wire tx_pcs_fsm_i_n_56;
  wire tx_pcs_fsm_i_n_57;
  wire tx_pcs_fsm_i_n_58;
  wire tx_pcs_fsm_i_n_59;
  wire tx_pcs_fsm_i_n_6;
  wire tx_pcs_fsm_i_n_60;
  wire tx_pcs_fsm_i_n_61;
  wire tx_pcs_fsm_i_n_62;
  wire tx_pcs_fsm_i_n_63;
  wire tx_pcs_fsm_i_n_7;
  wire tx_pcs_fsm_i_n_8;
  wire tx_pcs_fsm_i_n_9;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_pcs_scramble pcs_scramble_i
       (.Q({tx_pcs_fsm_i_n_0,tx_pcs_fsm_i_n_1,tx_pcs_fsm_i_n_2,tx_pcs_fsm_i_n_3,tx_pcs_fsm_i_n_4,tx_pcs_fsm_i_n_5,tx_pcs_fsm_i_n_6,tx_pcs_fsm_i_n_7,tx_pcs_fsm_i_n_8,tx_pcs_fsm_i_n_9,tx_pcs_fsm_i_n_10,tx_pcs_fsm_i_n_11,tx_pcs_fsm_i_n_12,tx_pcs_fsm_i_n_13,tx_pcs_fsm_i_n_14,tx_pcs_fsm_i_n_15,tx_pcs_fsm_i_n_16,tx_pcs_fsm_i_n_17,tx_pcs_fsm_i_n_18,tx_pcs_fsm_i_n_19,tx_pcs_fsm_i_n_20,tx_pcs_fsm_i_n_21,tx_pcs_fsm_i_n_22,tx_pcs_fsm_i_n_23,tx_pcs_fsm_i_n_24,tx_pcs_fsm_i_n_25,tx_pcs_fsm_i_n_26,tx_pcs_fsm_i_n_27,tx_pcs_fsm_i_n_28,tx_pcs_fsm_i_n_29,tx_pcs_fsm_i_n_30,tx_pcs_fsm_i_n_31,tx_pcs_fsm_i_n_32,tx_pcs_fsm_i_n_33,tx_pcs_fsm_i_n_34,tx_pcs_fsm_i_n_35,tx_pcs_fsm_i_n_36,tx_pcs_fsm_i_n_37,tx_pcs_fsm_i_n_38,tx_pcs_fsm_i_n_39,tx_pcs_fsm_i_n_40,tx_pcs_fsm_i_n_41,tx_pcs_fsm_i_n_42,tx_pcs_fsm_i_n_43,tx_pcs_fsm_i_n_44,tx_pcs_fsm_i_n_45,tx_pcs_fsm_i_n_46,tx_pcs_fsm_i_n_47,tx_pcs_fsm_i_n_48,tx_pcs_fsm_i_n_49,tx_pcs_fsm_i_n_50,tx_pcs_fsm_i_n_51,tx_pcs_fsm_i_n_52,tx_pcs_fsm_i_n_53,tx_pcs_fsm_i_n_54,tx_pcs_fsm_i_n_55,tx_pcs_fsm_i_n_56,tx_pcs_fsm_i_n_57,tx_pcs_fsm_i_n_58,tx_pcs_fsm_i_n_59,tx_pcs_fsm_i_n_60,tx_pcs_fsm_i_n_61,tx_pcs_fsm_i_n_62,tx_pcs_fsm_i_n_63}),
        .SR(SR),
        .configuration_vector(configuration_vector),
        .coreclk(coreclk),
        .\gt_txd_reg[0] (\gt_txd_reg[0] ),
        .\gt_txd_reg[10] (\gt_txd_reg[10] ),
        .\gt_txd_reg[11] (\gt_txd_reg[11] ),
        .\gt_txd_reg[12] (\gt_txd_reg[12] ),
        .\gt_txd_reg[13] (\gt_txd_reg[13] ),
        .\gt_txd_reg[14] (\gt_txd_reg[14] ),
        .\gt_txd_reg[15] (\gt_txd_reg[15] ),
        .\gt_txd_reg[16] (\gt_txd_reg[16] ),
        .\gt_txd_reg[17] (\gt_txd_reg[17] ),
        .\gt_txd_reg[18] (\gt_txd_reg[18] ),
        .\gt_txd_reg[19] (\gt_txd_reg[19] ),
        .\gt_txd_reg[1] (\gt_txd_reg[1] ),
        .\gt_txd_reg[20] (\gt_txd_reg[20] ),
        .\gt_txd_reg[21] (\gt_txd_reg[21] ),
        .\gt_txd_reg[22] (\gt_txd_reg[22] ),
        .\gt_txd_reg[23] (\gt_txd_reg[23] ),
        .\gt_txd_reg[26] (\gt_txd_reg[26] ),
        .\gt_txd_reg[27] (\gt_txd_reg[27] ),
        .\gt_txd_reg[28] (\gt_txd_reg[28] ),
        .\gt_txd_reg[29] (\gt_txd_reg[29] ),
        .\gt_txd_reg[2] (\gt_txd_reg[2] ),
        .\gt_txd_reg[30] (\gt_txd_reg[30] ),
        .\gt_txd_reg[31] (\gt_txd_reg[31] ),
        .\gt_txd_reg[32] (\gt_txd_reg[32] ),
        .\gt_txd_reg[33] (\gt_txd_reg[33] ),
        .\gt_txd_reg[34] (\gt_txd_reg[34] ),
        .\gt_txd_reg[35] (\gt_txd_reg[35] ),
        .\gt_txd_reg[38] (\gt_txd_reg[38] ),
        .\gt_txd_reg[39] (\gt_txd_reg[39] ),
        .\gt_txd_reg[3] (\gt_txd_reg[3] ),
        .\gt_txd_reg[40] (\gt_txd_reg[40] ),
        .\gt_txd_reg[41] (\gt_txd_reg[41] ),
        .\gt_txd_reg[42] (\gt_txd_reg[42] ),
        .\gt_txd_reg[43] (\gt_txd_reg[43] ),
        .\gt_txd_reg[44] (\gt_txd_reg[44] ),
        .\gt_txd_reg[45] (\gt_txd_reg[45] ),
        .\gt_txd_reg[46] (\gt_txd_reg[46] ),
        .\gt_txd_reg[47] (\gt_txd_reg[47] ),
        .\gt_txd_reg[48] (\gt_txd_reg[48] ),
        .\gt_txd_reg[49] (\gt_txd_reg[49] ),
        .\gt_txd_reg[4] (\gt_txd_reg[4] ),
        .\gt_txd_reg[50] (\gt_txd_reg[50] ),
        .\gt_txd_reg[51] (\gt_txd_reg[51] ),
        .\gt_txd_reg[52] (\gt_txd_reg[52] ),
        .\gt_txd_reg[54] (\gt_txd_reg[54] ),
        .\gt_txd_reg[55] (\gt_txd_reg[55] ),
        .\gt_txd_reg[56] (\gt_txd_reg[56] ),
        .\gt_txd_reg[57] (\gt_txd_reg[57] ),
        .\gt_txd_reg[58] (\gt_txd_reg[58] ),
        .\gt_txd_reg[59] (\gt_txd_reg[59] ),
        .\gt_txd_reg[5] (\gt_txd_reg[5] ),
        .\gt_txd_reg[60] (\gt_txd_reg[60] ),
        .\gt_txd_reg[61] (\gt_txd_reg[61] ),
        .\gt_txd_reg[62] (\gt_txd_reg[62] ),
        .\gt_txd_reg[63] (\gt_txd_reg[63] ),
        .\gt_txd_reg[6] (\gt_txd_reg[6] ),
        .\gt_txd_reg[7] (\gt_txd_reg[7] ),
        .\gt_txd_reg[9] (\gt_txd_reg[9] ),
        .q_reg(q_reg),
        .\scr_reg_reg[10]_0 (\scr_reg_reg[10] ),
        .\scr_reg_reg[26]_0 (\scr_reg_reg[26] ),
        .\scr_reg_reg[27]_0 (\scr_reg_reg[27] ),
        .\scr_reg_reg[38]_0 (\scr_reg_reg[38] ),
        .\scr_reg_reg[39]_0 (\scr_reg_reg[39] ),
        .\scr_reg_reg[55]_0 (\scr_reg_reg[55] ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_tx_encoder tx_encoder_i
       (.D(D),
        .Q(t_type),
        .SR(SR),
        .coreclk(coreclk),
        .out(out),
        .\tx_66_enc_out_reg[65] (tx_encoded_data));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_tx_pcs_fsm tx_pcs_fsm_i
       (.Q(t_type),
        .SR(SR),
        .coreclk(coreclk),
        .\gt_txd_reg[63] ({tx_pcs_fsm_i_n_0,tx_pcs_fsm_i_n_1,tx_pcs_fsm_i_n_2,tx_pcs_fsm_i_n_3,tx_pcs_fsm_i_n_4,tx_pcs_fsm_i_n_5,tx_pcs_fsm_i_n_6,tx_pcs_fsm_i_n_7,tx_pcs_fsm_i_n_8,tx_pcs_fsm_i_n_9,tx_pcs_fsm_i_n_10,tx_pcs_fsm_i_n_11,tx_pcs_fsm_i_n_12,tx_pcs_fsm_i_n_13,tx_pcs_fsm_i_n_14,tx_pcs_fsm_i_n_15,tx_pcs_fsm_i_n_16,tx_pcs_fsm_i_n_17,tx_pcs_fsm_i_n_18,tx_pcs_fsm_i_n_19,tx_pcs_fsm_i_n_20,tx_pcs_fsm_i_n_21,tx_pcs_fsm_i_n_22,tx_pcs_fsm_i_n_23,tx_pcs_fsm_i_n_24,tx_pcs_fsm_i_n_25,tx_pcs_fsm_i_n_26,tx_pcs_fsm_i_n_27,tx_pcs_fsm_i_n_28,tx_pcs_fsm_i_n_29,tx_pcs_fsm_i_n_30,tx_pcs_fsm_i_n_31,tx_pcs_fsm_i_n_32,tx_pcs_fsm_i_n_33,tx_pcs_fsm_i_n_34,tx_pcs_fsm_i_n_35,tx_pcs_fsm_i_n_36,tx_pcs_fsm_i_n_37,tx_pcs_fsm_i_n_38,tx_pcs_fsm_i_n_39,tx_pcs_fsm_i_n_40,tx_pcs_fsm_i_n_41,tx_pcs_fsm_i_n_42,tx_pcs_fsm_i_n_43,tx_pcs_fsm_i_n_44,tx_pcs_fsm_i_n_45,tx_pcs_fsm_i_n_46,tx_pcs_fsm_i_n_47,tx_pcs_fsm_i_n_48,tx_pcs_fsm_i_n_49,tx_pcs_fsm_i_n_50,tx_pcs_fsm_i_n_51,tx_pcs_fsm_i_n_52,tx_pcs_fsm_i_n_53,tx_pcs_fsm_i_n_54,tx_pcs_fsm_i_n_55,tx_pcs_fsm_i_n_56,tx_pcs_fsm_i_n_57,tx_pcs_fsm_i_n_58,tx_pcs_fsm_i_n_59,tx_pcs_fsm_i_n_60,tx_pcs_fsm_i_n_61,tx_pcs_fsm_i_n_62,tx_pcs_fsm_i_n_63,\gt_txc_reg[1] }),
        .\tx_encoded_data_reg[65] (tx_encoded_data));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_tx_pcs_fsm
   (\gt_txd_reg[63] ,
    \tx_encoded_data_reg[65] ,
    Q,
    SR,
    coreclk);
  output [65:0]\gt_txd_reg[63] ;
  input [65:0]\tx_encoded_data_reg[65] ;
  input [2:0]Q;
  input [0:0]SR;
  input coreclk;

  wire \FSM_sequential_state[0]_i_1_n_0 ;
  wire \FSM_sequential_state[1]_i_1_n_0 ;
  wire \FSM_sequential_state[2]_i_1_n_0 ;
  wire [2:0]Q;
  wire [0:0]SR;
  wire coreclk;
  wire [65:0]\gt_txd_reg[63] ;
  wire [2:2]next_state;
  (* RTL_KEEP = "yes" *) wire [2:0]state;
  wire \tx_66_enc_out[65]_i_2_n_0 ;
  wire [65:0]tx_66_enc_out_t;
  wire [65:0]\tx_encoded_data_reg[65] ;

  LUT6 #(
    .INIT(64'h03FF033303FF00C4)) 
    \/i_ 
       (.I0(Q[1]),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(Q[2]),
        .I5(Q[0]),
        .O(next_state));
  LUT6 #(
    .INIT(64'hFDFFFFFDFDFFFDDD)) 
    \FSM_sequential_state[0]_i_1 
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(state[2]),
        .I3(state[0]),
        .I4(Q[0]),
        .I5(state[1]),
        .O(\FSM_sequential_state[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0001011100012121)) 
    \FSM_sequential_state[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[2]),
        .I2(state[0]),
        .I3(state[1]),
        .I4(state[2]),
        .I5(Q[1]),
        .O(\FSM_sequential_state[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00400000)) 
    \FSM_sequential_state[2]_i_1 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(state[2]),
        .I4(state[0]),
        .O(\FSM_sequential_state[2]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_state_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\FSM_sequential_state[0]_i_1_n_0 ),
        .Q(state[0]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_state_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\FSM_sequential_state[1]_i_1_n_0 ),
        .Q(state[1]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_state_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\FSM_sequential_state[2]_i_1_n_0 ),
        .Q(state[2]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    \tx_66_enc_out[0]_i_1 
       (.I0(next_state),
        .I1(\tx_encoded_data_reg[65] [0]),
        .I2(\tx_66_enc_out[65]_i_2_n_0 ),
        .O(tx_66_enc_out_t[0]));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_66_enc_out[10]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [10]),
        .I2(next_state),
        .O(tx_66_enc_out_t[10]));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[11]_i_1 
       (.I0(\tx_encoded_data_reg[65] [11]),
        .I1(\tx_66_enc_out[65]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[11]));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[12]_i_1 
       (.I0(\tx_encoded_data_reg[65] [12]),
        .I1(\tx_66_enc_out[65]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[12]));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[13]_i_1 
       (.I0(\tx_encoded_data_reg[65] [13]),
        .I1(\tx_66_enc_out[65]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[13]));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[14]_i_1 
       (.I0(\tx_encoded_data_reg[65] [14]),
        .I1(\tx_66_enc_out[65]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[14]));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_66_enc_out[15]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [15]),
        .I2(next_state),
        .O(tx_66_enc_out_t[15]));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_66_enc_out[16]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [16]),
        .I2(next_state),
        .O(tx_66_enc_out_t[16]));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_66_enc_out[17]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [17]),
        .I2(next_state),
        .O(tx_66_enc_out_t[17]));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[18]_i_1 
       (.I0(\tx_encoded_data_reg[65] [18]),
        .I1(\tx_66_enc_out[65]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[18]));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[19]_i_1 
       (.I0(\tx_encoded_data_reg[65] [19]),
        .I1(\tx_66_enc_out[65]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[19]));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_66_enc_out[1]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [1]),
        .I2(next_state),
        .O(tx_66_enc_out_t[1]));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[20]_i_1 
       (.I0(\tx_encoded_data_reg[65] [20]),
        .I1(\tx_66_enc_out[65]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[20]));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[21]_i_1 
       (.I0(\tx_encoded_data_reg[65] [21]),
        .I1(\tx_66_enc_out[65]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[21]));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_66_enc_out[22]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [22]),
        .I2(next_state),
        .O(tx_66_enc_out_t[22]));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_66_enc_out[23]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [23]),
        .I2(next_state),
        .O(tx_66_enc_out_t[23]));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_66_enc_out[24]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [24]),
        .I2(next_state),
        .O(tx_66_enc_out_t[24]));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[25]_i_1 
       (.I0(\tx_encoded_data_reg[65] [25]),
        .I1(\tx_66_enc_out[65]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[25]));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    \tx_66_enc_out[26]_i_1 
       (.I0(next_state),
        .I1(\tx_encoded_data_reg[65] [26]),
        .I2(\tx_66_enc_out[65]_i_2_n_0 ),
        .O(tx_66_enc_out_t[26]));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[27]_i_1 
       (.I0(\tx_encoded_data_reg[65] [27]),
        .I1(\tx_66_enc_out[65]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[27]));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[28]_i_1 
       (.I0(\tx_encoded_data_reg[65] [28]),
        .I1(\tx_66_enc_out[65]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[28]));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_66_enc_out[29]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [29]),
        .I2(next_state),
        .O(tx_66_enc_out_t[29]));
  LUT5 #(
    .INIT(32'hE0E0FFE0)) 
    \tx_66_enc_out[2]_i_1 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(\tx_encoded_data_reg[65] [2]),
        .I4(next_state),
        .O(tx_66_enc_out_t[2]));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_66_enc_out[30]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [30]),
        .I2(next_state),
        .O(tx_66_enc_out_t[30]));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_66_enc_out[31]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [31]),
        .I2(next_state),
        .O(tx_66_enc_out_t[31]));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[32]_i_1 
       (.I0(\tx_encoded_data_reg[65] [32]),
        .I1(\tx_66_enc_out[65]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[32]));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[33]_i_1 
       (.I0(\tx_encoded_data_reg[65] [33]),
        .I1(\tx_66_enc_out[65]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[33]));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[34]_i_1 
       (.I0(\tx_encoded_data_reg[65] [34]),
        .I1(\tx_66_enc_out[65]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[34]));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[35]_i_1 
       (.I0(\tx_encoded_data_reg[65] [35]),
        .I1(\tx_66_enc_out[65]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[35]));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_66_enc_out[36]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [36]),
        .I2(next_state),
        .O(tx_66_enc_out_t[36]));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_66_enc_out[37]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [37]),
        .I2(next_state),
        .O(tx_66_enc_out_t[37]));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_66_enc_out[38]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [38]),
        .I2(next_state),
        .O(tx_66_enc_out_t[38]));
  (* SOFT_HLUTNM = "soft_lutpair325" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[39]_i_1 
       (.I0(\tx_encoded_data_reg[65] [39]),
        .I1(\tx_66_enc_out[65]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[39]));
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[3]_i_1 
       (.I0(\tx_encoded_data_reg[65] [3]),
        .I1(\tx_66_enc_out[65]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[3]));
  (* SOFT_HLUTNM = "soft_lutpair325" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[40]_i_1 
       (.I0(\tx_encoded_data_reg[65] [40]),
        .I1(\tx_66_enc_out[65]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[40]));
  (* SOFT_HLUTNM = "soft_lutpair326" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[41]_i_1 
       (.I0(\tx_encoded_data_reg[65] [41]),
        .I1(\tx_66_enc_out[65]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[41]));
  (* SOFT_HLUTNM = "soft_lutpair326" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[42]_i_1 
       (.I0(\tx_encoded_data_reg[65] [42]),
        .I1(\tx_66_enc_out[65]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[42]));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_66_enc_out[43]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [43]),
        .I2(next_state),
        .O(tx_66_enc_out_t[43]));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_66_enc_out[44]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [44]),
        .I2(next_state),
        .O(tx_66_enc_out_t[44]));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_66_enc_out[45]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [45]),
        .I2(next_state),
        .O(tx_66_enc_out_t[45]));
  (* SOFT_HLUTNM = "soft_lutpair327" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[46]_i_1 
       (.I0(\tx_encoded_data_reg[65] [46]),
        .I1(\tx_66_enc_out[65]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[46]));
  (* SOFT_HLUTNM = "soft_lutpair327" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[47]_i_1 
       (.I0(\tx_encoded_data_reg[65] [47]),
        .I1(\tx_66_enc_out[65]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[47]));
  (* SOFT_HLUTNM = "soft_lutpair328" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[48]_i_1 
       (.I0(\tx_encoded_data_reg[65] [48]),
        .I1(\tx_66_enc_out[65]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[48]));
  (* SOFT_HLUTNM = "soft_lutpair328" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[49]_i_1 
       (.I0(\tx_encoded_data_reg[65] [49]),
        .I1(\tx_66_enc_out[65]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[49]));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    \tx_66_enc_out[4]_i_1 
       (.I0(next_state),
        .I1(\tx_encoded_data_reg[65] [4]),
        .I2(\tx_66_enc_out[65]_i_2_n_0 ),
        .O(tx_66_enc_out_t[4]));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_66_enc_out[50]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [50]),
        .I2(next_state),
        .O(tx_66_enc_out_t[50]));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_66_enc_out[51]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [51]),
        .I2(next_state),
        .O(tx_66_enc_out_t[51]));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_66_enc_out[52]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [52]),
        .I2(next_state),
        .O(tx_66_enc_out_t[52]));
  (* SOFT_HLUTNM = "soft_lutpair329" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[53]_i_1 
       (.I0(\tx_encoded_data_reg[65] [53]),
        .I1(\tx_66_enc_out[65]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[53]));
  (* SOFT_HLUTNM = "soft_lutpair329" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[54]_i_1 
       (.I0(\tx_encoded_data_reg[65] [54]),
        .I1(\tx_66_enc_out[65]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[54]));
  (* SOFT_HLUTNM = "soft_lutpair330" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[55]_i_1 
       (.I0(\tx_encoded_data_reg[65] [55]),
        .I1(\tx_66_enc_out[65]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[55]));
  (* SOFT_HLUTNM = "soft_lutpair330" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[56]_i_1 
       (.I0(\tx_encoded_data_reg[65] [56]),
        .I1(\tx_66_enc_out[65]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[56]));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_66_enc_out[57]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [57]),
        .I2(next_state),
        .O(tx_66_enc_out_t[57]));
  LUT5 #(
    .INIT(32'hE0E0FFE0)) 
    \tx_66_enc_out[58]_i_1 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(\tx_encoded_data_reg[65] [58]),
        .I4(next_state),
        .O(tx_66_enc_out_t[58]));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_66_enc_out[59]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [59]),
        .I2(next_state),
        .O(tx_66_enc_out_t[59]));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[5]_i_1 
       (.I0(\tx_encoded_data_reg[65] [5]),
        .I1(\tx_66_enc_out[65]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[5]));
  (* SOFT_HLUTNM = "soft_lutpair331" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[60]_i_1 
       (.I0(\tx_encoded_data_reg[65] [60]),
        .I1(\tx_66_enc_out[65]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[60]));
  (* SOFT_HLUTNM = "soft_lutpair331" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[61]_i_1 
       (.I0(\tx_encoded_data_reg[65] [61]),
        .I1(\tx_66_enc_out[65]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[61]));
  (* SOFT_HLUTNM = "soft_lutpair332" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[62]_i_1 
       (.I0(\tx_encoded_data_reg[65] [62]),
        .I1(\tx_66_enc_out[65]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[62]));
  (* SOFT_HLUTNM = "soft_lutpair332" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[63]_i_1 
       (.I0(\tx_encoded_data_reg[65] [63]),
        .I1(\tx_66_enc_out[65]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[63]));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_66_enc_out[64]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [64]),
        .I2(next_state),
        .O(tx_66_enc_out_t[64]));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_66_enc_out[65]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [65]),
        .I2(next_state),
        .O(tx_66_enc_out_t[65]));
  LUT6 #(
    .INIT(64'h0022003200111111)) 
    \tx_66_enc_out[65]_i_2 
       (.I0(Q[0]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(state[2]),
        .I4(state[1]),
        .I5(state[0]),
        .O(\tx_66_enc_out[65]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    \tx_66_enc_out[6]_i_1 
       (.I0(next_state),
        .I1(\tx_encoded_data_reg[65] [6]),
        .I2(\tx_66_enc_out[65]_i_2_n_0 ),
        .O(tx_66_enc_out_t[6]));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_66_enc_out[7]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [7]),
        .I2(next_state),
        .O(tx_66_enc_out_t[7]));
  LUT5 #(
    .INIT(32'hE0E0FFE0)) 
    \tx_66_enc_out[8]_i_1 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(\tx_encoded_data_reg[65] [8]),
        .I4(next_state),
        .O(tx_66_enc_out_t[8]));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_66_enc_out[9]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [9]),
        .I2(next_state),
        .O(tx_66_enc_out_t[9]));
  FDSE \tx_66_enc_out_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[0]),
        .Q(\gt_txd_reg[63] [0]),
        .S(SR));
  FDRE \tx_66_enc_out_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[10]),
        .Q(\gt_txd_reg[63] [10]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[11]),
        .Q(\gt_txd_reg[63] [11]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[12]),
        .Q(\gt_txd_reg[63] [12]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[13]),
        .Q(\gt_txd_reg[63] [13]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[14]),
        .Q(\gt_txd_reg[63] [14]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[15]),
        .Q(\gt_txd_reg[63] [15]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[16] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[16]),
        .Q(\gt_txd_reg[63] [16]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[17] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[17]),
        .Q(\gt_txd_reg[63] [17]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[18] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[18]),
        .Q(\gt_txd_reg[63] [18]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[19] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[19]),
        .Q(\gt_txd_reg[63] [19]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[1]),
        .Q(\gt_txd_reg[63] [1]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[20] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[20]),
        .Q(\gt_txd_reg[63] [20]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[21] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[21]),
        .Q(\gt_txd_reg[63] [21]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[22] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[22]),
        .Q(\gt_txd_reg[63] [22]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[23] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[23]),
        .Q(\gt_txd_reg[63] [23]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[24] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[24]),
        .Q(\gt_txd_reg[63] [24]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[25] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[25]),
        .Q(\gt_txd_reg[63] [25]),
        .R(SR));
  FDSE \tx_66_enc_out_reg[26] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[26]),
        .Q(\gt_txd_reg[63] [26]),
        .S(SR));
  FDRE \tx_66_enc_out_reg[27] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[27]),
        .Q(\gt_txd_reg[63] [27]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[28] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[28]),
        .Q(\gt_txd_reg[63] [28]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[29] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[29]),
        .Q(\gt_txd_reg[63] [29]),
        .R(SR));
  FDSE \tx_66_enc_out_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[2]),
        .Q(\gt_txd_reg[63] [2]),
        .S(SR));
  FDRE \tx_66_enc_out_reg[30] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[30]),
        .Q(\gt_txd_reg[63] [30]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[31] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[31]),
        .Q(\gt_txd_reg[63] [31]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[32] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[32]),
        .Q(\gt_txd_reg[63] [32]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[33] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[33]),
        .Q(\gt_txd_reg[63] [33]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[34] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[34]),
        .Q(\gt_txd_reg[63] [34]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[35] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[35]),
        .Q(\gt_txd_reg[63] [35]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[36] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[36]),
        .Q(\gt_txd_reg[63] [36]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[37] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[37]),
        .Q(\gt_txd_reg[63] [37]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[38] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[38]),
        .Q(\gt_txd_reg[63] [38]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[39] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[39]),
        .Q(\gt_txd_reg[63] [39]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[3]),
        .Q(\gt_txd_reg[63] [3]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[40] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[40]),
        .Q(\gt_txd_reg[63] [40]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[41] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[41]),
        .Q(\gt_txd_reg[63] [41]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[42] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[42]),
        .Q(\gt_txd_reg[63] [42]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[43] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[43]),
        .Q(\gt_txd_reg[63] [43]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[44] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[44]),
        .Q(\gt_txd_reg[63] [44]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[45] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[45]),
        .Q(\gt_txd_reg[63] [45]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[46] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[46]),
        .Q(\gt_txd_reg[63] [46]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[47] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[47]),
        .Q(\gt_txd_reg[63] [47]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[48] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[48]),
        .Q(\gt_txd_reg[63] [48]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[49] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[49]),
        .Q(\gt_txd_reg[63] [49]),
        .R(SR));
  FDSE \tx_66_enc_out_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[4]),
        .Q(\gt_txd_reg[63] [4]),
        .S(SR));
  FDRE \tx_66_enc_out_reg[50] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[50]),
        .Q(\gt_txd_reg[63] [50]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[51] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[51]),
        .Q(\gt_txd_reg[63] [51]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[52] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[52]),
        .Q(\gt_txd_reg[63] [52]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[53] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[53]),
        .Q(\gt_txd_reg[63] [53]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[54] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[54]),
        .Q(\gt_txd_reg[63] [54]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[55] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[55]),
        .Q(\gt_txd_reg[63] [55]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[56] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[56]),
        .Q(\gt_txd_reg[63] [56]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[57] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[57]),
        .Q(\gt_txd_reg[63] [57]),
        .R(SR));
  FDSE \tx_66_enc_out_reg[58] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[58]),
        .Q(\gt_txd_reg[63] [58]),
        .S(SR));
  FDRE \tx_66_enc_out_reg[59] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[59]),
        .Q(\gt_txd_reg[63] [59]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[5]),
        .Q(\gt_txd_reg[63] [5]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[60] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[60]),
        .Q(\gt_txd_reg[63] [60]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[61] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[61]),
        .Q(\gt_txd_reg[63] [61]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[62] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[62]),
        .Q(\gt_txd_reg[63] [62]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[63] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[63]),
        .Q(\gt_txd_reg[63] [63]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[64] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[64]),
        .Q(\gt_txd_reg[63] [64]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[65] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[65]),
        .Q(\gt_txd_reg[63] [65]),
        .R(SR));
  FDSE \tx_66_enc_out_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[6]),
        .Q(\gt_txd_reg[63] [6]),
        .S(SR));
  FDRE \tx_66_enc_out_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[7]),
        .Q(\gt_txd_reg[63] [7]),
        .R(SR));
  FDSE \tx_66_enc_out_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[8]),
        .Q(\gt_txd_reg[63] [8]),
        .S(SR));
  FDRE \tx_66_enc_out_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[9]),
        .Q(\gt_txd_reg[63] [9]),
        .R(SR));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_wrapper
   (out,
    tx_disable,
    core_status,
    status_vector,
    tx_prbs31_en,
    gt_slip,
    clear_rx_prbs_err_count,
    core_in_testmode,
    drp_den,
    drp_daddr,
    gt_txd,
    gt_txc,
    drp_req,
    drp_dwe,
    xgmii_rxd,
    xgmii_rxc,
    rxusrclk2,
    rxreset_rxusrclk2,
    coreclk,
    reset,
    configuration_vector,
    signal_detect,
    dclk,
    drp_drdy,
    dclk_reset,
    resetdone,
    gt_rxc,
    drp_drpdo,
    xgmii_txd,
    xgmii_txc,
    gt_rxd,
    drp_gnt);
  output [0:0]out;
  output tx_disable;
  output [0:0]core_status;
  output [40:0]status_vector;
  output tx_prbs31_en;
  output gt_slip;
  output clear_rx_prbs_err_count;
  output core_in_testmode;
  output drp_den;
  output [0:0]drp_daddr;
  output [63:0]gt_txd;
  output [1:0]gt_txc;
  output drp_req;
  output drp_dwe;
  output [63:0]xgmii_rxd;
  output [7:0]xgmii_rxc;
  input rxusrclk2;
  input rxreset_rxusrclk2;
  input coreclk;
  input reset;
  input [146:0]configuration_vector;
  input signal_detect;
  input dclk;
  input drp_drdy;
  input dclk_reset;
  input resetdone;
  input [2:0]gt_rxc;
  input [15:0]drp_drpdo;
  input [63:0]xgmii_txd;
  input [7:0]xgmii_txc;
  input [63:0]gt_rxd;
  input drp_gnt;

  wire clear_rx_prbs_err_count;
  wire [146:0]configuration_vector;
  wire core_in_testmode;
  wire [0:0]core_status;
  wire coreclk;
  wire dclk;
  wire dclk_reset;
  wire [0:0]drp_daddr;
  wire drp_den;
  wire drp_drdy;
  wire [15:0]drp_drpdo;
  wire drp_dwe;
  wire drp_gnt;
  wire drp_req;
  wire [2:0]gt_rxc;
  wire [63:0]gt_rxd;
  wire gt_slip;
  wire [1:0]gt_txc;
  wire [63:0]gt_txd;
  wire [0:0]out;
  wire reset;
  wire resetdone;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;
  wire signal_detect;
  wire [40:0]status_vector;
  wire tx_disable;
  wire tx_prbs31_en;
  wire [7:0]xgmii_rxc;
  wire [63:0]xgmii_rxd;
  wire [7:0]xgmii_txc;
  wire [63:0]xgmii_txd;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ten_gig_eth_pcs_pma_v6_0_7_baser_gen \G_IS_BASER.ten_gig_eth_pcs_pma_inst 
       (.clear_rx_prbs_err_count(clear_rx_prbs_err_count),
        .configuration_vector(configuration_vector),
        .core_in_testmode(core_in_testmode),
        .core_status(core_status),
        .coreclk(coreclk),
        .dclk(dclk),
        .dclk_reset(dclk_reset),
        .drp_daddr(drp_daddr),
        .drp_den(drp_den),
        .drp_drdy(drp_drdy),
        .drp_drpdo(drp_drpdo),
        .drp_dwe(drp_dwe),
        .drp_gnt(drp_gnt),
        .drp_req(drp_req),
        .gt_rxc(gt_rxc),
        .gt_rxd(gt_rxd),
        .gt_slip(gt_slip),
        .gt_txc(gt_txc),
        .gt_txd(gt_txd),
        .out(out),
        .reset(reset),
        .resetdone(resetdone),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2),
        .signal_detect(signal_detect),
        .status_vector(status_vector),
        .tx_disable(tx_disable),
        .tx_prbs31_en(tx_prbs31_en),
        .xgmii_rxc(xgmii_rxc),
        .xgmii_rxd(xgmii_rxd),
        .xgmii_txc(xgmii_txc),
        .xgmii_txd(xgmii_txd));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (weak1, weak0) GSR = GSR_int;
    assign (weak1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
