// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module firewall (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        rxData_V_dout,
        rxData_V_empty_n,
        rxData_V_read,
        firewal_read_sid_V_V_dout,
        firewal_read_sid_V_V_empty_n,
        firewal_read_sid_V_V_read,
        rxMetaData_V_V_dout,
        rxMetaData_V_V_empty_n,
        rxMetaData_V_V_read,
        stream_out_V_din,
        stream_out_V_full_n,
        stream_out_V_write,
        firewal_write_dest_V_din,
        firewal_write_dest_V_full_n,
        firewal_write_dest_V_write,
        firewal_write_sid_V_s_din,
        firewal_write_sid_V_s_full_n,
        firewal_write_sid_V_s_write,
        firewal_read_dest_V_s_din,
        firewal_read_dest_V_s_full_n,
        firewal_read_dest_V_s_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [72:0] rxData_V_dout;
input   rxData_V_empty_n;
output   rxData_V_read;
input  [15:0] firewal_read_sid_V_V_dout;
input   firewal_read_sid_V_V_empty_n;
output   firewal_read_sid_V_V_read;
input  [15:0] rxMetaData_V_V_dout;
input   rxMetaData_V_V_empty_n;
output   rxMetaData_V_V_read;
output  [88:0] stream_out_V_din;
input   stream_out_V_full_n;
output   stream_out_V_write;
output  [15:0] firewal_write_dest_V_din;
input   firewal_write_dest_V_full_n;
output   firewal_write_dest_V_write;
output  [15:0] firewal_write_sid_V_s_din;
input   firewal_write_sid_V_s_full_n;
output   firewal_write_sid_V_s_write;
output  [15:0] firewal_read_dest_V_s_din;
input   firewal_read_dest_V_s_full_n;
output   firewal_read_dest_V_s_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg rxData_V_read;
reg firewal_read_sid_V_V_read;
reg rxMetaData_V_V_read;
reg[88:0] stream_out_V_din;
reg stream_out_V_write;
reg firewal_write_dest_V_write;
reg firewal_write_sid_V_s_write;
reg firewal_read_dest_V_s_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire   [2:0] ksvs_fsmState_V_load_load_fu_267_p1;
wire   [0:0] tmp_i_fu_283_p2;
wire   [0:0] grp_nbreadreq_fu_122_p3;
reg    ap_predicate_op14_read_state1;
wire   [0:0] tmp_9_nbreadreq_fu_136_p3;
reg    ap_predicate_op59_read_state1;
reg    ap_predicate_op66_read_state1;
wire   [0:0] tmp_nbreadreq_fu_150_p3;
reg    ap_predicate_op83_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [2:0] ksvs_fsmState_V_load_reg_724;
reg   [0:0] tmp_i_reg_728;
reg   [0:0] tmp_15_reg_732;
reg    ap_predicate_op104_write_state2;
reg   [0:0] tmp_8_reg_750;
reg    ap_predicate_op112_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg   [2:0] ksvs_fsmState_V;
reg   [0:0] packet_last_V;
reg   [31:0] expected_bytes;
reg   [15:0] sessionID_V;
reg   [15:0] dest_V;
reg   [7:0] src_V;
reg    rxMetaData_V_V_blk_n;
wire    ap_block_pp0_stage0;
reg    rxData_V_blk_n;
reg    stream_out_V_blk_n;
reg    firewal_read_dest_V_s_blk_n;
reg    firewal_read_sid_V_V_blk_n;
reg    firewal_write_dest_V_blk_n;
reg    firewal_write_sid_V_s_blk_n;
reg   [7:0] reg_263;
wire   [63:0] tmp_data_V_1_fu_295_p1;
reg   [63:0] tmp_data_V_1_reg_736;
wire   [0:0] tmp_last_V_1_fu_305_p2;
reg   [0:0] tmp_last_V_1_reg_741;
wire   [63:0] p_Val2_s_fu_581_p1;
reg   [63:0] p_Val2_s_reg_754;
reg   [0:0] tmp_last_V_reg_759;
wire   [15:0] tmp_dest_V_fu_599_p1;
reg   [15:0] tmp_dest_V_reg_764;
reg   [7:0] p_Result_7_i_reg_769;
reg    ap_block_pp0_stage0_subdone;
reg   [0:0] ap_phi_mux_expected_bytes_flag_1_phi_fu_195_p18;
wire   [0:0] ap_phi_reg_pp0_iter0_expected_bytes_flag_1_reg_192;
wire   [0:0] tmp_8_i_fu_619_p2;
wire   [0:0] expected_bytes_flag_s_fu_525_p2;
reg   [31:0] ap_phi_mux_expected_bytes_new_1_phi_fu_226_p18;
wire   [31:0] expected_bytes_new_c_fu_636_p1;
wire   [31:0] ap_phi_reg_pp0_iter0_expected_bytes_new_1_reg_223;
wire   [31:0] expected_bytes_new_9_fu_532_p3;
wire   [88:0] tmp_3_fu_685_p5;
reg    ap_block_pp0_stage0_01001;
wire   [88:0] tmp_1_fu_710_p5;
wire   [2:0] storemerge_cast_i_ca_fu_547_p3;
wire   [2:0] storemerge1_cast_i_c_fu_567_p3;
wire   [31:0] tmp_11_i_fu_299_p2;
wire   [30:0] tmp_11_fu_279_p1;
wire   [0:0] tmp_17_fu_317_p3;
wire   [30:0] tmp_19_cast_i_fu_325_p2;
wire   [30:0] tmp_19_expected_byte_fu_331_p3;
wire   [31:0] tmp_19_expected_byte_1_fu_339_p1;
wire   [0:0] tmp_18_fu_343_p3;
wire   [31:0] tmp_19_1_i_fu_351_p2;
wire   [31:0] expected_bytes_new_3_fu_357_p3;
wire   [0:0] tmp_19_fu_365_p3;
wire   [31:0] tmp_19_2_i_fu_373_p2;
wire   [31:0] tmp_19_2_expected_by_fu_379_p3;
wire   [0:0] tmp_20_fu_387_p3;
wire   [31:0] tmp_19_3_i_fu_395_p2;
wire   [31:0] expected_bytes_new_5_fu_401_p3;
wire   [0:0] tmp_21_fu_409_p3;
wire   [31:0] tmp_19_4_i_fu_417_p2;
wire   [31:0] tmp_19_4_expected_by_fu_423_p3;
wire   [0:0] tmp_22_fu_431_p3;
wire   [31:0] tmp_19_5_i_fu_439_p2;
wire   [31:0] expected_bytes_new_7_fu_445_p3;
wire   [0:0] tmp_23_fu_453_p3;
wire   [31:0] tmp_19_6_i_fu_461_p2;
wire   [31:0] tmp_19_6_expected_by_fu_467_p3;
wire   [0:0] tmp3_fu_495_p2;
wire   [0:0] tmp2_fu_489_p2;
wire   [0:0] tmp_24_fu_475_p3;
wire   [0:0] tmp6_fu_513_p2;
wire   [0:0] tmp5_fu_507_p2;
wire   [0:0] tmp4_fu_519_p2;
wire   [0:0] tmp1_fu_501_p2;
wire   [31:0] tmp_19_7_i_fu_483_p2;
wire   [0:0] tmp_9_i_fu_561_p2;
wire   [7:0] p_Result_6_i_fu_609_p4;
wire   [15:0] p_Result_i_fu_626_p4;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_562;
reg    ap_condition_147;
reg    ap_condition_286;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ksvs_fsmState_V = 3'd0;
#0 packet_last_V = 1'd0;
#0 expected_bytes = 32'd0;
#0 sessionID_V = 16'd0;
#0 dest_V = 16'd0;
#0 src_V = 8'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_147)) begin
        if ((ap_predicate_op83_read_state1 == 1'b1)) begin
            ksvs_fsmState_V <= 3'd1;
        end else if ((ap_predicate_op66_read_state1 == 1'b1)) begin
            ksvs_fsmState_V <= 3'd4;
        end else if ((ap_predicate_op59_read_state1 == 1'b1)) begin
            ksvs_fsmState_V <= storemerge1_cast_i_c_fu_567_p3;
        end else if ((ksvs_fsmState_V_load_load_fu_267_p1 == 3'd2)) begin
            ksvs_fsmState_V <= storemerge_cast_i_ca_fu_547_p3;
        end else if ((ap_predicate_op14_read_state1 == 1'b1)) begin
            ksvs_fsmState_V <= 3'd3;
        end else if (((tmp_i_fu_283_p2 == 1'd0) & (ksvs_fsmState_V == 3'd3))) begin
            ksvs_fsmState_V <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_147)) begin
        if ((ap_predicate_op66_read_state1 == 1'b1)) begin
            packet_last_V <= rxData_V_dout[32'd72];
        end else if ((ap_predicate_op14_read_state1 == 1'b1)) begin
            packet_last_V <= tmp_last_V_1_fu_305_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op66_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_V <= tmp_dest_V_fu_599_p1;
        src_V <= {{rxData_V_dout[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_expected_bytes_flag_1_phi_fu_195_p18 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        expected_bytes <= ap_phi_mux_expected_bytes_new_1_phi_fu_226_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ksvs_fsmState_V_load_reg_724 <= ksvs_fsmState_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op66_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Result_7_i_reg_769 <= {{rxData_V_dout[23:16]}};
        p_Val2_s_reg_754 <= p_Val2_s_fu_581_p1;
        tmp_dest_V_reg_764 <= tmp_dest_V_fu_599_p1;
        tmp_last_V_reg_759 <= rxData_V_dout[32'd72];
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op66_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op14_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_263 <= {{rxData_V_dout[71:64]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op83_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sessionID_V <= rxMetaData_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_fu_283_p2 == 1'd1) & (ksvs_fsmState_V == 3'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_15_reg_732 <= rxData_V_empty_n;
    end
end

always @ (posedge ap_clk) begin
    if (((ksvs_fsmState_V == 3'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_8_reg_750 <= rxData_V_empty_n;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op14_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_V_1_reg_736 <= tmp_data_V_1_fu_295_p1;
        tmp_last_V_1_reg_741 <= tmp_last_V_1_fu_305_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ksvs_fsmState_V == 3'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_i_reg_728 <= tmp_i_fu_283_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((grp_nbreadreq_fu_122_p3 == 1'd1) & (tmp_i_fu_283_p2 == 1'd1) & (ksvs_fsmState_V == 3'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_expected_bytes_flag_1_phi_fu_195_p18 = expected_bytes_flag_s_fu_525_p2;
    end else if (((grp_nbreadreq_fu_122_p3 == 1'd1) & (ksvs_fsmState_V == 3'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_expected_bytes_flag_1_phi_fu_195_p18 = tmp_8_i_fu_619_p2;
    end else if ((((ksvs_fsmState_V == 3'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((grp_nbreadreq_fu_122_p3 == 1'd0) & (ksvs_fsmState_V == 3'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ksvs_fsmState_V == 3'd4) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((grp_nbreadreq_fu_122_p3 == 1'd0) & (tmp_i_fu_283_p2 == 1'd1) & (ksvs_fsmState_V == 3'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((tmp_i_fu_283_p2 == 1'd0) & (ksvs_fsmState_V == 3'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ksvs_fsmState_V_load_load_fu_267_p1 == 3'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | (~(ksvs_fsmState_V == 3'd0) & ~(ksvs_fsmState_V == 3'd1) & ~(ksvs_fsmState_V == 3'd4) & ~(ksvs_fsmState_V == 3'd3) & ~(ksvs_fsmState_V_load_load_fu_267_p1 == 3'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        ap_phi_mux_expected_bytes_flag_1_phi_fu_195_p18 = 1'd0;
    end else begin
        ap_phi_mux_expected_bytes_flag_1_phi_fu_195_p18 = ap_phi_reg_pp0_iter0_expected_bytes_flag_1_reg_192;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_562)) begin
        if (((tmp_i_fu_283_p2 == 1'd1) & (ksvs_fsmState_V == 3'd3))) begin
            ap_phi_mux_expected_bytes_new_1_phi_fu_226_p18 = expected_bytes_new_9_fu_532_p3;
        end else if ((ksvs_fsmState_V == 3'd1)) begin
            ap_phi_mux_expected_bytes_new_1_phi_fu_226_p18 = expected_bytes_new_c_fu_636_p1;
        end else begin
            ap_phi_mux_expected_bytes_new_1_phi_fu_226_p18 = ap_phi_reg_pp0_iter0_expected_bytes_new_1_reg_223;
        end
    end else begin
        ap_phi_mux_expected_bytes_new_1_phi_fu_226_p18 = ap_phi_reg_pp0_iter0_expected_bytes_new_1_reg_223;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op112_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        firewal_read_dest_V_s_blk_n = firewal_read_dest_V_s_full_n;
    end else begin
        firewal_read_dest_V_s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op112_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        firewal_read_dest_V_s_write = 1'b1;
    end else begin
        firewal_read_dest_V_s_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op59_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        firewal_read_sid_V_V_blk_n = firewal_read_sid_V_V_empty_n;
    end else begin
        firewal_read_sid_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op59_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        firewal_read_sid_V_V_read = 1'b1;
    end else begin
        firewal_read_sid_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ksvs_fsmState_V_load_reg_724 == 3'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        firewal_write_dest_V_blk_n = firewal_write_dest_V_full_n;
    end else begin
        firewal_write_dest_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ksvs_fsmState_V_load_reg_724 == 3'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        firewal_write_dest_V_write = 1'b1;
    end else begin
        firewal_write_dest_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ksvs_fsmState_V_load_reg_724 == 3'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        firewal_write_sid_V_s_blk_n = firewal_write_sid_V_s_full_n;
    end else begin
        firewal_write_sid_V_s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ksvs_fsmState_V_load_reg_724 == 3'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        firewal_write_sid_V_s_write = 1'b1;
    end else begin
        firewal_write_sid_V_s_write = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op66_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op14_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        rxData_V_blk_n = rxData_V_empty_n;
    end else begin
        rxData_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op66_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op14_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        rxData_V_read = 1'b1;
    end else begin
        rxData_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op83_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        rxMetaData_V_V_blk_n = rxMetaData_V_V_empty_n;
    end else begin
        rxMetaData_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op83_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rxMetaData_V_V_read = 1'b1;
    end else begin
        rxMetaData_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op112_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op104_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        stream_out_V_blk_n = stream_out_V_full_n;
    end else begin
        stream_out_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_286)) begin
        if ((ap_predicate_op112_write_state2 == 1'b1)) begin
            stream_out_V_din = tmp_1_fu_710_p5;
        end else if ((ap_predicate_op104_write_state2 == 1'b1)) begin
            stream_out_V_din = tmp_3_fu_685_p5;
        end else begin
            stream_out_V_din = 'bx;
        end
    end else begin
        stream_out_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op112_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op104_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        stream_out_V_write = 1'b1;
    end else begin
        stream_out_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((rxMetaData_V_V_empty_n == 1'b0) & (ap_predicate_op83_read_state1 == 1'b1)) | ((firewal_read_sid_V_V_empty_n == 1'b0) & (ap_predicate_op59_read_state1 == 1'b1)) | ((rxData_V_empty_n == 1'b0) & (ap_predicate_op66_read_state1 == 1'b1)) | ((rxData_V_empty_n == 1'b0) & (ap_predicate_op14_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((stream_out_V_full_n == 1'b0) & (ap_predicate_op112_write_state2 == 1'b1)) | ((stream_out_V_full_n == 1'b0) & (ap_predicate_op104_write_state2 == 1'b1)) | ((firewal_read_dest_V_s_full_n == 1'b0) & (ap_predicate_op112_write_state2 == 1'b1)) | ((ksvs_fsmState_V_load_reg_724 == 3'd2) & (firewal_write_sid_V_s_full_n == 1'b0)) | ((ksvs_fsmState_V_load_reg_724 == 3'd2) & (firewal_write_dest_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((rxMetaData_V_V_empty_n == 1'b0) & (ap_predicate_op83_read_state1 == 1'b1)) | ((firewal_read_sid_V_V_empty_n == 1'b0) & (ap_predicate_op59_read_state1 == 1'b1)) | ((rxData_V_empty_n == 1'b0) & (ap_predicate_op66_read_state1 == 1'b1)) | ((rxData_V_empty_n == 1'b0) & (ap_predicate_op14_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((stream_out_V_full_n == 1'b0) & (ap_predicate_op112_write_state2 == 1'b1)) | ((stream_out_V_full_n == 1'b0) & (ap_predicate_op104_write_state2 == 1'b1)) | ((firewal_read_dest_V_s_full_n == 1'b0) & (ap_predicate_op112_write_state2 == 1'b1)) | ((ksvs_fsmState_V_load_reg_724 == 3'd2) & (firewal_write_sid_V_s_full_n == 1'b0)) | ((ksvs_fsmState_V_load_reg_724 == 3'd2) & (firewal_write_dest_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((rxMetaData_V_V_empty_n == 1'b0) & (ap_predicate_op83_read_state1 == 1'b1)) | ((firewal_read_sid_V_V_empty_n == 1'b0) & (ap_predicate_op59_read_state1 == 1'b1)) | ((rxData_V_empty_n == 1'b0) & (ap_predicate_op66_read_state1 == 1'b1)) | ((rxData_V_empty_n == 1'b0) & (ap_predicate_op14_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((stream_out_V_full_n == 1'b0) & (ap_predicate_op112_write_state2 == 1'b1)) | ((stream_out_V_full_n == 1'b0) & (ap_predicate_op104_write_state2 == 1'b1)) | ((firewal_read_dest_V_s_full_n == 1'b0) & (ap_predicate_op112_write_state2 == 1'b1)) | ((ksvs_fsmState_V_load_reg_724 == 3'd2) & (firewal_write_sid_V_s_full_n == 1'b0)) | ((ksvs_fsmState_V_load_reg_724 == 3'd2) & (firewal_write_dest_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((rxMetaData_V_V_empty_n == 1'b0) & (ap_predicate_op83_read_state1 == 1'b1)) | ((firewal_read_sid_V_V_empty_n == 1'b0) & (ap_predicate_op59_read_state1 == 1'b1)) | ((rxData_V_empty_n == 1'b0) & (ap_predicate_op66_read_state1 == 1'b1)) | ((rxData_V_empty_n == 1'b0) & (ap_predicate_op14_read_state1 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((stream_out_V_full_n == 1'b0) & (ap_predicate_op112_write_state2 == 1'b1)) | ((stream_out_V_full_n == 1'b0) & (ap_predicate_op104_write_state2 == 1'b1)) | ((firewal_read_dest_V_s_full_n == 1'b0) & (ap_predicate_op112_write_state2 == 1'b1)) | ((ksvs_fsmState_V_load_reg_724 == 3'd2) & (firewal_write_sid_V_s_full_n == 1'b0)) | ((ksvs_fsmState_V_load_reg_724 == 3'd2) & (firewal_write_dest_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_condition_147 = ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_286 = ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_562 = ((grp_nbreadreq_fu_122_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_expected_bytes_flag_1_reg_192 = 'bx;

assign ap_phi_reg_pp0_iter0_expected_bytes_new_1_reg_223 = 'bx;

always @ (*) begin
    ap_predicate_op104_write_state2 = ((tmp_i_reg_728 == 1'd1) & (tmp_15_reg_732 == 1'd1) & (ksvs_fsmState_V_load_reg_724 == 3'd3));
end

always @ (*) begin
    ap_predicate_op112_write_state2 = ((ksvs_fsmState_V_load_reg_724 == 3'd1) & (tmp_8_reg_750 == 1'd1));
end

always @ (*) begin
    ap_predicate_op14_read_state1 = ((grp_nbreadreq_fu_122_p3 == 1'd1) & (tmp_i_fu_283_p2 == 1'd1) & (ksvs_fsmState_V == 3'd3));
end

always @ (*) begin
    ap_predicate_op59_read_state1 = ((tmp_9_nbreadreq_fu_136_p3 == 1'd1) & (ksvs_fsmState_V == 3'd4));
end

always @ (*) begin
    ap_predicate_op66_read_state1 = ((grp_nbreadreq_fu_122_p3 == 1'd1) & (ksvs_fsmState_V == 3'd1));
end

always @ (*) begin
    ap_predicate_op83_read_state1 = ((tmp_nbreadreq_fu_150_p3 == 1'd1) & (ksvs_fsmState_V == 3'd0));
end

assign expected_bytes_flag_s_fu_525_p2 = (tmp4_fu_519_p2 | tmp1_fu_501_p2);

assign expected_bytes_new_3_fu_357_p3 = ((tmp_18_fu_343_p3[0:0] === 1'b1) ? tmp_19_1_i_fu_351_p2 : tmp_19_expected_byte_1_fu_339_p1);

assign expected_bytes_new_5_fu_401_p3 = ((tmp_20_fu_387_p3[0:0] === 1'b1) ? tmp_19_3_i_fu_395_p2 : tmp_19_2_expected_by_fu_379_p3);

assign expected_bytes_new_7_fu_445_p3 = ((tmp_22_fu_431_p3[0:0] === 1'b1) ? tmp_19_5_i_fu_439_p2 : tmp_19_4_expected_by_fu_423_p3);

assign expected_bytes_new_9_fu_532_p3 = ((tmp_24_fu_475_p3[0:0] === 1'b1) ? tmp_19_7_i_fu_483_p2 : tmp_19_6_expected_by_fu_467_p3);

assign expected_bytes_new_c_fu_636_p1 = p_Result_i_fu_626_p4;

assign firewal_read_dest_V_s_din = p_Result_7_i_reg_769;

assign firewal_write_dest_V_din = src_V;

assign firewal_write_sid_V_s_din = sessionID_V;

assign grp_nbreadreq_fu_122_p3 = rxData_V_empty_n;

assign ksvs_fsmState_V_load_load_fu_267_p1 = ksvs_fsmState_V;

assign p_Result_6_i_fu_609_p4 = {{rxData_V_dout[31:24]}};

assign p_Result_i_fu_626_p4 = {{rxData_V_dout[47:32]}};

assign p_Val2_s_fu_581_p1 = rxData_V_dout[63:0];

assign storemerge1_cast_i_c_fu_567_p3 = ((tmp_9_i_fu_561_p2[0:0] === 1'b1) ? 3'd2 : 3'd3);

assign storemerge_cast_i_ca_fu_547_p3 = ((packet_last_V[0:0] === 1'b1) ? 3'd0 : 3'd3);

assign tmp1_fu_501_p2 = (tmp3_fu_495_p2 | tmp2_fu_489_p2);

assign tmp2_fu_489_p2 = (tmp_18_fu_343_p3 | tmp_17_fu_317_p3);

assign tmp3_fu_495_p2 = (tmp_20_fu_387_p3 | tmp_19_fu_365_p3);

assign tmp4_fu_519_p2 = (tmp6_fu_513_p2 | tmp5_fu_507_p2);

assign tmp5_fu_507_p2 = (tmp_22_fu_431_p3 | tmp_21_fu_409_p3);

assign tmp6_fu_513_p2 = (tmp_24_fu_475_p3 | tmp_23_fu_453_p3);

assign tmp_11_fu_279_p1 = expected_bytes[30:0];

assign tmp_11_i_fu_299_p2 = ($signed(32'd4294967288) + $signed(expected_bytes));

assign tmp_17_fu_317_p3 = rxData_V_dout[32'd64];

assign tmp_18_fu_343_p3 = rxData_V_dout[32'd65];

assign tmp_19_1_i_fu_351_p2 = ($signed(32'd4294967295) + $signed(tmp_19_expected_byte_1_fu_339_p1));

assign tmp_19_2_expected_by_fu_379_p3 = ((tmp_19_fu_365_p3[0:0] === 1'b1) ? tmp_19_2_i_fu_373_p2 : expected_bytes_new_3_fu_357_p3);

assign tmp_19_2_i_fu_373_p2 = ($signed(32'd4294967295) + $signed(expected_bytes_new_3_fu_357_p3));

assign tmp_19_3_i_fu_395_p2 = ($signed(32'd4294967295) + $signed(tmp_19_2_expected_by_fu_379_p3));

assign tmp_19_4_expected_by_fu_423_p3 = ((tmp_21_fu_409_p3[0:0] === 1'b1) ? tmp_19_4_i_fu_417_p2 : expected_bytes_new_5_fu_401_p3);

assign tmp_19_4_i_fu_417_p2 = ($signed(32'd4294967295) + $signed(expected_bytes_new_5_fu_401_p3));

assign tmp_19_5_i_fu_439_p2 = ($signed(32'd4294967295) + $signed(tmp_19_4_expected_by_fu_423_p3));

assign tmp_19_6_expected_by_fu_467_p3 = ((tmp_23_fu_453_p3[0:0] === 1'b1) ? tmp_19_6_i_fu_461_p2 : expected_bytes_new_7_fu_445_p3);

assign tmp_19_6_i_fu_461_p2 = ($signed(32'd4294967295) + $signed(expected_bytes_new_7_fu_445_p3));

assign tmp_19_7_i_fu_483_p2 = ($signed(32'd4294967295) + $signed(tmp_19_6_expected_by_fu_467_p3));

assign tmp_19_cast_i_fu_325_p2 = ($signed(31'd2147483647) + $signed(tmp_11_fu_279_p1));

assign tmp_19_expected_byte_1_fu_339_p1 = tmp_19_expected_byte_fu_331_p3;

assign tmp_19_expected_byte_fu_331_p3 = ((tmp_17_fu_317_p3[0:0] === 1'b1) ? tmp_19_cast_i_fu_325_p2 : tmp_11_fu_279_p1);

assign tmp_19_fu_365_p3 = rxData_V_dout[32'd66];

assign tmp_1_fu_710_p5 = {{{{reg_263}, {tmp_last_V_reg_759}}, {tmp_dest_V_reg_764}}, {p_Val2_s_reg_754}};

assign tmp_20_fu_387_p3 = rxData_V_dout[32'd67];

assign tmp_21_fu_409_p3 = rxData_V_dout[32'd68];

assign tmp_22_fu_431_p3 = rxData_V_dout[32'd69];

assign tmp_23_fu_453_p3 = rxData_V_dout[32'd70];

assign tmp_24_fu_475_p3 = rxData_V_dout[32'd71];

assign tmp_3_fu_685_p5 = {{{{reg_263}, {tmp_last_V_1_reg_741}}, {dest_V}}, {tmp_data_V_1_reg_736}};

assign tmp_8_i_fu_619_p2 = ((p_Result_6_i_fu_609_p4 == 8'd2) ? 1'b1 : 1'b0);

assign tmp_9_i_fu_561_p2 = ((firewal_read_sid_V_V_dout == 16'd1000) ? 1'b1 : 1'b0);

assign tmp_9_nbreadreq_fu_136_p3 = firewal_read_sid_V_V_empty_n;

assign tmp_data_V_1_fu_295_p1 = rxData_V_dout[63:0];

assign tmp_dest_V_fu_599_p1 = rxData_V_dout[15:0];

assign tmp_i_fu_283_p2 = (($signed(expected_bytes) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign tmp_last_V_1_fu_305_p2 = (($signed(tmp_11_i_fu_299_p2) < $signed(32'd1)) ? 1'b1 : 1'b0);

assign tmp_nbreadreq_fu_150_p3 = rxMetaData_V_V_empty_n;

endmodule //firewall
